{"version":3,"sources":["App/app.reducer.js","util/rootReducer.js","util/store.js","util/timeZones.js","NavBar/NavBar.js","Dashboard/TrackerList.js","App/app.services.js","Dashboard/TrackerDetails.js","Dashboard/Dashboard.js","RowController/SPAParameters.js","RowController/StowAngles.js","RowController/EditRowController.js","RowController/_EditRowController.js","RowController/ControlRowController.js","RowController/RowControllerTab.js","RowController/ScanTab.js","RowController/RowController.js","ZoneController/ZoneController.js","Sensors/Sensors.js","util/SnackbarContentWrapper.js","App/App.jsx","index.js"],"names":["initialState","currentPage","currentTab","currentEditTab","timeZone","Intl","DateTimeFormat","resolvedOptions","alert","time","Date","now","commissioningData","fetchingCommissioningData","currentTracker","currentTrackerInfo","xbeeResponse","controlledTrackers","editedTrackers","SPAParameters","stowAngles","sendingSPAParameters","sendingStowAngles","gettingSPAParameters","gettingStowAngles","addingTrackers","sensors","responseQueue","listen","windSense","speed","direction","floodSense","snowSense","wifiList","sensorEvents","wind","snow","flood","roverStatus","windLimits","speedLimits","upperSpeedLimit","lowerSpeedLimit","breachParameters","minBreachTime","maxBreachTime","maxBreachCount","floodLimits","maxFloodLevel","movingAveragePeriod","snowLimits","maxSnowLevel","rowHeight","rowWidth","stepSize","gettingFloodLimits","settingFloodLimits","gettingSnowLimits","settingSnowLimits","gettingWindLimits","settingWindLimits","PANID","bqEnabled","difference","a1","a2","result","i","length","indexOf","push","rootReducer","combineReducers","app","state","action","type","Object","objectSpread","json","panID","message","defineProperty","DID","reading","trackerID","concat","toConsumableArray","temp","map","s","status","model","page","commandQueue","value","staticData","newRoverStatus","r","deviceID","a","filter","newXbeeResponse","devices","trackers","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","timezones","abbr","offset","isdst","text","utc","ResponsiveDrawer","mobileOpen","handleDrawerToggle","_this","setState","checkTime","_this2","this","_this$props","props","classes","theme","children","drawer","react_default","createElement","className","toolbar","src","height","width","style","marginLeft","marginRight","alt","Divider","List","index","ListItem","button","key","onClick","changePage","selected","disabled","ListItemText","disableTypography","primary","root","CssBaseline","AppBar","position","color","appBar","Toolbar","IconButton","aria-label","menuButton","Menu_default","Typography","variant","noWrap","Chip","icon","AcUnit_default","backgroundColor","fontWeight","fontSize","label","toFixed","iconTeal","Waves_default","version","id","xmlns","viewBox","d","iconSVGTeal","iconSVG","Toys_default","AccessTime_default","Number","toLocaleString","navigator","language","getHours","getMinutes","t","Hidden","mdUp","implementation","Drawer","container","anchor","open","onClose","paper","drawerPaper","smDown","content","React","Component","connectedNavBar","connect","_state$app","dispatch","withStyles","display","breakpoints","up","flexShrink","mixins","flexGrow","padding","spacing","paddingTop","fill","stroke","strokeWidth","withTheme","TrackerList","react","Grid","Table","TableHead","TableRow","TableCell","TableBody","n","hover","setCurrentTracker","cursor","connectedTrackerList","appService","setWifiInfo","ssid","pass","requestOptions","method","mode","body","JSON","stringify","password","fetch","hostName","then","handleResponse","selectSensor","windSensor","rainSensor","floodSensor","snowSensor","uploadKey","file","data","FormData","append","setWindAddress","address","deviceAddress","getWindAddress","caliberate","sensor","sendCommand","CMD","VALUES","sendStow","MODE","getCommissioningData","getCurrentTrackerInfo","triggerDiscovery","hostName2","setPanID","console","log","threshold","maxWindSpeed","maxRainFall","meanWindSpeed","windSpeedTimer","maxSnowFall","heartBeat","enabled","hbinterval","maxMsgs","interval","setTimeZone","getHeartBeat","getThreshold","getPanID","getFrequency","setFrequency","power","powerRequestTimePeriod","statusRequestTimePeriod","getTimeZone","getTime","discover","did","addTrackers","removeTrackers","DIDs","sendSPAParameters","Lattitude","Longitude","Altitude","EastLimit","WestLimit","TrackerWidth","Pitch","TrackingAccuracy","AzimuthDeviation","AltitudeTrackeronEast","AltitudeTrackeronWest","StartTimeLead","EndTimeLag","backtracking","sendStowAngles","WindStowAngle","SnowStowAngle","CleanStowAngle","NightStowAngle","EmergencyStowAngle","getSPAParameters","getStowAngles","getSensors","addSensor","port","samplingPeriod","removeSensor","enableSensor","disableSensor","scanWifi","getWindLimits","setWindLimits","getFloodLimits","setFloodLimits","getSnowLimits","setSnowLimits","getBQ","disableBQ","window","location","hostname","response","ok","error","Promise","reject","statusText","NoCurrentTrackerInfo","alignItems","justifyContent","TrackerDetails","timer","componentDidMount","refresh","componentWillReceiveProps","nextProps","c","arguments","undefined","setTimeout","TrackerDetails_NoCurrentTrackerInfo","currentAngle","marginTop","textAlign","overflow","macID","currentMode","timeStamp","toLocaleDateString","toLocaleTimeString","hour12","connectedTrackerDetails","flexWrap","Initializing","flexDirection","margin","Button","scan","Fetching","Dashboard","Dashboard_Fetching","Dashboard_Initializing","item","trackerList","Paper","trackerDetails","connectedDashboard","minHeight","TrackingLimitEast","TrackingLimitWest","RowWidth","RowPitch","TrackingResolution","AltitudeofTrackerontheEast","AltitudeofTrackerontheWest","EarlyStartMinutes","LateFinishMinutes","LattitudeError","LongitudeError","AltitudeError","TrackingLimitEastError","TrackingLimitWestError","RowWidthError","RowPitchError","TrackingResolutionError","AzimuthDeviationError","AltitudeofTrackerontheEastError","AltitudeofTrackerontheWestError","EarlyStartMinutesError","LateFinishMinutesError","backTracking","submit","values","split","handleChange","event","_objectSpread2","target","name","handleBlur","e","p","RegExp","test","_objectSpread4","min","max","_objectSpread5","_objectSpread6","_objectSpread3","_this$state","fieldGrid","adornment","TextField","field","replace","onChange","InputLabelProps","shrink","InputProps","endAdornment","InputAdornment","helperText","onBlur","FormControlLabel","control","Checkbox","checked","connectedSPAParameters","StowAngles","_objectSpread7","connectedStowAngles","EditRowController","changeTab","header","back","ArrowBack_default","disableGutters","rowNumber","chip","request","success","tabs","Tabs","indicator","tabsIndicator","Tab","connectedEditRowController","palette","background","boxShadow","green","red","handleChangeSPA","_objectSpread8","_this$state2","borderBottom","paddingLeft","ControlRowController","typeOfStow","auto","handleClick","anchorEl","currentTarget","handleClose","autoToggle","second","aria-owns","aria-haspopup","minWidth","paddingRight","ExpandMore_default","Menu_Menu","Boolean","MenuItem","labelPlacement","Switch","connectedControlRowController","RowControllerTab","selectedTrackers","selectAll","selectRow","row","editTracker","setEditedTrackers","controlTracker","setControlledTrackers","_EditRowController_connectedEditRowController","buttons","table","connectedRowControllerTab","overflowX","marginBottom","ScanTab","scanSelection","inputChange","scanParameter","FormControl","component","formControl","RadioGroup","Radio","textField","placeholder","verticalAlign","res","connectedScanTab","RowController","connectedRowController","ZoneController","DHCP","staticIP","floodMovingAveragePeriod","snowMovingAveragePeriod","bqFile","bqFileName","DHCPToggle","BQToggle","BQ","handleSelectedFile","files","saveBQKey","xs","justify","grid","specialBorder","grid2","alignSelf","fullWidth","InputLabel","htmlFor","Select","autoWidth","selectWifi","input","OutlinedInput","labelWidth","CircularProgress","w","Math","random","Refresh_default","saveButton","accept","syncTime","connectedZoneController","_root","paddingBottom","down","Sensors","selectedSensors","dialog","which","driverFile","driverFileName","editSensor","enable","handleAdd","softRemoveSensor","Tooltip","title","Dialog","disableBackdropClick","aria-labelledby","DialogTitle","DialogContent","DialogActions","connectedSensors","_dispatch","variantIcon","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","SnackbarContentWrapper","dark","amber","iconVariant","opacity","other","objectWithoutProperties","Icon","SnackbarContent","assign","aria-describedby","close","Close_default","App","queue","init","io","socketIOClient","on","parse","received","emit","processQueue","shift","reason","handleExited","About","App_Initializing","Snackbar","anchorOrigin","vertical","horizontal","onExited","anchorOriginTopCenter","topCenter","connectedApp","getState","clearAlert","topic","top","createMuiTheme","main","contrastText","secondary","render","MuiThemeProvider","es","document","getElementById"],"mappings":"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Q,MACRC,QAAW,EACXC,OAAS,EACTC,KAAQ,0CACRC,IAAO,CACL,gBACA,wBACA,iBACA,mBACA,iBACA,kBACA,sBACA,YAGJ,CACErB,MAAS,gCACTiB,KAAQ,OACRC,QAAW,EACXC,OAAS,EACTC,KAAQ,8BACRC,IAAO,CACL,iBACA,qBACA,sBACA,oBACA,kBACA,sBACA,YACA,sBAGJ,CACErB,MAAS,wBACTiB,KAAQ,MACRC,QAAW,EACXC,OAAS,EACTC,KAAQ,yCACRC,IAAO,CACL,kBACA,uBACA,4BACA,oBACA,oBACA,8BACA,8BACA,iCACA,sBACA,uBACA,mBACA,mBACA,YAGJ,CACErB,MAAS,iCACTiB,KAAQ,MACRC,QAAW,EACXC,OAAS,EACTC,KAAQ,kDACRC,IAAO,CACL,yBACA,iBACA,iBACA,sBACA,sBAGJ,CACErB,MAAS,+BACTiB,KAAQ,OACRC,QAAW,EACXC,OAAS,EACTC,KAAQ,2BACRC,IAAO,CACL,iBACA,0BAGJ,CACErB,MAAS,2BACTiB,KAAQ,OACRC,QAAW,EACXC,OAAS,EACTC,KAAQ,kCACRC,IAAO,CACL,iBACA,iBACA,wBACA,mBACA,oBACA,kBACA,eACA,iBACA,qBACA,cAGJ,CACErB,MAAS,wBACTiB,KAAQ,MACRC,QAAW,EACXC,OAAS,EACTC,KAAQ,yCACRC,IAAO,CACL,kBACA,iBACA,6BACA,4BACA,0BACA,kBACA,8BACA,qBACA,mBACA,iBACA,mBACA,kBACA,sBACA,yBACA,sBACA,kBACA,YAGJ,CACErB,MAAS,2BACTiB,KAAQ,OACRC,QAAW,EACXC,OAAS,EACTC,KAAQ,6BACRC,IAAO,CACL,0BACA,wBACA,yBAGJ,CACErB,MAAS,0BACTiB,KAAQ,MACRC,QAAW,IACXC,OAAS,EACTC,KAAQ,sBACRC,IAAO,CACL,oBAGJ,CACErB,MAAS,yBACTiB,KAAQ,MACRC,QAAW,EACXC,OAAS,EACTC,KAAQ,uBACRC,IAAO,CACL,qBAGJ,CACErB,MAAS,yBACTiB,KAAQ,MACRC,QAAW,EACXC,OAAS,EACTC,KAAQ,qCACRC,IAAO,CACL,oBACA,oBACA,kBACA,kBACA,gBACA,qBAGJ,CACErB,MAAS,kCACTiB,KAAQ,OACRC,QAAW,EACXC,OAAS,EACTC,KAAQ,qBACRC,IAAO,CACL,uBACA,mBAGJ,CACErB,MAAS,2BACTiB,KAAQ,OACRC,QAAW,EACXC,OAAS,EACTC,KAAQ,mDACRC,IAAO,CACL,mBACA,kBACA,gBACA,mBACA,uBACA,oBACA,kBACA,mBACA,qBACA,kBACA,qBACA,iBACA,qBACA,iBACA,wBACA,iBACA,kBACA,qBACA,qBACA,wBACA,sBACA,sBACA,wBACA,wBACA,mBACA,mBACA,oBACA,qBACA,kBACA,cAGJ,CACErB,MAAS,2BACTiB,KAAQ,OACRC,QAAW,EACXC,OAAS,EACTC,KAAQ,uBACRC,IAAO,CACL,mBACA,sBAGJ,CACErB,MAAS,6BACTiB,KAAQ,MACRC,QAAW,IACXC,OAAS,EACTC,KAAQ,2BACRC,IAAO,CACL,qBAGJ,CACErB,MAAS,iCACTiB,KAAQ,QACRC,QAAW,EACXC,OAAS,EACTC,KAAQ,uBACRC,IAAO,CACL,sBAGJ,CACErB,MAAS,0BACTiB,KAAQ,MACRC,QAAW,EACXC,OAAS,EACTC,KAAQ,2BACRC,IAAO,CACL,6BACA,iCACA,0BACA,6BACA,6BACA,4BACA,4BACA,uBACA,oBACA,kBACA,gBACA,oBAGJ,CACErB,MAAS,2BACTiB,KAAQ,OACRC,QAAW,EACXC,OAAS,EACTC,KAAQ,iCACRC,IAAO,CACL,oBACA,gBACA,kBACA,oBACA,iBACA,qBACA,iBACA,mBACA,qBACA,mBACA,cAGJ,CACErB,MAAS,0BACTiB,KAAQ,MACRC,QAAW,EACXC,OAAS,EACTC,KAAQ,wBACRC,IAAO,CACL,oBAGJ,CACErB,MAAS,2BACTiB,KAAQ,MACRC,QAAW,EACXC,OAAS,EACTC,KAAQ,yBACRC,IAAO,CACL,uBAGJ,CACErB,MAAS,sBACTiB,KAAQ,MACRC,QAAW,EACXC,OAAS,EACTC,KAAQ,uBACRC,IAAO,CACL,kBAGJ,CACErB,MAAS,SACTiB,KAAQ,IACRC,QAAW,EACXC,OAAS,EACTC,KAAQ,4CACRC,IAAO,CACL,kBACA,yBACA,cAGJ,CACErB,MAAS,6BACTiB,KAAQ,MACRC,QAAW,EACXC,OAAS,EACTC,KAAQ,iCACRC,IAAO,IAET,CACErB,MAAS,uBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,qBACRC,IAAO,CACL,uBACA,oBAGJ,CACErB,MAAS,2BACTiB,KAAQ,OACRC,QAAW,EACXC,OAAS,EACTC,KAAQ,6BACRC,IAAO,CACL,sBACA,cAGJ,CACErB,MAAS,wBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,mBACRC,IAAO,CACL,oBACA,oBAGJ,CACErB,MAAS,MACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,mCACRC,IAAO,CACL,uBACA,YAGJ,CACErB,MAAS,sBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,0BACRC,IAAO,CACL,qBACA,kBACA,gBACA,kBAGJ,CACErB,MAAS,sBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,gCACRC,IAAO,CACL,qBACA,kBACA,gBACA,kBAGJ,CACErB,MAAS,oBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,uBACRC,IAAO,CACL,kBACA,kBACA,mBACA,gBACA,kBAGJ,CACErB,MAAS,0BACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,4BACRC,IAAO,CACL,iBACA,eACA,gBACA,gBACA,gBACA,iBACA,eACA,kBACA,cACA,kBACA,oBACA,qBACA,kBACA,qBACA,uBAGJ,CACErB,MAAS,0BACTiB,KAAQ,OACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,+DACRC,IAAO,CACL,sBACA,mBACA,iBACA,gBACA,kBACA,mBACA,oBACA,eACA,gBACA,cACA,cACA,oBACA,mBACA,eACA,iBACA,gBACA,kBAGJ,CACErB,MAAS,+BACTiB,KAAQ,OACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,gEACRC,IAAO,CACL,kBACA,oBACA,kBACA,mBACA,mBACA,gBACA,kBAGJ,CACErB,MAAS,wBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,kDACRC,IAAO,CACL,eACA,kBACA,oBACA,gBACA,iBAGJ,CACErB,MAAS,iCACTiB,KAAQ,OACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,+CACRC,IAAO,CACL,kBACA,gBACA,gBACA,kBAGJ,CACErB,MAAS,kCACTiB,KAAQ,QACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,kCACRC,IAAO,CACL,iBACA,gBACA,qBACA,gBACA,kBACA,eACA,oBACA,gBACA,gBACA,kBACA,gBACA,oBACA,eACA,cAGJ,CACErB,MAAS,wBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,uBACRC,IAAO,CACL,oBAGJ,CACErB,MAAS,oBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,gCACRC,IAAO,CACL,eACA,gBACA,mBACA,oBAGJ,CACErB,MAAS,4BACTiB,KAAQ,OACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,qBACRC,IAAO,CACL,gBAGJ,CACErB,MAAS,sBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,oBACRC,IAAO,CACL,iBAGJ,CACErB,MAAS,sBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,uBACRC,IAAO,CACL,kBAGJ,CACErB,MAAS,0BACTiB,KAAQ,OACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,wBACRC,IAAO,CACL,eACA,gBACA,mBACA,kBACA,kBACA,cACA,mBACA,iBACA,cACA,eACA,iBACA,kBACA,iBACA,sBAIJ,CACErB,MAAS,6BACTiB,KAAQ,OACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,+BACRC,IAAO,CACL,kBACA,mBACA,kBACA,gBACA,sBACA,gBACA,oBACA,gBACA,gBACA,gBACA,iBACA,cAGJ,CACErB,MAAS,oBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,4DACRC,IAAO,CACL,kBACA,cACA,mBACA,cACA,eACA,iBACA,kBACA,iBACA,sBAGJ,CACErB,MAAS,uBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,uBACRC,IAAO,CACL,oBAGJ,CACErB,MAAS,uBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,wBACRC,IAAO,CACL,mBAGJ,CACErB,MAAS,sBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,sBACRC,IAAO,CACL,mBAGJ,CACErB,MAAS,uBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,oBACRC,IAAO,CACL,eAGJ,CACErB,MAAS,uBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,sBACRC,IAAO,CACL,iBAGJ,CACErB,MAAS,4BACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,iCACRC,IAAO,CACL,qBACA,iBAGJ,CACErB,MAAS,qBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,6BACRC,IAAO,CACL,YACA,eACA,cACA,aACA,gBAGJ,CACErB,MAAS,0BACTiB,KAAQ,OACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,sBACRC,IAAO,CACL,qBACA,gBACA,uBACA,kBACA,cACA,iBACA,kBACA,mBACA,iBACA,mBACA,YACA,sBACA,gBACA,mBAGJ,CACErB,MAAS,uBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,gDACRC,IAAO,CACH,eACF,gBACA,oBACA,qBAGJ,CACErB,MAAS,cACTiB,KAAQ,OACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,yCACRC,IAAO,CACH,mBACF,gBACE,qBAGN,CACErB,MAAS,qBACTiB,KAAQ,MACRC,OAAU,IACVC,OAAS,EACTC,KAAQ,qBACRC,IAAO,CACL,gBAGJ,CACErB,MAAS,wBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,gCACRC,IAAO,CACL,aACA,cACA,cAGJ,CACErB,MAAS,2BACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,mBACRC,IAAO,CACL,cAGJ,CACErB,MAAS,0BACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,yBACRC,IAAO,CACL,cACA,mBACA,mBAGJ,CACErB,MAAS,yBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,sBACRC,IAAO,CACL,iBAGJ,CACErB,MAAS,yBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,sBACRC,IAAO,CACL,iBAGJ,CACErB,MAAS,4BACTiB,KAAQ,MACRC,OAAU,IACVC,OAAS,EACTC,KAAQ,oBACRC,IAAO,CACL,eAGJ,CACErB,MAAS,0BACTiB,KAAQ,OACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,iCACRC,IAAO,CACL,oBACA,aACA,cACA,gBACA,gBACA,YACA,iBACA,gBACA,YACA,mBACA,oBAGJ,CACErB,MAAS,qBACTiB,KAAQ,OACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,4BACRC,IAAO,CACL,uBAGJ,CACErB,MAAS,yBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,iCACRC,IAAO,CACL,iBAGJ,CACErB,MAAS,sBACTiB,KAAQ,MACRC,OAAU,IACVC,OAAS,EACTC,KAAQ,kDACRC,IAAO,CACL,kBAGJ,CACErB,MAAS,0BACTiB,KAAQ,OACRC,OAAU,IACVC,OAAS,EACTC,KAAQ,kCACRC,IAAO,CACL,iBAGJ,CACErB,MAAS,sBACTiB,KAAQ,MACRC,OAAU,KACVC,OAAS,EACTC,KAAQ,wBACRC,IAAO,CACL,mBAGJ,CACErB,MAAS,6BACTiB,KAAQ,OACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,qBACRC,IAAO,CACL,oBACA,cACA,eACA,iBACA,cACA,YACA,kBAGJ,CACErB,MAAS,2BACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,oBACRC,IAAO,CACL,aACA,iBAGJ,CACErB,MAAS,wBACTiB,KAAQ,MACRC,OAAU,IACVC,OAAS,EACTC,KAAQ,+BACRC,IAAO,CACL,eACA,iBAGJ,CACErB,MAAS,wBACTiB,KAAQ,OACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,sCACRC,IAAO,CACL,mBACA,eACA,YACA,eACA,kBACA,iBACA,cACA,iBACA,YACA,qBAGJ,CACErB,MAAS,gCACTiB,KAAQ,QACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,0BACRC,IAAO,CACL,oBACA,mBACA,cAGJ,CACErB,MAAS,sBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,oDACRC,IAAO,CACL,iBACA,aACA,kBAGJ,CACErB,MAAS,2BACTiB,KAAQ,OACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,0BACRC,IAAO,CACL,qBAGJ,CACErB,MAAS,0BACTiB,KAAQ,OACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,sCACRC,IAAO,CACL,cACA,oBACA,eACA,gBACA,cACA,iBACA,cAGJ,CACErB,MAAS,6BACTiB,KAAQ,OACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,oBACRC,IAAO,CACL,mBACA,oBAGJ,CACErB,MAAS,uBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,qBACRC,IAAO,CACL,gBAGJ,CACErB,MAAS,4BACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,0BACRC,IAAO,CACL,kBACA,qBAGJ,CACErB,MAAS,gCACTiB,KAAQ,QACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,sBACRC,IAAO,CACL,iBAGJ,CACErB,MAAS,sBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,oCACRC,IAAO,CACL,YACA,gBACA,aACA,YACA,kBAGJ,CACErB,MAAS,sBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,oBACRC,IAAO,CACL,iBACA,eAGJ,CACErB,MAAS,+BACTiB,KAAQ,OACRC,OAAU,IACVC,OAAS,EACTC,KAAQ,uBACRC,IAAO,CACL,qBACA,0BAGJ,CACErB,MAAS,4BACTiB,KAAQ,OACRC,OAAU,IACVC,OAAS,EACTC,KAAQ,qBACRC,IAAO,CACL,qBAGJ,CACErB,MAAS,6BACTiB,KAAQ,OACRC,OAAU,GACVC,OAAS,EACTC,KAAQ,uBACRC,IAAO,CACL,qBACA,uBAGJ,CACErB,MAAS,4BACTiB,KAAQ,OACRC,OAAU,GACVC,OAAS,EACTC,KAAQ,0CACRC,IAAO,CACL,sBACA,qBAGJ,CACErB,MAAS,6BACTiB,KAAQ,OACRC,OAAU,GACVC,OAAS,EACTC,KAAQ,iCACRC,IAAO,CACL,4BACA,aACA,eACA,uBACA,iBACA,iBAGJ,CACErB,MAAS,yBACTiB,KAAQ,MACRC,OAAU,GACVC,OAAS,EACTC,KAAQ,qBACRC,IAAO,CACL,mBACA,qBAGJ,CACErB,MAAS,wBACTiB,KAAQ,MACRC,OAAU,EACVC,OAAS,EACTC,KAAQ,sBACRC,IAAO,CACL,aACA,gBACA,iBAGJ,CACErB,MAAS,gCACTiB,KAAQ,OACRC,OAAU,GACVC,OAAS,EACTC,KAAQ,yCACRC,IAAO,CACL,uBACA,aACA,gBACA,sBACA,iBACA,iBACA,mBAGJ,CACErB,MAAS,4BACTiB,KAAQ,MACRC,OAAU,GACVC,OAAS,EACTC,KAAQ,0BACRC,IAAO,CACL,gBACA,gBACA,qBAGJ,CACErB,MAAS,4BACTiB,KAAQ,OACRC,OAAU,GACVC,OAAS,EACTC,KAAQ,mCACRC,IAAO,CACL,qBACA,qBAGJ,CACErB,MAAS,SACTiB,KAAQ,IACRC,OAAU,GACVC,OAAS,EACTC,KAAQ,4CACRC,IAAO,CACL,aACA,mBACA,oBACA,iBACA,gBACA,iBACA,eACA,mBAGJ,CACErB,MAAS,qBACTiB,KAAQ,MACRC,OAAU,GACVC,OAAS,EACTC,KAAQ,mBACRC,IAAO,CACL,iBAGJ,CACErB,MAAS,wBACTiB,KAAQ,MACRC,OAAU,GACVC,OAAS,EACTC,KAAQ,sBACRC,IAAO,CACL,cACA,iBACA,eACA,uBAGJ,CACErB,MAAS,0BACTiB,KAAQ,MACRC,OAAU,GACVC,OAAS,EACTC,KAAQ,6CACRC,IAAO,CACL,mBAGJ,CACErB,MAAS,sBACTiB,KAAQ,MACRC,OAAU,GACVC,OAAS,EACTC,KAAQ,yBACRC,IAAO,CACL,aACA,oBACA,kBACA,sBAGJ,CACErB,MAAS,sBACTiB,KAAQ,MACRC,OAAU,GACVC,OAAS,EACTC,KAAQ,oBACRC,IAAO,CACL,kBChzCFC,6MACJ3C,MAAQ,CACN4C,YAAY,KAGdC,mBAAqB,WACnBC,EAAKC,SAAS,SAAA/C,GAAK,MAAK,CAAE4C,YAAa5C,EAAM4C,iBAI/CI,UAAY,SAACvD,GAEX,OADIA,EAAI,KAAKA,EAAI,IAAMA,GAChBA,2EAGA,IAAAwD,EAAAC,KAAAC,EAC8BD,KAAKE,MAAlCC,EADDF,EACCE,QAASC,EADVH,EACUG,MAAOC,EADjBJ,EACiBI,SAElBC,EACJC,EAAA/B,EAAAgC,cAAA,WACED,EAAA/B,EAAAgC,cAAA,OAAKC,UAAWN,EAAQO,SACpBH,EAAA/B,EAAAgC,cAAA,OAAKG,IAAI,6BAA6BC,OAAO,OAAOC,MAAM,MAAMC,MAAO,CAACC,WAAY,OAAQC,YAAa,QAASC,IAAI,MAE1HV,EAAA/B,EAAAgC,cAACU,EAAA,EAAD,MACAX,EAAA/B,EAAAgC,cAACW,EAAA,EAAD,KACG,CAAC,YAAa,iBAAkB,gBAAiB,UAAW,SAAStD,IAAI,SAAC0B,EAAM6B,GAAP,OACxEb,EAAA/B,EAAAgC,cAACa,EAAA,EAAD,CACIC,QAAM,EACNC,IAAKhC,EACLiC,QAAS,kBAAMzB,EAAKG,MAAMuB,WAAWlC,IACrCmC,SAAU3B,EAAKG,MAAM9H,cAAgBmH,EACrCY,QAAS,CAACuB,SAAUvB,EAAQuB,UAC5BC,SAAmB,UAATpC,GAGZgB,EAAA/B,EAAAgC,cAACoB,EAAA,EAAD,CAAcC,mBAAiB,EAACC,QAASvC,QAI/CgB,EAAA/B,EAAAgC,cAACU,EAAA,EAAD,OAIJ,OACEX,EAAA/B,EAAAgC,cAAA,OAAKC,UAAWN,EAAQ4B,MACtBxB,EAAA/B,EAAAgC,cAACwB,EAAA,EAAD,MACAzB,EAAA/B,EAAAgC,cAACyB,EAAA,EAAD,CAAQC,SAAS,QAAQC,MAAM,UAAU1B,UAAWN,EAAQiC,QAC1D7B,EAAA/B,EAAAgC,cAAC6B,EAAA,EAAD,KACE9B,EAAA/B,EAAAgC,cAAC8B,EAAA,EAAD,CACEH,MAAM,UACNI,aAAW,cACXf,QAASxB,KAAKL,mBACdc,UAAWN,EAAQqC,YAEnBjC,EAAA/B,EAAAgC,cAACiC,EAAAjE,EAAD,OAEF+B,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,KAAKR,MAAM,UAAUS,QAAM,GAA/C,2BAGArC,EAAA/B,EAAAgC,cAACqC,EAAA,EAAD,CACEC,KAAMvC,EAAA/B,EAAAgC,cAACuC,EAAAvE,EAAD,MACNsC,MAAwC,cAAjCd,KAAKE,MAAM5F,aAAaE,MAAgD,OAAzBwF,KAAKE,MAAM9F,UAAqB,CAAC2G,WAAY,OAAQiC,gBAAiB,QAASC,WAAY,IAAKd,MAAO,UAAWe,SAAU,YAAqH,CAACnC,WAAY,OAAQiC,gBAAiB,OAAQb,MAAO,QAASc,WAAY,IAAKC,SAAU,YAChYC,MAAwC,cAAjCnD,KAAKE,MAAM5F,aAAaE,MAAgD,OAAzBwF,KAAKE,MAAM9F,UAAX,GAAAsD,OAAmCsC,KAAKE,MAAM9F,UAAUgJ,QAAQ,GAAhE,OAAyGpD,KAAKE,MAAM5F,aAAaE,KACvL2F,QAA0C,cAAjCH,KAAKE,MAAM5F,aAAaE,MAAgD,OAAzBwF,KAAKE,MAAM9F,UAAqB,CAAC0I,KAAM3C,EAAQkD,UAAmC,CAACP,KAAM3C,EAAQ2C,QAE3JvC,EAAA/B,EAAAgC,cAACqC,EAAA,EAAD,CACEC,KAAMvC,EAAA/B,EAAAgC,cAAC8C,EAAA9E,EAAD,MACNsC,MAAyC,cAAlCd,KAAKE,MAAM5F,aAAaG,OAAkD,OAA1BuF,KAAKE,MAAM/F,WAAsB,CAAC4G,WAAY,GAAIiC,gBAAiB,QAASC,WAAY,IAAKd,MAAO,UAAWe,SAAU,YAAiH,CAACnC,WAAY,GAAIiC,gBAAiB,OAAQb,MAAO,QAASc,WAAY,IAAKC,SAAU,YACtXC,MAAyC,cAAlCnD,KAAKE,MAAM5F,aAAaG,OAAkD,OAA1BuF,KAAKE,MAAM/F,WAAX,GAAAuD,OAAoCsC,KAAKE,MAAM/F,WAAWiJ,QAAQ,GAAlE,OAA4GpD,KAAKE,MAAM5F,aAAaG,MAC3L0F,QAA2C,cAAlCH,KAAKE,MAAM5F,aAAaG,OAAkD,OAA1BuF,KAAKE,MAAM/F,WAAsB,CAAC2I,KAAM3C,EAAQkD,UAAmC,CAACP,KAAM3C,EAAQ2C,QAE7JvC,EAAA/B,EAAAgC,cAACqC,EAAA,EAAD,CACEC,KAAMvC,EAAA/B,EAAAgC,cAAA,OAAuK+C,QAAQ,MAAMC,GAAG,UAAUC,MAAM,6BAA6B5C,MAAM,MAAMD,OAAO,MAAM8C,QAAQ,uBAAsBnD,EAAA/B,EAAAgC,cAAA,SAAGD,EAAA/B,EAAAgC,cAAA,SAAGD,EAAA/B,EAAAgC,cAAA,SAAGD,EAAA/B,EAAAgC,cAAA,QAAMmD,EAAE,2wNAA0wNpD,EAAA/B,EAAAgC,cAAA,QAAMmD,EAAE,gLAA+KpD,EAAA/B,EAAAgC,cAAA,QAAMmD,EAAE,iLAAgLpD,EAAA/B,EAAAgC,cAAA,QAAMmD,EAAE,kLAAiLpD,EAAA/B,EAAAgC,cAAA,QAAMmD,EAAE,4KAA2KpD,EAAA/B,EAAAgC,cAAA,QAAMmD,EAAE,mLAAkLpD,EAAA/B,EAAAgC,cAAA,QAAMmD,EAAE,4KAA2KpD,EAAA/B,EAAAgC,cAAA,QAAMmD,EAAE,gLAA+KpD,EAAA/B,EAAAgC,cAAA,QAAMmD,EAAE,2LAA0LpD,EAAA/B,EAAAgC,cAAA,QAAMmD,EAAE,kLAAiLpD,EAAA/B,EAAAgC,cAAA,QAAMmD,EAAE,8KAA6KpD,EAAA/B,EAAAgC,cAAA,QAAMmD,EAAE,uTAA+TpD,EAAA/B,EAAAgC,cAAA,UAAOD,EAAA/B,EAAAgC,cAAA,UAAOD,EAAA/B,EAAAgC,cAAA,UAAOD,EAAA/B,EAAAgC,cAAA,UAAOD,EAAA/B,EAAAgC,cAAA,UAAOD,EAAA/B,EAAAgC,cAAA,UAAOD,EAAA/B,EAAAgC,cAAA,UAAOD,EAAA/B,EAAAgC,cAAA,UAAOD,EAAA/B,EAAAgC,cAAA,UAAOD,EAAA/B,EAAAgC,cAAA,UAAOD,EAAA/B,EAAAgC,cAAA,UAAOD,EAAA/B,EAAAgC,cAAA,UAAOD,EAAA/B,EAAAgC,cAAA,UAAOD,EAAA/B,EAAAgC,cAAA,UAAOD,EAAA/B,EAAAgC,cAAA,WACrxSM,MAAwC,cAAjCd,KAAKE,MAAM5F,aAAaC,MAA0D,OAAnCyF,KAAKE,MAAMlG,UAAUE,UAAqB,CAAC6G,WAAY,GAAIiC,gBAAiB,QAASC,WAAY,IAAKd,MAAO,UAAWe,SAAU,YAAiH,CAACnC,WAAY,GAAIiC,gBAAiB,OAAQb,MAAO,QAASc,WAAY,IAAKC,SAAU,YAC9XC,MAAwC,cAAjCnD,KAAKE,MAAM5F,aAAaC,MAA0D,OAAnCyF,KAAKE,MAAMlG,UAAUE,UAArB,GAAAwD,OAA6CsC,KAAKE,MAAMlG,UAAUE,UAAUkJ,QAAQ,GAApF,QAA8HpD,KAAKE,MAAM5F,aAAaC,KAC5M4F,QAA0C,cAAjCH,KAAKE,MAAM5F,aAAaC,MAA0D,OAAnCyF,KAAKE,MAAMlG,UAAUE,UAAqB,CAAC4I,KAAM3C,EAAQyD,aAAyC,CAACd,KAAM3C,EAAQ0D,WAE3KtD,EAAA/B,EAAAgC,cAACqC,EAAA,EAAD,CACEC,KAAMvC,EAAA/B,EAAAgC,cAACsD,EAAAtF,EAAD,CAAMiC,UAA4C,cAAjCT,KAAKE,MAAM5F,aAAaC,MAAsD,OAA/ByF,KAAKE,MAAMlG,UAAUC,OAAgD,IAA/B+F,KAAKE,MAAMlG,UAAUC,MAAc,SAAoB,KACnK6G,MAAwC,cAAjCd,KAAKE,MAAM5F,aAAaC,MAAsD,OAA/ByF,KAAKE,MAAMlG,UAAUC,MAAiB,CAAC8G,WAAY,GAAIiC,gBAAiB,QAASC,WAAY,IAAKd,MAAO,UAAWe,SAAU,YAAiH,CAACnC,WAAY,GAAIiC,gBAAiB,OAAQb,MAAO,QAASc,WAAY,IAAKC,SAAU,YAC1XC,MAAwC,cAAjCnD,KAAKE,MAAM5F,aAAaC,MAAsD,OAA/ByF,KAAKE,MAAMlG,UAAUC,MAArB,GAAAyD,OAAyCsC,KAAKE,MAAMlG,UAAUC,MAAMmJ,QAAQ,GAA5E,QAAsHpD,KAAKE,MAAM5F,aAAaC,KACpM4F,QAA0C,cAAjCH,KAAKE,MAAM5F,aAAaC,MAAsD,OAA/ByF,KAAKE,MAAMlG,UAAUC,MAAiB,CAAC6I,KAAM3C,EAAQkD,UAAmC,CAACP,KAAM3C,EAAQ2C,QAEjKvC,EAAA/B,EAAAgC,cAACqC,EAAA,EAAD,CACEC,KAAMvC,EAAA/B,EAAAgC,cAACuD,EAAAvF,EAAD,MACNsC,MAAO,CAACC,WAAY,GAAIiC,gBAAiB,QAASC,WAAY,IAAKd,MAAO,WAC1EhC,QAAS,CAAC2C,KAAM3C,EAAQkD,UACxBF,MAAK,GAAAzF,OAAKsC,KAAKF,UAAU,IAAIjH,KAAK,IAAIA,KAAKmL,OAAOhE,KAAKE,MAAMtH,OAAOqL,eAAeC,UAAUC,SAAU,CAAC5L,SAAWyH,KAAKE,MAAM3H,YAAY6L,YAArI,OAAA1G,OAAsJsC,KAAKF,UAAU,IAAIjH,KAAK,IAAIA,KAAKmL,OAAOhE,KAAKE,MAAMtH,OAAOqL,eAAeC,UAAUC,SAAU,CAAC5L,SAAWyH,KAAKE,MAAM3H,YAAY8L,cAAtR,KAAA3G,OAAuSyB,EAAUV,OAAO,SAAA6F,GAAC,OAA4C,IAAxCA,EAAE9E,IAAI/C,QAAQsD,EAAKG,MAAM3H,YAAkB,GAAG6G,UAItXmB,EAAA/B,EAAAgC,cAAA,OAAKC,UAAWN,EAAQG,QACtBC,EAAA/B,EAAAgC,cAAC+D,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OAC1BlE,EAAA/B,EAAAgC,cAACkE,EAAA,EAAD,CACEC,UAAW3E,KAAKE,MAAMyE,UACtBhC,QAAQ,YACRiC,OAA4B,QAApBxE,EAAMlG,UAAsB,QAAU,OAC9C2K,KAAM7E,KAAKlD,MAAM4C,WACjBoF,QAAS9E,KAAKL,mBACdQ,QAAS,CACP4E,MAAO5E,EAAQ6E,cAGhB1E,IAGLC,EAAA/B,EAAAgC,cAAC+D,EAAA,EAAD,CAAQU,QAAM,EAACR,eAAe,OAC5BlE,EAAA/B,EAAAgC,cAACkE,EAAA,EAAD,CACEvE,QAAS,CACP4E,MAAO5E,EAAQ6E,aAEjBrC,QAAQ,YACRkC,MAAI,GAEHvE,KAIPC,EAAA/B,EAAAgC,cAAA,QAAMC,UAAWN,EAAQ+E,SACtB7E,WAvHoB8E,IAAMC,WAkJrC,IAMMC,EAAkBC,YApBxB,SAAyBxI,GAAO,IAAAyI,EAC4DzI,EAAMD,IAE9F,MAAO,CACHzE,YAJwBmN,EACpBnN,YAIJQ,KALwB2M,EACP3M,KAKjBL,SANwBgN,EACDhN,SAMvByB,UAPwBuL,EACSvL,UAOjCG,WARwBoL,EACoBpL,WAQ5CC,UATwBmL,EACgCnL,UASxDE,aAVwBiL,EAC2CjL,eAahD,SAACkL,GAAD,MAAe,CACtC/D,WAAY,SAACxD,GACXuH,EAAS,CAACxI,KAAM,cAAeiB,YAIbqH,CAA6CG,YA9MtD,SAAArF,GAAK,MAAK,CACvB2B,KAAM,CACJ2D,QAAS,OACT9E,OAAQ,QAEVN,OAAOrD,OAAAK,EAAA,EAAAL,CAAA,GACJmD,EAAMuF,YAAYC,GAAG,MAAQ,CAC5B/E,MATc,IAUdgF,WAAY,IAGhBzD,OAAOnF,OAAAK,EAAA,EAAAL,CAAA,CACL8D,WAdgB,KAefX,EAAMuF,YAAYC,GAAG,MAAQ,CAC5B/E,MAAK,eAAAnD,OAhBS,IAgBT,SAGT8E,WAAWvF,OAAAK,EAAA,EAAAL,CAAA,CACT+D,YAAa,IACZZ,EAAMuF,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,SAGbhF,QAASN,EAAM0F,OAAOpF,QACtBsE,YAAa,CACXnE,MA3BgB,KA6BlBqE,QAAS,CACPa,SAAU,EACVC,QAAS5F,EAAM6F,QAAQ,GACvBC,WAAY,IAEdxE,SAAU,CACRsB,gBAAiB,qBACjBb,MAAO,sBAET0B,QAAS,CACPsC,KAAM,QACNC,OAAQ,QACRC,YAAa,OAEfvD,KAAM,CACJX,MAAO,SAETyB,YAAa,CACXuC,KAAM,UACNC,OAAQ,UACRC,YAAa,OAEfhD,SAAU,CACRlB,MAAO,aA4J6E,CAAEmE,WAAW,GAAhCb,CAAwChG,iFCrNvG8G,oLAEO,IAAA3G,EAAAI,KAAAC,EAC6DD,KAAKE,MAAhEC,EADFF,EACEE,QAASpH,EADXkH,EACWlH,kBAAmBE,EAD9BgH,EAC8BhH,eAAgByB,EAD9CuF,EAC8CvF,YAEnD,OACI6F,EAAA/B,EAAAgC,cAACgG,EAAA,SAAD,KACIjG,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAM9B,WAAS,EAACzK,UAAU,SAASuG,UAAWN,EAAQ4B,MAClDxB,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,MAApB,gBAGApC,EAAA/B,EAAAgC,cAACkG,GAAA,EAAD,KACInG,EAAA/B,EAAAgC,cAACmG,GAAA,EAAD,KACApG,EAAA/B,EAAAgC,cAACoG,GAAA,EAAD,KACIrG,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,kBACAtG,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,iBAGJtG,EAAA/B,EAAAgC,cAACsG,GAAA,EAAD,KACK/N,GAAqBA,EAAkB8E,IAAI,SAAAkJ,GACxC,OACAxG,EAAA/B,EAAAgC,cAACoG,GAAA,EAAD,CACII,OAAK,EAELzF,IAAKwF,EAAEtJ,UACP+D,QAAS,kBAAM5B,EAAKM,MAAM+G,kBAAkBF,EAAEtJ,YAC9CqD,MAAO,CAACoG,OAAQ,WAChBxF,SAAUqF,EAAEtJ,YAAcxE,EAC1BkH,QAAS,CAACuB,SAAUvB,EAAQuB,WAE5BnB,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,CAAW/F,MAAOiG,EAAEtJ,YAAcxE,EAAiB,CAACkJ,MAAO,SAAW,IACjE4E,EAAEtJ,WAEP8C,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,CAAW/F,MAAOiG,EAAEtJ,YAAcxE,EAAiB,CAACkJ,MAAO,SAAW,IACjEzH,EAAYqM,EAAExI,yBAlC7B4G,IAAMC,WAyDhC,IAOM+B,GAAuB7B,YAjB7B,SAAyBxI,GAAO,IAAAyI,EAC+BzI,EAAMD,IAEjE,MAAO,CACH9D,kBAJwBwM,EACpBxM,kBAIJE,eALwBsM,EACDtM,eAKvByB,YANwB6K,EACe7K,cASpB,SAAC8K,GAAD,MAAe,CACtCyB,kBAAmB,SAACxJ,GAChB+H,EAAS,CAACxI,KAAM,sBAAuBS,iBAKlB6H,CAA6CG,YAzE3D,SAAArF,GAAK,MAAK,CACrB2B,KAAM,CACFnB,OAAQ,OAAQC,MAAO,OAAQmF,QAAS,IAE5CtE,SAAU,CACNsB,gBAAiB,wBAoEiDyC,CAAmBc,KCnFhFa,GAAa,CACtBC,YAyUJ,SAAqBC,EAAMC,GACvB,IAAMC,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBP,KAAQA,EACRQ,SAAYP,KAIpB,OAAOQ,MAAK,GAAArK,OAAIsK,GAAJ,gBAA4BR,GACnCS,KAAKC,KAnVVC,aAyXJ,SAAsBC,EAAYC,EAAYC,EAAaC,GACvD,IAAMf,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBO,WAAcA,EACdC,WAAcA,EACdC,YAAeA,EACfC,WAAcA,KAItB,OAAOR,MAAK,GAAArK,OAAIsK,GAAJ,gBAA4BR,GACnCS,KAAKC,KArYVM,UA2WJ,SAAmBC,GACf,IAAIC,EAAO,IAAIC,SACfD,EAAKE,OAAO,OAAQH,GACpB,IAAMjB,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMe,GAGV,OAAOX,MAAK,GAAArK,OAAIsK,GAAJ,8BAA0CR,GACjDS,KAAKC,KApXVW,eAuYJ,SAAwBC,GACpB,IAAMtB,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBkB,cAAiBD,KAIzB,OAAOf,MAAK,GAAArK,OAAIsK,GAAJ,2BAAuCR,GAC9CS,KAAKC,KAhZVc,eAoZJ,WAOI,OAAOjB,MAAK,GAAArK,OAAIsK,GAAJ,2BANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KA3ZVe,WA8ZJ,SAAoBC,GAChB,IAAM1B,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBqB,OAAUA,KAKlB,OAAOnB,MAAK,GAAArK,OAAIsK,GAAJ,oBAAgCR,GACvCS,KAAKC,KAxaViB,YA6aJ,SAAqB5K,EAAUJ,GAE3B,IAAMqJ,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBtK,IAAOgB,EACP6K,IAAO,OACPC,OAAUlL,KAIlB,OAAO4J,MAAK,GAAArK,OAAIsK,GAAJ,kBAA8BR,GACrCS,KAAKC,KAzbVoB,SA4bJ,SAAkB/K,EAAUmJ,GAExB,IAAMF,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBtK,IAAOgB,EACP6K,IAAO,OACPG,KAAQ7B,KAIhB,OAAOK,MAAK,GAAArK,OAAIsK,GAAJ,kBAA8BR,GACrCS,KAAKC,KAxcVsB,qBA6cJ,WAOI,OAAOzB,MAAK,GAAArK,OAAIsK,GAAJ,yBANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KApdVuB,sBAudJ,SAA+BhM,GAO3B,OAAOsK,MAAK,GAAArK,OAAIsK,GAAJ,8BAAAtK,OAAyCD,GAN9B,CACnBgK,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KA9dVwB,iBAieJ,WACI,IAAMlC,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBuB,IAAO,OACP7L,IAAO,WAIf,OAAOwK,MAAK,UAAArK,OAAWiM,GAAX,gBAAoCnC,GAC3CS,KAAKC,KA3eV0B,SAifJ,SAAkBxM,GACd,IAAMoK,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBzK,MAASA,KAMjB,OAFAyM,QAAQC,IAAI1M,GAEL2K,MAAK,UAAArK,OAAWiM,GAAX,wBAA4CnC,GACnDS,KAAKC,KA5fV6B,UA+fJ,SAAmBC,EAAcC,EAAaC,EAAeC,EAAgB/O,EAAegP,GACxF,IAAM5C,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBmC,aAAgBA,EAChBC,YAAeA,EACfC,cAAiBA,EACjBC,eAAkBA,EAClB/O,cAAiBA,EACjBgP,YAAeA,KAIvB,OAAOrC,MAAK,GAAArK,OAAIsK,GAAJ,kBAA8BR,GACrCS,KAAKC,KA7gBVmC,UAgiBJ,SAAmBC,EAASC,EAAYC,GACpC,IAAMhD,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjByC,QAAWA,EACXG,SAAYF,EACZC,QAAWA,KAInB,OAAOzC,MAAK,GAAArK,OAAIsK,GAAJ,0BAAsCR,GAC7CS,KAAKC,KA3iBVwC,YA8iBJ,SAAqB9R,GACjB,IAAM4O,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBtP,SAAYK,KAIpB,OAAOmP,MAAK,GAAArK,OAAIsK,GAAJ,iBAA6BR,GACpCS,KAAKC,KAvjBVyC,aAumBJ,WAOI,OAAO5C,MAAK,GAAArK,OAAIsK,GAAJ,0BANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KA9mBV0C,aAglBJ,WAOI,OAAO7C,MAAK,GAAArK,OAAIsK,GAAJ,kBANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KAvlBV2C,SAgnBJ,WAOI,OAAO9C,MAAK,GAAArK,OAAIsK,GAAJ,cANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KAvnBV4C,aAylBJ,WAOI,OAAO/C,MAAK,GAAArK,OAAIsK,GAAJ,yBANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KAhmBV6C,aA0gBJ,SAAsBC,EAAOjN,GACzB,IAAMyJ,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBoD,uBAA0BD,EAC1BE,wBAA2BnN,KAInC,OAAOgK,MAAK,GAAArK,OAAIsK,GAAJ,yBAAqCR,GAC5CS,KAAKC,KAphBViD,YAsjBJ,WAOI,OAAOpD,MAAK,GAAArK,OAAIsK,GAAJ,iBANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KA7jBVkD,QAgkBJ,WAOI,OAAOrD,MAAK,GAAArK,OAAIsK,GAAJ,aANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KAvkBVmD,SAoRJ,SAAkBC,GACd,IAAM9D,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBtK,IAAK+N,KAIb,OAAOvD,MAAK,GAAArK,OAAIsK,GAAJ,SAAqBR,GAC5BS,KAAKC,KA7RVqD,YAsQJ,SAAqB5M,GACjB,IAAM6I,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBlJ,QAASA,KAIjB,OAAOoJ,MAAK,GAAArK,OAAIsK,GAAJ,yBAAqCR,GAC5CS,KAAKC,KA/QVsD,eAwPJ,SAAwBC,GACpB,IAAMjE,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjB4D,KAAMA,KAId,OAAO1D,MAAK,GAAArK,OAAIsK,GAAJ,wBAAoCR,GAC3CS,KAAKC,KAjQVwD,kBAwOJ,SAA2BnO,EAAKoO,EAAWC,EAAWC,EAAUC,EAAWC,EAAWC,EAAcC,EAAOC,EAAkBC,EAAkBC,EAAuBC,EAAuBC,EAAeC,EAAYC,GACpN,IAAMhF,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBtK,IAAKA,EACL6L,IAAK,OACLC,OAAM,GAAA3L,OAAKiO,EAAL,MAAAjO,OAAmBkO,EAAnB,MAAAlO,OAAiCmO,EAAjC,MAAAnO,OAA8CoO,EAA9C,MAAApO,OAA4DqO,EAA5D,MAAArO,OAA0EsO,EAA1E,MAAAtO,OAA2FuO,EAA3F,MAAAvO,OAAqGwO,EAArG,MAAAxO,OAA0HyO,EAA1H,MAAAzO,OAA+I0O,EAA/I,MAAA1O,OAAyK2O,EAAzK,MAAA3O,OAAmM4O,EAAnM,MAAA5O,OAAqN6O,EAArN,SAAA7O,OAAuO8O,MAIrP,OAAOzE,MAAK,GAAArK,OAAIsK,GAAJ,qBAAiCR,GACxCS,KAAKC,KAnPVuE,eAuNJ,SAAwBlP,EAAKmP,EAAeC,EAAeC,EAAgBC,EAAgBC,GACvF,IAAMtF,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBtK,IAAKA,EACL6L,IAAK,OACLC,OAAM,GAAA3L,OAAKgP,EAAL,MAAAhP,OAAuBiP,EAAvB,MAAAjP,OAAyCkP,EAAzC,MAAAlP,OAA4DmP,EAA5D,MAAAnP,OAA+EoP,MAI7F,OAAO/E,MAAK,GAAArK,OAAIsK,GAAJ,qBAAiCR,GACxCS,KAAKC,KAlOV6E,iBAwMJ,SAA0BxP,GACtB,IAAMiK,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBtK,IAAKA,EACL6L,IAAK,UAIb,OAAOrB,MAAK,GAAArK,OAAIsK,GAAJ,qBAAiCR,GACxCS,KAAKC,KAlNV8E,cAwLJ,SAAuBzP,GACnB,IAAMiK,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBtK,IAAKA,EACL6L,IAAK,UAIb,OAAOrB,MAAK,GAAArK,OAAIsK,GAAJ,qBAAiCR,GACxCS,KAAKC,KAlMV+E,WA4KJ,WAOI,OAAOlF,MAAK,GAAArK,OAAIsK,GAAJ,sBANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KAnLVgF,UA8JJ,SAAmBzE,EAAM0E,EAAMnQ,EAAMgB,EAAOoP,GACxC,IAAI1E,EAAO,IAAIC,SACfD,EAAKE,OAAO,OAAQH,GACpB,IAAMjB,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMe,GAGV,OAAOX,MAAK,GAAArK,OAAIsK,GAAJ,sBAAAtK,OAAiCV,EAAjC,WAAAU,OAA+CM,EAA/C,UAAAN,OAA6DyP,EAA7D,oBAAAzP,OAAoF0P,GAAkB5F,GAC7GS,KAAKC,KAvKVmF,aA+IJ,SAAsBrP,EAAOhB,GACzB,IAAMwK,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjB7K,KAAMA,EACNgB,MAAOA,KAIf,OAAO+J,MAAK,GAAArK,OAAIsK,GAAJ,mBAA+BR,GACtCS,KAAKC,KAzJVoF,aAgIJ,SAAsBtQ,EAAMgB,GACxB,IAAMwJ,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjB7K,KAAMA,EACNgB,MAAOA,KAIf,OAAO+J,MAAK,GAAArK,OAAIsK,GAAJ,mBAA+BR,GACtCS,KAAKC,KA1IVqF,cAiHJ,SAAuBvQ,EAAMgB,GACzB,IAAMwJ,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjB7K,KAAMA,EACNgB,MAAOA,KAIf,OAAO+J,MAAK,GAAArK,OAAIsK,GAAJ,oBAAgCR,GACvCS,KAAKC,KA3HVsF,SAqGJ,WAOI,OAAOzF,MAAK,GAAArK,OAAIsK,GAAJ,aANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KA5GVuF,cAyFJ,WAOI,OAAO1F,MAAK,GAAArK,OAAIsK,GAAJ,oBANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KAhGVwF,cAmEJ,SAAuB5S,EAAiBD,EAAiBG,EAAeC,EAAeC,GACnF,IAAMsM,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBjN,YAAc,CACVC,gBAAiBA,EACjBC,gBAAiBA,GAErBC,iBAAmB,CACfC,cAAeA,EACfC,cAAeA,EACfC,eAAgBA,MAK5B,OAAO6M,MAAK,GAAArK,OAAIsK,GAAJ,oBAAgCR,GACvCS,KAAKC,KApFVyF,eAuDJ,WAOI,OAAO5F,MAAK,GAAArK,OAAIsK,GAAJ,qBANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KA9DV0F,eAwCJ,SAAwBxS,EAAeC,GACnC,IAAMmM,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBzM,cAAgBA,EAChBC,oBAAsBA,KAI9B,OAAO0M,MAAK,GAAArK,OAAIsK,GAAJ,qBAAiCR,GACxCS,KAAKC,KAlDV2F,cA2BJ,WAOI,OAAO9F,MAAK,GAAArK,OAAIsK,GAAJ,oBANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KAlCV4F,cASJ,SAAuBvS,EAAcF,EAAqBG,EAAWC,EAAUC,GAC3E,IAAM8L,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBtM,aAAcA,EACdF,oBAAqBA,EACrBG,UAAWA,EACXC,SAAUA,EACVC,SAAUA,KAIlB,OAAOqM,MAAK,GAAArK,OAAIsK,GAAJ,oBAAgCR,GACvCS,KAAKC,KAtBV6F,MA8SJ,WAOI,OAAOhG,MAAK,GAAArK,OAAIsK,GAAJ,iBANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KArTV8F,UAwTJ,WAOI,OAAOjG,MAAK,GAAArK,OAAIsK,GAAJ,+BANW,CACnBP,OAAQ,OACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,MA7TRF,GAAQ,UAAAtK,OAAauQ,OAAOC,SAASC,SAA7B,SAERxE,GAAS,UAAAjM,OAAauQ,OAAOC,SAASC,SAA7B,SAyQf,SAASjG,GAAekG,GACpB,OAAOA,EAASjR,OAAO8K,KAAK,SAAA9K,GACxB,GAAKiR,EAASC,GAGP,CACH,GAAmB,YAAhBlR,EAAKb,OAAsB,CAC1B,IAAMgS,EAAQnR,EAAKE,QACnB,OAAOkR,QAAQC,OAAOF,GAEtB,OAAOnR,EAPX,IAAMmR,EAASnR,GAAQA,EAAKE,SAAY+Q,EAASK,WACjD,OAAOF,QAAQC,OAAOF,KCnTlC,IAMMI,GAAuB,kBACzBnO,EAAA/B,EAAAgC,cAAA,OACIM,MAAO,CAACF,OAAQ,OAAQC,MAAO,OAAQ6E,QAAS,OAAQiJ,WAAY,SAAUC,eAAgB,SAAU5L,gBAAiB,UAAWb,MAAO,UAD/I,wCAKE0M,8MAEFC,MAAQ,OAERhS,MAAQ,KAIRiS,kBAAoB,WAChBnP,EAAKoP,aAGTC,0BAA4B,SAACC,GACtBA,EAAUjW,iBAAmB2G,EAAKM,MAAMjH,gBACvC2G,EAAKM,MAAMuJ,sBAAsByF,EAAUjW,mBAInD+V,QAAU,WAAc,IAAbG,IAAaC,UAAA5S,OAAA,QAAA6S,IAAAD,UAAA,KAAAA,UAAA,GACpBxP,EAAKM,MAAMuJ,sBAAsB7J,EAAKM,MAAMjH,gBAEzCkW,IACCvP,EAAKkP,MAAQQ,WAAW1P,EAAKoP,QAAS,+EAIrC,IAAA/O,EACmCD,KAAKE,MAArCC,EADHF,EACGE,QAASjH,EADZ+G,EACY/G,mBAEjB,OAA+B,OAAvBA,EAA8BqH,EAAA/B,EAAAgC,cAAC+O,GAAD,MAC9BhP,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAM9B,WAAS,EAACzK,UAAU,SAASuG,UAAWN,EAAQ4B,MAClDxB,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,KAAK7B,MAAO,CAACF,OAAQ,SAAzC,mBAGAL,EAAA/B,EAAAgC,cAAA,OACIC,UAA+C,OAApCvH,EAAmBsW,eAA0BtW,EAAmBsW,aAAe,GAAK,UAC/FtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,GAAK,UACvCtW,EAAmBsW,aAAe,EAAI,UACtCtW,EAAmBsW,aAAe,EAAI,SACtCtW,EAAmBsW,aAAe,EAAI,SACtCtW,EAAmBsW,aAAe,EAAI,SACtCtW,EAAmBsW,aAAe,EAAI,SACtCtW,EAAmBsW,cAAgB,EAAI,SACvCtW,EAAmBsW,cAAgB,EAAI,UACvCtW,EAAmBsW,cAAgB,EAAI,UACvCtW,EAAmBsW,cAAgB,EAAI,UACvCtW,EAAmBsW,cAAgB,GAAK,UACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxCtW,EAAmBsW,cAAgB,GAAK,WACxC,YACA1O,MAAO,CAACD,MAAO,OAAQD,OAAQ,QAAS6O,UAAW,IACV,OAApCvW,EAAmBsW,cAAyBjP,EAAA/B,EAAAgC,cAAA,OACzCM,MAAO,CAACF,OAAQ,OAAQC,MAAO,OAAQ6E,QAAS,OAAQiJ,WAAY,SAAUC,eAAgB,SAAU5L,gBAAiB,UAAWb,MAAO,UADlG,iCAKhB,OAApCjJ,EAAmBsW,cAAyBjP,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,KAAK7B,MAAO,CAAC4O,UAAW,SAAU9O,OAAQ,GAAI6O,UAAW,IAA7E,WAChCvW,EAAmBsW,cAEhCjP,EAAA/B,EAAAgC,cAAA,OAAKM,MAAO,CAACF,OAAQ,qBAAsBC,MAAO,OAAQ8O,SAAU,SACpEpP,EAAA/B,EAAAgC,cAACkG,GAAA,EAAD,CAAOV,QAAQ,QACXzF,EAAA/B,EAAAgC,cAACsG,GAAA,EAAD,KACAvG,EAAA/B,EAAAgC,cAACoG,GAAA,EAAD,CAAU9F,MAAO,CAACoG,OAAQ,YACtB3G,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KACItG,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,SAApB,eAIJpC,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KAAY3N,EAAmBuE,YAGnC8C,EAAA/B,EAAAgC,cAACoG,GAAA,EAAD,CAAU9F,MAAO,CAACoG,OAAQ,YACtB3G,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KACItG,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,SAApB,cAIJpC,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KAAY3N,EAAmBqF,WAGnCgC,EAAA/B,EAAAgC,cAACoG,GAAA,EAAD,CAAU9F,MAAO,CAACoG,OAAQ,YACtB3G,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KACItG,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,SAApB,WAIJpC,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KAAY3N,EAAmB0W,QAGnCrP,EAAA/B,EAAAgC,cAACoG,GAAA,EAAD,CAAU9F,MAAO,CAACoG,OAAQ,YACtB3G,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KACItG,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,SAApB,iBAIJpC,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KAAY3N,EAAmB2W,cAGnCtP,EAAA/B,EAAAgC,cAACoG,GAAA,EAAD,CAAU9F,MAAO,CAACoG,OAAQ,YACtB3G,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KACItG,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,SAApB,kBAIJpC,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KAAY3N,EAAmBsW,eAGnCjP,EAAA/B,EAAAgC,cAACoG,GAAA,EAAD,CAAU9F,MAAO,CAACoG,OAAQ,YACtB3G,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KACItG,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,SAApB,kBAIJpC,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KAAY,IAAIhO,KAAKK,EAAmB4W,WAAWC,mBAAmB,QAAS,CAACxX,SAAUyH,KAAKE,MAAM3H,WAArG,OAAqH,IAAIM,KAAKK,EAAmB4W,WAAWE,mBAAmB,QAAS,CAACzX,SAAWyH,KAAKE,MAAM3H,SAAU0X,QAAQ,iBA/JhO9K,IAAMC,WAoLnC,IAaM8K,GAA0B5K,YAvBhC,SAAyBxI,GAAO,IAAAyI,EAC6BzI,EAAMD,IAE/D,MAAO,CACH3D,mBAJwBqM,EACpBrM,mBAIJX,SALwBgN,EACAhN,SAKxBU,eANwBsM,EACUtM,iBASf,SAACuM,GAAD,MAAe,CACtCiE,sBAAwB,SAAChM,GACrB+H,EAAS,CAACxI,KAAM,qCAChBoK,GAAWqC,sBAAsBhM,GAC5BwK,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,mCAAoCG,UACrD,SAAAmR,GACC9I,EAAS,CAACxI,KAAM,0CAMAsI,CAA6CG,YA7M9D,SAAArF,GAAK,MAAK,CACrB2B,KAAM,CACFnB,OAAQ,OAAQC,MAAO,OAAQmF,QAAS,GAAImK,SAAU,YA2Me1K,CAAmBoJ,KCxL1FuB,GAAe,SAAClQ,GAAD,OACjBK,EAAA/B,EAAAgC,cAAA,OACIM,MAAO,CAACF,OAAQ,OAAQC,MAAO,OAAQ6E,QAAS,OAAQ2K,cAAe,SAAU1B,WAAY,SAAUC,eAAgB,SAAU5L,gBAAiB,UAAWb,MAAO,UAChK5B,EAAA/B,EAAAgC,cAAA,KAAGM,MAAO,CAACwP,OAAQ,KAAnB,2BACA/P,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQ5N,QAAQ,YAAY7B,MAAO,CAACwP,OAAQ,IAAKnO,MAAM,UAAUX,QAAS,kBAAMtB,EAAMsQ,SAAtF,gBACAjQ,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQ5N,QAAQ,YAAY7B,MAAO,CAACwP,OAAQ,IAAKnO,MAAM,UAAUX,QAAS,kBAAMtB,EAAMsJ,yBAAtF,yBAINiH,GAAW,kBACblQ,EAAA/B,EAAAgC,cAAA,OACIM,MAAO,CAACF,OAAQ,OAAQC,MAAO,OAAQ6E,QAAS,OAAQiJ,WAAY,SAAUC,eAAgB,SAAU5L,gBAAiB,UAAWb,MAAO,UAD/I,gBAOEuO,8MAEF5T,MAAQ,KAGR0M,qBAAuB,WACnB5J,EAAKM,MAAMsJ,0BAGfgH,KAAO,WACH5Q,EAAKM,MAAMsQ,gFAGN,IAAAzQ,EAAAC,KAAAC,EAC6DD,KAAKE,MAA/DC,EADHF,EACGE,QAASpH,EADZkH,EACYlH,kBACjB,OAFKkH,EAC+BjH,0BACCuH,EAAA/B,EAAAgC,cAACmQ,GAAD,MAAqC,OAAtB5X,EAA6BwH,EAAA/B,EAAAgC,cAACoQ,GAAD,CAAcJ,KAAM,kBAAMzQ,EAAKyQ,QAAQhH,qBAAsB,kBAAMzJ,EAAKyJ,0BACrJjJ,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAM9B,WAAS,EAACzK,UAAU,SAASuG,UAAWN,EAAQ4B,MAClDxB,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,EAACpQ,UAAWN,EAAQ2Q,aAC1BvQ,EAAA/B,EAAAgC,cAACuQ,EAAA,EAAD,CAAOjQ,MAAO,CAACF,OAAQ,SACnBL,EAAA/B,EAAAgC,cAAC2G,GAAD,QAGR5G,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,EAACpQ,UAAWN,EAAQ6Q,gBAC1BzQ,EAAA/B,EAAAgC,cAACuQ,EAAA,EAAD,CAAOjQ,MAAO,CAACF,OAAQ,SACnBL,EAAA/B,EAAAgC,cAAC0P,GAAD,gBAxBA/K,IAAMC,WAyC9B,IAgBM6L,GAAqB3L,YAzB3B,SAAyBxI,GAAO,IAAAyI,EAC6BzI,EAAMD,IAE/D,MAAO,CACH9D,kBAJwBwM,EACpBxM,kBAIJC,0BALwBuM,EACDvM,4BAQJ,SAACwM,GAAD,MAAe,CACtCgL,KAAO,WACHhL,EAAS,CAACxI,KAAM,UAEpBwM,qBAAsB,WAClBhE,EAAS,CAACxI,KAAM,mCAChBoK,GAAWoC,uBACNvB,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,iCAAkCG,UACnD,SAAAmR,GACC9I,EAAS,CAACxI,KAAM,iCAAkCsR,eAMvChJ,CAA6CG,YAjGzD,SAAArF,GAAK,MAAK,CACrB2B,KAAK9E,OAAAK,EAAA,EAAAL,CAAA,CACDkT,SAAU,QACT/P,EAAMuF,YAAYC,GAAG,MAAQ,CAC1BhF,OAAQ,SAGhBkQ,YAAY7T,OAAAK,EAAA,EAAAL,CAAA,CACR4D,MAAO,OACPmF,QAAS,IACR5F,EAAMuF,YAAYC,GAAG,MAAQ,CAC1BsL,UAAW,OAAQrQ,MAAO,QAGlCmQ,eAAe/T,OAAAK,EAAA,EAAAL,CAAA,CACX4D,MAAO,OACPmF,QAAS,IACR5F,EAAMuF,YAAYC,GAAG,MAAQ,CAC1BsL,UAAW,OAAQrQ,MAAO,UA+EkC4E,CAAmBiL,iEChFrFpX,8MACFwD,MAAQ,CACJ6O,UAAW,GACXC,UAAW,GACXC,SAAU,GACVsF,kBAAmB,GACnBC,kBAAmB,GACnBC,SAAU,GACVC,SAAU,GACVC,mBAAoB,GACpBpF,iBAAkB,GAClBqF,2BAA4B,GAC5BC,2BAA4B,GAC5BC,kBAAmB,GACnBC,kBAAmB,GACnBC,eAAgB,GAChBC,eAAgB,GAChBC,cAAe,GACfC,uBAAwB,GACxBC,uBAAwB,GACxBC,cAAe,GACfC,cAAe,GACfC,wBAAyB,GACzBC,sBAAuB,GACvBC,gCAAiC,GACjCC,gCAAiC,GACjCC,uBAAwB,GACxBC,uBAAwB,GACxBC,aAAc,IACdC,QAAQ,KAGZ3D,kBAAoB,WACyB,IAAtCnP,EAAKM,MAAM7G,eAAemD,QACzBoD,EAAKM,MAAM6M,iBAAiBnN,EAAKM,MAAM7G,eAAe,GAAGkF,aAIjE0Q,0BAA4B,SAACC,GACzB,GAAGA,EAAU5V,gBAAkBsG,EAAKM,MAAM5G,cAAe,CACrD,IAAMqZ,EAASzD,EAAU5V,cAAc+P,OAAOuJ,MAAM,KACpDhT,EAAKC,SAAS,CACV8L,UAAWgH,EAAO,GAClB/G,UAAW+G,EAAO,GAClB9G,SAAU8G,EAAO,GACjBxB,kBAAmBwB,EAAO,GAC1BvB,kBAAmBuB,EAAO,GAC1BtB,SAAUsB,EAAO,GACjBrB,SAAUqB,EAAO,GACjBpB,mBAAoBoB,EAAO,GAC3BxG,iBAAkBwG,EAAO,GACzBnB,2BAA4BmB,EAAO,GACnClB,2BAA4BkB,EAAO,IACnCjB,kBAAmBiB,EAAO,IAC1BhB,kBAAmBgB,EAAO,IAC1BF,aAAcE,EAAO,UAKjCE,aAAe,SAAAC,GAAS,IAAAC,EACpBnT,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,OADZiW,EAAA,GAAA9V,OAAAK,EAAA,EAAAL,CAAA8V,EAEKD,EAAME,OAAOC,KAAOH,EAAME,OAAO7U,OAFtClB,OAAAK,EAAA,EAAAL,CAAA8V,EAAA,GAAArV,OAGQoV,EAAME,OAAOC,KAHrB,SAGmC,IAHnChW,OAAAK,EAAA,EAAAL,CAAA8V,EAAA,UAIY,GAJZA,QAQJG,WAAa,SAACC,EAAGC,GAGT,GAFc,IAAIC,OAAO,yBACDC,KAAKH,EAAEH,OAAO7U,OAO/B,CACH,IAEuCoV,EAFjCpV,EAAQ6F,OAAOmP,EAAEH,OAAO7U,OAC9B,GAAa,OAAViV,EAAEI,KAA0B,OAAVJ,EAAEK,KACnB,GAAGtV,EAAQiV,EAAEI,KAAOrV,EAAQiV,EAAEK,IAC1B7T,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,OADZyW,EAAA,GAAAtW,OAAAK,EAAA,EAAAL,CAAAsW,EAAA,GAAA7V,OAEQyV,EAAEH,OAAOC,KAFjB,iBAAAvV,OAEuC0V,EAAEI,IAFzC,UAAA9V,OAEqD0V,EAAEK,MAFvDxW,OAAAK,EAAA,EAAAL,CAAAsW,EAAA,UAGY,GAHZA,UAMD,GAAa,OAAVH,EAAEI,IAAc,CACJ,IAAAE,EAAlB,GAAGvV,EAAQiV,EAAEI,IACT5T,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,OADZ4W,EAAA,GAAAzW,OAAAK,EAAA,EAAAL,CAAAyW,EAAA,GAAAhW,OAEQyV,EAAEH,OAAOC,KAFjB,iBAAAvV,OAEuC0V,EAAEI,MAFzCvW,OAAAK,EAAA,EAAAL,CAAAyW,EAAA,UAGY,GAHZA,UAMD,GAAY,MAATN,EAAEK,IAAa,CACH,IAAAE,EAAlB,GAAGxV,EAAQiV,EAAEK,IACT7T,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,OADZ6W,EAAA,GAAA1W,OAAAK,EAAA,EAAAL,CAAA0W,EAAA,GAAAjW,OAEQyV,EAAEH,OAAOC,KAFjB,iBAAAvV,OAEuC0V,EAAEK,MAFzCxW,OAAAK,EAAA,EAAAL,CAAA0W,EAAA,UAGY,GAHZA,UA1BG,KAAAC,EACXhU,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,OADZ8W,EAAA,GAAA3W,OAAAK,EAAA,EAAAL,CAAA2W,EAAA,GAAAlW,OAEQyV,EAAEH,OAAOC,KAFjB,mCAAAhW,OAAAK,EAAA,EAAAL,CAAA2W,EAAA,UAGY,GAHZA,SAoCZlI,kBAAoB,WAAM,IAAAmI,EACiOjU,EAAK9C,MAApP6O,EADckI,EACdlI,UAAWC,EADGiI,EACHjI,UAAWC,EADRgI,EACQhI,SAAUsF,EADlB0C,EACkB1C,kBAAmBC,EADrCyC,EACqCzC,kBAAmBC,EADxDwC,EACwDxC,SAAUC,EADlEuC,EACkEvC,SAAUC,EAD5EsC,EAC4EtC,mBAAoBpF,EADhG0H,EACgG1H,iBAAkBqF,EADlHqC,EACkHrC,2BAA4BC,EAD9IoC,EAC8IpC,2BAA4BC,EAD1KmC,EAC0KnC,kBAAmBC,EAD7LkC,EAC6LlC,kBAAmBc,EADhNoB,EACgNpB,aACtO7S,EAAKM,MAAMwL,kBAAkB9L,EAAKM,MAAM7G,eAAgBsS,EAAWC,EAAWC,EAAUsF,EAAmBC,EAAmBC,EAAUC,EAAUC,EAAoBpF,EAAkBqF,EAA4BC,EAA4BC,EAAmBC,EAAmBc,4EAGjR,IAAA1S,EAAAC,KACEG,EAAWH,KAAKE,MAAhBC,QACP,OACII,EAAA/B,EAAAgC,cAACgG,EAAA,SAAD,KACIjG,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAM9B,WAAS,EAACzK,UAAU,SAASuG,UAAWN,EAAQ4B,MAClDxB,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,EAACpQ,UAAWN,EAAQ2T,WAE1B,CACI,CACIvS,IAAK,YACLwS,UAAW,MACXP,KAAM,GACNC,IAAK,GACLtV,MAAO,GAEX,CACIoD,IAAK,YACLwS,UAAW,MACXP,KAAM,IACNC,IAAK,IACLtV,MAAO,GAEX,CACIoD,IAAK,WACLwS,UAAW,IACXP,IAAK,EACLC,IAAK,KACLtV,MAAO,GAEX,CACIoD,IAAK,wBACLwS,UAAW,MACXP,KAAM,GACNC,IAAK,EACLtV,MAAO,GAEX,CACIoD,IAAK,wBACLwS,UAAW,MACXP,IAAK,EACLC,IAAK,GACLtV,MAAO,GAEX,CACIoD,IAAK,YACLwS,UAAW,IACXP,IAAK,EACLC,IAAK,KACLtV,MAAO,GAEX,CACIoD,IAAK,YACLwS,UAAW,IACXP,IAAK,EACLC,IAAK,KACLtV,MAAO,GAEX,CACIoD,IAAK,sBACLwS,UAAW,MACXP,IAAK,GACLC,IAAK,GACLtV,MAAO,GAEX,CACIoD,IAAK,oBACLwS,UAAW,MACXP,KAAM,GACNC,IAAK,GACLtV,MAAO,GAEX,CACIoD,IAAK,kCACLwS,UAAW,IACXP,IAAK,EACLC,IAAK,KACLtV,MAAO,GAEX,CACIoD,IAAK,kCACLwS,UAAW,IACXP,IAAK,EACLC,IAAK,KACLtV,MAAO,IAEX,CACIoD,IAAK,sBACLwS,UAAW,UACXP,IAAK,EACLC,IAAK,KACLtV,MAAO,IAEX,CACIoD,IAAK,sBACLwS,UAAW,UACXP,IAAK,EACLC,IAAK,KACLtV,MAAO,KAEbN,IAAI,SAAAuV,GACF,OAAO7S,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACHzS,IAAK6R,EAAE7R,IACPd,UAAWN,EAAQ8T,MACnBzQ,GAAI4P,EAAE7R,IACN0R,KAAMG,EAAE7R,IAAI2S,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAC5C/Q,MAAOiQ,EAAE7R,IACTpD,MAAO4B,EAAKjD,MAAMsW,EAAE7R,IAAI2S,QAAQ,KAAM,IAAIA,QAAQ,KAAM,KACxDC,SAAU,SAAChB,GAAD,OAAOpT,EAAK8S,aAAaM,IACnC7C,OAAO,SACP3N,QAAQ,WACRyR,gBAAiB,CAAEC,QAAQ,GAC3B1S,SAAU5B,EAAKG,MAAM1G,sBAAwBuG,EAAKG,MAAMxG,qBACxD4a,WAAY,CACRC,aAAchU,EAAA/B,EAAAgC,cAACgU,GAAA,EAAD,CAAgBtS,SAAS,OAAOkR,EAAEW,YAEpDzF,MAA2E,KAApEvO,EAAKjD,MAAL,GAAAY,OAAc0V,EAAE7R,IAAI2S,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAApD,UACPO,WAAY1U,EAAKjD,MAAL,GAAAY,OAAc0V,EAAE7R,IAAI2S,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAApD,UACZQ,OAAQ,SAACvB,GAAD,OAAOpT,EAAKmT,WAAWC,EAAGC,QAI1C7S,EAAA/B,EAAAgC,cAACmU,GAAA,EAAD,CAAkBhT,SAAU3B,KAAKE,MAAM1G,sBAAwBwG,KAAKE,MAAMxG,qBAAsB+G,UAAWN,EAAQ8T,MAC/GW,QACIrU,EAAA/B,EAAAgC,cAACqU,GAAA,EAAD,CAAU1S,MAAM,UAAU2S,QAAqC,MAA5B9U,KAAKlD,MAAM2V,aAAsBjR,QAAS,kBAAMzB,EAAKF,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GAAkB8C,EAAKjD,MAAvB,CAA8B2V,aAA0C,MAA5B1S,EAAKjD,MAAM2V,aAAuB,IAAM,UAE3KtP,MAAM,wBAEV5C,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQpO,MAAM,UAAUR,UAAQ,EAACgB,QAAQ,YAAYlC,UAAWN,EAAQ8T,OAAxE,mCAEJ1T,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,EAAC/P,MAAO,CAAC4O,UAAW,WAC1BnP,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQpO,MAAM,UAAUR,SAAU3B,KAAKE,MAAM1G,sBAAwBwG,KAAKE,MAAMxG,uBAAyBsG,KAAKlD,MAAM4V,OAAQ/P,QAAQ,YAAYnB,QAAS,kBAAMzB,EAAK2L,qBAAqB5K,MAAO,CAAEwP,OAAQ,KAA1M,kBApPInL,IAAMC,WAqQlC,IAiBM2P,GAAyBzP,YA1B/B,SAAyBxI,GAAO,IAAAyI,EACqBzI,EAAMD,IAEvD,MAAO,CACHxD,eAJwBkM,EACpBlM,eAIJG,qBALwB+L,EACJ/L,uBAQD,SAACgM,GAAD,MAAe,CACtCkG,kBAAmB,SAACrS,EAAgBsS,EAAWC,EAAWC,EAAUC,EAAWC,EAAWC,EAAcC,EAAOC,EAAkBC,EAAkBC,EAAuBC,EAAuBC,EAAeC,EAAYkG,GACxNjN,EAAS,CAACxI,KAAM,0BAChB3D,EAAewE,IAAI,SAAAyG,GACfkB,EAAS,CAACxI,KAAM,8BAA+BsH,MAC/C8C,GAAWsE,kBAAkBpH,EAAE/F,SAAUoN,EAAWC,EAAWC,EAAUC,EAAWC,EAAWC,EAAcC,EAAOC,EAAkBC,EAAkBC,EAAuBC,EAAuBC,EAAeC,EAAYkG,GAC5NxK,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,iCACjB,SAAAsR,GACC9I,EAAS,CAACxI,KAAM,uCAQLsI,CAA6CG,YAzS7D,SAAArF,GAAK,MAAK,CACrB2B,KAAM,GACN+R,UAAW,CACPpO,QAAS,OACT2K,cAAe,MACfF,SAAU,OACVnK,QAAS,GACT2J,SAAU,QAEdsE,MAAMhX,OAAAK,EAAA,EAAAL,CAAA,CACF4D,MAAO,MACPyP,OAAQ,sBACPlQ,EAAMuF,YAAYC,GAAG,MAAQ,CAC1B/E,MAAO,SACPyP,OAAQ,qBA2RwD7K,CAAmBnM,KCtRzF0b,8MACFlY,MAAQ,CACJ4P,cAAe,GACfC,cAAe,GACfE,eAAgB,GAChBC,mBAAoB,GACpBF,eAAgB,GAChB8F,QAAQ,KAGZ3D,kBAAoB,WACwB,IAArCnP,EAAKM,MAAM7G,eAAemD,QACzBoD,EAAKM,MAAM8M,cAAcpN,EAAKM,MAAM7G,eAAe,GAAGkF,aAI9D0Q,0BAA4B,SAACC,GACzB,GAAGA,EAAU3V,aAAeqG,EAAKM,MAAM3G,WAAY,CAC/C,IAAMoZ,EAASzD,EAAU3V,WAAW8P,OAAOuJ,MAAM,KACjDhT,EAAKC,SAAS,CACV6M,cAAeiG,EAAO,GACtBhG,cAAegG,EAAO,GACtB9F,eAAgB8F,EAAO,GACvB7F,mBAAoB6F,EAAO,GAC3B/F,eAAgB+F,EAAO,SAKnCE,aAAe,SAAAC,GAAS,IAAAC,EACpBnT,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,OADZiW,EAAA,GAAA9V,OAAAK,EAAA,EAAAL,CAAA8V,EAEKD,EAAME,OAAOC,KAAOH,EAAME,OAAO7U,OAFtClB,OAAAK,EAAA,EAAAL,CAAA8V,EAAA,GAAArV,OAGQoV,EAAME,OAAOC,KAHrB,SAGmC,IAHnChW,OAAAK,EAAA,EAAAL,CAAA8V,EAAA,UAIY,GAJZA,QAQJG,WAAa,SAACC,EAAGC,GACa,IAAAQ,EAA1B,GAAsB,KAAnBT,EAAEH,OAAO7U,MACRyB,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,OADZ8W,EAAA,GAAA3W,OAAAK,EAAA,EAAAL,CAAA2W,EAEKT,EAAEH,OAAOC,KAAOrT,EAAKM,MAAM5G,cAAc+P,OAAOuJ,MAAM,KAAKQ,EAAEjV,QAFlElB,OAAAK,EAAA,EAAAL,CAAA2W,EAAA,GAAAlW,OAGQyV,EAAEH,OAAOC,KAHjB,SAG+B,IAH/BhW,OAAAK,EAAA,EAAAL,CAAA2W,EAAA,UAIY,GAJZA,UASA,GAFc,IAAIP,OAAO,yBACDC,KAAKH,EAAEH,OAAO7U,OAO/B,CACH,IAEuCuV,EAFjCvV,EAAQ6F,OAAOmP,EAAEH,OAAO7U,OAC9B,GAAa,OAAViV,EAAEI,KAA0B,OAAVJ,EAAEK,KACnB,GAAGtV,EAAQiV,EAAEI,KAAOrV,EAAQiV,EAAEK,IAC1B7T,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,OADZ4W,EAAA,GAAAzW,OAAAK,EAAA,EAAAL,CAAAyW,EAAA,GAAAhW,OAEQyV,EAAEH,OAAOC,KAFjB,iBAAAvV,OAEuC0V,EAAEI,IAFzC,UAAA9V,OAEqD0V,EAAEK,MAFvDxW,OAAAK,EAAA,EAAAL,CAAAyW,EAAA,UAGY,GAHZA,UAMD,GAAa,OAAVN,EAAEI,IAAc,CACJ,IAAAG,EAAlB,GAAGxV,EAAQiV,EAAEI,IACT5T,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,OADZ6W,EAAA,GAAA1W,OAAAK,EAAA,EAAAL,CAAA0W,EAAA,GAAAjW,OAEQyV,EAAEH,OAAOC,KAFjB,iBAAAvV,OAEuC0V,EAAEI,MAFzCvW,OAAAK,EAAA,EAAAL,CAAA0W,EAAA,UAGY,GAHZA,UAMD,GAAY,MAATP,EAAEK,IAAa,CACH,IAAAwB,EAAlB,GAAG9W,EAAQiV,EAAEK,IACT7T,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,OADZmY,EAAA,GAAAhY,OAAAK,EAAA,EAAAL,CAAAgY,EAAA,GAAAvX,OAEQyV,EAAEH,OAAOC,KAFjB,iBAAAvV,OAEuC0V,EAAEK,MAFzCxW,OAAAK,EAAA,EAAAL,CAAAgY,EAAA,UAGY,GAHZA,UA1BG,KAAA1B,EACX3T,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,OADZyW,EAAA,GAAAtW,OAAAK,EAAA,EAAAL,CAAAsW,EAAA,GAAA7V,OAEQyV,EAAEH,OAAOC,KAFjB,mCAAAhW,OAAAK,EAAA,EAAAL,CAAAsW,EAAA,UAGY,GAHZA,SAqCZ9G,eAAiB,WAAM,IAAAoH,EAC0EjU,EAAK9C,MAA1F4P,EADWmH,EACXnH,cAAeC,EADJkH,EACIlH,cAAeC,EADnBiH,EACmBjH,eAAgBC,EADnCgH,EACmChH,eAAgBC,EADnD+G,EACmD/G,mBACtElN,EAAKM,MAAMuM,eAAe7M,EAAKM,MAAM7G,eAAgBqT,EAAeC,EAAeC,EAAgBC,EAAgBC,4EAG9G,IAAA/M,EAAAC,KACEG,EAAWH,KAAKE,MAAhBC,QACP,OACII,EAAA/B,EAAAgC,cAACgG,EAAA,SAAD,KACIjG,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAM9B,WAAS,EAACzK,UAAU,SAASuG,UAAWN,EAAQ4B,MAClDxB,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,EAACpQ,UAAWN,EAAQ2T,WAE1B,CAAC,kBAAmB,kBAAmB,mBAAoB,uBAAwB,oBAAoBjW,IAAI,SAAAuV,GACvG,OAAO7S,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACHzS,IAAK6R,EACL3S,UAAWN,EAAQ8T,MACnBzQ,GAAI4P,EACJH,KAAMG,EAAEc,QAAQ,KAAM,IACtB/Q,MAAOiQ,EACPjV,MAAO4B,EAAKjD,MAAMsW,EAAEc,QAAQ,KAAM,KAClCC,SAAU,SAAChB,GAAD,OAAOpT,EAAK8S,aAAaM,IACnC7C,OAAO,SACP3N,QAAQ,WACRyR,gBAAiB,CAAEC,QAAQ,GAC3B1S,SAAU5B,EAAKG,MAAMzG,mBAAqBsG,EAAKG,MAAMvG,kBACrD2a,WAAY,CACRC,aAAchU,EAAA/B,EAAAgC,cAACgU,GAAA,EAAD,CAAgBtS,SAAS,OAAzB,aAM9B3B,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,EAAC/P,MAAO,CAACF,OAAQ,GAAI8O,UAAW,WACtCnP,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQpO,MAAM,UAAUR,SAAU3B,KAAKE,MAAMzG,mBAAqBuG,KAAKE,MAAMvG,kBAAmBgJ,QAAQ,YAAYnB,QAAS,kBAAMzB,EAAK0M,kBAAkB3L,MAAO,CAAEwP,OAAQ,KAA3K,kBAxHCnL,IAAMC,WA2I/B,IAgBM8P,GAAsB5P,YA3B5B,SAAyBxI,GAAO,IAAAyI,EACiDzI,EAAMD,IAEnF,MAAO,CACHxD,eAJwBkM,EACpBlM,eAIJE,WALwBgM,EACJhM,WAKpBE,kBANwB8L,EACQ9L,kBAMhCE,kBAPwB4L,EAC2B5L,oBAUhC,SAAC6L,GAAD,MAAe,CACtCiH,eAAgB,SAACpT,EAAgBqT,EAAeC,EAAeC,EAAgBC,EAAgBC,GAC3FtH,EAAS,CAACxI,KAAM,0BAChB3D,EAAewE,IAAI,SAAAyG,GACfkB,EAAS,CAACxI,KAAM,2BAA4BsH,MAC5C8C,GAAWqF,eAAenI,EAAE/F,SAAUmO,EAAeC,EAAeC,EAAgBC,EAAgBC,GAC/F7E,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,8BACjB,SAAAsR,GACC9I,EAAS,CAACxI,KAAM,oCAORsI,CAA6CG,YA9K1D,SAAArF,GAAK,MAAK,CACrB2B,KAAM,GACN+R,UAAW,CACPpO,QAAS,OACT2K,cAAe,MACfF,SAAU,OACVnK,QAAS,GACT2J,SAAU,QAEdsE,MAAMhX,OAAAK,EAAA,EAAAL,CAAA,CACF4D,MAAO,MACPyP,OAAQ,sBACPlQ,EAAMuF,YAAYC,GAAG,MAAQ,CAC1B/E,MAAO,SACPyP,OAAQ,qBAgKqD7K,CAAmBuP,yBChItFG,8MACFtC,aAAe,SAACC,EAAO3U,GACnByB,EAAKM,MAAMkV,UAAU,CAAEjX,mFAGlB,IAAA8B,EAC8DD,KAAKE,MAAhEC,EADHF,EACGE,QAAS7H,EADZ2H,EACY3H,eAAgBe,EAD5B4G,EAC4B5G,eAAgBS,EAD5CmG,EAC4CnG,cAEjD,OACAyG,EAAA/B,EAAAgC,cAAA,OAAKC,UAAWN,EAAQ4B,MACpBxB,EAAA/B,EAAAgC,cAAA,OAAKC,UAAWN,EAAQkV,QACxB9U,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,GACNtQ,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,MAChBpC,EAAA/B,EAAAgC,cAAC8B,EAAA,EAAD,CAAYC,aAAW,OAAOf,QAASxB,KAAKE,MAAMoV,MAC9C/U,EAAA/B,EAAAgC,cAAC+U,GAAA/W,EAAD,CAAU0E,SAAS,WAF3B,qBAQJ3C,EAAA/B,EAAAgC,cAAA,OAAKC,UAAWN,EAAQwH,MACxBpH,EAAA/B,EAAAgC,cAAA,OAAKC,UAAWN,EAAQ9G,gBAExBkH,EAAA/B,EAAAgC,cAACyB,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,aAC5B5B,EAAA/B,EAAAgC,cAAC6B,EAAA,EAAD,CAASvB,MAAO,CAACoQ,UAAW,IAAKsE,gBAAc,GAC/CjV,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,YAAY7B,MAAO,CAACwP,OAAQ,SAAhD,uBAMAjX,EAAewE,IAAI,SAAAyG,GAAC,OACpB/D,EAAA/B,EAAAgC,cAACqC,EAAA,EAAD,CAAMtB,IAAK+C,EAAE/F,SAAU4E,MAAK,SAAAzF,OAAW4G,EAAEmR,WAAahV,UAAWN,EAAQuV,KAAM5U,MAAOhH,EAAc2E,OAAO,SAAAH,GAAC,OAAIA,EAAEqX,QAAQpY,MAAQ+G,EAAE/F,WAAU,GAAKzE,EAAc2E,OAAO,SAAAH,GAAC,OAAIA,EAAEqX,QAAQpY,MAAQ+G,EAAE/F,WAAU,GAAGqX,QAAU,CAAC5S,gBAAiB,SAAW,CAACA,gBAAiB,OAAS,QAGpRzC,EAAA/B,EAAAgC,cAAA,OAAKC,UAAWN,EAAQ0V,MACxBtV,EAAA/B,EAAAgC,cAACyB,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,aAC5B5B,EAAA/B,EAAAgC,cAACsV,GAAA,EAAD,CAAM3X,MAAO7F,EAAgB6b,SAAUnU,KAAK6S,aAAc1S,QAAS,CAAC4V,UAAW5V,EAAQ6V,gBACnFzV,EAAA/B,EAAAgC,cAACyV,GAAA,EAAD,CAAK9S,MAAM,iBAAiBhD,QAAS,CAACuB,SAAUvB,EAAQuB,YACxDnB,EAAA/B,EAAAgC,cAACyV,GAAA,EAAD,CAAK9S,MAAM,cAAchD,QAAS,CAACuB,SAAUvB,EAAQuB,cAGzC,IAAnBpJ,GAAwBiI,EAAA/B,EAAAgC,cAACuU,GAAD,MACL,IAAnBzc,GAAwBiI,EAAA/B,EAAAgC,cAAC0U,GAAD,gBA3CL/P,IAAMC,WA6DtC,IAOM8Q,GAA6B5Q,YAjBnC,SAAyBxI,GAAO,IAAAyI,EAC8BzI,EAAMD,IAEhE,MAAO,CACHvE,eAJwBiN,EACpBjN,eAIJe,eALwBkM,EACJlM,eAKpBS,cANwByL,EACYzL,gBASjB,SAAC0L,GAAD,MAAe,CACtC4P,UAAW,SAACjX,GACRqH,EAAS,CAACxI,KAAM,kBAAmBmB,aAKRmH,CAA6CG,YA5GjE,SAAArF,GAAK,MAAK,CACrB2B,KAAM,CACJiB,gBAAiB5C,EAAM+V,QAAQC,WAAWrR,MAC1CuL,OAAQ,GACR5K,QAAS,OACT2K,cAAe,UAEjB1I,KAAM,CACFjC,QAAS,OACT2K,cAAe,OAEnB2F,cAAe,CACbhT,gBAAiB,WAEnBtB,SAAU,CACRsB,gBAAiB,UACjBb,MAAO,UACPc,WAAY,IACZC,SAAU,IAEZ7J,eAAgB,CACZwH,MAAO,MACPyP,OAAQ,IAEZuF,KAAM,CACFhV,MAAO,MACPmF,QAAS,GACTqQ,UAAW,oCAEfX,KAAM,CACFpF,OAAQ,IAEZgG,MAAO,CACHtT,gBAAiB,SAErBuT,IAAK,CACDvT,gBAAiB,SAwEuDyC,CAAmB0P,KC9F7FA,8MACFrY,MAAQ,CACJ6O,UAAW,GACXC,UAAW,GACXC,SAAU,GACVsF,kBAAmB,GACnBC,kBAAmB,GACnBC,SAAU,GACVC,SAAU,GACVC,mBAAoB,GACpBpF,iBAAkB,GAClBqF,2BAA4B,GAC5BC,2BAA4B,GAC5BC,kBAAmB,GACnBC,kBAAmB,GACnBC,eAAgB,GAChBC,eAAgB,GAChBC,cAAe,GACfC,uBAAwB,GACxBC,uBAAwB,GACxBC,cAAe,GACfC,cAAe,GACfC,wBAAyB,GACzBC,sBAAuB,GACvBC,gCAAiC,GACjCC,gCAAiC,GACjCC,uBAAwB,GACxBC,uBAAwB,GACxB9F,cAAe,GACfC,cAAe,GACfE,eAAgB,GAChBC,mBAAoB,GACpBF,eAAgB,GAChB6F,aAAc,IACdC,QAAQ,KAGZ3D,kBAAoB,WACwB,IAArCnP,EAAKM,MAAM7G,eAAemD,SACzBoD,EAAKM,MAAM6M,iBAAiBnN,EAAKM,MAAM7G,eAAe,GAAGkF,UACzDqB,EAAKM,MAAM8M,cAAcpN,EAAKM,MAAM7G,eAAe,GAAGkF,cAI9D0Q,0BAA4B,SAACC,GACzB,GAAGA,EAAU5V,gBAAkBsG,EAAKM,MAAM5G,eACnC4V,EAAU5V,cAAcsG,EAAKM,MAAM7G,eAAe,GAAGkF,UAAW,CAC/D,IAAMoU,EAASzD,EAAU5V,cAAcsG,EAAKM,MAAM7G,eAAe,GAAGkF,UAAU8K,OAAOuJ,MAAM,KAC3FhT,EAAKC,SAAS,CACV8L,UAAWgH,EAAO,GAClB/G,UAAW+G,EAAO,GAClB9G,SAAU8G,EAAO,GACjBxB,kBAAmBwB,EAAO,GAC1BvB,kBAAmBuB,EAAO,GAC1BtB,SAAUsB,EAAO,GACjBrB,SAAUqB,EAAO,GACjBpB,mBAAoBoB,EAAO,GAC3BxG,iBAAkBwG,EAAO,GACzBnB,2BAA4BmB,EAAO,GACnClB,2BAA4BkB,EAAO,IACnCjB,kBAAmBiB,EAAO,IAC1BhB,kBAAmBgB,EAAO,IAC1BF,aAAcE,EAAO,MAIjC,GAAGzD,EAAU3V,aAAeqG,EAAKM,MAAM3G,YAChC2V,EAAU3V,WAAWqG,EAAKM,MAAM7G,eAAe,GAAGkF,UAAW,CAC5D,IAAMoU,EAASzD,EAAU3V,WAAWqG,EAAKM,MAAM7G,eAAe,GAAGkF,UAAU8K,OAAOuJ,MAAM,KACxFhT,EAAKC,SAAS,CACV6M,cAAeiG,EAAO,GACtBhG,cAAegG,EAAO,GACtB9F,eAAgB8F,EAAO,GACvB7F,mBAAoB6F,EAAO,GAC3B/F,eAAgB+F,EAAO,SAMvCE,aAAe,SAAAC,GAAS,IAAAC,EACpBnT,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,OADZiW,EAAA,GAAA9V,OAAAK,EAAA,EAAAL,CAAA8V,EAEKD,EAAME,OAAOC,KAAOH,EAAME,OAAO7U,OAFtClB,OAAAK,EAAA,EAAAL,CAAA8V,EAAA,GAAArV,OAGQoV,EAAME,OAAOC,KAHrB,SAGmC,IAHnChW,OAAAK,EAAA,EAAAL,CAAA8V,EAAA,UAIY,GAJZA,QAQJyD,gBAAkB,SAAC1D,GAAU,IAAAc,EACzBhU,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,OADZ8W,EAAA,GAAA3W,OAAAK,EAAA,EAAAL,CAAA2W,EAEKd,EAAME,OAAOC,KAAOH,EAAME,OAAO7U,OAFtClB,OAAAK,EAAA,EAAAL,CAAA2W,EAAA,GAAAlW,OAGQoV,EAAME,OAAOC,KAHrB,SAGmC,IAHnChW,OAAAK,EAAA,EAAAL,CAAA2W,EAAA,UAIY,GAJZA,QAQJV,WAAa,SAACC,EAAGC,GACa,IAAAG,EAA1B,GAAsB,KAAnBJ,EAAEH,OAAO7U,MACRyB,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,OADZyW,EAAA,GAAAtW,OAAAK,EAAA,EAAAL,CAAAsW,EAEKJ,EAAEH,OAAOC,KAAOrT,EAAKM,MAAM5G,cAAc+P,OAAOuJ,MAAM,KAAKQ,EAAEjV,QAFlElB,OAAAK,EAAA,EAAAL,CAAAsW,EAAA,GAAA7V,OAGQyV,EAAEH,OAAOC,KAHjB,SAG+B,IAH/BhW,OAAAK,EAAA,EAAAL,CAAAsW,EAAA,UAIY,GAJZA,UASA,GAFc,IAAIF,OAAO,yBACDC,KAAKH,EAAEH,OAAO7U,OAO/B,CACH,IAEuCwV,EAFjCxV,EAAQ6F,OAAOmP,EAAEH,OAAO7U,OAC9B,GAAa,OAAViV,EAAEI,KAA0B,OAAVJ,EAAEK,KACnB,GAAGtV,EAAQiV,EAAEI,KAAOrV,EAAQiV,EAAEK,IAC1B7T,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,OADZ6W,EAAA,GAAA1W,OAAAK,EAAA,EAAAL,CAAA0W,EAAA,GAAAjW,OAEQyV,EAAEH,OAAOC,KAFjB,iBAAAvV,OAEuC0V,EAAEI,IAFzC,UAAA9V,OAEqD0V,EAAEK,MAFvDxW,OAAAK,EAAA,EAAAL,CAAA0W,EAAA,UAGY,GAHZA,UAMD,GAAa,OAAVP,EAAEI,IAAc,CACJ,IAAAyB,EAAlB,GAAG9W,EAAQiV,EAAEI,IACT5T,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,OADZmY,EAAA,GAAAhY,OAAAK,EAAA,EAAAL,CAAAgY,EAAA,GAAAvX,OAEQyV,EAAEH,OAAOC,KAFjB,iBAAAvV,OAEuC0V,EAAEI,MAFzCvW,OAAAK,EAAA,EAAAL,CAAAgY,EAAA,UAGY,GAHZA,UAMD,GAAY,MAAT7B,EAAEK,IAAa,CACH,IAAAgD,EAAlB,GAAGtY,EAAQiV,EAAEK,IACT7T,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,OADZ2Z,EAAA,GAAAxZ,OAAAK,EAAA,EAAAL,CAAAwZ,EAAA,GAAA/Y,OAEQyV,EAAEH,OAAOC,KAFjB,iBAAAvV,OAEuC0V,EAAEK,MAFzCxW,OAAAK,EAAA,EAAAL,CAAAwZ,EAAA,UAGY,GAHZA,UA1BG,KAAA/C,EACX9T,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,OADZ4W,EAAA,GAAAzW,OAAAK,EAAA,EAAAL,CAAAyW,EAAA,GAAAhW,OAEQyV,EAAEH,OAAOC,KAFjB,mCAAAhW,OAAAK,EAAA,EAAAL,CAAAyW,EAAA,UAGY,GAHZA,SAqCZhI,kBAAoB,WAAM,IAAAmI,EACiOjU,EAAK9C,MAApP6O,EADckI,EACdlI,UAAWC,EADGiI,EACHjI,UAAWC,EADRgI,EACQhI,SAAUsF,EADlB0C,EACkB1C,kBAAmBC,EADrCyC,EACqCzC,kBAAmBC,EADxDwC,EACwDxC,SAAUC,EADlEuC,EACkEvC,SAAUC,EAD5EsC,EAC4EtC,mBAAoBpF,EADhG0H,EACgG1H,iBAAkBqF,EADlHqC,EACkHrC,2BAA4BC,EAD9IoC,EAC8IpC,2BAA4BC,EAD1KmC,EAC0KnC,kBAAmBC,EAD7LkC,EAC6LlC,kBAAmBc,EADhNoB,EACgNpB,aACtO7S,EAAKM,MAAMwL,kBAAkB9L,EAAKM,MAAM7G,eAAgBsS,EAAWC,EAAWC,EAAUsF,EAAmBC,EAAmBC,EAAUC,EAAUC,EAAoBpF,EAAkBqF,EAA4BC,EAA4BC,EAAmBC,EAAmBc,MAG1RhG,eAAiB,WAAM,IAAAiK,EAC0E9W,EAAK9C,MAA1F4P,EADWgK,EACXhK,cAAeC,EADJ+J,EACI/J,cAAeC,EADnB8J,EACmB9J,eAAgBC,EADnC6J,EACmC7J,eAAgBC,EADnD4J,EACmD5J,mBACtElN,EAAKM,MAAMuM,eAAe7M,EAAKM,MAAM7G,eAAgBqT,EAAeC,EAAeC,EAAgBC,EAAgBC,4EAG9G,IAAA/M,EAAAC,KACEG,EAAWH,KAAKE,MAAhBC,QACP,OACII,EAAA/B,EAAAgC,cAACgG,EAAA,SAAD,KACIjG,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAM9B,WAAS,EAACzK,UAAU,SAASuG,UAAWN,EAAQ4B,MAClDxB,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,EAAC/P,MAAO,CAACF,OAAQ,GAAI+V,aAAc,0BACzCpW,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,MAChBpC,EAAA/B,EAAAgC,cAAC8B,EAAA,EAAD,CAAYC,aAAW,OAAOf,QAASxB,KAAKE,MAAMoV,MAC9C/U,EAAA/B,EAAAgC,cAAC+U,GAAA/W,EAAD,CAAU0E,SAAS,WAF3B,oBAOJ3C,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,KAAK7B,MAAO,CAAC8V,YAAa,oBAA9C,gBAGArW,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,EAACpQ,UAAWN,EAAQ2T,WAG1B,CACI,CACIvS,IAAK,YACLwS,UAAW,MACXP,KAAM,GACNC,IAAK,GACLtV,MAAO,GAEX,CACIoD,IAAK,YACLwS,UAAW,MACXP,KAAM,IACNC,IAAK,IACLtV,MAAO,GAEX,CACIoD,IAAK,WACLwS,UAAW,IACXP,IAAK,EACLC,IAAK,KACLtV,MAAO,GAEX,CACIoD,IAAK,wBACLwS,UAAW,MACXP,KAAM,GACNC,IAAK,EACLtV,MAAO,GAEX,CACIoD,IAAK,wBACLwS,UAAW,MACXP,IAAK,EACLC,IAAK,GACLtV,MAAO,GAEX,CACIoD,IAAK,YACLwS,UAAW,IACXP,IAAK,EACLC,IAAK,KACLtV,MAAO,GAEX,CACIoD,IAAK,YACLwS,UAAW,IACXP,IAAK,EACLC,IAAK,KACLtV,MAAO,GAEX,CACIoD,IAAK,sBACLwS,UAAW,MACXP,IAAK,GACLC,IAAK,GACLtV,MAAO,GAEX,CACIoD,IAAK,oBACLwS,UAAW,MACXP,KAAM,GACNC,IAAK,GACLtV,MAAO,GAEX,CACIoD,IAAK,kCACLwS,UAAW,IACXP,IAAK,EACLC,IAAK,KACLtV,MAAO,GAEX,CACIoD,IAAK,kCACLwS,UAAW,IACXP,IAAK,EACLC,IAAK,KACLtV,MAAO,IAEX,CACIoD,IAAK,sBACLwS,UAAW,UACXP,IAAK,EACLC,IAAK,KACLtV,MAAO,IAEX,CACIoD,IAAK,sBACLwS,UAAW,UACXP,IAAK,EACLC,IAAK,KACLtV,MAAO,KAEbN,IAAI,SAAAuV,GACF,OAAO7S,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACHzS,IAAK6R,EAAE7R,IACPd,UAAWN,EAAQ8T,MACnBzQ,GAAI4P,EAAE7R,IACN0R,KAAMG,EAAE7R,IAAI2S,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAC5C/Q,MAAOiQ,EAAE7R,IACTpD,MAAO4B,EAAKjD,MAAMsW,EAAE7R,IAAI2S,QAAQ,KAAM,IAAIA,QAAQ,KAAM,KACxDC,SAAU,SAAChB,GAAD,OAAOpT,EAAK8S,aAAaM,IACnC7C,OAAO,SACP3N,QAAQ,WACRyR,gBAAiB,CAAEC,QAAQ,GAC3B1S,SAAU5B,EAAKG,MAAM1G,sBAAwBuG,EAAKG,MAAMxG,qBACxD4a,WAAY,CACRC,aAAchU,EAAA/B,EAAAgC,cAACgU,GAAA,EAAD,CAAgBtS,SAAS,OAAOkR,EAAEW,YAEpDzF,MAA2E,KAApEvO,EAAKjD,MAAL,GAAAY,OAAc0V,EAAE7R,IAAI2S,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAApD,UACPO,WAAY1U,EAAKjD,MAAL,GAAAY,OAAc0V,EAAE7R,IAAI2S,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAApD,UACZQ,OAAQ,SAACvB,GAAD,OAAOpT,EAAKmT,WAAWC,EAAGC,QAI1C7S,EAAA/B,EAAAgC,cAACmU,GAAA,EAAD,CAAkBhT,SAAU3B,KAAKE,MAAM1G,sBAAwBwG,KAAKE,MAAMxG,qBAAsBoH,MAAO,CAAEwP,OAAQ,GAAIvP,WAAY,QAC7H6T,QACIrU,EAAA/B,EAAAgC,cAACqU,GAAA,EAAD,CAAU1S,MAAM,UAAU2S,QAAqC,MAA5B9U,KAAKlD,MAAM2V,aAAsBjR,QAAS,kBAAMzB,EAAKF,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GAAkB8C,EAAKjD,MAAvB,CAA8B2V,aAA0C,MAA5B1S,EAAKjD,MAAM2V,aAAuB,IAAM,UAE3KtP,MAAM,wBAEV5C,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQpO,MAAM,UAAUR,UAAQ,EAACgB,QAAQ,YAAY7B,MAAO,CAAEwP,OAAQ,KAAtE,mCAEJ/P,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,EAAC/P,MAAO,CAACF,OAAQ,GAAI8O,UAAW,SAAUiH,aAAc,0BAC9DpW,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQpO,MAAM,UAAUR,SAAU3B,KAAKE,MAAM1G,sBAAwBwG,KAAKE,MAAMxG,uBAAyBsG,KAAKlD,MAAM4V,OAAQ/P,QAAQ,YAAYnB,QAAS,kBAAMzB,EAAK2L,qBAAqB5K,MAAO,CAAEwP,OAAQ,KAA1M,SAEJ/P,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,KAAK7B,MAAO,CAAC8V,YAAa,oBAA9C,uBAGArW,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,EAACpQ,UAAWN,EAAQ2T,WAG1B,CAAC,kBAAmB,kBAAmB,mBAAoB,uBAAwB,oBAAoBjW,IAAI,SAAAuV,GACvG,OAAO7S,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACHzS,IAAK6R,EACL3S,UAAWN,EAAQ8T,MACnBzQ,GAAI4P,EACJH,KAAMG,EAAEc,QAAQ,KAAM,IACtB/Q,MAAOiQ,EACPjV,MAAO4B,EAAKjD,MAAMsW,EAAEc,QAAQ,KAAM,KAClCC,SAAU,SAAChB,GAAD,OAAOpT,EAAK8S,aAAaM,IACnC7C,OAAO,SACP3N,QAAQ,WACRyR,gBAAiB,CAAEC,QAAQ,GAC3B1S,SAAU5B,EAAKG,MAAMzG,mBAAqBsG,EAAKG,MAAMvG,kBACrD2a,WAAY,CACRC,aAAchU,EAAA/B,EAAAgC,cAACgU,GAAA,EAAD,CAAgBtS,SAAS,OAAzB,aAM9B3B,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,EAAC/P,MAAO,CAACF,OAAQ,GAAI8O,UAAW,WACtCnP,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQpO,MAAM,UAAUR,SAAU3B,KAAKE,MAAMzG,mBAAqBuG,KAAKE,MAAMvG,kBAAmBgJ,QAAQ,YAAYnB,QAAS,kBAAMzB,EAAK0M,kBAAkB3L,MAAO,CAAEwP,OAAQ,KAA3K,kBAxUQnL,IAAMC,WA8VtC,IA8DM8Q,GAA6B5Q,YA5EnC,SAAyBxI,GAAO,IAAAyI,EAC4GzI,EAAMD,IAE9I,MAAO,CACHxD,eAJwBkM,EACpBlM,eAIJC,cALwBiM,EACJjM,cAKpBC,WANwBgM,EACWhM,WAMnCC,qBAPwB+L,EACuB/L,qBAO/CC,kBARwB8L,EAC6C9L,kBAQrEC,qBATwB6L,EACgE7L,qBASxFC,kBAVwB4L,EACsF5L,oBAa3F,SAAC6L,GAAD,MAAe,CACtCkG,kBAAmB,SAACrS,EAAgBsS,EAAWC,EAAWC,EAAUC,EAAWC,EAAWC,EAAcC,EAAOC,EAAkBC,EAAkBC,EAAuBC,EAAuBC,EAAeC,EAAYkG,GACxN,IAAME,EAAM,GAAAjV,OAAMiO,EAAN,MAAAjO,OAAoBkO,EAApB,MAAAlO,OAAkCmO,EAAlC,MAAAnO,OAA+CoO,EAA/C,MAAApO,OAA6DqO,EAA7D,MAAArO,OAA2EsO,EAA3E,MAAAtO,OAA4FuO,EAA5F,MAAAvO,OAAsGwO,EAAtG,MAAAxO,OAA2HyO,EAA3H,MAAAzO,OAAgJ0O,EAAhJ,MAAA1O,OAA0K2O,EAA1K,MAAA3O,OAAoM4O,EAApM,MAAA5O,OAAsN6O,EAAtN,SAAA7O,OAAwO+U,GACpPpZ,EAAewE,IAAI,SAAAyG,GACfkB,EAAS,CAACxI,KAAM,8BAA+BsH,IAAGqO,WAClDvL,GAAWsE,kBAAkBpH,EAAE/F,SAAUoN,EAAWC,EAAWC,EAAUC,EAAWC,EAAWC,EAAcC,EAAOC,EAAkBC,EAAkBC,EAAuBC,EAAuBC,EAAeC,EAAYkG,GAC5NxK,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,gCAChBwI,EAAS,CAACxI,KAAM,+BAChBoK,GAAW2F,iBAAiBzI,EAAE/F,UACzB0J,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,gCACjB,SAAAsR,GACC9I,EAAS,CAACxI,KAAM,kCAGzB,SAAAsR,GACC9I,EAAS,CAACxI,KAAM,qCAKhCyP,eAAgB,SAACpT,EAAgBqT,EAAeC,EAAeC,EAAgBC,EAAgBC,GAC3F,IAAM6F,EAAM,GAAAjV,OAAMgP,EAAN,MAAAhP,OAAwBiP,EAAxB,MAAAjP,OAA0CkP,EAA1C,MAAAlP,OAA6DmP,EAA7D,MAAAnP,OAAgFoP,GAC5FzT,EAAewE,IAAI,SAAAyG,GACfkB,EAAS,CAACxI,KAAM,2BAA4BsH,IAAGqO,WAC/CvL,GAAWqF,eAAenI,EAAE/F,SAAUmO,EAAeC,EAAeC,EAAgBC,EAAgBC,GAC/F7E,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,6BAChBwI,EAAS,CAACxI,KAAM,4BAChBoK,GAAW4F,cAAc1I,EAAE/F,UACtB0J,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,6BACjB,SAAAsR,GACC9I,EAAS,CAACxI,KAAM,+BAEzB,SAAAsR,GACC9I,EAAS,CAACxI,KAAM,kCAIhCgQ,cAAe,SAACzP,GACZiI,EAAS,CAACxI,KAAM,4BAChBoK,GAAW4F,cAAczP,GACpB0K,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,6BACjB,SAAAsR,GACC9I,EAAS,CAACxI,KAAM,+BAG5B+P,iBAAkB,SAACxP,GACfiI,EAAS,CAACxI,KAAM,+BAChBoK,GAAW2F,iBAAiBxP,GACvB0K,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,gCACjB,SAAAsR,GACC9I,EAAS,CAACxI,KAAM,oCAMGsI,CAA6CG,YA/ajE,SAAArF,GAAK,MAAK,CACrB2B,KAAM,GACN+R,UAAW,CACPpO,QAAS,OACT2K,cAAe,MACfF,SAAU,OACVnK,QAAS,GACT2J,SAAU,QAEdsE,MAAMhX,OAAAK,EAAA,EAAAL,CAAA,CACF4D,MAAO,MACPyP,OAAQ,sBACPlQ,EAAMuF,YAAYC,GAAG,MAAQ,CAC1B/E,MAAO,MACPyP,OAAQ,qBAia4D7K,CAAmB0P,wDCha7F0B,8MACF/Z,MAAQ,CACJga,WAAY,OACZC,MAAM,KAGVC,YAAc,SAAAlE,GACVlT,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GAAmB2C,EAAK9C,MAAxB,CAA+Bma,SAAUnE,EAAMoE,oBAGnDC,YAAc,SAAC5V,GACX3B,EAAKC,SAAS,CAAEiX,WAAYvV,EAAK0V,SAAU,UAG/CG,WAAa,WACNxX,EAAK9C,MAAMia,MACVnX,EAAKM,MAAM9G,mBAAmByE,IAAI,SAAAyG,GAAC,OAAI1E,EAAKM,MAAMoJ,SAAShF,EAAE/F,SAAU,UACvEqB,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GAAkB2C,EAAK9C,MAAvB,CAA8Bia,MAAOnX,EAAK9C,MAAMia,UAEhDnX,EAAKM,MAAM9G,mBAAmByE,IAAI,SAAAyG,GAAC,OAAI1E,EAAKM,MAAMoJ,SAAShF,EAAE/F,SAAU,YACvEqB,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GAAkB2C,EAAK9C,MAAvB,CAA8Bia,MAAOnX,EAAK9C,MAAMia,kFAI/C,IAAAhX,EAAAC,KACGG,EAAYH,KAAKE,MAAjBC,QACA8W,EAAajX,KAAKlD,MAAlBma,SACR,OACI1W,EAAA/B,EAAAgC,cAACgG,EAAA,SAAD,KAEIjG,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAM9B,WAAS,EAACzK,UAAU,SAASuG,UAAWN,EAAQ4B,MAClDxB,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,EAAC/P,MAAO,CAACF,OAAQ,KACvBL,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,MAChBpC,EAAA/B,EAAAgC,cAAC8B,EAAA,EAAD,CAAYC,aAAW,OAAOf,QAASxB,KAAKE,MAAMoV,MAC9C/U,EAAA/B,EAAAgC,cAAC+U,GAAA/W,EAAD,CAAU0E,SAAS,WAF3B,YAOJ3C,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,EAACpQ,UAAWN,EAAQkX,SAG9B9W,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,EAAC/P,MAAO,CAAC4O,UAAW,WAC1BnP,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQpO,MAAM,UAAUQ,QAAQ,YAAYnB,QAAS,kBAAMzB,EAAKG,MAAM9G,mBAAmByE,IAAI,SAAAyG,GAAC,OAAIvE,EAAKG,MAAMiJ,YAAY7E,EAAE/F,SAAU,eAAcuC,MAAO,CAAEwP,OAAQ,KAApK,YACA/P,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQpO,MAAM,UAAUQ,QAAQ,YAAYnB,QAAS,kBAAMzB,EAAKG,MAAM9G,mBAAmByE,IAAI,SAAAyG,GAAC,OAAIvE,EAAKG,MAAMiJ,YAAY7E,EAAE/F,SAAU,eAAcuC,MAAO,CAAEwP,OAAQ,KAApK,YACA/P,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQpO,MAAM,UAAUQ,QAAQ,YAAYnB,QAAS,kBAAMzB,EAAKG,MAAM9G,mBAAmByE,IAAI,SAAAyG,GAAC,OAAIvE,EAAKG,MAAMiJ,YAAY7E,EAAE/F,SAAU,WAAUuC,MAAO,CAAEwP,OAAQ,KAAhK,QACA/P,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQpO,MAAM,UAAUR,SAAoC,SAA1B3B,KAAKlD,MAAMga,WAAuBtV,QAAS,kBAAMzB,EAAKG,MAAM9G,mBAAmByE,IAAI,SAAAyG,GAAC,OAAIvE,EAAKG,MAAMoJ,SAAShF,EAAE/F,SAAUwB,EAAKjD,MAAMga,eAAcnU,QAAQ,YAAY7B,MAAO,CAAEC,WAAY,KAAOf,KAAKlD,MAAMga,YAC9OvW,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CACIpO,MAAM,UACNQ,QAAQ,YACR2U,YAAWL,EAAW,mBAAgB5H,EACtCkI,gBAAc,OACd/V,QAASxB,KAAKgX,YACdlW,MAAO,CAAE0W,SAAU,GAAIZ,YAAa,EAAGa,aAAc,IAErDlX,EAAA/B,EAAAgC,cAACkX,GAAAlZ,EAAD,OAEJ+B,EAAA/B,EAAAgC,cAACmX,GAAA,EAAD,CACInU,GAAG,cACHyT,SAAUA,EACVpS,KAAM+S,QAAQX,GACdnS,QAAS9E,KAAKmX,aAEd5W,EAAA/B,EAAAgC,cAACqX,GAAA,EAAD,CAAUrW,QAAS,kBAAMzB,EAAKoX,YAAY,UAA1C,QACA5W,EAAA/B,EAAAgC,cAACqX,GAAA,EAAD,CAAUrW,QAAS,kBAAMzB,EAAKoX,YAAY,UAA1C,QACA5W,EAAA/B,EAAAgC,cAACqX,GAAA,EAAD,CAAUrW,QAAS,kBAAMzB,EAAKoX,YAAY,WAA1C,SACA5W,EAAA/B,EAAAgC,cAACqX,GAAA,EAAD,CAAUrW,QAAS,kBAAMzB,EAAKoX,YAAY,WAA1C,SACA5W,EAAA/B,EAAAgC,cAACqX,GAAA,EAAD,CAAUrW,QAAS,kBAAMzB,EAAKoX,YAAY,eAA1C,cAEJ5W,EAAA/B,EAAAgC,cAACmU,GAAA,EAAD,CAAkB7T,MAAO,CAAEwP,OAAQ,IAAMwH,eAAe,MACpDlD,QACIrU,EAAA/B,EAAAgC,cAACuX,GAAA,EAAD,CAAQ5V,MAAM,UAAU2S,QAAS9U,KAAKlD,MAAMia,KAAMvV,QAAS,kBAAMzB,EAAKqX,gBAE1EjU,MAAM,+BAzECgC,IAAMC,WA2FzC,IAsBM4S,GAAgC1S,YA9BtC,SAAyBxI,GAGrB,MAAO,CACH1D,mBAH2B0D,EAAMD,IAA7BzD,qBAOe,SAACoM,GAAD,MAAe,CACtC2D,YAAa,SAAC5L,EAAKY,GACfqH,EAAS,CAACxI,KAAM,yBAChBoK,GAAW+B,YAAY5L,EAAKY,GACvB8J,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,0BACjB,SAAAsR,GACC9I,EAAS,CAACxI,KAAM,4BAG5BsM,SAAU,SAAC/L,EAAKmK,GACZlC,EAAS,CAACxI,KAAM,sBAChBoK,GAAWkC,SAAS/L,EAAKmK,GACpBO,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,uBACjB,SAAAsR,GACC9I,EAAS,CAACxI,KAAM,2BAMMsI,CAA6CG,YA/HpE,SAAArF,GAAK,MAAK,CACrB2B,KAAM,CACFnB,OAAQ,qBAEZyW,OAAQ,CACJzW,OAAQ,qBACR8E,QAAS,OACT2K,cAAe,SACfF,SAAU,OACVnK,QAAS,GACT2J,SAAU,UAqHiElK,CAAmBoR,KCzGhGoB,8MACFnb,MAAQ,CACJob,iBAAkB,GAClBhK,SAAU,UAGdiK,UAAY,WACLvY,EAAK9C,MAAMob,iBAAiB1b,SAAWoD,EAAKM,MAAMnH,kBAAkByD,OACnEoD,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,MADZ,CAEIob,iBAAkB,MAGtBtY,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,MADZ,CAEIob,iBAAiBjb,OAAAU,EAAA,EAAAV,CAAK2C,EAAKM,MAAMnH,yBAK7Cqf,UAAY,SAACC,IACwC,IAA9CzY,EAAK9C,MAAMob,iBAAiBzb,QAAQ4b,GACnCzY,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,MADZ,CAEIob,iBAAgB,GAAAxa,OAAAT,OAAAU,EAAA,EAAAV,CAAM2C,EAAK9C,MAAMob,kBAAjB,CAAmCG,OAGvDzY,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,MADZ,CAEIob,iBAAiBjb,OAAAU,EAAA,EAAAV,CAAK2C,EAAK9C,MAAMob,iBAAiBzZ,OAAO,SAAA6F,GAAC,OAAIA,EAAEsL,QAAUyI,EAAIzI,eAK1F0I,YAAc,WACV1Y,EAAKM,MAAMqY,kBAAkB3Y,EAAK9C,MAAMob,kBACxCtY,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,MADZ,CAEIoR,SAAU,aAIlBsK,eAAiB,WACb5Y,EAAKM,MAAMuY,sBAAsB7Y,EAAK9C,MAAMob,kBAC5CtY,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,MADZ,CAEIoR,SAAU,gBAIlBoH,KAAO,WACH1V,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,MADZ,CAEIoR,SAAU,aAIlB1C,eAAiB,WACb5L,EAAKM,MAAMsL,eAAe5L,EAAK9C,MAAMob,iBAAiBra,IAAI,SAAAC,GAAC,OAAIA,EAAES,YACjEqB,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GAAkB2C,EAAK9C,MAAvB,CAA8Bob,iBAAkB,+EAG3C,IAAAnY,EAAAC,KAAAC,EACkCD,KAAKE,MAApCC,EADHF,EACGE,QAASpH,EADZkH,EACYlH,kBAEjB,OACIwH,EAAA/B,EAAAgC,cAACgG,EAAA,SAAD,KAEgC,SAAxBxG,KAAKlD,MAAMoR,SACPlO,KAAKlD,MAAMob,iBAAiB1b,OAAS,EACrC+D,EAAA/B,EAAAgC,cAAC0V,GAAD,CAAmBZ,KAAMtV,KAAKsV,OAAU/U,EAAA/B,EAAAgC,cAACkY,GAAD,CAAoBpD,KAAMtV,KAAKsV,OACnD,YAAxBtV,KAAKlD,MAAMoR,SACX3N,EAAA/B,EAAAgC,cAACwX,GAAD,CAAsB1C,KAAMtV,KAAKsV,OACjC/U,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAM9B,WAAS,EAACzK,UAAU,SAAS4G,MAAO,CAAEF,OAAQ,sBAChDL,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,EAAC/P,MAAO,CAAC4O,UAAW,QAC1BnP,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQpO,MAAM,UAAUQ,QAAQ,YAAYhB,SAAiD,IAAvC3B,KAAKlD,MAAMob,iBAAiB1b,OAAciE,UAAWN,EAAQwY,QAASnX,QAAS,kBAAMzB,EAAKuY,gBAAhJ,QACA/X,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQpO,MAAM,UAAUQ,QAAQ,YAAYhB,SAAiD,IAAvC3B,KAAKlD,MAAMob,iBAAiB1b,OAAciE,UAAWN,EAAQwY,QAASnX,QAAS,kBAAMzB,EAAKyY,mBAAhJ,YAEJjY,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,GACVtQ,EAAA/B,EAAAgC,cAACkG,GAAA,EAAD,CAAOjG,UAAWN,EAAQyY,OACtBrY,EAAA/B,EAAAgC,cAACmG,GAAA,EAAD,KACApG,EAAA/B,EAAAgC,cAACoG,GAAA,EAAD,KACIrG,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,CACIrF,QAAS,kBAAMzB,EAAKoY,aACpBrX,MAAO,CAACoG,OAAQ,YAEO,OAAtBnO,GAA8BA,EAAkByD,OAAS,GAAK+D,EAAA/B,EAAAgC,cAACqU,GAAA,EAAD,CAC3DC,QAAS9U,KAAKlD,MAAMob,iBAAiB1b,SAAWzD,EAAkByD,OAClE2F,MAAM,aAGd5B,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,cACAtG,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,kBACAtG,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,iBAGJtG,EAAA/B,EAAAgC,cAACsG,GAAA,EAAD,KACC/N,GAAqBA,EAAkB8E,IAAI,SAAAwa,GAAG,OAC3C9X,EAAA/B,EAAAgC,cAACoG,GAAA,EAAD,CAAUrF,IAAK8W,EAAIzI,MACfpO,QAAS,kBAAMzB,EAAKqY,UAAUC,IAC9BvX,MAAO,CAACoG,OAAQ,YAEpB3G,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KACItG,EAAA/B,EAAAgC,cAACqU,GAAA,EAAD,CACIC,SAAuD,IAA9C/U,EAAKjD,MAAMob,iBAAiBzb,QAAQ4b,GAC7ClW,MAAM,aAGV5B,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KAAawR,EAAI5C,WACjBlV,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KAAawR,EAAI9Z,UACjBgC,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KAAawR,EAAIzI,aAKC,OAAtB7W,GACRwH,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,EAAC/P,MAAO,CAAC4O,UAAW,QAC1BnP,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQ5N,QAAQ,YAAYR,MAAM,UAAU1B,UAAWN,EAAQwY,QAAShX,SAAiD,IAAvC3B,KAAKlD,MAAMob,iBAAiB1b,OAAcgF,QAAS,kBAAMzB,EAAKyL,mBAAhJ,oBArHGrG,IAAMC,WA0IrC,IA0BMyT,GAA4BvT,YAlClC,SAAyBxI,GAGrB,MAAO,CACH/D,kBAH0B+D,EAAMD,IAA5B9D,oBAOe,SAACyM,GAAD,MAAe,CACtCgG,eAAiB,SAACC,GACdjG,EAAS,CAACxI,KAAM,4BAChBoK,GAAWoE,eAAeC,GACrBxD,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,0BAA2ByO,SAC3CjG,EAAS,CAACxI,KAAM,mCAChBoK,GAAWoC,uBACNvB,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,iCAAkCG,UACnD,SAAAmR,GACC9I,EAAS,CAACxI,KAAM,iCAAkCsR,aAE3D,SAAAA,GACC9I,EAAS,CAACxI,KAAM,+BAG5Bub,kBAAmB,SAAC3Z,GAChB4G,EAAS,CAACxI,KAAM,sBAAuB4B,cAE3C6Z,sBAAuB,SAAC7Z,GACpB4G,EAAS,CAACxI,KAAM,0BAA2B4B,gBAKjB0G,CAA6CG,YApLhE,SAAArF,GAAK,MAAK,CACrB2B,KAAM,CACJlB,MAAO,OACP4O,UAAWrP,EAAM6F,QAAQ,GACzB6S,UAAW,QAEbF,MAAO,CACLpB,SAAU,KAEZmB,QAAS,CACLI,aAAc,GACd/X,YAAa,GACbyO,UAAW,MAwK4DhK,CAAmBwS,mCCjK5Fe,8MACFlc,MAAQ,CACJob,iBAAkB,GAClBe,cAAe,YAGnBd,UAAY,WACLvY,EAAK9C,MAAMob,iBAAiB1b,SAAWoD,EAAKM,MAAM/G,aAAaqD,OAC9DoD,EAAKC,SAAS,CACVqY,iBAAkB,KAGtBtY,EAAKC,SAAS,CACVqY,iBAAiBjb,OAAAU,EAAA,EAAAV,CAAK2C,EAAKM,MAAM/G,mBAK7Cif,UAAY,SAACC,IACwC,IAA9CzY,EAAK9C,MAAMob,iBAAiBzb,QAAQ4b,GACnCzY,EAAKC,SAAS,CACVqY,iBAAgB,GAAAxa,OAAAT,OAAAU,EAAA,EAAAV,CAAM2C,EAAK9C,MAAMob,kBAAjB,CAAmCG,MAGvDzY,EAAKC,SAAS,CACVqY,iBAAiBjb,OAAAU,EAAA,EAAAV,CAAK2C,EAAK9C,MAAMob,iBAAiBzZ,OAAO,SAAA6F,GAAC,OAAIA,EAAEd,KAAO6U,EAAI7U,WAKvFqP,aAAe,SAACM,GACZvT,EAAKC,SAAS,CACVoZ,cAAe9F,EAAEH,OAAO7U,WAIhC+a,YAAc,SAAC/F,GACXvT,EAAKC,SAAS,CACVsZ,cAAehG,EAAEH,OAAO7U,WAIhCqS,KAAO,WAC6B,WAA7B5Q,EAAK9C,MAAMmc,cACVrZ,EAAKM,MAAMmL,SAAS,SAEpBzL,EAAKM,MAAMmL,SAASzL,EAAK9C,MAAMqc,kBAIvC5N,YAAc,WACV3L,EAAKM,MAAMqL,YAAY3L,EAAK9C,MAAMob,2FAG7B,IAAAnY,EAAAC,KAAAC,EACoCD,KAAKE,MAAtCC,EADHF,EACGE,QAAShH,EADZ8G,EACY9G,aAAc8C,EAD1BgE,EAC0BhE,MAE/B,OACIsE,EAAA/B,EAAAgC,cAACgG,EAAA,SAAD,KACIjG,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAM9B,WAAS,EAACzK,UAAU,UACtBqG,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,GACNtQ,EAAA/B,EAAAgC,cAAC4Y,GAAA,EAAD,CAAaC,UAAU,WAAW5Y,UAAWN,EAAQmZ,aACjD/Y,EAAA/B,EAAAgC,cAAC+Y,GAAA,EAAD,CACIlB,KAAG,EACH9V,aAAW,OACX0Q,KAAK,OACL9U,MAAO6B,KAAKlD,MAAMmc,cAClB9E,SAAUnU,KAAK6S,cAEftS,EAAA/B,EAAAgC,cAACmU,GAAA,EAAD,CAAkBxW,MAAM,SAASyW,QAASrU,EAAA/B,EAAAgC,cAACgZ,GAAA,EAAD,CAAOrX,MAAM,YAAagB,MAAM,WAC1E5C,EAAA/B,EAAAgC,cAACmU,GAAA,EAAD,CAAkBxW,MAAM,YAAYyW,QAASrU,EAAA/B,EAAAgC,cAACgZ,GAAA,EAAD,CAAOrX,MAAM,YAAagB,MAAM,iBAIzF5C,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,EAAC/P,MAAO,CAACiY,aAAc,KAEA,WAA7B/Y,KAAKlD,MAAMmc,cACX1Y,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACIxQ,GAAG,gBACH/C,UAAWN,EAAQsZ,UACnBtb,MAAOlC,EACPkY,SAAUnU,KAAKkZ,YACfvX,SAAuC,WAA7B3B,KAAKlD,MAAMmc,cACrB3I,OAAO,OACP3N,QAAQ,aAEZpC,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACIxQ,GAAG,gBACH/C,UAAWN,EAAQsZ,UACnBtb,MAAO6B,KAAKlD,MAAMqc,cAClBhF,SAAUnU,KAAKkZ,YACfQ,YAAY,YACZpJ,OAAO,OACP3N,QAAQ,aAGZpC,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQpO,MAAM,UAAUX,QAAS,kBAAMzB,EAAKyQ,QAAQ7N,QAAQ,YAAY7B,MAAO,CAACC,WAAY,GAAI4Y,cAAe,WAA/G,SAC4B,IAAxBxgB,EAAaqD,aAAiC6S,IAAjBlW,GACrCoH,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,GACVtQ,EAAA/B,EAAAgC,cAACkG,GAAA,EAAD,CAAOjG,UAAWN,EAAQyY,OACtBrY,EAAA/B,EAAAgC,cAACmG,GAAA,EAAD,KACApG,EAAA/B,EAAAgC,cAACoG,GAAA,EAAD,KACIrG,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,CACIrF,QAAS,kBAAMzB,EAAKoY,aACpBrX,MAAO,CAACoG,OAAQ,YAEf/N,EAAaqD,OAAS,QAAsB6S,IAAjBlW,GAA8BoH,EAAA/B,EAAAgC,cAACqU,GAAA,EAAD,CACtDC,QAAS9U,KAAKlD,MAAMob,iBAAiB1b,SAAWrD,EAAaqD,QAAiD,IAAvCwD,KAAKlD,MAAMob,iBAAiB1b,OACnG2F,MAAM,aAGd5B,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,cACAtG,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,kBACAtG,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,iBAGJtG,EAAA/B,EAAAgC,cAACsG,GAAA,EAAD,KACyB,IAAxB3N,EAAaqD,aAAiC6S,IAAjBlW,GAA8BA,EAAa0E,IAAI,SAAA+b,GACzE,OACArZ,EAAA/B,EAAAgC,cAACoG,GAAA,EAAD,CAAUrF,IAAKqY,EAAIrc,IACfiE,QAAS,kBAAMzB,EAAKqY,UAAUwB,IAC9B9Y,MAAO,CAACoG,OAAQ,YAEpB3G,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KACItG,EAAA/B,EAAAgC,cAACqU,GAAA,EAAD,CACIC,SAAuD,IAA9C/U,EAAKjD,MAAMob,iBAAiBzb,QAAQmd,GAC7CzX,MAAM,aAGV5B,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KAAa+S,EAAIvQ,OAAOuJ,MAAM,KAAK,IACnCrS,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KAAa+S,EAAIrc,KACjBgD,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KAAa+S,EAAIhK,aAKI,IAAxBzW,EAAaqD,aAAiC6S,IAAjBlW,GACtCoH,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,EAAC/P,MAAO,CAAC4O,UAAW,QAC1BnP,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQpO,MAAM,UAAUR,SAAiD,IAAvC3B,KAAKlD,MAAMob,iBAAiB1b,OAAcgF,QAAS,kBAAMzB,EAAKwL,eAAe5I,QAAQ,YAAY7B,MAAO,CAACwP,OAAQ,KAAnJ,iBA1IFnL,IAAMC,WA4J5B,IA6BMyU,GAAmBvU,YAtCzB,SAAyBxI,GAAO,IAAAyI,EACIzI,EAAMD,IAEtC,MAAO,CACH1D,aAJwBoM,EACpBpM,aAIJ8C,MALwBsJ,EACNtJ,QAQC,SAACuJ,GAAD,MAAe,CACtC6F,SAAW,SAACC,GACR9F,EAAS,CAACxI,KAAM,qBAChBoK,GAAWiE,SAASC,GACfrD,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,sBACjB,SAAAsR,GACC9I,EAAS,CAACxI,KAAM,wBAG5BuO,YAAa,SAAC5M,GACV6G,EAAS,CAACxI,KAAM,yBAChBoK,GAAWmE,YAAY5M,GAClBsJ,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,uBAAwB2B,YACxC6G,EAAS,CAACxI,KAAM,mCAChBoK,GAAWoC,uBACNvB,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,iCAAkCG,UACnD,SAAAmR,GACC9I,EAAS,CAACxI,KAAM,iCAAkCsR,aAE3D,SAAAA,GACC9I,EAAS,CAACxI,KAAM,8BAMPsI,CAA6CG,YA3MvD,SAAArF,GAAK,MAAK,CACrB2B,KAAM,CACJlB,MAAO,OACP4O,UAAWrP,EAAM6F,QAAQ,GACzB6S,UAAW,QAEbF,MAAO,CACLpB,SAAU,KAEZiC,UAAW,CACP1Y,WAAY,IAEhBuY,YAAa,CACTvY,WAAY,MA8LkD0E,CAAmBuT,KChMnFc,8MAEJjH,aAAe,SAACC,EAAO3U,GACrByB,EAAKM,MAAMkV,UAAU,CAAEjX,mFAGhB,IAAA8B,EACyBD,KAAKE,MAA7BC,EADDF,EACCE,QAAS9H,EADV4H,EACU5H,WAEjB,OACEkI,EAAA/B,EAAAgC,cAAA,OAAKC,UAAWN,EAAQ4B,MACtBxB,EAAA/B,EAAAgC,cAACyB,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,aAC9B5B,EAAA/B,EAAAgC,cAACsV,GAAA,EAAD,CAAM3X,MAAO9F,EAAY8b,SAAUnU,KAAK6S,aAAc1S,QAAS,CAAC4V,UAAW5V,EAAQ6V,gBACjFzV,EAAA/B,EAAAgC,cAACyV,GAAA,EAAD,CAAK9S,MAAM,cAAchD,QAAS,CAACuB,SAAUvB,EAAQuB,YACrDnB,EAAA/B,EAAAgC,cAACyV,GAAA,EAAD,CAAK9S,MAAM,OAAOhD,QAAS,CAACuB,SAAUvB,EAAQuB,cAGlC,IAAfrJ,GAAoBkI,EAAA/B,EAAAgC,cAACqY,GAAD,MACL,IAAfxgB,GAAoBkI,EAAA/B,EAAAgC,cAACqZ,GAAD,cAlBD1U,IAAMC,WAqClC,IAOM2U,GAA0BzU,YAfhC,SAAyBxI,GAGrB,MAAO,CACHzE,WAHmByE,EAAMD,IAArBxE,aAOe,SAACmN,GAAD,MAAe,CACtC4P,UAAW,SAACjX,GACRqH,EAAS,CAACxI,KAAM,aAAcmB,aAKNmH,CAA6CG,YA5D9D,SAAArF,GAAK,MAAK,CACvB2B,KAAM,CACJiB,gBAAiB5C,EAAM+V,QAAQC,WAAWrR,MAC1CyS,SAAU,KAEZxB,cAAe,CACbhT,gBAAiB,WAEnBtB,SAAU,CACRsB,gBAAiB,UACjBb,MAAO,UACPc,WAAY,IACZC,SAAU,MAgD+DuC,CAAmBqU,kECL1FE,8MAEFld,MAAQ,CACJwK,KAAM,GACNQ,SAAU,GACVmS,MAAM,EACNC,SAAU,GACVrf,gBAAiB,GACjBC,gBAAiB,GACjBE,cAAe,GACfC,cAAe,GACfC,eAAgB,GAChBE,cAAe,GACf+e,yBAA0B,GAC1B5e,aAAc,GACd6e,wBAAyB,GACzB5e,UAAW,GACXC,SAAU,GACVC,SAAU,GACV2e,OAAQ,GACRC,WAAY,GACZpe,UAAW0D,EAAKM,MAAMhE,aAG1B6S,kBAAoB,WAChBnP,EAAKM,MAAMsN,WACX5N,EAAKM,MAAMuN,gBACX7N,EAAKM,MAAMyN,iBACX/N,EAAKM,MAAM2N,mBAGfoB,0BAA4B,SAACC,GACtBA,EAAU/T,cAAgByE,EAAKM,MAAM/E,aACpCyE,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,MADZ,CAEI1B,cAAe8T,EAAU/T,YAAYC,cACrC+e,yBAA0BjL,EAAU/T,YAAYE,uBAGrD6T,EAAUvU,aAAeiF,EAAKM,MAAMvF,YACnCiF,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,MADZ,CAEIjC,gBAAiBqU,EAAUvU,WAAWC,YAAYC,gBAClDC,gBAAiBoU,EAAUvU,WAAWC,YAAYE,gBAClDE,cAAekU,EAAUvU,WAAWI,iBAAiBC,cACrDC,cAAeiU,EAAUvU,WAAWI,iBAAiBE,cACrDC,eAAgBgU,EAAUvU,WAAWI,iBAAiBG,kBAG3DgU,EAAU5T,aAAesE,EAAKM,MAAM5E,YACnCsE,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,MADZ,CAEIvB,aAAc2T,EAAU5T,WAAWC,aACnC6e,wBAAyBlL,EAAU5T,WAAWD,oBAC9CG,UAAW0T,EAAU5T,WAAWE,UAChCC,SAAUyT,EAAU5T,WAAWG,SAC/BC,SAAUwT,EAAU5T,WAAWI,YAGpCwT,EAAUhT,YAAc0D,EAAKM,MAAMhE,WAClC0D,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,MADZ,CAEIZ,UAAWgT,EAAUhT,gBAKjC2W,aAAe,SAACC,GACZlT,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,MADZG,OAAAK,EAAA,EAAAL,CAAA,GAEK6V,EAAME,OAAOC,KAAOH,EAAME,OAAO7U,YAI1CkJ,YAAc,WACVzH,EAAKM,MAAMmH,YAAYzH,EAAK9C,MAAMwK,KAAM1H,EAAK9C,MAAMgL,aAGvDyS,WAAa,WACT3a,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GAAkB2C,EAAK9C,MAAvB,CAA8Bmd,MAAOra,EAAK9C,MAAMmd,WAGpDO,SAAW,WACP5a,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GAAkB2C,EAAK9C,MAAvB,CAA8B2d,IAAK7a,EAAK9C,MAAM2d,SAGlD/M,cAAgB,WACZ9N,EAAKM,MAAMwN,cAAc9N,EAAK9C,MAAMhC,gBAAiB8E,EAAK9C,MAAMjC,gBAAiB+E,EAAK9C,MAAM9B,cAAe4E,EAAK9C,MAAM7B,cAAe2E,EAAK9C,MAAM5B,mBAGpJ0S,eAAiB,WACbhO,EAAKM,MAAM0N,eAAehO,EAAK9C,MAAM1B,cAAewE,EAAK9C,MAAMqd,6BAGnErM,cAAgB,WACZlO,EAAKM,MAAM4N,cAAclO,EAAK9C,MAAMvB,aAAcqE,EAAK9C,MAAMsd,wBAAyBxa,EAAK9C,MAAMtB,UAAWoE,EAAK9C,MAAMrB,SAAUmE,EAAK9C,MAAMpB,aAGhJgf,mBAAqB,SAAAvH,GACjBvT,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,MADZ,CAEIud,OAAQlH,EAAEH,OAAO2H,MAAM,GACvBL,WAAYnH,EAAEH,OAAO2H,MAAM,GAAG1H,WAItC2H,UAAY,WACRhb,EAAKM,MAAM0a,UAAUhb,EAAK9C,MAAMud,QAChCza,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,MADZ,CAEIud,OAAQ,GACRC,WAAY,SAIpBE,SAAW,WACJ5a,EAAK9C,MAAMZ,WACV0D,EAAKM,MAAM8N,YACXpO,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,MADZ,CAEIZ,WAAW,MAGf0D,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,MADZ,CAEIZ,WAAW,8EAKd,IAAA6D,EAAAC,KAAAC,EACyBD,KAAKE,MAA3BC,EADHF,EACGE,QAAS9F,EADZ4F,EACY5F,SACjB,OACIkG,EAAA/B,EAAAgC,cAACgG,EAAA,SAAD,KACQjG,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,EAACgK,GAAI,GAAIlW,WAAS,EAACmW,QAAQ,SAASnM,WAAW,aAAalO,UAAWN,EAAQ4B,MACrFxB,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,EAACpQ,UAAW,CAACN,EAAQ4a,KAAM5a,EAAQ6a,gBACzCza,EAAA/B,EAAAgC,cAACyB,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,UAAU1B,UAAWN,EAAQiC,QAC7D7B,EAAA/B,EAAAgC,cAAC6B,EAAA,EAAD,KACA9B,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,KAAKR,MAAM,UAAUS,QAAM,GAA/C,mBAKArC,EAAA/B,EAAAgC,cAAA,OAAKC,UAAWN,EAAQ8a,OACxB1a,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,KAAK7B,MAAO,CAACoa,UAAW,aAAcnC,aAAc,KAAxE,sBAGAxY,EAAA/B,EAAAgC,cAAC4Y,GAAA,EAAD,CAAazW,QAAQ,WAAWlC,UAAWN,EAAQ8T,MAAOkH,WAAS,GAC/D5a,EAAA/B,EAAAgC,cAAC4a,GAAA,EAAD,CAAYC,QAAQ,QAApB,QAGA9a,EAAA/B,EAAAgC,cAAC8a,GAAA,EAAD,CACInd,MAAO6B,KAAKlD,MAAMwK,KAClB6M,SAAUnU,KAAK6S,aACf0I,WAAS,EACT9a,UAAWN,EAAQqb,WACnBC,MAAOlb,EAAA/B,EAAAgC,cAACkb,GAAA,EAAD,CAAeC,WAAY,GAAI1I,KAAK,OAAOzP,GAAG,UAG7B,IAApBnJ,EAASmC,OAAe+D,EAAA/B,EAAAgC,cAACqX,GAAA,EAAD,CAAU1Z,MAAO,QAAjB,IAA0BoC,EAAA/B,EAAAgC,cAACob,GAAA,EAAD,OAAkCvhB,EAASwD,IAAI,SAAAge,GAAC,OAAItb,EAAA/B,EAAAgC,cAACqX,GAAA,EAAD,CAAUtW,IAAKsa,EAAI,IAAAC,KAAKC,SAAyB,EAAI5d,MAAO0d,GAAIA,MAI9Ktb,EAAA/B,EAAAgC,cAAC8B,EAAA,EAAD,CAAY7B,UAAWN,EAAQmB,OAAQE,QAAS,kBAAMzB,EAAKG,MAAMsN,YAAYjL,aAAW,qBACpFhC,EAAA/B,EAAAgC,cAACwb,GAAAxd,EAAD,QAGR+B,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACIvT,UAAWN,EAAQ8T,MACnBkH,WAAS,EACTlI,KAAK,WACL9P,MAAM,WACNhF,MAAO6B,KAAKlD,MAAMgL,SAClBqM,SAAUnU,KAAK6S,aACfvC,OAAO,SACP3N,QAAQ,aAEZpC,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQ5N,QAAQ,YAAYR,MAAM,UAAUX,QAAS,kBAAMzB,EAAKsH,eAAe5G,UAAWN,EAAQ8b,YAAlG,SAEA1b,EAAA/B,EAAAgC,cAAA,OAAKC,UAAWN,EAAQ8a,OACxB1a,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,KAAK7B,MAAO,CAACoa,UAAW,aAAcnC,aAAc,KAAxE,0BAGAxY,EAAA/B,EAAAgC,cAACmU,GAAA,EAAD,CAAkB7T,MAAO,CAAEwP,OAAQ,IAAMwH,eAAe,QACpDlD,QACIrU,EAAA/B,EAAAgC,cAACuX,GAAA,EAAD,CAAQ5V,MAAM,UAAU2S,QAAS9U,KAAKlD,MAAMmd,KAAMzY,QAAS,kBAAMzB,EAAKwa,gBAE1EpX,MAAM,gBAEV5C,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACIvT,UAAWN,EAAQ8T,MACnBkH,WAAS,EACTlI,KAAK,WACL9P,MAAM,YACNhF,MAAO6B,KAAKlD,MAAMod,SAClB/F,SAAUnU,KAAK6S,aACflR,SAAU3B,KAAKlD,MAAMmd,KACrB3J,OAAO,SACP3N,QAAQ,WACRyR,gBAAiB,CAAEC,QAAQ,KAE/B9T,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQ5N,QAAQ,YAAYR,MAAM,UAAUX,QAAS,kBAAMzB,EAAKsH,eAAe5G,UAAWN,EAAQ8b,YAAlG,SAEA1b,EAAA/B,EAAAgC,cAAA,OAAKC,UAAWN,EAAQ8a,OACxB1a,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,KAAK7B,MAAO,CAACoa,UAAW,aAAcnC,aAAc,KAAxE,2BAGAxY,EAAA/B,EAAAgC,cAACmU,GAAA,EAAD,CAAkB7T,MAAO,CAAEwP,OAAQ,IAAMwH,eAAe,QACpDlD,QACIrU,EAAA/B,EAAAgC,cAACuX,GAAA,EAAD,CAAQ5V,MAAM,UAAU2S,QAAS9U,KAAKlD,MAAMZ,UAAWsF,QAAS,kBAAMzB,EAAKya,cAE/ErX,MAAM,qBAEV5C,EAAA/B,EAAAgC,cAAA,OAAKM,MAAO,CAAC4E,QAAS,OAAQiJ,WAAY,WAAY9N,MAAO,SAC7DN,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACIxQ,GAAG,QACHL,MAAM,gBACNsR,WAAW,4BACXxB,KAAK,SACL9U,MAAO6B,KAAKlD,MAAMwd,WAClB3Y,UAAW3B,KAAKlD,MAAMZ,UACtBoU,OAAO,QACP3N,QAAQ,WACRwY,WAAS,IAEb5a,EAAA/B,EAAAgC,cAAA,SACI0b,OAAO,IACPpb,MAAO,CAAE4E,QAAS,QAClBlC,GAAG,wBACHxG,KAAK,OACLmX,SAAUnU,KAAK0a,qBAEnBna,EAAA/B,EAAAgC,cAAA,SAAO6a,QAAQ,yBACX9a,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQ5N,QAAQ,YAAYhB,UAAW3B,KAAKlD,MAAMZ,UAAWiG,MAAM,UAAUkX,UAAU,OAAOvY,MAAO,CAACwP,OAAQ,IAA9G,YAKJ/P,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQ5N,QAAQ,YAAYhB,UAAW3B,KAAKlD,MAAMZ,UAAWsF,QAAS,kBAAMzB,EAAK6a,aAAazY,MAAM,UAAS1B,UAAWN,EAAQ8b,YAAhI,SAEA1b,EAAA/B,EAAAgC,cAAA,OAAKC,UAAWN,EAAQ8a,OACxB1a,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,KAAK7B,MAAO,CAACoa,UAAW,aAAcnC,aAAc,KAAxE,4BAGAxY,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACIvT,UAAWN,EAAQ8T,MACnBkH,WAAS,EACTlI,KAAK,oBACL9P,MAAM,sBACNhF,MAAO6B,KAAKlD,MAAMgL,SAClBqM,SAAUnU,KAAK6S,aACfvC,OAAO,SACP3N,QAAQ,WACRyR,gBAAiB,CAAEC,QAAQ,KAE/B9T,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACIvT,UAAWN,EAAQ8T,MACnBkH,WAAS,EACTlI,KAAK,uBACL9P,MAAM,0BACNhF,MAAO6B,KAAKlD,MAAMgL,SAClBqM,SAAUnU,KAAK6S,aACfvC,OAAO,SACP3N,QAAQ,WACRyR,gBAAiB,CAAEC,QAAQ,KAE/B9T,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQ5N,QAAQ,YAAYR,MAAM,UAAS1B,UAAWN,EAAQ8b,YAA9D,SAmBA1b,EAAA/B,EAAAgC,cAAA,OAAKC,UAAWN,EAAQ8a,OACxB1a,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,KAAK7B,MAAO,CAACoa,UAAW,aAAcnC,aAAc,KAAxE,sBAGAxY,EAAA/B,EAAAgC,cAAC4Y,GAAA,EAAD,CAAaC,UAAU,WAAW5Y,UAAWN,EAAQ8T,OACjD1T,EAAA/B,EAAAgC,cAAC+Y,GAAA,EAAD,CACIlB,KAAG,EACH9V,aAAW,OACX0Q,KAAK,OACL9U,MAAO6B,KAAKlD,MAAMqf,SAClBhI,SAAUnU,KAAK6S,cAEftS,EAAA/B,EAAAgC,cAACmU,GAAA,EAAD,CAAkBxW,MAAM,WAAWyW,QAASrU,EAAA/B,EAAAgC,cAACgZ,GAAA,EAAD,CAAOrX,MAAM,YAAagB,MAAM,uBAC5E5C,EAAA/B,EAAAgC,cAACmU,GAAA,EAAD,CAAkBxW,MAAM,QAAQyW,QAASrU,EAAA/B,EAAAgC,cAACgZ,GAAA,EAAD,CAAOrX,MAAM,YAAagB,MAAM,qBAE7E5C,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQ5N,QAAQ,YAAYR,MAAM,UAAUrB,MAAO,CAACiY,aAAc,KAAlE,WAIRxY,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,EAACpQ,UAAWN,EAAQ4a,MAC9Bxa,EAAA/B,EAAAgC,cAACyB,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,UAAU1B,UAAWN,EAAQiC,QACzD7B,EAAA/B,EAAAgC,cAAC6B,EAAA,EAAD,KACA9B,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,KAAKR,MAAM,UAAUS,QAAM,GAA/C,mBAKArC,EAAA/B,EAAAgC,cAAA,OAAKC,UAAWN,EAAQ8a,OACxB1a,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,KAAK7B,MAAO,CAACoa,UAAW,aAAcnC,aAAc,KAAxE,eAGAxY,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACIvT,UAAWN,EAAQ8T,MACnBkH,WAAS,EACTlI,KAAK,kBACL9P,MAAM,oBACNhF,MAAO6B,KAAKlD,MAAMhC,gBAClBqZ,SAAUnU,KAAK6S,aACfvC,OAAO,SACP3N,QAAQ,WACRyR,gBAAiB,CAAEC,QAAQ,GAC3B1S,SAAU3B,KAAKE,MAAMnE,mBAAqBiE,KAAKE,MAAMlE,kBACrDsY,WAAY,CACRC,aAAchU,EAAA/B,EAAAgC,cAACgU,GAAA,EAAD,CAAgBtS,SAAS,OAAzB,UAGtB3B,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACIvT,UAAWN,EAAQ8T,MACnBkH,WAAS,EACTlI,KAAK,kBACL9P,MAAM,oBACNhF,MAAO6B,KAAKlD,MAAMjC,gBAClBsZ,SAAUnU,KAAK6S,aACfvC,OAAO,SACP3N,QAAQ,WACRyR,gBAAiB,CAAEC,QAAQ,GAC3B1S,SAAU3B,KAAKE,MAAMnE,mBAAqBiE,KAAKE,MAAMlE,kBACrDsY,WAAY,CACRC,aAAchU,EAAA/B,EAAAgC,cAACgU,GAAA,EAAD,CAAgBtS,SAAS,OAAzB,UAGtB3B,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACIvT,UAAWN,EAAQ8T,MACnBkH,WAAS,EACTlI,KAAK,gBACL9P,MAAM,kBACNhF,MAAO6B,KAAKlD,MAAM9B,cAClBmZ,SAAUnU,KAAK6S,aACfvC,OAAO,SACP3N,QAAQ,WACRyR,gBAAiB,CAAEC,QAAQ,GAC3B1S,SAAU3B,KAAKE,MAAMnE,mBAAqBiE,KAAKE,MAAMlE,kBACrDsY,WAAY,CACRC,aAAchU,EAAA/B,EAAAgC,cAACgU,GAAA,EAAD,CAAgBtS,SAAS,OAAzB,QAGtB3B,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACIvT,UAAWN,EAAQ8T,MACnBkH,WAAS,EACTlI,KAAK,gBACL9P,MAAM,kBACNhF,MAAO6B,KAAKlD,MAAM7B,cAClBkZ,SAAUnU,KAAK6S,aACfvC,OAAO,SACP3N,QAAQ,WACRyR,gBAAiB,CAAEC,QAAQ,GAC3B1S,SAAU3B,KAAKE,MAAMnE,mBAAqBiE,KAAKE,MAAMlE,kBACrDsY,WAAY,CACRC,aAAchU,EAAA/B,EAAAgC,cAACgU,GAAA,EAAD,CAAgBtS,SAAS,OAAzB,QAGtB3B,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACIvT,UAAWN,EAAQ8T,MACnBkH,WAAS,EACTlI,KAAK,iBACL9P,MAAM,mBACNhF,MAAO6B,KAAKlD,MAAM5B,eAClBiZ,SAAUnU,KAAK6S,aACfvC,OAAO,SACP3N,QAAQ,WACRyR,gBAAiB,CAAEC,QAAQ,GAC3B1S,SAAU3B,KAAKE,MAAMnE,mBAAqBiE,KAAKE,MAAMlE,oBAEzDuE,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQ5O,SAAU3B,KAAKE,MAAMnE,mBAAqBiE,KAAKE,MAAMlE,kBAAmB2G,QAAQ,YAAYR,MAAM,UAAS1B,UAAWN,EAAQ8b,WAAYza,QAAS,kBAAMzB,EAAK2N,kBAAkB1N,KAAKE,MAAMlE,kBAAoB,YAAc,SAErOuE,EAAA/B,EAAAgC,cAAA,OAAKC,UAAWN,EAAQ8a,OACxB1a,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,KAAK7B,MAAO,CAACoa,UAAW,aAAcnC,aAAc,KAAxE,gBAGAxY,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACIvT,UAAWN,EAAQ8T,MACnBkH,WAAS,EACTlI,KAAK,gBACL9P,MAAM,kBACNhF,MAAO6B,KAAKlD,MAAM1B,cAClB+Y,SAAUnU,KAAK6S,aACfvC,OAAO,SACP3N,QAAQ,WACRyR,gBAAiB,CAAEC,QAAQ,GAC3B1S,SAAU3B,KAAKE,MAAMvE,oBAAsBqE,KAAKE,MAAMtE,mBACtD0Y,WAAY,CACRC,aAAchU,EAAA/B,EAAAgC,cAACgU,GAAA,EAAD,CAAgBtS,SAAS,OAAzB,SAGtB3B,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACIvT,UAAWN,EAAQ8T,MACnBkH,WAAS,EACTlI,KAAK,2BACL9P,MAAM,wBACNhF,MAAO6B,KAAKlD,MAAMqd,yBAClBhG,SAAUnU,KAAK6S,aACfvC,OAAO,SACP3N,QAAQ,WACRyR,gBAAiB,CAAEC,QAAQ,GAC3B1S,SAAU3B,KAAKE,MAAMvE,oBAAsBqE,KAAKE,MAAMtE,mBACtD0Y,WAAY,CACRC,aAAchU,EAAA/B,EAAAgC,cAACgU,GAAA,EAAD,CAAgBtS,SAAS,OAAzB,QAGtB3B,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQ5O,SAAU3B,KAAKE,MAAMvE,oBAAsBqE,KAAKE,MAAMtE,mBAAoB+G,QAAQ,YAAYR,MAAM,UAAS1B,UAAWN,EAAQ8b,WAAYza,QAAS,kBAAMzB,EAAK6N,mBAAmB5N,KAAKE,MAAMtE,mBAAqB,YAAa,SAExO2E,EAAA/B,EAAAgC,cAAA,OAAKC,UAAWN,EAAQ8a,OACxB1a,EAAA/B,EAAAgC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,KAAK7B,MAAO,CAACoa,UAAW,aAAcnC,aAAc,KAAxE,eAGAxY,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACIvT,UAAWN,EAAQ8T,MACnBkH,WAAS,EACTlI,KAAK,eACL9P,MAAM,iBACNhF,MAAO6B,KAAKlD,MAAMvB,aAClB4Y,SAAUnU,KAAK6S,aACfvC,OAAO,SACP3N,QAAQ,WACRyR,gBAAiB,CAAEC,QAAQ,GAC3BC,WAAY,CACRC,aAAchU,EAAA/B,EAAAgC,cAACgU,GAAA,EAAD,CAAgBtS,SAAS,OAAzB,OAElBP,SAAU3B,KAAKE,MAAMrE,mBAAqBmE,KAAKE,MAAMpE,oBAEzDyE,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACIvT,UAAWN,EAAQ8T,MACnBkH,WAAS,EACTlI,KAAK,0BACL9P,MAAM,wBACNhF,MAAO6B,KAAKlD,MAAMsd,wBAClBjG,SAAUnU,KAAK6S,aACfvC,OAAO,SACP3N,QAAQ,WACRyR,gBAAiB,CAAEC,QAAQ,GAC3BC,WAAY,CACRC,aAAchU,EAAA/B,EAAAgC,cAACgU,GAAA,EAAD,CAAgBtS,SAAS,OAAzB,MAElBP,SAAU3B,KAAKE,MAAMrE,mBAAqBmE,KAAKE,MAAMpE,oBAEzDyE,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACIvT,UAAWN,EAAQ8T,MACnBkH,WAAS,EACTlI,KAAK,YACL9P,MAAM,aACNhF,MAAO6B,KAAKlD,MAAMtB,UAClB2Y,SAAUnU,KAAK6S,aACfvC,OAAO,SACP3N,QAAQ,WACRyR,gBAAiB,CAAEC,QAAQ,GAC3BC,WAAY,CACRC,aAAchU,EAAA/B,EAAAgC,cAACgU,GAAA,EAAD,CAAgBtS,SAAS,OAAzB,OAElBP,SAAU3B,KAAKE,MAAMrE,mBAAqBmE,KAAKE,MAAMpE,oBAEzDyE,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACIvT,UAAWN,EAAQ8T,MACnBkH,WAAS,EACTlI,KAAK,WACL9P,MAAM,YACNhF,MAAO6B,KAAKlD,MAAMrB,SAClB0Y,SAAUnU,KAAK6S,aACfvC,OAAO,SACP3N,QAAQ,WACRyR,gBAAiB,CAAEC,QAAQ,GAC3BC,WAAY,CACRC,aAAchU,EAAA/B,EAAAgC,cAACgU,GAAA,EAAD,CAAgBtS,SAAS,OAAzB,OAElBP,SAAU3B,KAAKE,MAAMrE,mBAAqBmE,KAAKE,MAAMpE,oBAEzDyE,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACIvT,UAAWN,EAAQ8T,MACnBkH,WAAS,EACTlI,KAAK,WACL9P,MAAM,YACNhF,MAAO6B,KAAKlD,MAAMpB,SAClByY,SAAUnU,KAAK6S,aACfvC,OAAO,SACP3N,QAAQ,WACRyR,gBAAiB,CAAEC,QAAQ,GAC3B1S,SAAU3B,KAAKE,MAAMrE,mBAAqBmE,KAAKE,MAAMpE,oBAEzDyE,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQ5O,SAAU3B,KAAKE,MAAMrE,mBAAqBmE,KAAKE,MAAMpE,kBAAmB6G,QAAQ,YAAYR,MAAM,UAAS1B,UAAWN,EAAQ8b,WAAYza,QAAS,kBAAMzB,EAAK+N,kBAAkB9N,KAAKE,MAAMpE,kBAAoB,YAAc,mBAtfpOqJ,IAAMC,WAohBnC,IAmHMgX,GAA0B9W,YArIhC,SAAyBxI,GAAO,IAAAyI,EAC4JzI,EAAMD,IAE9L,MAAO,CACHxC,SAJwBkL,EACpBlL,SAIJM,WALwB4K,EACV5K,WAKdQ,YANwBoK,EACEpK,YAM1BG,WAPwBiK,EACejK,WAOvCK,mBARwB4J,EAC2B5J,mBAQnDC,mBATwB2J,EAC+C3J,mBASvEC,kBAVwB0J,EACmE1J,kBAU3FC,kBAXwByJ,EACsFzJ,kBAW9GC,kBAZwBwJ,EACyGxJ,kBAYjIC,kBAbwBuJ,EAC4HvJ,kBAapJE,UAdwBqJ,EAC+IrJ,YAiBpJ,SAACsJ,GAAD,MAAe,CACtC6B,YAAa,SAACC,EAAMC,GAChB/B,EAAS,CAACxI,KAAM,0BAChBoK,GAAWC,YAAYC,EAAMC,GACxBU,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,wBAAyBG,UAC1C,SAAAmR,GACC9I,EAAS,CAACxI,KAAM,6BAG5BwQ,SAAU,WACNhI,EAAS,CAACxI,KAAM,sBAChBoK,GAAWoG,WACNvF,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,oBAAqBG,UACtC,SAAAmR,GACC9I,EAAS,CAACxI,KAAM,yBAG5B0Q,cAAe,SAAC5S,EAAiBD,EAAiBG,EAAeC,EAAeC,GAC5EsK,EAAS,CAACxI,KAAM,4BAChBoK,GAAWsG,cAAc5S,EAAiBD,EAAiBG,EAAeC,EAAeC,GACpF+M,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,4BAChBwI,EAAS,CAACxI,KAAM,4BAChBoK,GAAWqG,gBACNxF,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,0BAA2BG,UAC5C,SAAAmR,GACC9I,EAAS,CAACxI,KAAM,+BAEzB,SAAAsR,GACC9I,EAAS,CAACxI,KAAM,+BAG5ByQ,cAAe,WACXjI,EAAS,CAACxI,KAAM,4BAChBoK,GAAWqG,gBACNxF,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,0BAA2BG,UAC5C,SAAAmR,GACC9I,EAAS,CAACxI,KAAM,+BAG5B4Q,eAAgB,SAACxS,EAAeC,GAC5BmK,EAAS,CAACxI,KAAM,6BAChBoK,GAAWwG,eAAexS,EAAeC,GACpC4M,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,6BAChBwI,EAAS,CAACxI,KAAM,6BAChBoK,GAAWuG,iBACN1F,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,2BAA4BG,UAC7C,SAAAmR,GACC9I,EAAS,CAACxI,KAAM,gCAEzB,SAAAsR,GACC9I,EAAS,CAACxI,KAAM,gCAG5B2Q,eAAgB,WACZnI,EAAS,CAACxI,KAAM,6BAChBoK,GAAWuG,iBACN1F,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,2BAA4BG,UAC7C,SAAAmR,GACC9I,EAAS,CAACxI,KAAM,gCAG5B8Q,cAAe,SAACvS,EAAc6e,EAAyB5e,EAAWC,EAAUC,GACxE8J,EAAS,CAACxI,KAAM,4BAChBoK,GAAW0G,cAAcvS,EAAc6e,EAAyB5e,EAAWC,EAAUC,GAChFuM,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,4BAChBwI,EAAS,CAACxI,KAAM,4BAChBoK,GAAWyG,gBACN5F,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,0BAA2BG,UAC5C,SAAAmR,GACC9I,EAAS,CAACxI,KAAM,+BAEzB,SAAAsR,GACC9I,EAAS,CAACxI,KAAM,+BAG5B6Q,cAAe,WACXrI,EAAS,CAACxI,KAAM,4BAChBoK,GAAWyG,gBACN5F,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,0BAA2BG,UAC5C,SAAAmR,GACC9I,EAAS,CAACxI,KAAM,+BAG5B4d,UAAW,SAACnS,GACRjD,EAAS,CAACxI,KAAM,wBAChBoK,GAAWoB,UAAUC,GAChBR,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,yBACjB,SAAAsR,GACC9I,EAAS,CAACxI,KAAM,2BAG5BgR,UAAW,WACPxI,EAAS,CAACxI,KAAM,uBAChBoK,GAAW4G,YACN/F,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,wBACjB,SAAAsR,GACC9I,EAAS,CAACxI,KAAM,4BAMAsI,CAA6CG,YAjsB9D,SAAArF,GAAK,IAAAic,EAAA,MAAK,CACvBta,MAAIsa,EAAA,CACF7E,SAAU,IACVnH,cAAe,UAFbpT,OAAAK,EAAA,EAAAL,CAAAof,EAGDjc,EAAMuF,YAAYC,GAAG,MAAQ,CAC1ByK,cAAe,QAJjBpT,OAAAK,EAAA,EAAAL,CAAAof,EAAA,eAMY,IANZA,GAQJtB,KAAK9d,OAAAK,EAAA,EAAAL,CAAA,CACH4D,MAAO,OACPmC,gBAAiB5C,EAAM+V,QAAQC,WAAWrR,OACzC3E,EAAMuF,YAAYC,GAAG,MAAQ,CAC1B/E,MAAO,MACPE,WAAY,KACZC,YAAa,OAGnBia,MAAO,CACLvV,QAAS,OACT2K,cAAe,SACfzB,eAAgB,SAChBD,WAAY,aACZ9N,MAAO,MACPG,YAAa,KACbD,WAAY,KACZub,cAAe,GACfpW,WAAY,GACZyQ,aAAc,qBAEhB1C,MAAMhX,OAAAK,EAAA,EAAAL,CAAA,CACJoT,cAAe,OACdjQ,EAAMuF,YAAYC,GAAG,MAAQ,CAC1B0K,OAAQ,eAGd2L,WAAWhf,OAAAK,EAAA,EAAAL,CAAA,CACTwS,UAAW,GACXyL,UAAW,SACV9a,EAAMuF,YAAY4W,KAAK,MAAQ,CAC5B1b,MAAO,MACPyP,OAAQ,GACR4K,UAAW,WAGjB5Z,OAAQ,CACJT,MAAO,OAEX2a,WAAY,CACR3a,MAAO,SAgpBgE4E,CAAmBuU,uDC3qB1FwC,8MAEF1f,MAAQ,CACJ2f,gBAAiB,GACjBC,QAAQ,EACRC,MAAO,OACPxP,KAAM,GACNnQ,KAAM,GACNgB,MAAO,GACPoP,eAAgB,GAChBwP,WAAY,GACZC,eAAgB,GAChBvS,QAAQrN,OAAAU,EAAA,EAAAV,CAAK2C,EAAKM,MAAMrG,QAAQ4E,OAAO,SAAAX,GAAC,OAAkB,IAAdA,EAAEwM,cAGlDyE,kBAAoB,WAChBnP,EAAKM,MAAM+M,gBAGfgC,0BAA4B,SAACC,GACtBA,EAAUrV,UAAY+F,EAAKM,MAAMrG,cAAiCwV,IAAtBH,EAAUrV,SACrD+F,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GAAkB2C,EAAK9C,MAAvB,CAA8BwN,QAAQrN,OAAAU,EAAA,EAAAV,CAAKiS,EAAUrV,QAAQ4E,OAAO,SAAAX,GAAC,OAAkB,IAAdA,EAAEwM,iBAInF6N,UAAY,WACLvY,EAAK9C,MAAM2f,gBAAgBjgB,SAAWoD,EAAKM,MAAMrG,QAAQ2C,OACxDoD,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,MADZ,CAEI2f,gBAAiB,MAGrB7c,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,MADZ,CAEI2f,gBAAgBxf,OAAAU,EAAA,EAAAV,CAAK2C,EAAKM,MAAMrG,eAK5CsO,aAAe,SAACkQ,GACuF,IAAhGzY,EAAK9C,MAAM2f,gBAAgBhe,OAAO,SAAA6F,GAAC,OAAIA,EAAEtG,QAAUqa,EAAIra,OAASsG,EAAEtH,OAASqb,EAAIrb,OAAMR,OACpFoD,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,MADZ,CAEI2f,gBAAe,GAAA/e,OAAAT,OAAAU,EAAA,EAAAV,CAAM2C,EAAK9C,MAAM2f,iBAAjB,CAAkCpE,OAGrDzY,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,MADZ,CAEI2f,gBAAgBxf,OAAAU,EAAA,EAAAV,CAAK2C,EAAK9C,MAAM2f,gBAAgBhe,OAAO,SAAA6F,GAAC,OAAIA,EAAEtG,QAAUqa,EAAIra,OAASsG,EAAEtH,OAASqb,EAAIrb,cAKhHkQ,UAAY,WACRtN,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GAAmB2C,EAAK9C,MAAxB,CAA+B4f,QAAQ,EAAMC,MAAO,YAGxDG,WAAa,WACTld,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GAAmB2C,EAAK9C,MAAxB,CAA+B4f,QAAQ,EAAMC,MAAO,OAAQxP,KAAMvN,EAAK9C,MAAM2f,gBAAgB,GAAGtP,KAAMnQ,KAAM4C,EAAK9C,MAAM2f,gBAAgB,GAAGzf,KAAMgB,MAAO4B,EAAK9C,MAAM2f,gBAAgB,GAAGze,MAAOoP,eAAgBxN,EAAK9C,MAAM2f,gBAAgB,GAAGrP,qBAG9OC,aAAe,WACXzN,EAAKM,MAAMmN,aAAazN,EAAK9C,MAAM2f,iBACnC7c,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GAAmB2C,EAAK9C,MAAxB,CAA+B2f,gBAAiB,SAGpDM,OAAS,SAAC1E,GACqF,IAAxFzY,EAAK9C,MAAMwN,QAAQ7L,OAAO,SAAA6F,GAAC,OAAIA,EAAEtG,QAAUqa,EAAIra,OAASsG,EAAEtH,OAASqb,EAAIrb,OAAMR,QAC5EoD,EAAKM,MAAMoN,aAAa+K,EAAIrb,KAAMqb,EAAIra,OACtC4B,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GAAkB2C,EAAK9C,MAAvB,CAA8BwN,QAAO,GAAA5M,OAAAT,OAAAU,EAAA,EAAAV,CAAM2C,EAAK9C,MAAMwN,SAAjB,CAA0B+N,SAE/DzY,EAAKM,MAAMqN,cAAc8K,EAAIrb,KAAMqb,EAAIra,OACvC4B,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GAAkB2C,EAAK9C,MAAvB,CAA8BwN,QAAS1K,EAAK9C,MAAMwN,QAAQ7L,OAAO,SAAA0U,GAAC,OAAIA,IAAMkF,WAKpF2E,UAAY,WACgB,SAArBpd,EAAK9C,MAAM6f,OACV/c,EAAKM,MAAM+c,iBAAiBrd,EAAK9C,MAAM2f,iBACvC7c,EAAKM,MAAMgN,UAAUtN,EAAK9C,MAAM8f,WAAYhd,EAAK9C,MAAMqQ,KAAMvN,EAAK9C,MAAME,KAAM4C,EAAK9C,MAAMkB,MAAO4B,EAAK9C,MAAMsQ,iBAE3GxN,EAAKM,MAAMgN,UAAUtN,EAAK9C,MAAM8f,WAAYhd,EAAK9C,MAAMqQ,KAAMvN,EAAK9C,MAAME,KAAM4C,EAAK9C,MAAMkB,MAAO4B,EAAK9C,MAAMsQ,gBAI/GxN,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GAAmB2C,EAAK9C,MAAxB,CAA+B4f,QAAQ,EAAOC,MAAO,OAAQxP,KAAM,GAAInQ,KAAM,GAAIgB,MAAO,GAAIoP,eAAgB,GAAIwP,WAAY,GAAIC,eAAgB,SAGpJhK,aAAe,SAACM,GACZvT,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GAAmB2C,EAAK9C,MAAxBG,OAAAK,EAAA,EAAAL,CAAA,GAAgCkW,EAAEH,OAAOC,KAAOE,EAAEH,OAAO7U,YAG7DgZ,YAAc,WACVvX,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GAAmB2C,EAAK9C,MAAxB,CAA+B4f,QAAQ,EAAOC,MAAO,aAIzDjC,mBAAqB,SAAAvH,GACjBvT,EAAKC,SAAL5C,OAAAC,EAAA,EAAAD,CAAA,GACO2C,EAAK9C,MADZ,CAEI8f,WAAYzJ,EAAEH,OAAO2H,MAAM,GAC3BkC,eAAgB1J,EAAEH,OAAO2H,MAAM,GAAG1H,iFAIjC,IAAAlT,EAAAC,KAAAC,EACwBD,KAAKE,MAA1BC,EADHF,EACGE,QAAStG,EADZoG,EACYpG,QAEjB,OACI0G,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAM9B,WAAS,EAACzK,UAAU,SAASuG,UAAWN,EAAQ4B,MAClDxB,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,EAAC/P,MAAO,CAAC4O,UAAW,QAC1BnP,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQpO,MAAM,UAAUQ,QAAQ,YAAYlC,UAAWN,EAAQwY,QAASnX,QAAS,kBAAMzB,EAAKmN,cAA5F,WACClN,KAAKlD,MAAM2f,gBAAgBjgB,OAAS,EACjC+D,EAAA/B,EAAAgC,cAAC0c,GAAA,EAAD,CAASC,MAAM,gFACX5c,EAAA/B,EAAAgC,cAAA,YAAMD,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQpO,MAAM,UAAUQ,QAAQ,YAAYlC,UAAWN,EAAQwY,QAAShX,UAAQ,GAAhF,UAEVpB,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQpO,MAAM,UAAUQ,QAAQ,YAAYhB,SAAgD,IAAtC3B,KAAKlD,MAAM2f,gBAAgBjgB,OAAciE,UAAWN,EAAQwY,QAASnX,QAAS,kBAAMzB,EAAK+c,eAA/I,SAGRvc,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,GACVtQ,EAAA/B,EAAAgC,cAACkG,GAAA,EAAD,CAAOjG,UAAWN,EAAQyY,OACtBrY,EAAA/B,EAAAgC,cAACmG,GAAA,EAAD,KACApG,EAAA/B,EAAAgC,cAACoG,GAAA,EAAD,KACIrG,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,CACIrF,QAAS,kBAAMzB,EAAKoY,aACpBrX,MAAO,CAACoG,OAAQ,YAClBrN,GAAWA,EAAQ2C,OAAS,GAC1B+D,EAAA/B,EAAAgC,cAACqU,GAAA,EAAD,CACIC,QAAS9U,KAAKlD,MAAM2f,gBAAgBjgB,SAAWwD,KAAKE,MAAMrG,QAAQ2C,OAClE2F,MAAM,aAGd5B,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,eACAtG,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,oBACAtG,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,gBACAtG,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,wBACAtG,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,gBACAtG,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,iBAGJtG,EAAA/B,EAAAgC,cAACsG,GAAA,EAAD,KACCjN,GAAWA,EAAQgE,IAAI,SAAAwa,GAAG,OACvB9X,EAAA/B,EAAAgC,cAACoG,GAAA,EAAD,CAAUrF,IAAK8W,EAAIlL,KAAKkL,EAAIrb,KAAKqb,EAAIra,OACjCuC,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KACItG,EAAA/B,EAAAgC,cAACqU,GAAA,EAAD,CACIrT,QAAS,kBAAMzB,EAAKoI,aAAakQ,IACjCvD,QAAyG,IAAhG/U,EAAKjD,MAAM2f,gBAAgBhe,OAAO,SAAA6F,GAAC,OAAIA,EAAEtG,QAAUqa,EAAIra,OAASsG,EAAEtH,OAASqb,EAAIrb,OAAMR,OAC9F2F,MAAM,aAGd5B,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KAAawR,EAAIlL,MACjB5M,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KAAawR,EAAIrb,MACjBuD,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KAAawR,EAAIra,OACjBuC,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KAAawR,EAAIjL,eAAjB,KACA7M,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KAMItG,EAAA/B,EAAAgC,cAACuX,GAAA,EAAD,CAAQ5V,MAAM,UAAU2S,QAAiG,IAAxF/U,EAAKjD,MAAMwN,QAAQ7L,OAAO,SAAA6F,GAAC,OAAIA,EAAEtG,QAAUqa,EAAIra,OAASsG,EAAEtH,OAASqb,EAAIrb,OAAMR,OAAcgF,QAAS,kBAAMzB,EAAKgd,OAAO1E,OAE3J9X,EAAA/B,EAAAgC,cAACqG,GAAA,EAAD,KAAawR,EAAIta,aAIpBlE,GAAWA,EAAQ2C,OAAS,GACrC+D,EAAA/B,EAAAgC,cAACiG,EAAA,EAAD,CAAMoK,MAAI,EAAC/P,MAAO,CAAC4O,UAAW,QAC1BnP,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQpO,MAAM,UAAUQ,QAAQ,YAAYhB,SAAgD,IAAtC3B,KAAKlD,MAAM2f,gBAAgBjgB,OAAciE,UAAWN,EAAQwY,QAASnX,QAAS,kBAAMzB,EAAKsN,iBAA/I,YAGJ9M,EAAA/B,EAAAgC,cAAC4c,GAAA,EAAD,CACIvY,KAAM7E,KAAKlD,MAAM4f,OACjBW,sBAAoB,EACpBC,kBAAgB,qBAEhB/c,EAAA/B,EAAAgC,cAAC+c,GAAA,EAAD,CAAa/Z,GAAG,qBAA0C,QAArBxD,KAAKlD,MAAM6f,MAAkB,aAAe,eACjFpc,EAAA/B,EAAAgC,cAACgd,GAAA,EAAD,KACIjd,EAAA/B,EAAAgC,cAAC4Y,GAAA,EAAD,CAAazW,QAAQ,WAAWlC,UAAWN,EAAQmZ,YAAa6B,WAAS,EAAC7K,OAAO,SAC7E/P,EAAA/B,EAAAgC,cAAC4a,GAAA,EAAD,CAAYC,QAAQ,QAApB,UAGA9a,EAAA/B,EAAAgC,cAAC8a,GAAA,EAAD,CACInd,MAAO6B,KAAKlD,MAAMqQ,KAClBgH,SAAUnU,KAAK6S,aACf0I,WAAS,EACTE,MAAOlb,EAAA/B,EAAAgC,cAACkb,GAAA,EAAD,CAAeC,WAAY,GAAI1I,KAAK,OAAOzP,GAAG,UAErDjD,EAAA/B,EAAAgC,cAACqX,GAAA,EAAD,CAAU1Z,MAAO,YAAjB,wCACAoC,EAAA/B,EAAAgC,cAACqX,GAAA,EAAD,CAAU1Z,MAAO,YAAjB,wCACAoC,EAAA/B,EAAAgC,cAACqX,GAAA,EAAD,CAAU1Z,MAAO,YAAjB,wCACAoC,EAAA/B,EAAAgC,cAACqX,GAAA,EAAD,CAAU1Z,MAAO,YAAjB,wCACAoC,EAAA/B,EAAAgC,cAACqX,GAAA,EAAD,CAAU1Z,MAAO,YAAjB,wCACAoC,EAAA/B,EAAAgC,cAACqX,GAAA,EAAD,CAAU1Z,MAAO,YAAjB,wCACAoC,EAAA/B,EAAAgC,cAACqX,GAAA,EAAD,CAAU1Z,MAAO,YAAjB,wCACAoC,EAAA/B,EAAAgC,cAACqX,GAAA,EAAD,CAAU1Z,MAAO,YAAjB,wCACAoC,EAAA/B,EAAAgC,cAACqX,GAAA,EAAD,CAAU1Z,MAAO,cAAjB,cACAoC,EAAA/B,EAAAgC,cAACqX,GAAA,EAAD,CAAU1Z,MAAO,UAAjB,mBACAoC,EAAA/B,EAAAgC,cAACqX,GAAA,EAAD,CAAU1Z,MAAO,UAAjB,mBACAoC,EAAA/B,EAAAgC,cAACqX,GAAA,EAAD,CAAU1Z,MAAO,UAAjB,qBAGRoC,EAAA/B,EAAAgC,cAAC4Y,GAAA,EAAD,CAAazW,QAAQ,WAAWlC,UAAWN,EAAQmZ,YAAa6B,WAAS,EAAC7K,OAAO,SAC7E/P,EAAA/B,EAAAgC,cAAC4a,GAAA,EAAD,CAAYC,QAAQ,QAApB,eAGA9a,EAAA/B,EAAAgC,cAAC8a,GAAA,EAAD,CACInd,MAAO6B,KAAKlD,MAAME,KAClBmX,SAAUnU,KAAK6S,aACf0I,WAAS,EACTE,MAAOlb,EAAA/B,EAAAgC,cAACkb,GAAA,EAAD,CAAeC,WAAY,IAAK1I,KAAK,OAAOzP,GAAG,UAEtDjD,EAAA/B,EAAAgC,cAACqX,GAAA,EAAD,CAAU1Z,MAAO,QAAjB,eACAoC,EAAA/B,EAAAgC,cAACqX,GAAA,EAAD,CAAU1Z,MAAO,QAAjB,eACAoC,EAAA/B,EAAAgC,cAACqX,GAAA,EAAD,CAAU1Z,MAAO,SAAjB,gBACAoC,EAAA/B,EAAAgC,cAACqX,GAAA,EAAD,CAAU1Z,MAAO,QAAjB,iBAGRoC,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACImH,WAAS,EACT3X,GAAG,QACHyP,KAAK,QACL9P,MAAM,UACNhF,MAAO6B,KAAKlD,MAAMkB,MAClBmW,SAAUnU,KAAK6S,aACfvC,OAAO,QACP3N,QAAQ,aAEZpC,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACImH,WAAS,EACT3X,GAAG,iBACHyP,KAAK,iBACL9P,MAAM,iBACNhF,MAAO6B,KAAKlD,MAAMsQ,eAClB+G,SAAUnU,KAAK6S,aACfvC,OAAO,QACPgE,WAAY,CACRC,aAAchU,EAAA/B,EAAAgC,cAACgU,GAAA,EAAD,CAAgBtS,SAAS,OAAzB,MAElBS,QAAQ,aAEZpC,EAAA/B,EAAAgC,cAAA,OAAKM,MAAO,CAAC4E,QAAS,OAAQiJ,WAAY,aAC1CpO,EAAA/B,EAAAgC,cAACwT,GAAA,EAAD,CACIxQ,GAAG,aACHL,MAAM,cACNsR,WAAW,4BACXxB,KAAK,aACL9U,MAAO6B,KAAKlD,MAAM+f,eAClBvM,OAAO,QACP3N,QAAQ,WACRwY,WAAS,IAEb5a,EAAA/B,EAAAgC,cAAA,SACI0b,OAAO,IACPpb,MAAO,CAAE4E,QAAS,QAClBlC,GAAG,wBACHxG,KAAK,OACLmX,SAAUnU,KAAK0a,qBAEnBna,EAAA/B,EAAAgC,cAAA,SAAO6a,QAAQ,yBACX9a,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQ5N,QAAQ,YAAYR,MAAM,UAAUkX,UAAU,OAAOvY,MAAO,CAACwP,OAAQ,IAA7E,aAMR/P,EAAA/B,EAAAgC,cAACid,GAAA,EAAD,KACIld,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQ5N,QAAQ,YAAYnB,QAASxB,KAAKgd,UAAW7a,MAAM,WACjC,QAArBnC,KAAKlD,MAAM6f,MAAkB,aAAe,QAEjDpc,EAAA/B,EAAAgC,cAAC+P,EAAA,EAAD,CAAQ5N,QAAQ,YAAYnB,QAASxB,KAAKmX,YAAahV,MAAM,WAA7D,mBA/QFgD,IAAMC,WAmS5B,IAkGMsY,GAAmBpY,YA1GzB,SAAyBxI,GAGrB,MAAO,CACHjD,QAHgBiD,EAAMD,IAAlBhD,UAOe,SAAC2L,GAAD,MAAe,CACtCyH,WAAY,WACRzH,EAAS,CAACxI,KAAM,wBAChBoK,GAAW6F,aACNhF,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,sBAAuBG,UACxC,SAAAmR,GACC9I,EAAS,CAACxI,KAAM,2BAG5BkQ,UAAW,SAACzE,EAAM0E,EAAMnQ,EAAMgB,EAAOoP,GACjC5H,EAAS,CAACxI,KAAM,uBAChBoK,GAAW8F,UAAUzE,EAAM0E,EAAMnQ,EAAMgB,EAAOoP,GACzCnF,KAAK,SAAA9K,GACF,GAAmB,YAAhBA,EAAKb,OACJkJ,EAAS,CAACxI,KAAM,wBAChBwI,EAAS,CAACxI,KAAM,wBAChBoK,GAAW6F,aACNhF,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,sBAAuBG,UACxC,SAAAmR,GACC9I,EAAS,CAACxI,KAAM,8BAErB,CACH,IAAMsR,EAAQnR,EAAKE,QACnBmI,EAAS,CAACxI,KAAM,sBAAuBsR,YAE5C,SAAAA,GACC9I,EAAS,CAACxI,KAAM,2BAG5BqQ,aAAc,SAACoP,GACXA,EAAgB5e,IAAI,SAAAC,GAChB0H,EAAS,CAACxI,KAAM,0BAChBoK,GAAWiG,aAAavP,EAAEE,MAAOF,EAAEd,MAC9BiL,KAAK,SAAA9K,GAAQ,IAAAwgB,EACJ3gB,EAAOc,EAAEd,KACTgB,EAAQF,EAAEE,MAChBwH,GAAQmY,EAAA,CAAE3gB,KAAM,yBAARC,OAAAK,EAAA,EAAAL,CAAA0gB,EAAA,OAAiC3gB,GAAjCC,OAAAK,EAAA,EAAAL,CAAA0gB,EAAA,QAAuC3f,GAAvC2f,IACRnY,EAAS,CAACxI,KAAM,wBAChBoK,GAAW6F,aACNhF,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,sBAAuBG,UACxC,SAAAmR,GACC9I,EAAS,CAACxI,KAAM,2BAEzB,SAAAsR,GACC9I,EAAS,CAACxI,KAAM,+BAKhCigB,iBAAkB,SAACR,GACfA,EAAgB5e,IAAI,SAAAC,GAChB0H,EAAS,CAACxI,KAAM,+BAChBoK,GAAWiG,aAAavP,EAAEE,MAAOF,EAAEd,MAC9BiL,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,gCACjB,SAAAsR,GACC9I,EAAS,CAACxI,KAAM,oCAIhCsQ,aAAc,SAACtQ,EAAMgB,GACjBwH,EAAS,CAACxI,KAAM,0BAChBoK,GAAWkG,aAAatQ,EAAMgB,GACzBiK,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,0BAChBwI,EAAS,CAACxI,KAAM,wBAChBoK,GAAW6F,aACNhF,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,sBAAuBG,UACxC,SAAAmR,GACC9I,EAAS,CAACxI,KAAM,2BAEzB,SAAAsR,GACC9I,EAAS,CAACxI,KAAM,6BAG5BuQ,cAAe,SAACvQ,EAAMgB,GAClBwH,EAAS,CAACxI,KAAM,2BAChBoK,GAAWmG,cAAcvQ,EAAMgB,GAC1BiK,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,2BAChBwI,EAAS,CAACxI,KAAM,wBAChBoK,GAAW6F,aACNhF,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,sBAAuBG,UACxC,SAAAmR,GACC9I,EAAS,CAACxI,KAAM,2BAEzB,SAAAsR,GACC9I,EAAS,CAACxI,KAAM,gCAMPsI,CAA6CG,YAvZvD,SAAArF,GAAK,MAAK,CACrB2B,KAAM,CACJlB,MAAO,OACPD,OAAQ,OACRkY,UAAW,OACX9V,gBAAiB,SAEnB4V,MAAO,CACLpB,SAAU,KAEZmB,QAAS,CACLI,aAAc,GACd/X,YAAa,GACbyO,UAAW,MA0YmDhK,CAAmB+W,gMCtZnFoB,GAAc,CAClBhI,QAASiI,KACTC,QAASC,KACTzP,MAAO0P,KACPC,KAAMC,MA2DD,IAAMC,GAAyB1Y,YAxDtB,SAAArF,GAAK,MAAK,CACxBwV,QAAS,CACP5S,gBAAiBsT,KAAM,MAEzBhI,MAAO,CACLtL,gBAAiB5C,EAAM+V,QAAQ7H,MAAM8P,MAEvCH,KAAM,CACJjb,gBAAiB5C,EAAM+V,QAAQrU,QAAQsc,MAEzCN,QAAS,CACP9a,gBAAiBqb,KAAM,MAEzBvb,KAAM,CACJI,SAAU,IAEZob,YAAa,CACXC,QAAS,GACTvd,YAAaZ,EAAM6F,QAAQ,IAE7B5I,QAAS,CACPqI,QAAS,OACTiJ,WAAY,YAkCsBlJ,CA9BtC,SAA2BvF,GAAO,IACxBC,EAA4DD,EAA5DC,QAASM,EAAmDP,EAAnDO,UAAWpD,EAAwC6C,EAAxC7C,QAASyH,EAA+B5E,EAA/B4E,QAASnC,EAAsBzC,EAAtByC,QAAY6b,EAD1BvhB,OAAAwhB,GAAA,EAAAxhB,CACoCiD,EADpC,uDAE1Bwe,EAAOd,GAAYjb,GAEzB,OACEpC,EAAA/B,EAAAgC,cAACme,GAAA,EAAD1hB,OAAA2hB,OAAA,CACEne,UAAW,CAACN,EAAQwC,GAAUlC,GAC9Boe,mBAAiB,kBACjBxhB,QACEkD,EAAA/B,EAAAgC,cAAA,QAAMgD,GAAG,kBAAkB/C,UAAWN,EAAQ9C,SAC5CkD,EAAA/B,EAAAgC,cAACke,EAAD,CAAMje,UAAW,CAACN,EAAQ2C,KAAM3C,EAAQme,eACvCjhB,GAGLN,OAAQ,CACNwD,EAAA/B,EAAAgC,cAAC8B,EAAA,EAAD,CACEf,IAAI,QACJgB,aAAW,QACXJ,MAAM,UACN1B,UAAWN,EAAQ2e,MACnBtd,QAASsD,GAETvE,EAAA/B,EAAAgC,cAACue,GAAAvgB,EAAD,CAAWiC,UAAWN,EAAQ2C,UAG9B0b,2BC9CJpO,GAAe,kBAAM7P,EAAA/B,EAAAgC,cAAA,OAAKM,MAAO,CAACF,OAAQ,OAAQC,MAAO,OAAQ6E,QAAS,OAAQiJ,WAAY,SAAUC,eAAgB,SAAU5L,gBAAiB,UAAWb,MAAO,UAAhJ,oBAErB6c,8MACFC,MAAQ,KACRnQ,MAAQ,OAERhS,MAAQ,CACJ+H,MAAM,EACNlM,MAAO,QAGXoW,kBAAoB,WAChBnP,EAAKM,MAAMgf,OACXtf,EAAKM,MAAM2K,WACXjL,EAAKM,MAAM6N,QACX,IAAMoR,EAAKC,KAAc,UAAA1hB,OAAWuQ,OAAOC,SAASC,SAA3B,QACzBgR,EAAGE,GAAG,UAAW,WACbxV,QAAQC,IAAI,eAEhBqV,EAAGE,GAAG,gBAAiB,SAAA3W,GACnB,IACI,IAAMvL,EAAOyK,KAAK0X,MAAM5W,GACxB9I,EAAKM,MAAMqf,SAAS,gBAAiBpiB,GACvC,MAAMgW,GACJgM,EAAGK,KAAK,gBAAiBrM,MAGjCgM,EAAGE,GAAG,eAAgB,SAAA3W,GAClB,IACI,IAAMvL,EAAOyK,KAAK0X,MAAM5W,GACxB9I,EAAKM,MAAMqf,SAAS,eAAgBpiB,GACtC,MAAMgW,GACJgM,EAAGK,KAAK,gBAAiBrM,MAGjCgM,EAAGE,GAAG,sBAAuB,SAAA3W,GACzB,IACI,IAAMvL,EAAOyK,KAAK0X,MAAM5W,GACxB9I,EAAKM,MAAMqf,SAAS,sBAAuBpiB,GAC7C,MAAMgW,GACJgM,EAAGK,KAAK,gBAAiBrM,MAGjCgM,EAAGE,GAAG,6BAA8B,SAAA3W,GAChC,IACI,IAAMvL,EAAOyK,KAAK0X,MAAM5W,GACxB9I,EAAKM,MAAMqf,SAAS,6BAA8BpiB,GACpD,MAAMgW,GACJgM,EAAGK,KAAK,gBAAiBrM,MAGjCgM,EAAGE,GAAG,OAAQ,SAAA3W,GACV,IACI,IAAMvL,EAAOyK,KAAK0X,MAAM5W,GACxB9I,EAAKM,MAAMqf,SAAS,OAAQpiB,GAC9B,MAAMgW,GACJgM,EAAGK,KAAK,gBAAiBrM,MAGjCgM,EAAGE,GAAG,sBAAuB,SAAA3W,GACzB,IACI,IAAMvL,EAAOyK,KAAK0X,MAAM5W,QACC2G,WAAflS,EAAKlD,YAAiDoV,WAAnBlS,EAAKjD,WAC9C0F,EAAKM,MAAMqf,SAAS,sBAAuBpiB,GAEjD,MAAMgW,GACJgM,EAAGK,KAAK,gBAAiBrM,MAGjCgM,EAAGE,GAAG,uBAAwB,SAAA3W,GAC1B,IACI,IAAMvL,EAAOyK,KAAK0X,MAAM5W,GACxB9I,EAAKM,MAAMqf,SAAS,uBAAwBpiB,GAC9C,MAAMgW,GACJgM,EAAGK,KAAK,gBAAiBrM,MAGjCgM,EAAGE,GAAG,sBAAuB,SAAA3W,GACzB,IACI,IAAMvL,EAAOyK,KAAK0X,MAAM5W,GACxB9I,EAAKM,MAAMqf,SAAS,sBAAuBpiB,GAC7C,MAAMgW,GACJgM,EAAGK,KAAK,gBAAiBrM,MAGjCgM,EAAGE,GAAG,qBAAsB,SAAA3W,GACxB,IACgB,KAATA,GAAa9I,EAAKM,MAAM+M,aAC7B,MAAMkG,GACJgM,EAAGK,KAAK,gBAAiBrM,MAGjCgM,EAAGE,GAAG,oBAAqB,SAAA3W,GACvB,IACI,IAAMvL,EAAOyK,KAAK0X,MAAM5W,GACxB9I,EAAKM,MAAMqf,SAAS,oBAAqBpiB,GAC3C,MAAMgW,GACJgM,EAAGK,KAAK,gBAAiBrM,MAGjCgM,EAAGE,GAAG,gBAAiB,SAAA3W,GACnB,IACI,IAAMvL,EAAOyK,KAAK0X,MAAM5W,GACxB9I,EAAKM,MAAMqf,SAAS,gBAAiBpiB,GACvC,MAAMgW,GACJgM,EAAGK,KAAK,gBAAiBrM,SAKrClE,0BAA4B,SAACC,GACF,OAApBA,EAAUvW,OAAmBuW,EAAUvW,QAAUiH,EAAKM,MAAMvH,QAC3DiH,EAAKqf,MAAMviB,KAAKwS,EAAUvW,OAEtBiH,EAAK9C,MAAM+H,KACXjF,EAAKC,SAAS,CAAEgF,MAAM,IAEtBjF,EAAK6f,mBAKjBA,aAAe,WACP7f,EAAKqf,MAAMziB,OAAS,GACpBoD,EAAKC,SAAS,CACVlH,MAAOiH,EAAKqf,MAAMS,QAClB7a,MAAM,OAKlBsS,YAAc,SAACrE,EAAO6M,GACH,cAAXA,GAGJ/f,EAAKC,SAAS,CAAEgF,MAAM,OAG1B+a,aAAe,WACXhgB,EAAK6f,wFAGA,IACEtf,EAAWH,KAAKE,MAAhBC,QACP,OACQI,EAAA/B,EAAAgC,cAAA,OAAKC,UAAWN,EAAQ4B,MACpBxB,EAAA/B,EAAAgC,cAAC6E,EAAD,KAE+B,cAA3BrF,KAAKE,MAAM9H,YAA8BmI,EAAA/B,EAAAgC,cAACyQ,GAAD,MACd,mBAA3BjR,KAAKE,MAAM9H,YAAmCmI,EAAA/B,EAAAgC,cAACuZ,GAAD,MACnB,kBAA3B/Z,KAAKE,MAAM9H,YAAkCmI,EAAA/B,EAAAgC,cAAC4b,GAAD,MAClB,YAA3Bpc,KAAKE,MAAM9H,YAA4BmI,EAAA/B,EAAAgC,cAACkd,GAAD,MACZ,UAA3B1d,KAAKE,MAAM9H,YAA0BmI,EAAA/B,EAAAgC,cAACqf,GAAA,MAAD,MAAYtf,EAAA/B,EAAAgC,cAACsf,GAAD,OAGrDvf,EAAA/B,EAAAgC,cAACuf,GAAA,EAAD,CACIC,aAAc,CACVC,SAAU,MACVC,WAAY,UAEhBrb,KAAM7E,KAAKlD,MAAM+H,KAEjBC,QAAS9E,KAAKmX,YACdgJ,SAAUngB,KAAK4f,aACfzf,QAAS,CAACigB,sBAAuBjgB,EAAQkgB,YAEzC9f,EAAA/B,EAAAgC,cAAC2d,GAAD,CACIrZ,QAAS9E,KAAKmX,YACdxU,QAA8B,OAArB3C,KAAKlD,MAAMnE,MAAiB,OAASqH,KAAKlD,MAAMnE,MAAMqE,KAC/DK,QAA8B,OAArB2C,KAAKlD,MAAMnE,MAAiB,GAAKqH,KAAKlD,MAAMnE,MAAM0E,mBAvKrE8H,IAAMC,WA4MxB,IAsEMkb,GAAehb,YAhFrB,SAAyBxI,GAAO,IAAAyI,EACazI,EAAMD,IAE/C,MAAO,CACHzE,YAJwBmN,EACpBnN,YAIJO,MALwB4M,EACP5M,MAKjBJ,SANwBgN,EACAhN,WASL,SAACiN,GAAD,MAAe,CACtC0Z,KAAM,WACF1Z,EAAS,CAACxI,KAAM,mCAChBoK,GAAWoC,uBACNvB,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,iCAAkCG,UACnD,SAAAmR,GACC9I,EAAS,CAACxI,KAAM,iCAAkCsR,YAG1D9I,EAAS,CAACxI,KAAM,yBAChBoK,GAAW+D,cACNlD,KAAK,SAAA9K,GACmB,OAAlBA,EAAK5E,WACJiN,EAAS,CAACxI,KAAM,yBAChBoK,GAAWsD,YAAY3L,EAAMwhB,WAAW1jB,IAAItE,UACvC0P,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,0BACjB,SAAAsR,GACC9I,EAAS,CAACxI,KAAM,4BAG5BwI,EAAS,CAACxI,KAAM,uBAAwBG,UACzC,SAAAmR,GACC9I,EAAS,CAACxI,KAAM,uBAAwBsR,YAEhD9I,EAAS,CAACxI,KAAM,wBAChBoK,GAAW6F,aACNhF,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,sBAAuBG,UACxC,SAAAmR,GACC9I,EAAS,CAACxI,KAAM,2BAG5BwjB,WAAY,WACRhb,EAAS,CAACxI,KAAM,iBAEpBuiB,SAAU,SAACkB,EAAOtjB,GACdqI,EAAS,CAACxI,KAAMyjB,EAAOtjB,UAE3B8P,WAAY,WACRzH,EAAS,CAACxI,KAAM,wBAChBoK,GAAW6F,aACNhF,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,sBAAuBG,UACxC,SAAAmR,GACC9I,EAAS,CAACxI,KAAM,2BAG5B6N,SAAU,WACNrF,EAAS,CAACxI,KAAM,uBAChBoK,GAAWyD,WACN5C,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,qBAAsBG,UACvC,SAAAmR,GACC9I,EAAS,CAACxI,KAAM,0BAG5B+Q,MAAO,WACHvI,EAAS,CAACxI,KAAM,mBAChBoK,GAAW2G,QACN9F,KAAK,SAAA9K,GACFqI,EAAS,CAACxI,KAAM,iBAAkBG,KAAMA,EAAKE,QAAQiN,WACtD,SAAAgE,GACC9I,EAAS,CAACxI,KAAM,wBAMXsI,CAA6CG,YA7RnD,SAAArF,GAAK,MAAK,CACrB2B,KAAM,CACFnB,OAAQ,QAEZyf,UAAW,CACPK,IAAK,MAwRqDjb,CAAmBuZ,KCpR7E5e,WAAQugB,YAAe,CAC3BxK,QAAS,CACPrU,QAAS,CACP8e,KAAM,UACNxC,KAAM,UACNyC,aAAc,WAEhBC,UAAW,CACTF,KAAM,UACNC,aAAc,eAoBtBE,iBACIxgB,EAAA/B,EAAAgC,cAACwgB,EAAA,EAAD,CAAkB5gB,MAAOA,IACrBG,EAAA/B,EAAAgC,cAACygB,EAAA,EAAD,CAAUliB,MAAOA,GACbwB,EAAA/B,EAAAgC,cAAC8f,GAAD,QAGRY,SAASC,eAAe","file":"static/js/main.04e1bcd4.chunk.js","sourcesContent":["const initialState = {\r\n    currentPage: '',\r\n    currentTab: 0,\r\n    currentEditTab: 0,\r\n    timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n    alert: null,\r\n    time: Date.now(),\r\n    commissioningData: null,\r\n    fetchingCommissioningData: false,\r\n    currentTracker: null,\r\n    currentTrackerInfo: null,\r\n    xbeeResponse: [],\r\n    controlledTrackers: [],\r\n    editedTrackers: [],\r\n    SPAParameters: null,\r\n    stowAngles: null,\r\n    sendingSPAParameters: false,\r\n    sendingStowAngles: false,\r\n    gettingSPAParameters: false,\r\n    gettingStowAngles: false,\r\n    addingTrackers: false,\r\n    sensors: [],\r\n    responseQueue: [],\r\n    listen: false,\r\n    windSense: {\r\n        speed: null,\r\n        direction: null\r\n    },\r\n    floodSense: null,\r\n    snowSense: null,\r\n    wifiList: [],\r\n    sensorEvents: {\r\n        wind: 'disconnected',\r\n        snow: 'disconnected',\r\n        flood: 'disconnected'\r\n    },\r\n    roverStatus: {},\r\n    windLimits: {\r\n        speedLimits : {\r\n            upperSpeedLimit: '',\r\n            lowerSpeedLimit: ''\r\n        },\r\n        breachParameters : {\r\n            minBreachTime: '',\r\n            maxBreachTime: '',\r\n            maxBreachCount: ''\r\n        }\r\n    },\r\n    floodLimits: {\r\n        maxFloodLevel: '',\r\n        movingAveragePeriod: ''\r\n    },\r\n    snowLimits: {\r\n        maxSnowLevel: '',\r\n        movingAveragePeriod: '',\r\n        rowHeight: '',\r\n        rowWidth: '',\r\n        stepSize: ''\r\n    },\r\n    gettingFloodLimits: false,\r\n    settingFloodLimits: false,\r\n    gettingSnowLimits: false,\r\n    settingSnowLimits: false,\r\n    gettingWindLimits: false,\r\n    settingWindLimits: false,\r\n    PANID: '',\r\n    bqEnabled: false\r\n}\r\n\r\nconst difference = (a1, a2) => {\r\n    var result = [];\r\n    for (var i = 0; i < a1.length; i++) {\r\n        if (a2.indexOf(a1[i]) === -1) {\r\n            result.push(a1[i]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function app(state, action) {\r\n    if (typeof state === 'undefined') {\r\n      return initialState\r\n    }\r\n    switch (action.type) {\r\n        case 'GET_BQ_SUCCESS': \r\n        return {\r\n            ...state,\r\n            bqEnabled: action.json\r\n        }\r\n\r\n        case 'ui/xbee/panid':\r\n        return {\r\n            ...state,\r\n            PANID: action.json.panID\r\n        }\r\n\r\n        case 'SET_SNOW_LIMITS_REQUEST':\r\n        return {\r\n            ...state,\r\n            settingSnowLimits: true\r\n        }\r\n\r\n        case 'SET_FLOOD_LIMITS_REQUEST':\r\n        return {\r\n            ...state,\r\n            settingFloodLimits: true\r\n        }\r\n        \r\n        case 'SET_WIND_LIMITS_REQUEST':\r\n        return {\r\n            ...state,\r\n            settingWindLimits: true\r\n        }\r\n        \r\n        case 'SET_SNOW_LIMITS_SUCCESS':\r\n        return {\r\n            ...state,\r\n            settingSnowLimits: false\r\n        }\r\n\r\n        case 'SET_FLOOD_LIMITS_SUCCESS':\r\n        return {\r\n            ...state,\r\n            settingFloodLimits: false\r\n        }\r\n        \r\n        case 'SET_WIND_LIMITS_SUCCESS':\r\n        return {\r\n            ...state,\r\n            settingWindLimits: false\r\n        }\r\n        \r\n        case 'GET_SNOW_LIMITS_REQUEST':\r\n        return {\r\n            ...state,\r\n            gettingSnowLimits: true\r\n        }\r\n\r\n        case 'GET_FLOOD_LIMITS_REQUEST':\r\n        return {\r\n            ...state,\r\n            gettingFloodLimits: true\r\n        }\r\n        \r\n        case 'GET_WIND_LIMITS_REQUEST':\r\n        return {\r\n            ...state,\r\n            gettingWindLimits: true\r\n        }\r\n        \r\n        case 'GET_SNOW_LIMITS_SUCCESS':\r\n        return {\r\n            ...state,\r\n            snowLimits: action.json,\r\n            gettingSnowLimits: false\r\n        }\r\n\r\n        case 'GET_FLOOD_LIMITS_SUCCESS':\r\n        return {\r\n            ...state,\r\n            floodLimits: action.json,\r\n            gettingFloodLimits: false\r\n        }\r\n        \r\n        case 'GET_WIND_LIMITS_SUCCESS':\r\n        return {\r\n            ...state,\r\n            windLimits: action.json.message,\r\n            gettingWindLimits: false\r\n        }\r\n        \r\n        case 'changeEvent/rover':\r\n        return {\r\n            ...state,\r\n            roverStatus: {...state.roverStatus, [action.json.DID]: action.json.state}\r\n        }\r\n\r\n        case 'SCAN_WIFI_SUCCESS':\r\n        return {\r\n            ...state,\r\n            wifiList: action.json.message\r\n        }\r\n\r\n        case 'sensorReadings/wind':\r\n        return {\r\n            ...state,\r\n            windSense: action.json\r\n        }\r\n\r\n        case 'sensorReadings/flood':\r\n        return {\r\n            ...state,\r\n            floodSense: action.json.reading\r\n        }\r\n        case 'sensorReadings/snow':\r\n        return {\r\n            ...state,\r\n            snowSense: action.json.reading\r\n        }\r\n\r\n        case 'time':\r\n        return {\r\n            ...state,\r\n            time: action.json.time\r\n        }\r\n\r\n        case 'SET_CURRENT_TRACKER':\r\n        return {\r\n            ...state,\r\n            currentTracker: action.trackerID\r\n        }\r\n\r\n        case 'SET_RESPONSE_LISTENER':\r\n        return {\r\n            ...state,\r\n            listen: true\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: true,\r\n            responseQueue: []\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_REQUEST':\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: true,\r\n            responseQueue: []\r\n        }\r\n\r\n        case 'ui/rover/response/multiple':\r\n        if(state.listen) {\r\n            if(state.editedTrackers.length === state.responseQueue.length + 1) {\r\n                return {\r\n                    ...state,\r\n                    responseQueue: [...state.responseQueue, action.json],\r\n                    listen: false\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                responseQueue: [...state.responseQueue, action.json]\r\n            }\r\n        } else {\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        \r\n\r\n        case 'GET_SENSORS_SUCCESS':\r\n        let temp = {\r\n            wind: 'disconnected',\r\n            snow: 'disconnecetd',\r\n            flood: 'disconnected'\r\n        }\r\n        action.json.message.map(s => {\r\n            temp[s.type] = s.status\r\n        })\r\n        return {\r\n            ...state,\r\n            sensors: action.json.message,\r\n            sensorEvents: temp\r\n        }\r\n\r\n        case 'REMOVE_SENSOR_SUCCESS':\r\n                alert(`Removed Sensor of type: ${action.type} and model no: ${action.model} successfully`)\r\n        return {\r\n            ...state,\r\n            sensorEvents: {...state.sensorEvents, [action.type]: 'disconnected'}/* \r\n            alert: {\r\n                type: 'success',\r\n                message: 'Removed Sensor Successfully'\r\n            } */\r\n        }\r\n\r\n        case 'ADD_SENSORS_SUCCESS':\r\n        alert('Added Sensor Successfully')\r\n        return {\r\n            ...state,/* \r\n            alert: {\r\n                type: 'success',\r\n                message: 'Added Sensor Successfully'\r\n            } */\r\n        }\r\n        \r\n        case 'CHANGE_PAGE':\r\n        return {\r\n            ...state,\r\n            currentPage: action.page,\r\n            responseQueue: [],\r\n            commandQueue: []\r\n        }\r\n\r\n        case 'CHANGE_TAB':\r\n        return {\r\n            ...state,\r\n            currentTab: action.value.value,\r\n            responseQueue: [],\r\n            commandQueue: []\r\n        }\r\n\r\n        \r\n        case 'CHANGE_EDIT_TAB':\r\n        return {\r\n            ...state,\r\n            currentEditTab: action.value.value,\r\n            responseQueue: [],\r\n            commandQueue: []\r\n        }\r\n\r\n        case 'CLEAR_ALERT':\r\n        return {\r\n            ...state,\r\n            alert: null           \r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_REQUEST':\r\n        return {\r\n            ...state,\r\n            fetchingCommissioningData: true\r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_SUCCESS':\r\n        if(action.json.staticData === null || action.json.staticData.length === 0) {\r\n            return {\r\n                ...state,\r\n                fetchingCommissioningData: false,\r\n                currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,\r\n                commissioningData: null\r\n            }\r\n        } else {\r\n            let newRoverStatus = {...state.roverStatus}\r\n            action.json.staticData.map(r => {\r\n                newRoverStatus[r.deviceID] = 'online'\r\n            })\r\n            return {\r\n                ...state,\r\n                fetchingCommissioningData: false,\r\n                currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,\r\n                commissioningData: action.json.staticData,\r\n                currentTracker: action.json.staticData[0].trackerID,\r\n                roverStatus: newRoverStatus\r\n            }\r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_FAILURE':\r\n        alert('Error loading commissioning data')\r\n        return {\r\n            ...state,\r\n            fetchingCommissioningData: false,\r\n            currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error loading commissioning data'\r\n            } */\r\n        }\r\n\r\n        case 'GET_TIMEZONE_SUCCESS':\r\n        if(action.json.timeZone !== null) {\r\n            return {\r\n                ...state,\r\n                timeZone: action.json.timeZone\r\n            }\r\n        } else {\r\n            return state\r\n        }\r\n\r\n        case 'GET_TIMEZONE_FAILURE':\r\n        alert('Error getting timezone')\r\n        return {\r\n            ...state,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting timezone'\r\n            } */\r\n        }\r\n\r\n        case 'SCAN':\r\n        return {\r\n            ...state,\r\n            currentPage: 'Row Controller',\r\n            currentTab: 1\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_REQUEST':\r\n        return {\r\n            ...state\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_SUCCESS':\r\n        return {\r\n            ...state,\r\n            currentTrackerInfo: action.json\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_FAILURE':\r\n        alert('Error getting current tracker info')\r\n        return {\r\n            ...state,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting current tracker info'\r\n            } */\r\n        }\r\n\r\n        case 'DISCOVER_SUCCESS':\r\n        alert('Started Scanning')\r\n        return {\r\n            ...state,\r\n            xbeeResponse: [],/* \r\n            alert: {\r\n                type: 'success',\r\n                message: 'Started Scanning'\r\n            } */\r\n        }\r\n\r\n        case 'DISCOVER_FAILURE':\r\n        alert('Error Starting Scan')\r\n        return {\r\n            ...state,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error starting scan'\r\n            } */\r\n        }\r\n\r\n        case 'ui/rover/scan':\r\n        let a = null\r\n        if(state.commissioningData === null) {\r\n            if(state.xbeeResponse.filter(r => action.json.DID === r.DID).length === 0) {\r\n                a = [...state.xbeeResponse, action.json]\r\n            } else {\r\n                a = state.xbeeResponse\r\n            }\r\n        } else {\r\n            let b = state.commissioningData.filter(r => action.json.DID === r.deviceID)\r\n            if(b.length === 0) {\r\n                a = [...state.xbeeResponse, action.json]\r\n            } else {\r\n                a = [...state.xbeeResponse]\r\n            }\r\n                \r\n        }\r\n        return {\r\n            ...state,\r\n            xbeeResponse: a\r\n        }\r\n\r\n        case 'ADD_TRACKERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            addingTrackers: true\r\n        }\r\n\r\n        case 'ADD_TRACKERS_SUCCESS':\r\n        alert('Tracker(s) added')\r\n        const newXbeeResponse = difference(state.xbeeResponse, action.devices)\r\n        return {\r\n            ...state,\r\n            xbeeResponse: newXbeeResponse,\r\n            addingTrackers: false,/* \r\n            alert: {\r\n                type: 'success',\r\n                message: 'Tracker(s) added'\r\n            } */\r\n        }\r\n\r\n        case 'ADD_TRACKERS_FAILURE':\r\n        alert('Error adding trackers')\r\n        return {\r\n            ...state,\r\n            addingTrackers: false,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error adding trackers'\r\n            } */\r\n        }\r\n\r\n        case 'SET_EDITED_TRACKERS':\r\n        return {\r\n            ...state,\r\n            editedTrackers: action.trackers\r\n        }\r\n\r\n        case 'SET_CONTROLLED_TRACKERS':\r\n        return {\r\n            ...state,\r\n            controlledTrackers: action.trackers\r\n        }\r\n\r\n        case 'ui/rover/spa':\r\n        return {\r\n            ...state,\r\n            SPAParameters: {...state.SPAParameters, [action.json.DID]: action.json},\r\n            gettingSPAParameters: false\r\n        }\r\n\r\n        case 'ui/rover/stowangles':\r\n        return {\r\n            ...state,\r\n            stowAngles: {...state.stowAngles, [action.json.DID]: action.json},\r\n            gettingStowAngles: false\r\n        }\r\n\r\n        case 'GET_STOW_ANGLES_REQUEST':\r\n        return {\r\n            ...state,\r\n            gettingStowAngles: true\r\n        }\r\n\r\n        case 'GET_STOW_ANGLES_FAILURE':\r\n        alert('Error getting stow angles')\r\n        return {\r\n            ...state,\r\n            gettingStowAngles: false,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting stow angles'\r\n            } */\r\n        }\r\n\r\n        case 'GET_SPA_PARAMETERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            gettingSPAParameters: true\r\n        }\r\n\r\n        case 'GET_SPA_PARAMETERS_FAILURE':\r\n        alert('Error getting SPA parameters')\r\n        return {\r\n            ...state,\r\n            gettingSPAParameters: false,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting SPA parameters'\r\n            } */\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_FAILURE':\r\n        alert('Error setting SPA parameters')\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: false,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error setting SPA parameters'\r\n            } */\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_SUCCESS':\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: false\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_FAILURE':\r\n        alert('Error setting stow angles')\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: false,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error setting stow angles'\r\n            } */\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_SUCCESS':\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: false\r\n        }\r\n\r\n        default:\r\n        return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport { app } from '../App/app.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  app\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n        loggerMiddleware        \r\n    )\r\n);","export const timezones = [\r\n    {\r\n      \"value\": \"Dateline Standard Time\",\r\n      \"abbr\": \"DST\",\r\n      \"offset\": -12,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC-12:00) International Date Line West\",\r\n      \"utc\": [\r\n        \"Etc/GMT+12\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"UTC-11\",\r\n      \"abbr\": \"U\",\r\n      \"offset\": -11,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\r\n      \"utc\": [\r\n        \"Etc/GMT+11\",\r\n        \"Pacific/Midway\",\r\n        \"Pacific/Niue\",\r\n        \"Pacific/Pago_Pago\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Hawaiian Standard Time\",\r\n      \"abbr\": \"HST\",\r\n      \"offset\": -10,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC-10:00) Hawaii\",\r\n      \"utc\": [\r\n        \"Etc/GMT+10\",\r\n        \"Pacific/Honolulu\",\r\n        \"Pacific/Johnston\",\r\n        \"Pacific/Rarotonga\",\r\n        \"Pacific/Tahiti\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Alaskan Standard Time\",\r\n      \"abbr\": \"AKDT\",\r\n      \"offset\": -8,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC-09:00) Alaska\",\r\n      \"utc\": [\r\n        \"America/Anchorage\",\r\n        \"America/Juneau\",\r\n        \"America/Nome\",\r\n        \"America/Sitka\",\r\n        \"America/Yakutat\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Pacific Standard Time (Mexico)\",\r\n      \"abbr\": \"PDT\",\r\n      \"offset\": -7,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC-08:00) Baja California\",\r\n      \"utc\": [\r\n        \"America/Santa_Isabel\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Pacific Daylight Time\",\r\n      \"abbr\": \"PDT\",\r\n      \"offset\": -7,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\r\n      \"utc\": [\r\n        \"America/Dawson\",\r\n        \"America/Los_Angeles\",\r\n        \"America/Tijuana\",\r\n        \"America/Vancouver\",\r\n        \"America/Whitehorse\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Pacific Standard Time\",\r\n      \"abbr\": \"PST\",\r\n      \"offset\": -8,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\r\n      \"utc\": [\r\n        \"America/Dawson\",\r\n        \"America/Los_Angeles\",\r\n        \"America/Tijuana\",\r\n        \"America/Vancouver\",\r\n        \"America/Whitehorse\",\r\n        \"PST8PDT\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"US Mountain Standard Time\",\r\n      \"abbr\": \"UMST\",\r\n      \"offset\": -7,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC-07:00) Arizona\",\r\n      \"utc\": [\r\n        \"America/Creston\",\r\n        \"America/Dawson_Creek\",\r\n        \"America/Hermosillo\",\r\n        \"America/Phoenix\",\r\n        \"Etc/GMT+7\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Mountain Standard Time (Mexico)\",\r\n      \"abbr\": \"MDT\",\r\n      \"offset\": -6,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\r\n      \"utc\": [\r\n        \"America/Chihuahua\",\r\n        \"America/Mazatlan\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Mountain Standard Time\",\r\n      \"abbr\": \"MDT\",\r\n      \"offset\": -6,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\r\n      \"utc\": [\r\n        \"America/Boise\",\r\n        \"America/Cambridge_Bay\",\r\n        \"America/Denver\",\r\n        \"America/Edmonton\",\r\n        \"America/Inuvik\",\r\n        \"America/Ojinaga\",\r\n        \"America/Yellowknife\",\r\n        \"MST7MDT\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Central America Standard Time\",\r\n      \"abbr\": \"CAST\",\r\n      \"offset\": -6,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC-06:00) Central America\",\r\n      \"utc\": [\r\n        \"America/Belize\",\r\n        \"America/Costa_Rica\",\r\n        \"America/El_Salvador\",\r\n        \"America/Guatemala\",\r\n        \"America/Managua\",\r\n        \"America/Tegucigalpa\",\r\n        \"Etc/GMT+6\",\r\n        \"Pacific/Galapagos\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Central Standard Time\",\r\n      \"abbr\": \"CDT\",\r\n      \"offset\": -5,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\r\n      \"utc\": [\r\n        \"America/Chicago\",\r\n        \"America/Indiana/Knox\",\r\n        \"America/Indiana/Tell_City\",\r\n        \"America/Matamoros\",\r\n        \"America/Menominee\",\r\n        \"America/North_Dakota/Beulah\",\r\n        \"America/North_Dakota/Center\",\r\n        \"America/North_Dakota/New_Salem\",\r\n        \"America/Rainy_River\",\r\n        \"America/Rankin_Inlet\",\r\n        \"America/Resolute\",\r\n        \"America/Winnipeg\",\r\n        \"CST6CDT\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Central Standard Time (Mexico)\",\r\n      \"abbr\": \"CDT\",\r\n      \"offset\": -5,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\r\n      \"utc\": [\r\n        \"America/Bahia_Banderas\",\r\n        \"America/Cancun\",\r\n        \"America/Merida\",\r\n        \"America/Mexico_City\",\r\n        \"America/Monterrey\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Canada Central Standard Time\",\r\n      \"abbr\": \"CCST\",\r\n      \"offset\": -6,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC-06:00) Saskatchewan\",\r\n      \"utc\": [\r\n        \"America/Regina\",\r\n        \"America/Swift_Current\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"SA Pacific Standard Time\",\r\n      \"abbr\": \"SPST\",\r\n      \"offset\": -5,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\r\n      \"utc\": [\r\n        \"America/Bogota\",\r\n        \"America/Cayman\",\r\n        \"America/Coral_Harbour\",\r\n        \"America/Eirunepe\",\r\n        \"America/Guayaquil\",\r\n        \"America/Jamaica\",\r\n        \"America/Lima\",\r\n        \"America/Panama\",\r\n        \"America/Rio_Branco\",\r\n        \"Etc/GMT+5\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Eastern Standard Time\",\r\n      \"abbr\": \"EDT\",\r\n      \"offset\": -4,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\r\n      \"utc\": [\r\n        \"America/Detroit\",\r\n        \"America/Havana\",\r\n        \"America/Indiana/Petersburg\",\r\n        \"America/Indiana/Vincennes\",\r\n        \"America/Indiana/Winamac\",\r\n        \"America/Iqaluit\",\r\n        \"America/Kentucky/Monticello\",\r\n        \"America/Louisville\",\r\n        \"America/Montreal\",\r\n        \"America/Nassau\",\r\n        \"America/New_York\",\r\n        \"America/Nipigon\",\r\n        \"America/Pangnirtung\",\r\n        \"America/Port-au-Prince\",\r\n        \"America/Thunder_Bay\",\r\n        \"America/Toronto\",\r\n        \"EST5EDT\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"US Eastern Standard Time\",\r\n      \"abbr\": \"UEDT\",\r\n      \"offset\": -4,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC-05:00) Indiana (East)\",\r\n      \"utc\": [\r\n        \"America/Indiana/Marengo\",\r\n        \"America/Indiana/Vevay\",\r\n        \"America/Indianapolis\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Venezuela Standard Time\",\r\n      \"abbr\": \"VST\",\r\n      \"offset\": -4.5,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC-04:30) Caracas\",\r\n      \"utc\": [\r\n        \"America/Caracas\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Paraguay Standard Time\",\r\n      \"abbr\": \"PYT\",\r\n      \"offset\": -4,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC-04:00) Asuncion\",\r\n      \"utc\": [\r\n        \"America/Asuncion\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Atlantic Standard Time\",\r\n      \"abbr\": \"ADT\",\r\n      \"offset\": -3,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\r\n      \"utc\": [\r\n        \"America/Glace_Bay\",\r\n        \"America/Goose_Bay\",\r\n        \"America/Halifax\",\r\n        \"America/Moncton\",\r\n        \"America/Thule\",\r\n        \"Atlantic/Bermuda\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Central Brazilian Standard Time\",\r\n      \"abbr\": \"CBST\",\r\n      \"offset\": -4,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC-04:00) Cuiaba\",\r\n      \"utc\": [\r\n        \"America/Campo_Grande\",\r\n        \"America/Cuiaba\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"SA Western Standard Time\",\r\n      \"abbr\": \"SWST\",\r\n      \"offset\": -4,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\r\n      \"utc\": [\r\n        \"America/Anguilla\",\r\n        \"America/Antigua\",\r\n        \"America/Aruba\",\r\n        \"America/Barbados\",\r\n        \"America/Blanc-Sablon\",\r\n        \"America/Boa_Vista\",\r\n        \"America/Curacao\",\r\n        \"America/Dominica\",\r\n        \"America/Grand_Turk\",\r\n        \"America/Grenada\",\r\n        \"America/Guadeloupe\",\r\n        \"America/Guyana\",\r\n        \"America/Kralendijk\",\r\n        \"America/La_Paz\",\r\n        \"America/Lower_Princes\",\r\n        \"America/Manaus\",\r\n        \"America/Marigot\",\r\n        \"America/Martinique\",\r\n        \"America/Montserrat\",\r\n        \"America/Port_of_Spain\",\r\n        \"America/Porto_Velho\",\r\n        \"America/Puerto_Rico\",\r\n        \"America/Santo_Domingo\",\r\n        \"America/St_Barthelemy\",\r\n        \"America/St_Kitts\",\r\n        \"America/St_Lucia\",\r\n        \"America/St_Thomas\",\r\n        \"America/St_Vincent\",\r\n        \"America/Tortola\",\r\n        \"Etc/GMT+4\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Pacific SA Standard Time\",\r\n      \"abbr\": \"PSST\",\r\n      \"offset\": -4,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC-04:00) Santiago\",\r\n      \"utc\": [\r\n        \"America/Santiago\",\r\n        \"Antarctica/Palmer\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Newfoundland Standard Time\",\r\n      \"abbr\": \"NDT\",\r\n      \"offset\": -2.5,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC-03:30) Newfoundland\",\r\n      \"utc\": [\r\n        \"America/St_Johns\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"E. South America Standard Time\",\r\n      \"abbr\": \"ESAST\",\r\n      \"offset\": -3,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC-03:00) Brasilia\",\r\n      \"utc\": [\r\n        \"America/Sao_Paulo\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Argentina Standard Time\",\r\n      \"abbr\": \"AST\",\r\n      \"offset\": -3,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC-03:00) Buenos Aires\",\r\n      \"utc\": [\r\n        \"America/Argentina/La_Rioja\",\r\n        \"America/Argentina/Rio_Gallegos\",\r\n        \"America/Argentina/Salta\",\r\n        \"America/Argentina/San_Juan\",\r\n        \"America/Argentina/San_Luis\",\r\n        \"America/Argentina/Tucuman\",\r\n        \"America/Argentina/Ushuaia\",\r\n        \"America/Buenos_Aires\",\r\n        \"America/Catamarca\",\r\n        \"America/Cordoba\",\r\n        \"America/Jujuy\",\r\n        \"America/Mendoza\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"SA Eastern Standard Time\",\r\n      \"abbr\": \"SEST\",\r\n      \"offset\": -3,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\r\n      \"utc\": [\r\n        \"America/Araguaina\",\r\n        \"America/Belem\",\r\n        \"America/Cayenne\",\r\n        \"America/Fortaleza\",\r\n        \"America/Maceio\",\r\n        \"America/Paramaribo\",\r\n        \"America/Recife\",\r\n        \"America/Santarem\",\r\n        \"Antarctica/Rothera\",\r\n        \"Atlantic/Stanley\",\r\n        \"Etc/GMT+3\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Greenland Standard Time\",\r\n      \"abbr\": \"GDT\",\r\n      \"offset\": -3,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC-03:00) Greenland\",\r\n      \"utc\": [\r\n        \"America/Godthab\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Montevideo Standard Time\",\r\n      \"abbr\": \"MST\",\r\n      \"offset\": -3,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC-03:00) Montevideo\",\r\n      \"utc\": [\r\n        \"America/Montevideo\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Bahia Standard Time\",\r\n      \"abbr\": \"BST\",\r\n      \"offset\": -3,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC-03:00) Salvador\",\r\n      \"utc\": [\r\n        \"America/Bahia\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"UTC-02\",\r\n      \"abbr\": \"U\",\r\n      \"offset\": -2,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\r\n      \"utc\": [\r\n        \"America/Noronha\",\r\n        \"Atlantic/South_Georgia\",\r\n        \"Etc/GMT+2\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Mid-Atlantic Standard Time\",\r\n      \"abbr\": \"MDT\",\r\n      \"offset\": -1,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\r\n      \"utc\": []\r\n    },\r\n    {\r\n      \"value\": \"Azores Standard Time\",\r\n      \"abbr\": \"ADT\",\r\n      \"offset\": 0,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC-01:00) Azores\",\r\n      \"utc\": [\r\n        \"America/Scoresbysund\",\r\n        \"Atlantic/Azores\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Cape Verde Standard Time\",\r\n      \"abbr\": \"CVST\",\r\n      \"offset\": -1,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\r\n      \"utc\": [\r\n        \"Atlantic/Cape_Verde\",\r\n        \"Etc/GMT+1\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Morocco Standard Time\",\r\n      \"abbr\": \"MDT\",\r\n      \"offset\": 1,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC) Casablanca\",\r\n      \"utc\": [\r\n        \"Africa/Casablanca\",\r\n        \"Africa/El_Aaiun\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"UTC\",\r\n      \"abbr\": \"UTC\",\r\n      \"offset\": 0,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC) Coordinated Universal Time\",\r\n      \"utc\": [\r\n        \"America/Danmarkshavn\",\r\n        \"Etc/GMT\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Greenwich Mean Time\",\r\n      \"abbr\": \"GMT\",\r\n      \"offset\": 0,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC) Edinburgh, London\",\r\n      \"utc\": [\r\n        \"Europe/Isle_of_Man\",\r\n        \"Europe/Guernsey\",\r\n        \"Europe/Jersey\",\r\n        \"Europe/London\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"British Summer Time\",\r\n      \"abbr\": \"BST\",\r\n      \"offset\": 1,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\r\n      \"utc\": [\r\n        \"Europe/Isle_of_Man\",\r\n        \"Europe/Guernsey\",\r\n        \"Europe/Jersey\",\r\n        \"Europe/London\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"GMT Standard Time\",\r\n      \"abbr\": \"GDT\",\r\n      \"offset\": 1,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC) Dublin, Lisbon\",\r\n      \"utc\": [\r\n        \"Atlantic/Canary\",\r\n        \"Atlantic/Faeroe\",\r\n        \"Atlantic/Madeira\",\r\n        \"Europe/Dublin\",\r\n        \"Europe/Lisbon\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Greenwich Standard Time\",\r\n      \"abbr\": \"GST\",\r\n      \"offset\": 0,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\r\n      \"utc\": [\r\n        \"Africa/Abidjan\",\r\n        \"Africa/Accra\",\r\n        \"Africa/Bamako\",\r\n        \"Africa/Banjul\",\r\n        \"Africa/Bissau\",\r\n        \"Africa/Conakry\",\r\n        \"Africa/Dakar\",\r\n        \"Africa/Freetown\",\r\n        \"Africa/Lome\",\r\n        \"Africa/Monrovia\",\r\n        \"Africa/Nouakchott\",\r\n        \"Africa/Ouagadougou\",\r\n        \"Africa/Sao_Tome\",\r\n        \"Atlantic/Reykjavik\",\r\n        \"Atlantic/St_Helena\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"W. Europe Standard Time\",\r\n      \"abbr\": \"WEDT\",\r\n      \"offset\": 2,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\r\n      \"utc\": [\r\n        \"Arctic/Longyearbyen\",\r\n        \"Europe/Amsterdam\",\r\n        \"Europe/Andorra\",\r\n        \"Europe/Berlin\",\r\n        \"Europe/Busingen\",\r\n        \"Europe/Gibraltar\",\r\n        \"Europe/Luxembourg\",\r\n        \"Europe/Malta\",\r\n        \"Europe/Monaco\",\r\n        \"Europe/Oslo\",\r\n        \"Europe/Rome\",\r\n        \"Europe/San_Marino\",\r\n        \"Europe/Stockholm\",\r\n        \"Europe/Vaduz\",\r\n        \"Europe/Vatican\",\r\n        \"Europe/Vienna\",\r\n        \"Europe/Zurich\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Central Europe Standard Time\",\r\n      \"abbr\": \"CEDT\",\r\n      \"offset\": 2,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\r\n      \"utc\": [\r\n        \"Europe/Belgrade\",\r\n        \"Europe/Bratislava\",\r\n        \"Europe/Budapest\",\r\n        \"Europe/Ljubljana\",\r\n        \"Europe/Podgorica\",\r\n        \"Europe/Prague\",\r\n        \"Europe/Tirane\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Romance Standard Time\",\r\n      \"abbr\": \"RDT\",\r\n      \"offset\": 2,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\r\n      \"utc\": [\r\n        \"Africa/Ceuta\",\r\n        \"Europe/Brussels\",\r\n        \"Europe/Copenhagen\",\r\n        \"Europe/Madrid\",\r\n        \"Europe/Paris\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Central European Standard Time\",\r\n      \"abbr\": \"CEDT\",\r\n      \"offset\": 2,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\r\n      \"utc\": [\r\n        \"Europe/Sarajevo\",\r\n        \"Europe/Skopje\",\r\n        \"Europe/Warsaw\",\r\n        \"Europe/Zagreb\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"W. Central Africa Standard Time\",\r\n      \"abbr\": \"WCAST\",\r\n      \"offset\": 1,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+01:00) West Central Africa\",\r\n      \"utc\": [\r\n        \"Africa/Algiers\",\r\n        \"Africa/Bangui\",\r\n        \"Africa/Brazzaville\",\r\n        \"Africa/Douala\",\r\n        \"Africa/Kinshasa\",\r\n        \"Africa/Lagos\",\r\n        \"Africa/Libreville\",\r\n        \"Africa/Luanda\",\r\n        \"Africa/Malabo\",\r\n        \"Africa/Ndjamena\",\r\n        \"Africa/Niamey\",\r\n        \"Africa/Porto-Novo\",\r\n        \"Africa/Tunis\",\r\n        \"Etc/GMT-1\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Namibia Standard Time\",\r\n      \"abbr\": \"NST\",\r\n      \"offset\": 1,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+01:00) Windhoek\",\r\n      \"utc\": [\r\n        \"Africa/Windhoek\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"GTB Standard Time\",\r\n      \"abbr\": \"GDT\",\r\n      \"offset\": 3,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\r\n      \"utc\": [\r\n        \"Asia/Nicosia\",\r\n        \"Europe/Athens\",\r\n        \"Europe/Bucharest\",\r\n        \"Europe/Chisinau\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Middle East Standard Time\",\r\n      \"abbr\": \"MEDT\",\r\n      \"offset\": 3,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC+02:00) Beirut\",\r\n      \"utc\": [\r\n        \"Asia/Beirut\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Egypt Standard Time\",\r\n      \"abbr\": \"EST\",\r\n      \"offset\": 2,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+02:00) Cairo\",\r\n      \"utc\": [\r\n        \"Africa/Cairo\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Syria Standard Time\",\r\n      \"abbr\": \"SDT\",\r\n      \"offset\": 3,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC+02:00) Damascus\",\r\n      \"utc\": [\r\n        \"Asia/Damascus\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"E. Europe Standard Time\",\r\n      \"abbr\": \"EEDT\",\r\n      \"offset\": 3,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC+02:00) E. Europe\",\r\n      \"utc\": [\r\n        \"Asia/Nicosia\",\r\n        \"Europe/Athens\",\r\n        \"Europe/Bucharest\",\r\n        \"Europe/Chisinau\",\r\n        \"Europe/Helsinki\",\r\n        \"Europe/Kiev\",\r\n        \"Europe/Mariehamn\",\r\n        \"Europe/Nicosia\",\r\n        \"Europe/Riga\",\r\n        \"Europe/Sofia\",\r\n        \"Europe/Tallinn\",\r\n        \"Europe/Uzhgorod\",\r\n        \"Europe/Vilnius\",\r\n        \"Europe/Zaporozhye\"\r\n  \r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"South Africa Standard Time\",\r\n      \"abbr\": \"SAST\",\r\n      \"offset\": 2,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\r\n      \"utc\": [\r\n        \"Africa/Blantyre\",\r\n        \"Africa/Bujumbura\",\r\n        \"Africa/Gaborone\",\r\n        \"Africa/Harare\",\r\n        \"Africa/Johannesburg\",\r\n        \"Africa/Kigali\",\r\n        \"Africa/Lubumbashi\",\r\n        \"Africa/Lusaka\",\r\n        \"Africa/Maputo\",\r\n        \"Africa/Maseru\",\r\n        \"Africa/Mbabane\",\r\n        \"Etc/GMT-2\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"FLE Standard Time\",\r\n      \"abbr\": \"FDT\",\r\n      \"offset\": 3,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\r\n      \"utc\": [\r\n        \"Europe/Helsinki\",\r\n        \"Europe/Kiev\",\r\n        \"Europe/Mariehamn\",\r\n        \"Europe/Riga\",\r\n        \"Europe/Sofia\",\r\n        \"Europe/Tallinn\",\r\n        \"Europe/Uzhgorod\",\r\n        \"Europe/Vilnius\",\r\n        \"Europe/Zaporozhye\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Turkey Standard Time\",\r\n      \"abbr\": \"TDT\",\r\n      \"offset\": 3,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+03:00) Istanbul\",\r\n      \"utc\": [\r\n        \"Europe/Istanbul\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Israel Standard Time\",\r\n      \"abbr\": \"JDT\",\r\n      \"offset\": 3,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC+02:00) Jerusalem\",\r\n      \"utc\": [\r\n        \"Asia/Jerusalem\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Libya Standard Time\",\r\n      \"abbr\": \"LST\",\r\n      \"offset\": 2,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+02:00) Tripoli\",\r\n      \"utc\": [\r\n        \"Africa/Tripoli\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Jordan Standard Time\",\r\n      \"abbr\": \"JST\",\r\n      \"offset\": 3,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+03:00) Amman\",\r\n      \"utc\": [\r\n        \"Asia/Amman\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Arabic Standard Time\",\r\n      \"abbr\": \"AST\",\r\n      \"offset\": 3,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+03:00) Baghdad\",\r\n      \"utc\": [\r\n        \"Asia/Baghdad\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Kaliningrad Standard Time\",\r\n      \"abbr\": \"KST\",\r\n      \"offset\": 3,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+03:00) Kaliningrad, Minsk\",\r\n      \"utc\": [\r\n        \"Europe/Kaliningrad\",\r\n        \"Europe/Minsk\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Arab Standard Time\",\r\n      \"abbr\": \"AST\",\r\n      \"offset\": 3,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\r\n      \"utc\": [\r\n        \"Asia/Aden\",\r\n        \"Asia/Bahrain\",\r\n        \"Asia/Kuwait\",\r\n        \"Asia/Qatar\",\r\n        \"Asia/Riyadh\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"E. Africa Standard Time\",\r\n      \"abbr\": \"EAST\",\r\n      \"offset\": 3,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+03:00) Nairobi\",\r\n      \"utc\": [\r\n        \"Africa/Addis_Ababa\",\r\n        \"Africa/Asmera\",\r\n        \"Africa/Dar_es_Salaam\",\r\n        \"Africa/Djibouti\",\r\n        \"Africa/Juba\",\r\n        \"Africa/Kampala\",\r\n        \"Africa/Khartoum\",\r\n        \"Africa/Mogadishu\",\r\n        \"Africa/Nairobi\",\r\n        \"Antarctica/Syowa\",\r\n        \"Etc/GMT-3\",\r\n        \"Indian/Antananarivo\",\r\n        \"Indian/Comoro\",\r\n        \"Indian/Mayotte\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Moscow Standard Time\",\r\n      \"abbr\": \"MSK\",\r\n      \"offset\": 3,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd\",\r\n      \"utc\": [\r\n          \"Europe/Kirov\",\r\n        \"Europe/Moscow\",\r\n        \"Europe/Simferopol\",\r\n        \"Europe/Volgograd\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Samara Time\",\r\n      \"abbr\": \"SAMT\",\r\n      \"offset\": 4,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\r\n      \"utc\": [\r\n          \"Europe/Astrakhan\",\r\n        \"Europe/Samara\",\r\n          \"Europe/Ulyanovsk\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Iran Standard Time\",\r\n      \"abbr\": \"IDT\",\r\n      \"offset\": 4.5,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC+03:30) Tehran\",\r\n      \"utc\": [\r\n        \"Asia/Tehran\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Arabian Standard Time\",\r\n      \"abbr\": \"AST\",\r\n      \"offset\": 4,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\r\n      \"utc\": [\r\n        \"Asia/Dubai\",\r\n        \"Asia/Muscat\",\r\n        \"Etc/GMT-4\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Azerbaijan Standard Time\",\r\n      \"abbr\": \"ADT\",\r\n      \"offset\": 5,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC+04:00) Baku\",\r\n      \"utc\": [\r\n        \"Asia/Baku\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Mauritius Standard Time\",\r\n      \"abbr\": \"MST\",\r\n      \"offset\": 4,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+04:00) Port Louis\",\r\n      \"utc\": [\r\n        \"Indian/Mahe\",\r\n        \"Indian/Mauritius\",\r\n        \"Indian/Reunion\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Georgian Standard Time\",\r\n      \"abbr\": \"GET\",\r\n      \"offset\": 4,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+04:00) Tbilisi\",\r\n      \"utc\": [\r\n        \"Asia/Tbilisi\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Caucasus Standard Time\",\r\n      \"abbr\": \"CST\",\r\n      \"offset\": 4,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+04:00) Yerevan\",\r\n      \"utc\": [\r\n        \"Asia/Yerevan\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Afghanistan Standard Time\",\r\n      \"abbr\": \"AST\",\r\n      \"offset\": 4.5,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+04:30) Kabul\",\r\n      \"utc\": [\r\n        \"Asia/Kabul\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"West Asia Standard Time\",\r\n      \"abbr\": \"WAST\",\r\n      \"offset\": 5,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\r\n      \"utc\": [\r\n        \"Antarctica/Mawson\",\r\n        \"Asia/Aqtau\",\r\n        \"Asia/Aqtobe\",\r\n        \"Asia/Ashgabat\",\r\n        \"Asia/Dushanbe\",\r\n        \"Asia/Oral\",\r\n        \"Asia/Samarkand\",\r\n        \"Asia/Tashkent\",\r\n        \"Etc/GMT-5\",\r\n        \"Indian/Kerguelen\",\r\n        \"Indian/Maldives\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Yekaterinburg Time\",\r\n      \"abbr\": \"YEKT\",\r\n      \"offset\": 5,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\r\n      \"utc\": [\r\n        \"Asia/Yekaterinburg\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Pakistan Standard Time\",\r\n      \"abbr\": \"PKT\",\r\n      \"offset\": 5,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\r\n      \"utc\": [\r\n        \"Asia/Karachi\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"India Standard Time\",\r\n      \"abbr\": \"IST\",\r\n      \"offset\": 5.5,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\r\n      \"utc\": [\r\n        \"Asia/Calcutta\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Sri Lanka Standard Time\",\r\n      \"abbr\": \"SLST\",\r\n      \"offset\": 5.5,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\r\n      \"utc\": [\r\n        \"Asia/Colombo\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Nepal Standard Time\",\r\n      \"abbr\": \"NST\",\r\n      \"offset\": 5.75,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+05:45) Kathmandu\",\r\n      \"utc\": [\r\n        \"Asia/Kathmandu\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Central Asia Standard Time\",\r\n      \"abbr\": \"CAST\",\r\n      \"offset\": 6,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+06:00) Astana\",\r\n      \"utc\": [\r\n        \"Antarctica/Vostok\",\r\n        \"Asia/Almaty\",\r\n        \"Asia/Bishkek\",\r\n        \"Asia/Qyzylorda\",\r\n        \"Asia/Urumqi\",\r\n        \"Etc/GMT-6\",\r\n        \"Indian/Chagos\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Bangladesh Standard Time\",\r\n      \"abbr\": \"BST\",\r\n      \"offset\": 6,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+06:00) Dhaka\",\r\n      \"utc\": [\r\n        \"Asia/Dhaka\",\r\n        \"Asia/Thimphu\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Myanmar Standard Time\",\r\n      \"abbr\": \"MST\",\r\n      \"offset\": 6.5,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\r\n      \"utc\": [\r\n        \"Asia/Rangoon\",\r\n        \"Indian/Cocos\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"SE Asia Standard Time\",\r\n      \"abbr\": \"SAST\",\r\n      \"offset\": 7,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\r\n      \"utc\": [\r\n        \"Antarctica/Davis\",\r\n        \"Asia/Bangkok\",\r\n        \"Asia/Hovd\",\r\n        \"Asia/Jakarta\",\r\n        \"Asia/Phnom_Penh\",\r\n        \"Asia/Pontianak\",\r\n        \"Asia/Saigon\",\r\n        \"Asia/Vientiane\",\r\n        \"Etc/GMT-7\",\r\n        \"Indian/Christmas\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"N. Central Asia Standard Time\",\r\n      \"abbr\": \"NCAST\",\r\n      \"offset\": 7,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+07:00) Novosibirsk\",\r\n      \"utc\": [\r\n        \"Asia/Novokuznetsk\",\r\n        \"Asia/Novosibirsk\",\r\n        \"Asia/Omsk\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"China Standard Time\",\r\n      \"abbr\": \"CST\",\r\n      \"offset\": 8,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\r\n      \"utc\": [\r\n        \"Asia/Hong_Kong\",\r\n        \"Asia/Macau\",\r\n        \"Asia/Shanghai\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"North Asia Standard Time\",\r\n      \"abbr\": \"NAST\",\r\n      \"offset\": 8,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\r\n      \"utc\": [\r\n        \"Asia/Krasnoyarsk\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Singapore Standard Time\",\r\n      \"abbr\": \"MPST\",\r\n      \"offset\": 8,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\r\n      \"utc\": [\r\n        \"Asia/Brunei\",\r\n        \"Asia/Kuala_Lumpur\",\r\n        \"Asia/Kuching\",\r\n        \"Asia/Makassar\",\r\n        \"Asia/Manila\",\r\n        \"Asia/Singapore\",\r\n        \"Etc/GMT-8\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"W. Australia Standard Time\",\r\n      \"abbr\": \"WAST\",\r\n      \"offset\": 8,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+08:00) Perth\",\r\n      \"utc\": [\r\n        \"Antarctica/Casey\",\r\n        \"Australia/Perth\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Taipei Standard Time\",\r\n      \"abbr\": \"TST\",\r\n      \"offset\": 8,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+08:00) Taipei\",\r\n      \"utc\": [\r\n        \"Asia/Taipei\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Ulaanbaatar Standard Time\",\r\n      \"abbr\": \"UST\",\r\n      \"offset\": 8,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\r\n      \"utc\": [\r\n        \"Asia/Choibalsan\",\r\n        \"Asia/Ulaanbaatar\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"North Asia East Standard Time\",\r\n      \"abbr\": \"NAEST\",\r\n      \"offset\": 8,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+08:00) Irkutsk\",\r\n      \"utc\": [\r\n        \"Asia/Irkutsk\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Japan Standard Time\",\r\n      \"abbr\": \"JST\",\r\n      \"offset\": 9,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\r\n      \"utc\": [\r\n        \"Asia/Dili\",\r\n        \"Asia/Jayapura\",\r\n        \"Asia/Tokyo\",\r\n        \"Etc/GMT-9\",\r\n        \"Pacific/Palau\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Korea Standard Time\",\r\n      \"abbr\": \"KST\",\r\n      \"offset\": 9,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+09:00) Seoul\",\r\n      \"utc\": [\r\n        \"Asia/Pyongyang\",\r\n        \"Asia/Seoul\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Cen. Australia Standard Time\",\r\n      \"abbr\": \"CAST\",\r\n      \"offset\": 9.5,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+09:30) Adelaide\",\r\n      \"utc\": [\r\n        \"Australia/Adelaide\",\r\n        \"Australia/Broken_Hill\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"AUS Central Standard Time\",\r\n      \"abbr\": \"ACST\",\r\n      \"offset\": 9.5,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+09:30) Darwin\",\r\n      \"utc\": [\r\n        \"Australia/Darwin\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"E. Australia Standard Time\",\r\n      \"abbr\": \"EAST\",\r\n      \"offset\": 10,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+10:00) Brisbane\",\r\n      \"utc\": [\r\n        \"Australia/Brisbane\",\r\n        \"Australia/Lindeman\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"AUS Eastern Standard Time\",\r\n      \"abbr\": \"AEST\",\r\n      \"offset\": 10,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\r\n      \"utc\": [\r\n        \"Australia/Melbourne\",\r\n        \"Australia/Sydney\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"West Pacific Standard Time\",\r\n      \"abbr\": \"WPST\",\r\n      \"offset\": 10,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\r\n      \"utc\": [\r\n        \"Antarctica/DumontDUrville\",\r\n        \"Etc/GMT-10\",\r\n        \"Pacific/Guam\",\r\n        \"Pacific/Port_Moresby\",\r\n        \"Pacific/Saipan\",\r\n        \"Pacific/Truk\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Tasmania Standard Time\",\r\n      \"abbr\": \"TST\",\r\n      \"offset\": 10,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+10:00) Hobart\",\r\n      \"utc\": [\r\n        \"Australia/Currie\",\r\n        \"Australia/Hobart\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Yakutsk Standard Time\",\r\n      \"abbr\": \"YST\",\r\n      \"offset\": 9,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+09:00) Yakutsk\",\r\n      \"utc\": [\r\n        \"Asia/Chita\",\r\n        \"Asia/Khandyga\",\r\n        \"Asia/Yakutsk\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Central Pacific Standard Time\",\r\n      \"abbr\": \"CPST\",\r\n      \"offset\": 11,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\r\n      \"utc\": [\r\n        \"Antarctica/Macquarie\",\r\n        \"Etc/GMT-11\",\r\n        \"Pacific/Efate\",\r\n        \"Pacific/Guadalcanal\",\r\n        \"Pacific/Kosrae\",\r\n        \"Pacific/Noumea\",\r\n        \"Pacific/Ponape\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Vladivostok Standard Time\",\r\n      \"abbr\": \"VST\",\r\n      \"offset\": 11,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+11:00) Vladivostok\",\r\n      \"utc\": [\r\n        \"Asia/Sakhalin\",\r\n        \"Asia/Ust-Nera\",\r\n        \"Asia/Vladivostok\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"New Zealand Standard Time\",\r\n      \"abbr\": \"NZST\",\r\n      \"offset\": 12,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\r\n      \"utc\": [\r\n        \"Antarctica/McMurdo\",\r\n        \"Pacific/Auckland\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"UTC+12\",\r\n      \"abbr\": \"U\",\r\n      \"offset\": 12,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\r\n      \"utc\": [\r\n        \"Etc/GMT-12\",\r\n        \"Pacific/Funafuti\",\r\n        \"Pacific/Kwajalein\",\r\n        \"Pacific/Majuro\",\r\n        \"Pacific/Nauru\",\r\n        \"Pacific/Tarawa\",\r\n        \"Pacific/Wake\",\r\n        \"Pacific/Wallis\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Fiji Standard Time\",\r\n      \"abbr\": \"FST\",\r\n      \"offset\": 12,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+12:00) Fiji\",\r\n      \"utc\": [\r\n        \"Pacific/Fiji\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Magadan Standard Time\",\r\n      \"abbr\": \"MST\",\r\n      \"offset\": 12,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+12:00) Magadan\",\r\n      \"utc\": [\r\n        \"Asia/Anadyr\",\r\n        \"Asia/Kamchatka\",\r\n        \"Asia/Magadan\",\r\n        \"Asia/Srednekolymsk\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Kamchatka Standard Time\",\r\n      \"abbr\": \"KDT\",\r\n      \"offset\": 13,\r\n      \"isdst\": true,\r\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\r\n      \"utc\": [\r\n        \"Asia/Kamchatka\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Tonga Standard Time\",\r\n      \"abbr\": \"TST\",\r\n      \"offset\": 13,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\r\n      \"utc\": [\r\n        \"Etc/GMT-13\",\r\n        \"Pacific/Enderbury\",\r\n        \"Pacific/Fakaofo\",\r\n        \"Pacific/Tongatapu\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"Samoa Standard Time\",\r\n      \"abbr\": \"SST\",\r\n      \"offset\": 13,\r\n      \"isdst\": false,\r\n      \"text\": \"(UTC+13:00) Samoa\",\r\n      \"utc\": [\r\n        \"Pacific/Apia\"\r\n      ]\r\n    }\r\n  ]","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport Time from '@material-ui/icons/AccessTime';\r\nimport Toys from '@material-ui/icons/Toys';\r\nimport Flood from '@material-ui/icons/Waves';\r\nimport Snow from '@material-ui/icons/AcUnit';\r\nimport { Chip } from '@material-ui/core';\r\nimport { timezones } from '../util/timeZones'\r\n\r\n\r\nconst drawerWidth = 190;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100%'\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('md')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    marginLeft: drawerWidth,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: 20,\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    paddingTop: 88\r\n  },\r\n  selected: {\r\n    backgroundColor: '#54AAB3 !important',\r\n    color: '#ffffff !important'\r\n  },\r\n  iconSVG: {\r\n    fill: 'white',\r\n    stroke: 'white',\r\n    strokeWidth: '7px'\r\n  },\r\n  icon: {\r\n    color: 'white'\r\n  },\r\n  iconSVGTeal: {\r\n    fill: '#54aab3',\r\n    stroke: '#54aab3',\r\n    strokeWidth: '7px'\r\n  },\r\n  iconTeal: {\r\n    color: '#54aab3'\r\n  }\r\n});\r\n\r\nclass ResponsiveDrawer extends React.Component {\r\n  state = {\r\n    mobileOpen: false,\r\n  };\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n  };\r\n\r\n  \r\n  checkTime = (i) => {\r\n    if (i < 10) {i = \"0\" + i};  // add zero in front of numbers < 10\r\n    return i;\r\n  }\r\n\r\n  render() {\r\n    const { classes, theme, children } = this.props;\r\n\r\n    const drawer = (\r\n      <div>\r\n        <div className={classes.toolbar} >\r\n            <img src='img/voyager-logo-no bg.png' height='60px' width='90%' style={{marginLeft: '2.5%', marginRight: '2.5%'}} alt=''></img>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Dashboard', 'Row Controller', 'Zone Settings', 'Sensors', 'About'].map((text, index) => (\r\n            <ListItem \r\n                button \r\n                key={text}\r\n                onClick={() => this.props.changePage(text)}\r\n                selected={this.props.currentPage === text}\r\n                classes={{selected: classes.selected}}\r\n                disabled={text === 'About'}\r\n            >{/* \r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\r\n              <ListItemText disableTypography primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" color='primary' className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h5\" color=\"inherit\" noWrap>\r\n              Voyager Zone Controller\r\n            </Typography>\r\n            <Chip\r\n              icon={<Snow />}\r\n              style={this.props.sensorEvents.snow === 'connected' ? this.props.snowSense !== null ? {marginLeft: 'auto', backgroundColor: 'white', fontWeight: 600, color: '#54aab3', fontSize: '0.875rem'} : {marginLeft: 'auto', backgroundColor: 'gray', color: 'white', fontWeight: 600, fontSize: '0.875rem'} : {marginLeft: 'auto', backgroundColor: 'gray', color: 'white', fontWeight: 600, fontSize: '0.875rem'}}\r\n              label={this.props.sensorEvents.snow === 'connected' ? this.props.snowSense !== null ? `${this.props.snowSense.toFixed(2)} mm` : this.props.sensorEvents.snow : this.props.sensorEvents.snow}\r\n              classes={this.props.sensorEvents.snow === 'connected' ? this.props.snowSense !== null ? {icon: classes.iconTeal} : {icon: classes.icon} : {icon: classes.icon}}\r\n            />\r\n            <Chip\r\n              icon={<Flood/>}\r\n              style={this.props.sensorEvents.flood === 'connected' ? this.props.floodSense !== null ? {marginLeft: 10, backgroundColor: 'white', fontWeight: 600, color: '#54aab3', fontSize: '0.875rem'} : {marginLeft: 10, backgroundColor: 'gray', color: 'white', fontWeight: 600, fontSize: '0.875rem'} : {marginLeft: 10, backgroundColor: 'gray', color: 'white', fontWeight: 600, fontSize: '0.875rem'}}\r\n              label={this.props.sensorEvents.flood === 'connected' ? this.props.floodSense !== null ? `${this.props.floodSense.toFixed(2)} mm` : this.props.sensorEvents.flood : this.props.sensorEvents.flood}\r\n              classes={this.props.sensorEvents.flood === 'connected' ? this.props.floodSense !== null ? {icon: classes.iconTeal} : {icon: classes.icon} : {icon: classes.icon}}\r\n            />\r\n            <Chip\r\n              icon={<svg /*className={this.props.sensorEvents.wind ? this.props.windSense.direction !== null ? this.props.windSense.direction !== 0 ? 'rotateHorizontal' : {} : {}: {} }*/ version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2em\" height=\"2em\" viewBox=\"0 0 296.639 296.639\"><g><g><g><path d=\"M267.83,59.159c-5.268-4.88-13.488-6.784-20.332-5.176c-0.728-7.116-3.608-14.528-9.94-19.12c4.488-9.668,2.444-20.848-5.652-29.592c-2.916-3.152-6.044-4.912-9.304-5.228c-4.144-0.408-9.108,2.108-9.84,6.888c-0.108,0.704-0.108,1.46-0.096,2.208c0.004,0.12,0.008,0.256,0.012,0.396c-0.492-0.376-1.18-1.008-2.02-2.036c-4.708-5.724-12.776-8.548-20.092-7.064c-2.532,0.52-4.556,1.912-6.04,3.068c-1.972,1.536-3,3.324-3.064,5.304c-0.112,3.472,2.788,6.052,5.124,8.124c0.36,0.32,0.8,0.712,1.196,1.084c-1.492,0.22-3.776,0.26-5.324,0.284c-3.268,0.056-6.64,0.116-9.42,0.952c-2,0.608-8.088,2.456-9.364,7.852c-1.26,5.328,3.108,9.744,7.612,12.096c4.396,2.3,9.132,3.768,14.068,4.356c0.636,0.08,1.304,0.136,1.976,0.188c1.04,0.084,2.688,0.22,3.412,0.484c0,0.04,0.02,0.072,0.02,0.112c-3.044,3.696-5.564,8-7.5,13.096c-2.7,7.12-3.3,14.66-3.884,21.948l-0.328,3.968c-0.716,8.008-2.012,16.312-6.6,22.796c-4.004,5.644-14.836,11.488-16.884,10.78c0,0-0.052-0.132-0.052-0.472c0.136-58.088-35.64-85.632-68.944-86.64c-41.5-1.312-62.604,33.836-64.592,66.98c-0.096,1.636,1.168,3.044,2.824,3.136c1.608,0.112,3.08-1.152,3.18-2.784c2.612-43.56,31.22-62.228,58.404-61.4c30.488,0.928,63.24,26.572,63.116,80.696c-0.008,2.952,1.452,5.104,4.004,5.904c5.688,1.764,15.54-4.308,21.028-9.6c-0.076,1.256-0.18,2.508-0.176,3.756c0.008,2.964,0.248,6.404,1.96,9.42c1.768,3.124,4.992,5.084,8.148,5.084c0.42,0,0.844-0.036,1.264-0.112c2.944-0.504,5.068-2.612,6.408-4.156c2.312-2.652,4.148-5.652,5.452-8.916c0.436-1.096,0.848-2.256,1.26-3.432c1.628-4.624,3.168-9.008,6.936-10.36c0.276,1.472-0.068,3.14-0.432,4.9c-0.16,0.78-0.32,1.556-0.436,2.332c-0.508,3.428,0.252,8.016,4.084,9.668c1.672,0.72,3.48,0.688,5.224-0.112c2.552-1.168,4.824-3.98,5.78-7.156c0.252-0.844,0.468-1.716,0.684-2.596c0.344-1.4,0.676-2.76,1.168-3.932c0.776,2.052,1.6,4.164,2.904,6.108c2.236,3.32,6.452,6.168,10.884,5.04c0.28-0.072,0.528-0.236,0.796-0.348c2.016,9.776,2.136,19.464,0.232,28.604c-3.172,15.248-11.992,28.372-24.196,36c-4.264,2.668-10.692,5.66-17.156,4.612c-1.428-0.22-2.824,0.588-3.308,1.94c-2.892,8.012-12.62,19.96-19.644,24.12c-0.264,0.156-0.456,0.376-0.652,0.588c-1.496,0.172-2.672,1.38-2.672,2.904v29.956c0,0.096,0.048,0.18,0.056,0.272h-6.432c0.008-0.096,0.056-0.176,0.056-0.272v-29.956c0-1.088-0.62-2-1.504-2.52c-0.18-0.296-0.4-0.58-0.688-0.808c-5.292-4.164-5.764-17.336-2.232-23.764c0.576-1.056,0.456-2.352-0.308-3.284c-0.764-0.932-2.02-1.316-3.188-0.98c-17.708,5.164-37.828,0.408-51.244-12.108c-1.208-1.128-3.112-1.072-4.252,0.12c-1.14,1.192-1.084,3.068,0.12,4.192c13.544,12.636,33.2,18.16,51.464,14.82c-2.216,8.916-0.52,20.5,5.824,25.58v28.708c0,0.096,0.048,0.18,0.056,0.272H114.93c-0.048,0-0.084,0.024-0.128,0.024l-9.456-11.232c-0.4-0.476-0.992-0.748-1.62-0.748h-48.6c-0.816,0-1.556,0.468-1.908,1.196c-0.344,0.728-0.232,1.592,0.288,2.212l13.268,15.76l-13.268,15.76c-0.52,0.62-0.632,1.484-0.288,2.212c0.348,0.728,1.088,1.192,1.908,1.192h48.6c0.628,0,1.22-0.272,1.62-0.748l9.436-11.212h41.944c0,0.012-0.008,0.02-0.008,0.032v32.292c0,1.64,1.344,2.968,3.008,2.968h12.336c1.66,0,3.008-1.328,3.008-2.968v-32.292c0-0.012-0.008-0.02-0.008-0.032h50.356v11.62c0,0.74,0.404,1.428,1.052,1.8c0.328,0.184,0.688,0.28,1.052,0.28s0.728-0.096,1.052-0.28l33.044-18.828c0.648-0.372,1.052-1.06,1.052-1.8s-0.404-1.428-1.052-1.8l-33.044-18.828c-0.656-0.368-1.452-0.368-2.104,0c-0.648,0.372-1.052,1.06-1.052,1.8v11.616H175.01c0.008-0.096,0.056-0.176,0.056-0.272v-28.248c0.132-0.056,0.276-0.036,0.404-0.112c7.628-4.516,17.248-15.94,21.328-25.036c5.944,0.304,12.424-1.652,18.904-5.708c13.58-8.488,23.368-23.004,26.872-39.824c3.148-15.12,1.308-31.56-5.332-47.532l-0.232-0.56c-0.952-2.288-1.856-4.444-1.728-6.436c0.136-2.076,1.408-4.12,2.836-6.248c0.096,1.868,0.164,3.736,0.348,5.584c0.264,2.768,0.688,5.956,2.316,8.772c1.92,3.332,5.252,5.384,8.64,5.384c0.236,0,0.468-0.008,0.704-0.028c4.696-0.408,7.86-4.604,8.564-8.54c0.672-3.716-0.356-7.272-1.372-10.312c-1.488-4.44-3.3-8.772-5.368-12.988c6.524,0.052,13.104,2.564,17.144,6.756c0.576,0.596,1.368,0.924,2.18,0.924c0.288,0,0.576-0.04,0.86-0.128c1.084-0.32,1.892-1.212,2.1-2.312C275.718,72.059,273.322,64.243,267.83,59.159z M229.626,259.275v-10.264v-10.092l26.724,15.228l-26.724,15.228V259.275z M102.742,269.159H59.614l11.516-13.684c0.648-0.772,0.648-1.884,0-2.66l-11.516-13.684h43.128l12.636,15.012L102.742,269.159z M169.054,261.387v29.324h-6.32v-29.324c0-0.012-0.004-0.02-0.004-0.032h6.332C169.058,261.367,169.054,261.375,169.054,261.387z M225.418,251.091v6.108h-0.004H118.282l1.452-1.72c0.648-0.772,0.648-1.884,0-2.66l-1.452-1.728H225.418z M187.826,37.827c-0.592-0.048-1.18-0.096-1.744-0.164c-4.204-0.508-8.24-1.752-11.984-3.708c-2.516-1.316-5.02-3.6-4.568-5.504c0.408-1.716,3.096-2.868,5.276-3.524c1.964-0.596,4.908-0.644,7.752-0.696c5.236-0.088,10.176-0.172,11.804-3.86c1.428-3.244-1.44-5.796-3.748-7.852c-0.936-0.836-3.128-2.78-3.14-3.512c0,0,0.088-0.304,0.788-0.852c1.024-0.792,2.236-1.644,3.528-1.904c5.164-1.072,10.876,0.944,14.196,4.988c2.492,3.032,4.816,4.568,7.112,4.688c1.408,0.072,2.844-0.452,3.908-1.496c1.744-1.716,1.704-3.928,1.68-5.396c-0.008-0.412-0.032-0.836,0.028-1.228c0.16-1.076,1.72-2,3.3-1.856c1.732,0.168,3.568,1.288,5.448,3.324c6.24,6.736,7.996,15.184,4.916,22.516c-3.656-1.736-8.864-3.376-15.504-2.024c-9.04,1.836-16.24,5.216-21.928,10.228C193.078,38.331,190.326,38.031,187.826,37.827z M241.678,59.671c-0.46,7.856-2.984,15.504-7.312,22.108l-0.836,1.256c-1.868,2.776-3.992,5.92-4.244,9.788c-0.22,3.372,1.052,6.404,2.168,9.08l0.232,0.548c1.548,3.732,2.816,7.484,3.804,11.232c-0.276,0.256-0.576,0.464-0.9,0.544c-2.392,0.628-4.924-1.28-6.276-3.296c-1.096-1.624-1.808-3.516-2.568-5.52c-0.432-1.136-0.864-2.276-1.368-3.388c-0.264-0.58-0.788-1.012-1.412-1.168c-0.64-0.168-1.3-0.024-1.808,0.364c-2.956,2.228-3.82,5.756-4.584,8.864c-0.192,0.808-0.392,1.612-0.624,2.384c-0.6,1.984-2.072,3.9-3.5,4.552c-0.836,0.38-1.388,0.22-1.736,0.072c-1.528-0.66-1.892-3.172-1.588-5.224c0.104-0.7,0.252-1.4,0.396-2.104c0.456-2.196,0.972-4.688,0.288-7.208c-0.112-0.412-0.456-1.676-1.672-2.412c-1.296-0.768-2.684-0.404-3.156-0.28c-6.084,1.656-8.236,7.764-10.128,13.148c-0.392,1.116-0.78,2.228-1.2,3.268c-1.128,2.828-2.72,5.428-4.724,7.724c-1.456,1.676-2.7,2.552-3.924,2.764c-1.992,0.336-4.012-1.192-4.976-2.896c-1.236-2.18-1.412-4.956-1.42-7.388c-0.012-3.528,0.336-7.092,0.984-10.596c3.604-6.82,4.788-14.552,5.452-22.012l0.332-4.024c0.576-7.2,1.116-13.996,3.52-20.328c5.124-13.504,14.124-20.888,29.188-23.948c6.752-1.368,11.46,1.32,14.944,3.304C240.062,42.871,242.102,52.239,241.678,59.671z M252.77,97.091c-0.296,1.652-1.588,3.52-3.156,3.656c-1.252,0.064-2.748-0.896-3.604-2.38c-1.04-1.796-1.34-4.14-1.556-6.392c-0.516-5.296-0.656-10.68-0.448-16.004c0.264-0.664,0.564-1.312,0.8-1.984c2.704,5.04,4.996,10.288,6.804,15.692C252.394,92.031,253.198,94.731,252.77,97.091z M248.886,69.027c-0.628-1.104-1.252-2.212-1.92-3.296c0.324-1.868,0.588-3.748,0.7-5.648c5.072-1.768,11.916-0.42,16.048,3.408c2.764,2.56,4.44,6.12,4.844,10.064C262.95,70.051,255.818,68.387,248.886,69.027z\"/><path d=\"M73.898,66.487c2.592-0.816,1.484-4.86-1.128-4.04c-28.344,8.928-40.844,41.248-34.464,68.108  c0.624,2.624,4.716,1.512,4.092-1.116C36.57,104.919,47.854,74.691,73.898,66.487z\"/><path d=\"M124.226,98.675c-0.068,2.696,4.176,2.696,4.244,0c0.376-14.748-11.428-26.448-23.868-32.808  c-2.42-1.236-4.568,2.376-2.14,3.616C113.574,75.167,124.566,85.395,124.226,98.675z\"/><path d=\"M59.714,123.883c-2.78,13.268,0.788,24.74,7.12,36.46c1.284,2.38,4.948,0.268,3.664-2.112  c-5.768-10.688-9.236-21.076-6.692-33.232C64.358,122.363,60.27,121.239,59.714,123.883z\"/><path d=\"M63.21,113.487c-1.108,2.44,2.548,4.572,3.664,2.116c7.556-16.632,28.364-33.856,45.696-17.74  c1.988,1.844,4.996-1.112,3-2.964C96.286,76.963,72.002,94.123,63.21,113.487z\"/><path d=\"M85.17,116.447c-7.444,17.128-6.732,41.524,8.896,53.932c2.988,2.376,7.268-1.8,4.252-4.196  c-13.316-10.576-14.384-31.944-7.956-46.74C91.87,115.971,86.69,112.943,85.17,116.447z\"/><path d=\"M110.63,99.999c-5.36,0.388-10.356,2-14.892,4.848c-3.256,2.048-0.244,7.188,3.036,5.128  c3.624-2.28,7.548-3.732,11.856-4.04C114.47,105.663,114.498,99.723,110.63,99.999z\"/><path d=\"M156.542,162.987c2.716-0.132,2.732-4.32,0-4.188c-5.36,0.256-10.56-0.212-15.724-1.696  c-2.628-0.752-3.748,3.288-1.128,4.04C145.202,162.723,150.818,163.259,156.542,162.987z\"/><path d=\"M200.826,135.259c-7.472,11.228-20.552,22.468-34.932,21.768c-2.728-0.132-2.724,4.056,0,4.188  c15.936,0.776,30.324-11.408,38.596-23.84C205.994,135.115,202.322,133.015,200.826,135.259z\"/><path d=\"M191.074,159.283c-3.3,3.376-7.012,6.196-11.556,7.708c-2.576,0.86-1.472,4.904,1.128,4.04  c5.244-1.748,9.612-4.88,13.432-8.788C195.97,160.303,192.974,157.339,191.074,159.283z\"/><path d=\"M197.426,158.403c2.268-2.86,4.36-5.832,6.408-8.852c1.52-2.248-2.152-4.348-3.664-2.116  c-1.84,2.72-3.7,5.428-5.744,8.004C192.758,157.543,195.742,160.527,197.426,158.403z\"/><path d=\"M220.374,48.571c-5.024,0-9.108,4.032-9.108,8.988s4.088,8.992,9.108,8.992c5.02,0,9.108-4.032,9.108-8.992  C229.486,52.603,225.398,48.571,220.374,48.571z M220.374,60.611c-1.708,0-3.092-1.364-3.092-3.052  c0-1.684,1.384-3.048,3.092-3.048s3.092,1.364,3.092,3.048C223.47,59.247,222.082,60.611,220.374,60.611z\"/></g></g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g></svg>}\r\n              style={this.props.sensorEvents.wind === 'connected' ? this.props.windSense.direction !== null ? {marginLeft: 10, backgroundColor: 'white', fontWeight: 600, color: '#54aab3', fontSize: '0.875rem'} : {marginLeft: 10, backgroundColor: 'gray', color: 'white', fontWeight: 600, fontSize: '0.875rem'} : {marginLeft: 10, backgroundColor: 'gray', color: 'white', fontWeight: 600, fontSize: '0.875rem'}}\r\n              label={this.props.sensorEvents.wind === 'connected' ? this.props.windSense.direction !== null ? `${this.props.windSense.direction.toFixed(2)} Deg` : this.props.sensorEvents.wind : this.props.sensorEvents.wind}\r\n              classes={this.props.sensorEvents.wind === 'connected' ? this.props.windSense.direction !== null ? {icon: classes.iconSVGTeal} : {icon: classes.iconSVG} : {icon: classes.iconSVG}}\r\n            />\r\n            <Chip\r\n              icon={<Toys className={this.props.sensorEvents.wind === 'connected' ? this.props.windSense.speed !== null ? this.props.windSense.speed !== 0 ? 'rotate' : {} : {}: {}}/>}\r\n              style={this.props.sensorEvents.wind === 'connected' ? this.props.windSense.speed !== null ? {marginLeft: 10, backgroundColor: 'white', fontWeight: 600, color: '#54aab3', fontSize: '0.875rem'} : {marginLeft: 10, backgroundColor: 'gray', color: 'white', fontWeight: 600, fontSize: '0.875rem'} : {marginLeft: 10, backgroundColor: 'gray', color: 'white', fontWeight: 600, fontSize: '0.875rem'}}\r\n              label={this.props.sensorEvents.wind === 'connected' ? this.props.windSense.speed !== null ? `${this.props.windSense.speed.toFixed(2)} m/s` : this.props.sensorEvents.wind : this.props.sensorEvents.wind}\r\n              classes={this.props.sensorEvents.wind === 'connected' ? this.props.windSense.speed !== null ? {icon: classes.iconTeal} : {icon: classes.icon} : {icon: classes.icon}}\r\n            />\r\n            <Chip\r\n              icon={<Time />}\r\n              style={{marginLeft: 10, backgroundColor: 'white', fontWeight: 600, color: '#54aab3'}}\r\n              classes={{icon: classes.iconTeal}}\r\n              label={`${this.checkTime(new Date(new Date(Number(this.props.time)).toLocaleString(navigator.language, {timeZone:  this.props.timeZone})).getHours())} : ${this.checkTime(new Date(new Date(Number(this.props.time)).toLocaleString(navigator.language, {timeZone:  this.props.timeZone})).getMinutes())} ${timezones.filter(t => t.utc.indexOf(this.props.timeZone) !== -1)[0].abbr}`}\r\n            />\r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav className={classes.drawer}>\r\n          <Hidden mdUp implementation=\"css\">\r\n            <Drawer\r\n              container={this.props.container}\r\n              variant=\"temporary\"\r\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n              open={this.state.mobileOpen}\r\n              onClose={this.handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden smDown implementation=\"css\">\r\n            <Drawer\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n        </nav>\r\n        <main className={classes.content}>\r\n          {children}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\n \r\nfunction mapStateToProps(state) {\r\n    const { currentPage, time, timeZone, windSense, floodSense, snowSense, sensorEvents } = state.app;\r\n    \r\n    return {\r\n        currentPage,\r\n        time,\r\n        timeZone,\r\n        windSense,\r\n        floodSense,\r\n        snowSense,\r\n        sensorEvents\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changePage: (page) => {\r\n      dispatch({type: 'CHANGE_PAGE', page})\r\n    }\r\n})\r\n  \r\nconst connectedNavBar = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ResponsiveDrawer));\r\nexport { connectedNavBar as NavBar }","import React, {Fragment} from 'react'\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { connect } from 'react-redux'\r\nimport {withStyles} from '@material-ui/core/styles'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%', width: '100%', padding: 24\r\n    },\r\n    selected: {\r\n        backgroundColor: '#54aab3 !important'\r\n    }\r\n})\r\n\r\nclass TrackerList extends React.Component {\r\n\r\n    render() {\r\n        const {classes, commissioningData, currentTracker, roverStatus} = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Typography variant='h5'>\r\n                        Tracker List\r\n                    </Typography>\r\n                    <Table>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell >TrackerID</TableCell>\r\n                            <TableCell >Status</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {commissioningData && commissioningData.map(n => {\r\n                                return (\r\n                                <TableRow\r\n                                    hover\r\n                                    //className={[n.trackerID === currentTracker ? classes.selected : classes.row, classes.tableRow]}\r\n                                    key={n.trackerID}\r\n                                    onClick={() => this.props.setCurrentTracker(n.trackerID)}\r\n                                    style={{cursor: 'pointer'}}\r\n                                    selected={n.trackerID === currentTracker}\r\n                                    classes={{selected: classes.selected}}\r\n                                >\r\n                                    <TableCell style={n.trackerID === currentTracker ? {color: 'white'} : {}}>\r\n                                        {n.trackerID}\r\n                                    </TableCell>\r\n                                    <TableCell style={n.trackerID === currentTracker ? {color: 'white'} : {}}>\r\n                                        {roverStatus[n.deviceID]}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                );\r\n                            })}\r\n                            </TableBody>\r\n                        </Table>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData, currentTracker, roverStatus } = state.app\r\n\r\n    return {\r\n        commissioningData,\r\n        currentTracker,\r\n        roverStatus\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCurrentTracker: (trackerID) => {\r\n        dispatch({type: 'SET_CURRENT_TRACKER', trackerID})\r\n    }\r\n})\r\n\r\n\r\nconst connectedTrackerList = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TrackerList))\r\nexport {connectedTrackerList as TrackerList}","export const appService = {\r\n    setWifiInfo,\r\n    selectSensor,\r\n    uploadKey,\r\n    setWindAddress,\r\n    getWindAddress,\r\n    caliberate,\r\n    sendCommand,\r\n    sendStow,\r\n    getCommissioningData,\r\n    getCurrentTrackerInfo,\r\n    triggerDiscovery,\r\n    setPanID,\r\n    threshold,\r\n    heartBeat,\r\n    setTimeZone,\r\n    getHeartBeat,\r\n    getThreshold,\r\n    getPanID,\r\n    getFrequency,\r\n    setFrequency,\r\n    getTimeZone,\r\n    getTime,\r\n    discover,\r\n    addTrackers,\r\n    removeTrackers,\r\n    sendSPAParameters,\r\n    sendStowAngles,\r\n    getSPAParameters,\r\n    getStowAngles,\r\n    getSensors,\r\n    addSensor,\r\n    removeSensor,\r\n    enableSensor,\r\n    disableSensor,\r\n    scanWifi,\r\n    getWindLimits,\r\n    setWindLimits,\r\n    getFloodLimits,\r\n    setFloodLimits,\r\n    getSnowLimits,\r\n    setSnowLimits,\r\n    getBQ,\r\n    disableBQ\r\n};\r\n/*const hostName = 'http://159.89.169.50:4000'; */\r\nconst hostName = `http://${window.location.hostname}:5000`;\r\n\r\nconst hostName2 = `http://${window.location.hostname}:5001`; \r\n\r\nfunction setSnowLimits(maxSnowLevel, movingAveragePeriod, rowHeight, rowWidth, stepSize) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            maxSnowLevel: maxSnowLevel,\r\n            movingAveragePeriod: movingAveragePeriod,\r\n            rowHeight: rowHeight,\r\n            rowWidth: rowWidth,\r\n            stepSize: stepSize\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/limits/snow/set`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getSnowLimits() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        body: null\r\n    }\r\n\r\n    return fetch(`${hostName}/limits/snow/get`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction setFloodLimits(maxFloodLevel, movingAveragePeriod) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            maxFloodLevel : maxFloodLevel,\r\n            movingAveragePeriod : movingAveragePeriod\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/limits/flood/set`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getFloodLimits() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        body: null\r\n    }\r\n\r\n    return fetch(`${hostName}/limits/flood/get`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setWindLimits(lowerSpeedLimit, upperSpeedLimit, minBreachTime, maxBreachTime, maxBreachCount) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            speedLimits : {\r\n                upperSpeedLimit: upperSpeedLimit,\r\n                lowerSpeedLimit: lowerSpeedLimit\r\n            },\r\n            breachParameters : {\r\n                minBreachTime: minBreachTime,\r\n                maxBreachTime: maxBreachTime,\r\n                maxBreachCount: maxBreachCount\r\n            }\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/limits/wind/set`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getWindLimits() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        body: null\r\n    }\r\n\r\n    return fetch(`${hostName}/limits/wind/get`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction scanWifi() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        body: null\r\n    }\r\n\r\n    return fetch(`${hostName}/scanWifi`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction disableSensor(type, model) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            type: type, \r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/disable`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction enableSensor(type, model) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            type: type, \r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/enable`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction removeSensor(model, type) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            type: type, \r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/remove`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction addSensor(file, port, type, model, samplingPeriod) {\r\n    var data = new FormData()\r\n    data.append('file', file)\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: data\r\n    };\r\n\r\n    return fetch(`${hostName}/sensors/add?type=${type}&model=${model}&port=${port}&samplingPeriod=${samplingPeriod}`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getSensors() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        body: null\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/getParams`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getStowAngles(DID) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: 'QSTO'\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/get`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getSPAParameters(DID) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: \"QSPA\"\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/get`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction sendStowAngles(DID, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: 'HSTO',\r\n            VALUES: `${WindStowAngle}, ${SnowStowAngle}, ${CleanStowAngle}, ${NightStowAngle}, ${EmergencyStowAngle}`\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/set`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction sendSPAParameters(DID, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backtracking) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: \"HSPA\",\r\n            VALUES: `${Lattitude}, ${Longitude}, ${Altitude}, ${EastLimit}, ${WestLimit}, ${TrackerWidth}, ${Pitch}, ${TrackingAccuracy}, ${AzimuthDeviation}, ${AltitudeTrackeronEast}, ${AltitudeTrackeronWest}, ${StartTimeLead}, ${EndTimeLag}, 0, ${backtracking}`\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/set`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction removeTrackers(DIDs) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DIDs: DIDs\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/removePairedDevices`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction addTrackers(devices) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            devices: devices\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/addDiscoveredDevices`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction discover(did) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: did\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/scan`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction handleResponse(response) {\r\n    return response.json().then(json => {\r\n        if (!response.ok) {\r\n            const error = (json && json.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        } else {\r\n            if(json.result === 'failure') {\r\n                const error = json.message\r\n                return Promise.reject(error)\r\n            } else {\r\n                return json\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n\r\nfunction setWifiInfo(ssid, pass) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"ssid\": ssid,\r\n            \"password\": pass\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/setWifiInfo`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getBQ() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/bigQuery/get`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction disableBQ() {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/bigQuery/set?enabled=false`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction uploadKey(file) {\r\n    var data = new FormData()\r\n    data.append('file', file)\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: data\r\n    };\r\n\r\n    return fetch(`${hostName}/bigQuery/set?enabled=true`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction selectSensor(windSensor, rainSensor, floodSensor, snowSensor) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"windSensor\": windSensor,\r\n            \"rainSensor\": rainSensor,\r\n            \"floodSensor\": floodSensor,\r\n            \"snowSensor\": snowSensor,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/sensors`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setWindAddress(address) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"deviceAddress\": address,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/windSensorSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getWindAddress() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/windSensorSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction caliberate(sensor) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"sensor\": sensor,\r\n        })\r\n    };\r\n\r\n\r\n    return fetch(`${hostName}/calibrateSensor`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n//control\r\n\r\nfunction sendCommand(deviceID, value) {\r\n\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"DID\": deviceID,\r\n            \"CMD\": \"HMNM\",\r\n            \"VALUES\": value\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/rover/command`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction sendStow(deviceID, mode) {\r\n\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"DID\": deviceID,\r\n            \"CMD\": \"HMOD\",\r\n            \"MODE\": mode\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/rover/command`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n//dashboard\r\n\r\n\r\nfunction getCommissioningData() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/getCommissioningData`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getCurrentTrackerInfo(trackerID) {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/getCurrentTrackerInfo?id=${trackerID}`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction triggerDiscovery() {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"CMD\": \"HINF\",\r\n            \"DID\": \"00000\",\r\n        })\r\n    };\r\n\r\n    return fetch(`http://${hostName2}/sendCommand`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\n//settings\r\n\r\nfunction setPanID(panID) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"panID\": panID\r\n        })\r\n    };\r\n\r\n    console.log(panID);\r\n\r\n    return fetch(`http://${hostName2}/settings/xbeePanID `, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction threshold(maxWindSpeed, maxRainFall, meanWindSpeed, windSpeedTimer, maxFloodLevel, maxSnowFall) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"maxWindSpeed\": maxWindSpeed,\r\n            \"maxRainFall\": maxRainFall,\r\n            \"meanWindSpeed\": meanWindSpeed,\r\n            \"windSpeedTimer\": windSpeedTimer,\r\n            \"maxFloodLevel\": maxFloodLevel,\r\n            \"maxSnowFall\": maxSnowFall,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/threshold`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setFrequency(power, status) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"powerRequestTimePeriod\": power,\r\n            \"statusRequestTimePeriod\": status,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/requestFrequency`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\n\r\nfunction heartBeat(enabled, hbinterval, maxMsgs) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"enabled\": enabled,\r\n            \"interval\": hbinterval,\r\n            \"maxMsgs\": maxMsgs,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/heartBeatSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setTimeZone(time) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"timeZone\": time,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/timeZone/set`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getTimeZone() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/timeZone/get`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getTime() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/time`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getThreshold() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/threshold`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getFrequency() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/requestFrequency`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getHeartBeat() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/heartBeatSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getPanID() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/panID/get`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n","import React from 'react'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { connect } from 'react-redux'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%', width: '100%', padding: 24, flexWrap: 'nowrap'\r\n    }\r\n})\r\n\r\nconst NoCurrentTrackerInfo = () =>\r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            No Info Found For Selected Tracker.\r\n    </div>\r\n\r\nclass TrackerDetails extends React.Component {\r\n\r\n    timer = null\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.refresh()\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.currentTracker !== this.props.currentTracker) {\r\n            this.props.getCurrentTrackerInfo(nextProps.currentTracker)\r\n        }\r\n    }\r\n\r\n    refresh = (c = true) => {\r\n        this.props.getCurrentTrackerInfo(this.props.currentTracker)\r\n\r\n        if(c) {\r\n            this.timer = setTimeout(this.refresh, 30000)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes, currentTrackerInfo } = this.props\r\n\r\n        return (currentTrackerInfo === null ? <NoCurrentTrackerInfo /> :\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Typography variant='h5' style={{height: '48px'}}>\r\n                        Tracker Details\r\n                    </Typography>\r\n                    <div \r\n                        className={currentTrackerInfo.currentAngle !== '--' && (currentTrackerInfo.currentAngle > 58 ? 'angle60' :\r\n                        currentTrackerInfo.currentAngle > 56 ? 'angle58' :\r\n                        currentTrackerInfo.currentAngle > 54 ? 'angle56' :\r\n                        currentTrackerInfo.currentAngle > 52 ? 'angle54' :\r\n                        currentTrackerInfo.currentAngle > 50 ? 'angle52' :\r\n                        currentTrackerInfo.currentAngle > 48 ? 'angle50' :\r\n                        currentTrackerInfo.currentAngle > 46 ? 'angle48' :\r\n                        currentTrackerInfo.currentAngle > 44 ? 'angle46' :\r\n                        currentTrackerInfo.currentAngle > 42 ? 'angle44' :\r\n                        currentTrackerInfo.currentAngle > 40 ? 'angle42' :\r\n                        currentTrackerInfo.currentAngle > 38 ? 'angle40' :\r\n                        currentTrackerInfo.currentAngle > 36 ? 'angle38' :\r\n                        currentTrackerInfo.currentAngle > 34 ? 'angle36' :\r\n                        currentTrackerInfo.currentAngle > 32 ? 'angle34' :\r\n                        currentTrackerInfo.currentAngle > 30 ? 'angle32' :\r\n                        currentTrackerInfo.currentAngle > 28 ? 'angle30' :\r\n                        currentTrackerInfo.currentAngle > 26 ? 'angle28' :\r\n                        currentTrackerInfo.currentAngle > 24 ? 'angle26' :\r\n                        currentTrackerInfo.currentAngle > 22 ? 'angle24' :\r\n                        currentTrackerInfo.currentAngle > 20 ? 'angle22' :\r\n                        currentTrackerInfo.currentAngle > 18 ? 'angle20' :\r\n                        currentTrackerInfo.currentAngle > 16 ? 'angle18' :\r\n                        currentTrackerInfo.currentAngle > 14 ? 'angle16' :\r\n                        currentTrackerInfo.currentAngle > 12 ? 'angle14' :\r\n                        currentTrackerInfo.currentAngle > 10 ? 'angle12' :\r\n                        currentTrackerInfo.currentAngle > 8 ? 'angle10' :\r\n                        currentTrackerInfo.currentAngle > 6 ? 'angle8' :\r\n                        currentTrackerInfo.currentAngle > 4 ? 'angle6' :\r\n                        currentTrackerInfo.currentAngle > 2 ? 'angle4' :\r\n                        currentTrackerInfo.currentAngle > 0 ? 'angle2' :\r\n                        currentTrackerInfo.currentAngle > -2 ? 'angle0' :\r\n                        currentTrackerInfo.currentAngle > -4 ? 'angle_2' :\r\n                        currentTrackerInfo.currentAngle > -6 ? 'angle_4' :\r\n                        currentTrackerInfo.currentAngle > -8 ? 'angle_6' :\r\n                        currentTrackerInfo.currentAngle > -10 ? 'angle_8' :\r\n                        currentTrackerInfo.currentAngle > -12 ? 'angle_10' :\r\n                        currentTrackerInfo.currentAngle > -14 ? 'angle_12' :\r\n                        currentTrackerInfo.currentAngle > -16 ? 'angle_14' :\r\n                        currentTrackerInfo.currentAngle > -18 ? 'angle_16' :\r\n                        currentTrackerInfo.currentAngle > -20 ? 'angle_18' :\r\n                        currentTrackerInfo.currentAngle > -22 ? 'angle_20' :\r\n                        currentTrackerInfo.currentAngle > -24 ? 'angle_22' :\r\n                        currentTrackerInfo.currentAngle > -26 ? 'angle_24' :\r\n                        currentTrackerInfo.currentAngle > -28 ? 'angle_26' :\r\n                        currentTrackerInfo.currentAngle > -30 ? 'angle_28' :\r\n                        currentTrackerInfo.currentAngle > -32 ? 'angle_30' :\r\n                        currentTrackerInfo.currentAngle > -34 ? 'angle_32' :\r\n                        currentTrackerInfo.currentAngle > -36 ? 'angle_34' :\r\n                        currentTrackerInfo.currentAngle > -38 ? 'angle_36' :\r\n                        currentTrackerInfo.currentAngle > -40 ? 'angle_38' :\r\n                        currentTrackerInfo.currentAngle > -42 ? 'angle_40' :\r\n                        currentTrackerInfo.currentAngle > -44 ? 'angle_42' :\r\n                        currentTrackerInfo.currentAngle > -46 ? 'angle_44' :\r\n                        currentTrackerInfo.currentAngle > -48 ? 'angle_46' :\r\n                        currentTrackerInfo.currentAngle > -50 ? 'angle_48' :\r\n                        currentTrackerInfo.currentAngle > -52 ? 'angle_50' :\r\n                        currentTrackerInfo.currentAngle > -54 ? 'angle_52' :\r\n                        currentTrackerInfo.currentAngle > -56 ? 'angle_54' :\r\n                        currentTrackerInfo.currentAngle > -58 ? 'angle_56' :\r\n                        currentTrackerInfo.currentAngle > -60 ? 'angle_58' :\r\n                        'angle_60')} \r\n                        style={{width: '100%', height: '150px', marginTop: 5}}>\r\n                            {currentTrackerInfo.currentAngle === '--' && <div \r\n                                style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n                                    No Current Angle Data Found.\r\n                            </div>}\r\n                        </div>\r\n                    {currentTrackerInfo.currentAngle !== '--' && <Typography variant='h5' style={{textAlign: 'center', height: 48, marginTop: 5}}>\r\n                        Angle = {currentTrackerInfo.currentAngle}\r\n                    </Typography>}\r\n                    <div style={{height: 'calc(100% - 246px)', width: '100%', overflow: 'auto'}}>\r\n                    <Table padding='none'>\r\n                        <TableBody>\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Tracker ID\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.trackerID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Device ID\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.deviceID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Mac ID \r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.macID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Current Mode\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.currentMode}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                    Current Angle\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.currentAngle}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                    Date and Time\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{new Date(currentTrackerInfo.timeStamp).toLocaleDateString('en-US', {timeZone: this.props.timeZone})} -- {new Date(currentTrackerInfo.timeStamp).toLocaleTimeString('en-US', {timeZone:  this.props.timeZone, hour12: false})}</TableCell>\r\n                        </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                    </div>\r\n                </Grid>\r\n        )\r\n    }\r\n} \r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentTrackerInfo, timeZone, currentTracker } = state.app\r\n\r\n    return {\r\n        currentTrackerInfo,\r\n        timeZone,\r\n        currentTracker\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getCurrentTrackerInfo : (trackerID) => {\r\n        dispatch({type: 'GET_CURRENT_TRACKER_INFO_REQUEST'})\r\n        appService.getCurrentTrackerInfo(trackerID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_CURRENT_TRACKER_INFO_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_CURRENT_TRACKER_INFO_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedTrackerDetails = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TrackerDetails))\r\nexport {connectedTrackerDetails as TrackerDetails}","import React from 'react'\r\nimport { Grid, Paper, Button } from '@material-ui/core';\r\nimport { TrackerList } from './TrackerList'\r\nimport { TrackerDetails } from './TrackerDetails';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexWrap: 'wrap',\r\n        [theme.breakpoints.up('md')]: {\r\n            height: '100%',\r\n        }\r\n    },\r\n    trackerList: {\r\n        width: '100%',\r\n        padding: 10,\r\n        [theme.breakpoints.up('md')]: {\r\n            minHeight: '100%', width: '50%'\r\n        }\r\n    },\r\n    trackerDetails: {\r\n        width: '100%',\r\n        padding: 10,\r\n        [theme.breakpoints.up('md')]: {\r\n            minHeight: '100%', width: '50%'\r\n        }\r\n    }\r\n})\r\n\r\nconst Initializing = (props) => \r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            <p style={{margin: 10}}>No static data found.  </p>\r\n            <Button variant='contained' style={{margin: 10}} color='primary' onClick={() => props.scan()}>Add trackers</Button>\r\n            <Button variant='contained' style={{margin: 10}} color='primary' onClick={() => props.getCommissioningData()}>Refresh static data</Button>\r\n    </div>\r\n\r\n\r\nconst Fetching = () => \r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            FETCHING...\r\n    </div>\r\n\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    state = {\r\n    }\r\n\r\n    getCommissioningData = () => {\r\n        this.props.getCommissioningData()\r\n    }\r\n\r\n    scan = () => {\r\n        this.props.scan()\r\n    }\r\n\r\n    render() {\r\n        const { classes, commissioningData, fetchingCommissioningData } = this.props\r\n        return ( fetchingCommissioningData ? <Fetching /> : commissioningData === null ? <Initializing scan={() => this.scan()} getCommissioningData={() => this.getCommissioningData()}/> :\r\n            <Grid container direction=\"column\" className={classes.root}>\r\n                <Grid item className={classes.trackerList}>\r\n                    <Paper style={{height: '100%'}}>\r\n                        <TrackerList />\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item className={classes.trackerDetails}>\r\n                    <Paper style={{height: '100%'}}>\r\n                        <TrackerDetails />\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData, fetchingCommissioningData } = state.app\r\n\r\n    return {\r\n        commissioningData,\r\n        fetchingCommissioningData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    scan : () => {\r\n        dispatch({type: 'SCAN'})\r\n    },\r\n    getCommissioningData: () => {\r\n        dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n        appService.getCommissioningData()\r\n            .then(json => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedDashboard = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Dashboard))\r\nexport {connectedDashboard as Dashboard}","import React, { Fragment } from 'react'\r\nimport { Grid, Button, TextField, FormControlLabel, Checkbox, InputAdornment } from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    fieldGrid: {\r\n        display: 'flex', \r\n        flexDirection: 'row', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    },\r\n    field: {\r\n        width: '45%',\r\n        margin: '10px 2.5% 0px 2.5%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '31.33%',\r\n            margin: '10px 1% 0px 1%'\r\n        }\r\n    }\r\n})\r\n\r\nclass SPAParameters extends React.Component {\r\n    state = {\r\n        Lattitude: '',\r\n        Longitude: '',\r\n        Altitude: '',\r\n        TrackingLimitEast: '',\r\n        TrackingLimitWest: '',\r\n        RowWidth: '',\r\n        RowPitch: '',\r\n        TrackingResolution: '',\r\n        AzimuthDeviation: '',\r\n        AltitudeofTrackerontheEast: '',\r\n        AltitudeofTrackerontheWest: '',\r\n        EarlyStartMinutes: '',\r\n        LateFinishMinutes: '',\r\n        LattitudeError: '',\r\n        LongitudeError: '',\r\n        AltitudeError: '',\r\n        TrackingLimitEastError: '',\r\n        TrackingLimitWestError: '',\r\n        RowWidthError: '',\r\n        RowPitchError: '',\r\n        TrackingResolutionError: '',\r\n        AzimuthDeviationError: '',\r\n        AltitudeofTrackerontheEastError: '',\r\n        AltitudeofTrackerontheWestError: '',\r\n        EarlyStartMinutesError: '',\r\n        LateFinishMinutesError: '',\r\n        backTracking: '0',\r\n        submit: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.editedTrackers.length ===  1) {\r\n            this.props.getSPAParameters(this.props.editedTrackers[0].deviceID)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.SPAParameters !== this.props.SPAParameters) {\r\n            const values = nextProps.SPAParameters.VALUES.split(',')\r\n            this.setState({\r\n                Lattitude: values[0],\r\n                Longitude: values[1],\r\n                Altitude: values[2],\r\n                TrackingLimitEast: values[3],\r\n                TrackingLimitWest: values[4],\r\n                RowWidth: values[5],\r\n                RowPitch: values[6],\r\n                TrackingResolution: values[7],\r\n                AzimuthDeviation: values[8],\r\n                AltitudeofTrackerontheEast: values[9],\r\n                AltitudeofTrackerontheWest: values[10],\r\n                EarlyStartMinutes: values[11],\r\n                LateFinishMinutes: values[12],\r\n                backTracking: values[14]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleBlur = (e, p) => {\r\n            const regex = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+$\")\r\n            const regexTest = regex.test(e.target.value)\r\n            if(!regexTest) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    [`${e.target.name}Error`]: `Please enter a number.`,\r\n                    submit: false\r\n                })\r\n            } else {\r\n                const value = Number(e.target.value)\r\n                if(p.min !== null && p.max !== null) {\r\n                    if(value < p.min || value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min} max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.min !== null) {\r\n                    if(value < p.min) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.max != null) {\r\n                    if(value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \r\n    }\r\n\r\n    sendSPAParameters = () => {\r\n        const { Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking } = this.state\r\n        this.props.sendSPAParameters(this.props.editedTrackers, Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                    {\r\n                        [\r\n                            {\r\n                                key: 'Lattitude',\r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 0\r\n                            },\r\n                            {\r\n                                key: 'Longitude', \r\n                                adornment: 'Deg',\r\n                                min: -180,\r\n                                max: +180,\r\n                                value: 1\r\n                            }, \r\n                            { \r\n                                key: 'Altitude',\r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 2\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - East', \r\n                                adornment: 'Deg',\r\n                                min: -60,\r\n                                max: 0,\r\n                                value: 3\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - West', \r\n                                adornment: 'Deg',\r\n                                min: 0,\r\n                                max: +60,\r\n                                value: 4 \r\n                            }, \r\n                            { \r\n                                key: 'Row Width', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 5\r\n                            }, \r\n                            { \r\n                                key: 'Row Pitch', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 6\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Resolution', \r\n                                adornment: 'Deg',\r\n                                min: +0.50,\r\n                                max: +30.0,\r\n                                value: 7 \r\n                            }, \r\n                            { \r\n                                key: 'Azimuth Deviation', \r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 8  \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the East', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 9 \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the West', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 10\r\n                            }, \r\n                            { \r\n                                key: 'Early Start Minutes', \r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 11\r\n                            }, \r\n                            { \r\n                                key: 'Late Finish Minutes',\r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 12\r\n                            }\r\n                        ].map(p => {\r\n                            return <TextField\r\n                                key={p.key}\r\n                                className={classes.field}\r\n                                id={p.key}\r\n                                name={p.key.replace(/ /g, '').replace(/-/g, '')}\r\n                                label={p.key}\r\n                                value={this.state[p.key.replace(/ /g, '').replace(/-/g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">{p.adornment}</InputAdornment>,\r\n                                  }}\r\n                                error={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`] !== ''}\r\n                                helperText={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`]}\r\n                                onBlur={(e) => this.handleBlur(e, p)}\r\n                            />\r\n                        })\r\n                    }\r\n                        <FormControlLabel disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters} className={classes.field}\r\n                            control={\r\n                                <Checkbox color='primary' checked={this.state.backTracking === '1'} onClick={() => this.setState({...this.state, backTracking: this.state.backTracking === '0' ? '1' : '0'})}/>\r\n                            }\r\n                            label=\"Enable Backtracking\"\r\n                        />\r\n                        <Button color='primary' disabled variant='contained' className={classes.field}>Sync time with Zone Controller</Button>    \r\n                    </Grid>\r\n                    <Grid item style={{textAlign: 'center'}}>\r\n                        <Button color='primary' disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters || !this.state.submit} variant='contained' onClick={() => this.sendSPAParameters()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { editedTrackers, sendingSPAParameters } = state.app\r\n\r\n    return {\r\n        editedTrackers,\r\n        sendingSPAParameters,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendSPAParameters: (editedTrackers, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking) => {\r\n        dispatch({type: 'SET_RESPONSE_LISTENER'})\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_SPA_PARAMETERS_REQUEST', t})\r\n            appService.sendSPAParameters(t.deviceID, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_SUCCESS'})\r\n                }, error => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_FAILURE'})\r\n                })\r\n        })\r\n        \r\n    }\r\n})\r\n\r\n\r\nconst connectedSPAParameters = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SPAParameters))\r\nexport {connectedSPAParameters as SPAParameters}","import React, { Fragment } from 'react'\r\nimport { Grid, Button, TextField, InputAdornment } from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    fieldGrid: {\r\n        display: 'flex', \r\n        flexDirection: 'row', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    },\r\n    field: {\r\n        width: '45%',\r\n        margin: '10px 2.5% 0px 2.5%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '31.33%',\r\n            margin: '10px 1% 0px 1%'\r\n        }\r\n    }\r\n})\r\n\r\nclass StowAngles extends React.Component {\r\n    state = {\r\n        WindStowAngle: '',\r\n        SnowStowAngle: '',\r\n        NightStowAngle: '',\r\n        EmergencyStowAngle: '',\r\n        CleanStowAngle: '',\r\n        submit: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.editedTrackers.length === 1) {\r\n            this.props.getStowAngles(this.props.editedTrackers[0].deviceID)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.stowAngles !== this.props.stowAngles) {\r\n            const values = nextProps.stowAngles.VALUES.split(',')\r\n            this.setState({\r\n                WindStowAngle: values[0],\r\n                SnowStowAngle: values[1],\r\n                NightStowAngle: values[2],\r\n                EmergencyStowAngle: values[3],\r\n                CleanStowAngle: values[4]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleBlur = (e, p) => {\r\n        if(e.target.value === '') {\r\n            this.setState({\r\n                ...this.state,\r\n                [e.target.name]: this.props.SPAParameters.VALUES.split(',')[p.value],\r\n                [`${e.target.name}Error`]: '',\r\n                submit: false\r\n            })\r\n        } else {\r\n            const regex = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+$\")\r\n            const regexTest = regex.test(e.target.value)\r\n            if(!regexTest) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    [`${e.target.name}Error`]: `Please enter a number.`,\r\n                    submit: false\r\n                })\r\n            } else {\r\n                const value = Number(e.target.value)\r\n                if(p.min !== null && p.max !== null) {\r\n                    if(value < p.min || value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min} max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.min !== null) {\r\n                    if(value < p.min) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.max != null) {\r\n                    if(value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    sendStowAngles = () => {\r\n        const { WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle } = this.state\r\n        this.props.sendStowAngles(this.props.editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                    {\r\n                        ['Wind Stow Angle', 'Snow Stow Angle', 'Night Stow Angle', 'Emergency Stow Angle', 'Clean Stow Angle'].map(p => {\r\n                            return <TextField\r\n                                key={p}\r\n                                className={classes.field}\r\n                                id={p}\r\n                                name={p.replace(/ /g, '')}\r\n                                label={p}\r\n                                value={this.state[p.replace(/ /g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingStowAngles || this.props.gettingStowAngles}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">Deg</InputAdornment>,\r\n                                  }}\r\n                            />\r\n                        })\r\n                    }\r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center'}}>\r\n                        <Button color='primary' disabled={this.props.sendingStowAngles || this.props.gettingStowAngles} variant='contained' onClick={() => this.sendStowAngles()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { editedTrackers, stowAngles, sendingStowAngles, gettingStowAngles } = state.app\r\n\r\n    return {\r\n        editedTrackers,\r\n        stowAngles,\r\n        sendingStowAngles,\r\n        gettingStowAngles\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendStowAngles: (editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle) => {\r\n        dispatch({type: 'SET_RESPONSE_LISTENER'})\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_STOW_ANGLES_REQUEST', t})\r\n            appService.sendStowAngles(t.deviceID, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_SUCCESS'})\r\n                }, error => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_FAILURE'})\r\n                })\r\n        })\r\n    }\r\n})\r\n\r\n\r\nconst connectedStowAngles = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(StowAngles))\r\nexport {connectedStowAngles as StowAngles}","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { connect } from 'react-redux'\r\nimport { SPAParameters } from './SPAParameters';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { StowAngles } from './StowAngles';\r\nimport LeftIcon from '@material-ui/icons/ArrowBack'\r\nimport { Grid, Typography, Chip, Toolbar } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      margin: 10,\r\n      display: 'flex',\r\n      flexDirection: 'column'\r\n    },\r\n    body: {\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    tabsIndicator: {\r\n      backgroundColor: '#54AAB3',\r\n    },\r\n    selected: {\r\n      backgroundColor: '#54AAB3',\r\n      color: '#ffffff',\r\n      fontWeight: 600,\r\n      fontSize: 14\r\n    },\r\n    editedTrackers: {\r\n        width: '25%',\r\n        margin: 10,\r\n    },\r\n    tabs: {\r\n        width: '75%',\r\n        padding: 10,\r\n        boxShadow: '-1px 0px 0px 0px rgba(0,0,0,0.5)'\r\n    },\r\n    chip: {\r\n        margin: 10\r\n    },\r\n    green: {\r\n        backgroundColor: 'green'\r\n    },\r\n    red: {\r\n        backgroundColor: 'red'\r\n    }\r\n});\r\n\r\nclass EditRowController extends React.Component {\r\n    handleChange = (event, value) => {\r\n        this.props.changeTab({ value });\r\n    };\r\n    \r\n    render() {\r\n        const { classes, currentEditTab, editedTrackers, responseQueue } = this.props;\r\n    \r\n        return (\r\n        <div className={classes.root}>\r\n            <div className={classes.header}>\r\n            <Grid item>\r\n                <Typography variant='h5'>\r\n                    <IconButton aria-label=\"Back\" onClick={this.props.back} >\r\n                        <LeftIcon fontSize=\"large\" />\r\n                    </IconButton>\r\n                    Edit Parameters\r\n                </Typography>\r\n            </Grid>\r\n            </div>\r\n            <div className={classes.body}>\r\n            <div className={classes.editedTrackers}>\r\n            \r\n            <AppBar position=\"static\" color='secondary'>\r\n                <Toolbar style={{minHeight: 48}} disableGutters>\r\n                <Typography variant=\"subtitle1\" style={{margin: 'auto'}}>\r\n                    Selected Trackers\r\n                </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {\r\n                editedTrackers.map(t => (\r\n                <Chip key={t.deviceID} label={`Row#: ${t.rowNumber}`} className={classes.chip} style={responseQueue.filter(r => r.request.DID === t.deviceID)[0] ? responseQueue.filter(r => r.request.DID === t.deviceID)[0].success ? {backgroundColor: 'green'} : {backgroundColor: 'red'} : {}}/>\r\n            ))}\r\n            </div>\r\n            <div className={classes.tabs}>\r\n            <AppBar position=\"static\" color='secondary'>\r\n                <Tabs value={currentEditTab} onChange={this.handleChange} classes={{indicator: classes.tabsIndicator}}>\r\n                    <Tab label=\"SPA Parameters\" classes={{selected: classes.selected}}/>\r\n                    <Tab label=\"Stow Angles\" classes={{selected: classes.selected}}/>\r\n                </Tabs>\r\n            </AppBar>\r\n            {currentEditTab === 0 && <SPAParameters />}\r\n            {currentEditTab === 1 && <StowAngles />}\r\n            </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentEditTab, editedTrackers, responseQueue } = state.app\r\n\r\n    return {\r\n        currentEditTab,\r\n        editedTrackers,\r\n        responseQueue       \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changeTab: (value) => {\r\n        dispatch({type: 'CHANGE_EDIT_TAB', value})\r\n    }\r\n})\r\n\r\n\r\nconst connectedEditRowController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(EditRowController))\r\nexport {connectedEditRowController as EditRowController}","import React, { Fragment } from 'react'\r\nimport LeftIcon from '@material-ui/icons/ArrowBack'\r\nimport { IconButton, Typography, Grid, Button, TextField, FormControlLabel, Checkbox, InputAdornment } from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    fieldGrid: {\r\n        display: 'flex', \r\n        flexDirection: 'row', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    },\r\n    field: {\r\n        width: '45%',\r\n        margin: '10px 2.5% 0px 2.5%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '23%',\r\n            margin: '10px 1% 0px 1%'\r\n        }\r\n    }\r\n})\r\n\r\nclass EditRowController extends React.Component {\r\n    state = {\r\n        Lattitude: '',\r\n        Longitude: '',\r\n        Altitude: '',\r\n        TrackingLimitEast: '',\r\n        TrackingLimitWest: '',\r\n        RowWidth: '',\r\n        RowPitch: '',\r\n        TrackingResolution: '',\r\n        AzimuthDeviation: '',\r\n        AltitudeofTrackerontheEast: '',\r\n        AltitudeofTrackerontheWest: '',\r\n        EarlyStartMinutes: '',\r\n        LateFinishMinutes: '',\r\n        LattitudeError: '',\r\n        LongitudeError: '',\r\n        AltitudeError: '',\r\n        TrackingLimitEastError: '',\r\n        TrackingLimitWestError: '',\r\n        RowWidthError: '',\r\n        RowPitchError: '',\r\n        TrackingResolutionError: '',\r\n        AzimuthDeviationError: '',\r\n        AltitudeofTrackerontheEastError: '',\r\n        AltitudeofTrackerontheWestError: '',\r\n        EarlyStartMinutesError: '',\r\n        LateFinishMinutesError: '',\r\n        WindStowAngle: '',\r\n        SnowStowAngle: '',\r\n        NightStowAngle: '',\r\n        EmergencyStowAngle: '',\r\n        CleanStowAngle: '',\r\n        backTracking: '0',\r\n        submit: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.editedTrackers.length === 1) {\r\n            this.props.getSPAParameters(this.props.editedTrackers[0].deviceID)\r\n            this.props.getStowAngles(this.props.editedTrackers[0].deviceID)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.SPAParameters !== this.props.SPAParameters) {\r\n            if(nextProps.SPAParameters[this.props.editedTrackers[0].deviceID]) {\r\n                const values = nextProps.SPAParameters[this.props.editedTrackers[0].deviceID].VALUES.split(',')\r\n                this.setState({\r\n                    Lattitude: values[0],\r\n                    Longitude: values[1],\r\n                    Altitude: values[2],\r\n                    TrackingLimitEast: values[3],\r\n                    TrackingLimitWest: values[4],\r\n                    RowWidth: values[5],\r\n                    RowPitch: values[6],\r\n                    TrackingResolution: values[7],\r\n                    AzimuthDeviation: values[8],\r\n                    AltitudeofTrackerontheEast: values[9],\r\n                    AltitudeofTrackerontheWest: values[10],\r\n                    EarlyStartMinutes: values[11],\r\n                    LateFinishMinutes: values[12],\r\n                    backTracking: values[14]\r\n                })\r\n            }\r\n        }\r\n        if(nextProps.stowAngles !== this.props.stowAngles) {\r\n            if(nextProps.stowAngles[this.props.editedTrackers[0].deviceID]) {\r\n                const values = nextProps.stowAngles[this.props.editedTrackers[0].deviceID].VALUES.split(',')\r\n                this.setState({\r\n                    WindStowAngle: values[0],\r\n                    SnowStowAngle: values[1],\r\n                    NightStowAngle: values[2],\r\n                    EmergencyStowAngle: values[3],\r\n                    CleanStowAngle: values[4]\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleChangeSPA = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleBlur = (e, p) => {\r\n        if(e.target.value === '') {\r\n            this.setState({\r\n                ...this.state,\r\n                [e.target.name]: this.props.SPAParameters.VALUES.split(',')[p.value],\r\n                [`${e.target.name}Error`]: '',\r\n                submit: false\r\n            })\r\n        } else {\r\n            const regex = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+$\")\r\n            const regexTest = regex.test(e.target.value)\r\n            if(!regexTest) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    [`${e.target.name}Error`]: `Please enter a number.`,\r\n                    submit: false\r\n                })\r\n            } else {\r\n                const value = Number(e.target.value)\r\n                if(p.min !== null && p.max !== null) {\r\n                    if(value < p.min || value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min} max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.min !== null) {\r\n                    if(value < p.min) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.max != null) {\r\n                    if(value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    sendSPAParameters = () => {\r\n        const { Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking } = this.state\r\n        this.props.sendSPAParameters(this.props.editedTrackers, Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking)\r\n    }\r\n\r\n    sendStowAngles = () => {\r\n        const { WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle } = this.state\r\n        this.props.sendStowAngles(this.props.editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item style={{height: 64, borderBottom: '0.1px solid lightgrey'}}>\r\n                        <Typography variant='h5'>\r\n                            <IconButton aria-label=\"Back\" onClick={this.props.back} >\r\n                                <LeftIcon fontSize=\"large\" />\r\n                            </IconButton>\r\n                            Edit Parameters\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Typography variant='h6' style={{paddingLeft: 'calc(1% + 10px)'}}>\r\n                        SPA Settings\r\n                    </Typography>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                        \r\n                    {\r\n                        [\r\n                            {\r\n                                key: 'Lattitude',\r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 0\r\n                            },\r\n                            {\r\n                                key: 'Longitude', \r\n                                adornment: 'Deg',\r\n                                min: -180,\r\n                                max: +180,\r\n                                value: 1\r\n                            }, \r\n                            { \r\n                                key: 'Altitude',\r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 2\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - East', \r\n                                adornment: 'Deg',\r\n                                min: -60,\r\n                                max: 0,\r\n                                value: 3\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - West', \r\n                                adornment: 'Deg',\r\n                                min: 0,\r\n                                max: +60,\r\n                                value: 4 \r\n                            }, \r\n                            { \r\n                                key: 'Row Width', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 5\r\n                            }, \r\n                            { \r\n                                key: 'Row Pitch', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 6\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Resolution', \r\n                                adornment: 'Deg',\r\n                                min: +0.50,\r\n                                max: +30.0,\r\n                                value: 7 \r\n                            }, \r\n                            { \r\n                                key: 'Azimuth Deviation', \r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 8  \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the East', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 9 \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the West', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 10\r\n                            }, \r\n                            { \r\n                                key: 'Early Start Minutes', \r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 11\r\n                            }, \r\n                            { \r\n                                key: 'Late Finish Minutes',\r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 12\r\n                            }\r\n                        ].map(p => {\r\n                            return <TextField\r\n                                key={p.key}\r\n                                className={classes.field}\r\n                                id={p.key}\r\n                                name={p.key.replace(/ /g, '').replace(/-/g, '')}\r\n                                label={p.key}\r\n                                value={this.state[p.key.replace(/ /g, '').replace(/-/g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">{p.adornment}</InputAdornment>,\r\n                                  }}\r\n                                error={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`] !== ''}\r\n                                helperText={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`]}\r\n                                onBlur={(e) => this.handleBlur(e, p)}\r\n                            />\r\n                        })\r\n                    }\r\n                        <FormControlLabel disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters} style={{ margin: 10, marginLeft: 'auto' }}\r\n                            control={\r\n                                <Checkbox color='primary' checked={this.state.backTracking === '1'} onClick={() => this.setState({...this.state, backTracking: this.state.backTracking === '0' ? '1' : '0'})}/>\r\n                            }\r\n                            label=\"Enable Backtracking\"\r\n                        />\r\n                        <Button color='primary' disabled variant='contained' style={{ margin: 10 }}>Sync time with Zone Controller</Button>    \r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center', borderBottom: '0.1px solid lightgrey'}}>\r\n                        <Button color='primary' disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters || !this.state.submit} variant='contained' onClick={() => this.sendSPAParameters()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                    <Typography variant='h6' style={{paddingLeft: 'calc(1% + 10px)'}}>\r\n                        Stow Angle Settings\r\n                    </Typography>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                        \r\n                    {\r\n                        ['Wind Stow Angle', 'Snow Stow Angle', 'Night Stow Angle', 'Emergency Stow Angle', 'Clean Stow Angle'].map(p => {\r\n                            return <TextField\r\n                                key={p}\r\n                                className={classes.field}\r\n                                id={p}\r\n                                name={p.replace(/ /g, '')}\r\n                                label={p}\r\n                                value={this.state[p.replace(/ /g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingStowAngles || this.props.gettingStowAngles}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">Deg</InputAdornment>,\r\n                                  }}\r\n                            />\r\n                        })\r\n                    }\r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center'}}>\r\n                        <Button color='primary' disabled={this.props.sendingStowAngles || this.props.gettingStowAngles} variant='contained' onClick={() => this.sendStowAngles()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { editedTrackers, SPAParameters, stowAngles, sendingSPAParameters, sendingStowAngles, gettingSPAParameters, gettingStowAngles } = state.app\r\n\r\n    return {\r\n        editedTrackers,\r\n        SPAParameters,\r\n        stowAngles,\r\n        sendingSPAParameters,\r\n        sendingStowAngles,\r\n        gettingSPAParameters,\r\n        gettingStowAngles\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendSPAParameters: (editedTrackers, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking) => {\r\n        const values = `${Lattitude}, ${Longitude}, ${Altitude}, ${EastLimit}, ${WestLimit}, ${TrackerWidth}, ${Pitch}, ${TrackingAccuracy}, ${AzimuthDeviation}, ${AltitudeTrackeronEast}, ${AltitudeTrackeronWest}, ${StartTimeLead}, ${EndTimeLag}, 0, ${backTracking}`\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_SPA_PARAMETERS_REQUEST', t, values})\r\n            appService.sendSPAParameters(t.deviceID, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_SUCCESS'})\r\n                    dispatch({type: 'GET_SPA_PARAMETERS_REQUEST'})\r\n                    appService.getSPAParameters(t.deviceID)\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_SPA_PARAMETERS_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_SPA_PARAMETERS_FAILURE'})\r\n                        })\r\n\r\n                }, error => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_FAILURE'})\r\n                })\r\n        })\r\n        \r\n    },\r\n    sendStowAngles: (editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle) => {\r\n        const values = `${WindStowAngle}, ${SnowStowAngle}, ${CleanStowAngle}, ${NightStowAngle}, ${EmergencyStowAngle}`\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_STOW_ANGLES_REQUEST', t, values})\r\n            appService.sendStowAngles(t.deviceID, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_SUCCESS'})\r\n                    dispatch({type: 'GET_STOW_ANGLES_REQUEST'})\r\n                    appService.getStowAngles(t.deviceID)\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_STOW_ANGLES_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_STOW_ANGLES_FAILURE'})\r\n                        })\r\n                }, error => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_FAILURE'})\r\n                })\r\n        })\r\n    },\r\n    getStowAngles: (DID) => {\r\n        dispatch({type: 'GET_STOW_ANGLES_REQUEST'})\r\n        appService.getStowAngles(DID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_STOW_ANGLES_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'GET_STOW_ANGLES_FAILURE'})\r\n            })\r\n    },\r\n    getSPAParameters: (DID) => {\r\n        dispatch({type: 'GET_SPA_PARAMETERS_REQUEST'})\r\n        appService.getSPAParameters(DID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_SPA_PARAMETERS_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'GET_SPA_PARAMETERS_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedEditRowController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(EditRowController))\r\nexport {connectedEditRowController as EditRowController1}","import React, { Fragment } from 'react'\r\nimport LeftIcon from '@material-ui/icons/ArrowBack'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { IconButton, Typography, Grid, Button, Menu, MenuItem, FormControlLabel, Switch } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: 'calc(100% - 48px)'\r\n    },\r\n    second: {\r\n        height: 'calc(100% - 128px)', \r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    }\r\n})\r\n\r\nclass ControlRowController extends React.Component {\r\n    state = {\r\n        typeOfStow: 'STOW',\r\n        auto: false\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.setState({ ...this.state, anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleClose = (key) => {\r\n        this.setState({ typeOfStow: key, anchorEl: null });\r\n    };\r\n\r\n    autoToggle = () => {\r\n        if(this.state.auto) {\r\n            this.props.controlledTrackers.map(t => this.props.sendStow(t.deviceID, 'AUTO'))\r\n            this.setState({...this.state, auto: !this.state.auto})\r\n        } else {\r\n            this.props.controlledTrackers.map(t => this.props.sendStow(t.deviceID, 'MANUAL'))\r\n            this.setState({...this.state, auto: !this.state.auto})\r\n        }\r\n    } \r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        const { anchorEl } = this.state\r\n        return (\r\n            <Fragment>\r\n\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item style={{height: 64}}>\r\n                        <Typography variant='h5'>\r\n                            <IconButton aria-label=\"Back\" onClick={this.props.back} >\r\n                                <LeftIcon fontSize=\"large\" />\r\n                            </IconButton>\r\n                            Control\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item className={classes.second}>\r\n                    \r\n                    </Grid>\r\n                    <Grid item style={{textAlign: 'center'}}>\r\n                        <Button color='primary' variant='contained' onClick={() => this.props.controlledTrackers.map(t => this.props.sendCommand(t.deviceID, 'NEGATIVE'))} style={{ margin: 10 }}>Run West</Button>\r\n                        <Button color='primary' variant='contained' onClick={() => this.props.controlledTrackers.map(t => this.props.sendCommand(t.deviceID, 'POSITIVE'))} style={{ margin: 10 }}>Run East</Button>\r\n                        <Button color='primary' variant='contained' onClick={() => this.props.controlledTrackers.map(t => this.props.sendCommand(t.deviceID, 'STOP'))} style={{ margin: 10 }}>Stop</Button>\r\n                        <Button color='primary' disabled={this.state.typeOfStow === 'STOW'} onClick={() => this.props.controlledTrackers.map(t => this.props.sendStow(t.deviceID, this.state.typeOfStow))} variant='contained' style={{ marginLeft: 10 }}>{this.state.typeOfStow}</Button>\r\n                        <Button \r\n                            color='primary' \r\n                            variant='contained' \r\n                            aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={this.handleClick}\r\n                            style={{ minWidth: 24, paddingLeft: 0, paddingRight: 0}}\r\n                        >\r\n                            <ExpandMoreIcon />\r\n                        </Button>\r\n                        <Menu\r\n                            id=\"simple-menu\"\r\n                            anchorEl={anchorEl}\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={this.handleClose}\r\n                            >\r\n                            <MenuItem onClick={() => this.handleClose('WIND')}>WIND</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('SNOW')}>SNOW</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('NIGHT')}>NIGHT</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('CLEAN')}>CLEAN</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('EMERGENCY')}>EMERGENCY</MenuItem>\r\n                        </Menu>\r\n                        <FormControlLabel style={{ margin: 10 }} labelPlacement=\"top\"\r\n                            control={\r\n                                <Switch color='primary' checked={this.state.auto} onClick={() => this.autoToggle()} />\r\n                            }\r\n                            label=\"Enable Auto Mode\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { controlledTrackers } = state.app\r\n\r\n    return {\r\n        controlledTrackers,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendCommand: (DID, value) => {\r\n        dispatch({type: 'SEND_COMMAND_REQUEST'})\r\n        appService.sendCommand(DID, value)\r\n            .then(json => {\r\n                dispatch({type: 'SEND_COMMAND_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'SEND_COMMAND_FAILURE'})\r\n            })\r\n    },\r\n    sendStow: (DID, mode) => {\r\n        dispatch({type: 'SEND_STOW_REQUEST'})\r\n        appService.sendStow(DID, mode)\r\n            .then(json => {\r\n                dispatch({type: 'SEND_STOW_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'SEND_STOW_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedControlRowController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ControlRowController))\r\nexport {connectedControlRowController as ControlRowController}","import React, { Fragment } from 'react'\r\nimport { Grid, Button, Checkbox } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { EditRowController } from './EditRowController';\r\nimport { EditRowController1 } from './_EditRowController'\r\nimport { ControlRowController } from './ControlRowController'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    buttons: {\r\n        marginBottom: 10,\r\n        marginRight: 10,\r\n        marginTop: 10\r\n    }\r\n});\r\n\r\nclass RowControllerTab extends React.Component {\r\n    state = {\r\n        selectedTrackers: [],\r\n        location: 'home'\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedTrackers.length === this.props.commissioningData.length) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.props.commissioningData]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectRow = (row) => {\r\n        if(this.state.selectedTrackers.indexOf(row) === -1) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.state.selectedTrackers, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.state.selectedTrackers.filter(t => t.macID !== row.macID)]\r\n            })\r\n        }\r\n    }\r\n\r\n    editTracker = () => {\r\n        this.props.setEditedTrackers(this.state.selectedTrackers)\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'edit'\r\n        })\r\n    }\r\n\r\n    controlTracker = () => {\r\n        this.props.setControlledTrackers(this.state.selectedTrackers)\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'control'\r\n        })\r\n    }\r\n\r\n    back = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'home'\r\n        })\r\n    }\r\n\r\n    removeTrackers = () => {\r\n        this.props.removeTrackers(this.state.selectedTrackers.map(s => s.deviceID))\r\n        this.setState({...this.state, selectedTrackers: []})\r\n    }\r\n\r\n    render() {\r\n        const { classes, commissioningData } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    this.state.location === 'edit' ? \r\n                        this.state.selectedTrackers.length > 1 ?\r\n                        <EditRowController back={this.back}/> : <EditRowController1 back={this.back}/> :\r\n                    this.state.location === 'control' ?\r\n                    <ControlRowController back={this.back}/> :\r\n                    <Grid container direction='column' style={{ height: 'calc(100% - 48px)'}}>\r\n                        <Grid item style={{textAlign: 'end'}}>\r\n                            <Button color='primary' variant='contained' disabled={this.state.selectedTrackers.length === 0} className={classes.buttons} onClick={() => this.editTracker()}>Edit</Button>\r\n                            <Button color='primary' variant='contained' disabled={this.state.selectedTrackers.length === 0} className={classes.buttons} onClick={() => this.controlTracker()}>Control</Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    onClick={() => this.selectAll()}\r\n                                    style={{cursor: 'pointer'}}\r\n                                >\r\n                                    {commissioningData !== null && commissioningData.length > 1 && <Checkbox \r\n                                        checked={this.state.selectedTrackers.length === commissioningData.length}\r\n                                        color='primary'\r\n                                    />}\r\n                                        </TableCell>\r\n                                <TableCell >Row #</TableCell>\r\n                                <TableCell >Device ID</TableCell>\r\n                                <TableCell >Mac ID</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {commissioningData && commissioningData.map(row => (\r\n                                <TableRow key={row.macID}\r\n                                    onClick={() => this.selectRow(row)}\r\n                                    style={{cursor: 'pointer'}}\r\n                                >\r\n                                <TableCell>\r\n                                    <Checkbox \r\n                                        checked={this.state.selectedTrackers.indexOf(row) !== -1}\r\n                                        color='primary'\r\n                                    />\r\n                                </TableCell>\r\n                                    <TableCell >{row.rowNumber}</TableCell>\r\n                                    <TableCell >{row.deviceID}</TableCell>\r\n                                    <TableCell >{row.macID}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        </Grid>{commissioningData !== null &&\r\n                        <Grid item style={{textAlign: 'end'}}>\r\n                            <Button variant='contained' color='primary' className={classes.buttons} disabled={this.state.selectedTrackers.length === 0} onClick={() => this.removeTrackers()}>Forget</Button>\r\n                        </Grid>}\r\n                    </Grid>\r\n                    \r\n                }\r\n                \r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData } = state.app\r\n\r\n    return {\r\n        commissioningData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    removeTrackers : (DIDs) => {\r\n        dispatch({type: 'REMOVE_TRACKERS_REQUEST'})\r\n        appService.removeTrackers(DIDs)\r\n            .then(json => {\r\n                dispatch({type: 'REMOVE_TRACKERS_SUCCESS', DIDs})\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n                appService.getCommissioningData()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n                    })\r\n            }, error => {\r\n                dispatch({type: 'REMOVE_TRACKERS_FAILURE'})\r\n            })\r\n    },\r\n    setEditedTrackers: (trackers) => {\r\n        dispatch({type: 'SET_EDITED_TRACKERS', trackers})\r\n    },\r\n    setControlledTrackers: (trackers) => {\r\n        dispatch({type: 'SET_CONTROLLED_TRACKERS', trackers})\r\n    }\r\n})\r\n\r\n\r\nconst connectedRowControllerTab = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RowControllerTab))\r\nexport {connectedRowControllerTab as RowControllerTab}","import React, { Fragment } from 'react'\r\nimport { Grid, Checkbox, TextField, Button } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    textField: {\r\n        marginLeft: 24\r\n    },\r\n    formControl: {\r\n        marginLeft: 24\r\n    }\r\n});\r\n  \r\n\r\nclass ScanTab extends React.Component {\r\n    state = {\r\n        selectedTrackers: [],\r\n        scanSelection: 'PAN ID'\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedTrackers.length === this.props.xbeeResponse.length) {\r\n            this.setState({\r\n                selectedTrackers: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selectedTrackers: [...this.props.xbeeResponse]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectRow = (row) => {\r\n        if(this.state.selectedTrackers.indexOf(row) === -1) {\r\n            this.setState({\r\n                selectedTrackers: [...this.state.selectedTrackers, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selectedTrackers: [...this.state.selectedTrackers.filter(t => t.id !== row.id)]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            scanSelection: e.target.value\r\n        })\r\n    }\r\n\r\n    inputChange = (e) =>{\r\n        this.setState({\r\n            scanParameter: e.target.value\r\n        })\r\n    }\r\n\r\n    scan = () => {\r\n        if(this.state.scanSelection === 'PAN ID') {\r\n            this.props.discover('00000')\r\n        } else {\r\n            this.props.discover(this.state.scanParameter)\r\n        }\r\n    } \r\n\r\n    addTrackers = () => {\r\n        this.props.addTrackers(this.state.selectedTrackers)\r\n    }\r\n\r\n    render() {\r\n        const { classes, xbeeResponse, PANID } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column'>\r\n                    <Grid item>\r\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                            <RadioGroup\r\n                                row\r\n                                aria-label=\"Scan\"\r\n                                name=\"scan\"\r\n                                value={this.state.scanSelection}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <FormControlLabel value=\"PAN ID\" control={<Radio color='primary'/>} label=\"PAN ID\" />\r\n                                <FormControlLabel value=\"Device ID\" control={<Radio color='primary'/>} label=\"Device ID\" />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item style={{marginBottom: 24}}>\r\n                    {\r\n                        this.state.scanSelection === 'PAN ID' ?\r\n                        <TextField\r\n                            id=\"scanParameter\"\r\n                            className={classes.textField}\r\n                            value={PANID}\r\n                            onChange={this.inputChange}\r\n                            disabled={this.state.scanSelection === 'PAN ID'}\r\n                            margin=\"none\"\r\n                            variant='outlined'\r\n                        /> :\r\n                        <TextField\r\n                            id=\"scanParameter\"\r\n                            className={classes.textField}\r\n                            value={this.state.scanParameter}\r\n                            onChange={this.inputChange}\r\n                            placeholder='Device ID'\r\n                            margin=\"none\"\r\n                            variant='outlined'\r\n                        />\r\n                    }\r\n                        <Button color='primary' onClick={() => this.scan()} variant='contained' style={{marginLeft: 24, verticalAlign: 'bottom'}}>Scan</Button>\r\n                    </Grid>{xbeeResponse.length !== 0 && xbeeResponse !== undefined &&\r\n                    <Grid item>\r\n                    <Table className={classes.table}>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell\r\n                                onClick={() => this.selectAll()}\r\n                                style={{cursor: 'pointer'}}\r\n                            >\r\n                                {xbeeResponse.length > 1 && xbeeResponse !== undefined && <Checkbox \r\n                                    checked={this.state.selectedTrackers.length === xbeeResponse.length && this.state.selectedTrackers.length !== 0}\r\n                                    color='primary'\r\n                                />}\r\n                                    </TableCell>\r\n                            <TableCell >Row #</TableCell>\r\n                            <TableCell >Device ID</TableCell>\r\n                            <TableCell >Mac ID</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {xbeeResponse.length !== 0 && xbeeResponse !== undefined && xbeeResponse.map(res => {\r\n                            return (\r\n                            <TableRow key={res.DID}\r\n                                onClick={() => this.selectRow(res)}\r\n                                style={{cursor: 'pointer'}}\r\n                            >\r\n                            <TableCell>\r\n                                <Checkbox \r\n                                    checked={this.state.selectedTrackers.indexOf(res) !== -1}\r\n                                    color='primary'\r\n                                />\r\n                            </TableCell>\r\n                                <TableCell >{res.VALUES.split(',')[0]}</TableCell>\r\n                                <TableCell >{res.DID}</TableCell>\r\n                                <TableCell >{res.macID}</TableCell>\r\n                            </TableRow>\r\n                        )})}\r\n                        </TableBody>\r\n                    </Table>\r\n                    </Grid>}{xbeeResponse.length !== 0 && xbeeResponse !== undefined &&\r\n                    <Grid item style={{textAlign: 'end'}}>\r\n                        <Button color='primary' disabled={this.state.selectedTrackers.length === 0} onClick={() => this.addTrackers()} variant='contained' style={{margin: 10}}>Add</Button>\r\n                    </Grid>}\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { xbeeResponse, PANID } = state.app\r\n\r\n    return {\r\n        xbeeResponse,\r\n        PANID\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    discover : (did) => {\r\n        dispatch({type: 'DISCOVER_REQUEST'})\r\n        appService.discover(did)\r\n            .then(json => {\r\n                dispatch({type: 'DISCOVER_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'DISCOVER_FAILURE'})\r\n            })\r\n    },\r\n    addTrackers: (devices) => {\r\n        dispatch({type: 'ADD_TRACKERS_REQUEST'})\r\n        appService.addTrackers(devices)\r\n            .then(json => {\r\n                dispatch({type: 'ADD_TRACKERS_SUCCESS', devices})\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n                appService.getCommissioningData()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n                    })\r\n            }, error => {\r\n                dispatch({type: 'ADD_TRACKERS_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedScanTab = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ScanTab))\r\nexport {connectedScanTab as ScanTab}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { RowControllerTab } from './RowControllerTab'\r\nimport { ScanTab } from './ScanTab'\r\nimport { connect } from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    minWidth: 550\r\n  },\r\n  tabsIndicator: {\r\n    backgroundColor: '#54AAB3',\r\n  },\r\n  selected: {\r\n    backgroundColor: '#54AAB3',\r\n    color: '#ffffff',\r\n    fontWeight: 600,\r\n    fontSize: 14\r\n  }\r\n});\r\n\r\nclass RowController extends React.Component {\r\n\r\n  handleChange = (event, value) => {\r\n    this.props.changeTab({ value });\r\n  };\r\n\r\n  render() {\r\n    const { classes, currentTab } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" color='secondary'>\r\n          <Tabs value={currentTab} onChange={this.handleChange} classes={{indicator: classes.tabsIndicator}}>\r\n            <Tab label=\"Paired Rows\" classes={{selected: classes.selected}}/>\r\n            <Tab label=\"Scan\" classes={{selected: classes.selected}}/>\r\n          </Tabs>\r\n        </AppBar>\r\n        {currentTab === 0 && <RowControllerTab />}\r\n        {currentTab === 1 && <ScanTab />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRowController.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentTab } = state.app\r\n\r\n    return {\r\n        currentTab\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changeTab: (value) => {\r\n        dispatch({type: 'CHANGE_TAB', value})\r\n    }\r\n})\r\n\r\n\r\nconst connectedRowController = (connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RowController)))\r\nexport {connectedRowController as RowController}","import React, { Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Grid, TextField, Typography, IconButton, FormControlLabel, FormControl, Radio, RadioGroup, Button, MenuItem, OutlinedInput, Select, InputLabel, CircularProgress, Switch, InputAdornment, Toolbar, AppBar } from '@material-ui/core';\r\nimport { connect } from 'react-redux'\r\nimport { appService } from '../App/app.services';\r\nimport Refresh from '@material-ui/icons/Refresh'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    minWidth: 300,\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('md')]: {\r\n        flexDirection: 'row'\r\n    },\r\n    marginBottom: 10\r\n  },\r\n  grid: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    [theme.breakpoints.up('md')]: {\r\n        width: '48%',\r\n        marginLeft: '1%',\r\n        marginRight: '1%'\r\n    }\r\n  },\r\n  grid2: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-start',\r\n    width: '90%',\r\n    marginRight: '5%',\r\n    marginLeft: '5%',\r\n    paddingBottom: 20,\r\n    paddingTop: 20,\r\n    borderBottom: '1px solid #54aab3'\r\n  },\r\n  field: {\r\n    flexDirection: 'row',\r\n    [theme.breakpoints.up('md')]: {\r\n        margin: '10px 0 0 0'\r\n    }\r\n  },\r\n  saveButton: {\r\n    marginTop: 10,\r\n    alignSelf: 'start',\r\n    [theme.breakpoints.down('sm')]: {\r\n        width: '90%',\r\n        margin: 10,\r\n        alignSelf: 'center'\r\n    }\r\n  },\r\n  button: {\r\n      width: '10%'\r\n  },\r\n  selectWifi: {\r\n      width: '90%'\r\n  },/* \r\n  specialBorder: {\r\n    [theme.breakpoints.up('md')]: {\r\n        borderRight: '0.5px solid black'\r\n    }\r\n  } */\r\n});\r\n\r\nclass ZoneController extends React.Component {\r\n\r\n    state = {\r\n        ssid: '',\r\n        password: '',\r\n        DHCP: false,\r\n        staticIP: '',\r\n        upperSpeedLimit: '',\r\n        lowerSpeedLimit: '',\r\n        minBreachTime: '',\r\n        maxBreachTime: '',\r\n        maxBreachCount: '',\r\n        maxFloodLevel: '',\r\n        floodMovingAveragePeriod: '',\r\n        maxSnowLevel: '',\r\n        snowMovingAveragePeriod: '',\r\n        rowHeight: '',\r\n        rowWidth: '',\r\n        stepSize: '',\r\n        bqFile: '',\r\n        bqFileName: '',\r\n        bqEnabled: this.props.bqEnabled\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.scanWifi()\r\n        this.props.getWindLimits()\r\n        this.props.getFloodLimits()\r\n        this.props.getSnowLimits()\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.floodLimits !== this.props.floodLimits) {\r\n            this.setState({\r\n                ...this.state,\r\n                maxFloodLevel: nextProps.floodLimits.maxFloodLevel,\r\n                floodMovingAveragePeriod: nextProps.floodLimits.movingAveragePeriod\r\n            })\r\n        }\r\n        if(nextProps.windLimits !== this.props.windLimits) {\r\n            this.setState({\r\n                ...this.state,\r\n                upperSpeedLimit: nextProps.windLimits.speedLimits.upperSpeedLimit,\r\n                lowerSpeedLimit: nextProps.windLimits.speedLimits.lowerSpeedLimit,\r\n                minBreachTime: nextProps.windLimits.breachParameters.minBreachTime,\r\n                maxBreachTime: nextProps.windLimits.breachParameters.maxBreachTime,\r\n                maxBreachCount: nextProps.windLimits.breachParameters.maxBreachCount\r\n            })\r\n        }\r\n        if(nextProps.snowLimits !== this.props.snowLimits) {\r\n            this.setState({\r\n                ...this.state,\r\n                maxSnowLevel: nextProps.snowLimits.maxSnowLevel,\r\n                snowMovingAveragePeriod: nextProps.snowLimits.movingAveragePeriod,\r\n                rowHeight: nextProps.snowLimits.rowHeight,\r\n                rowWidth: nextProps.snowLimits.rowWidth,\r\n                stepSize: nextProps.snowLimits.stepSize\r\n            })\r\n        }\r\n        if(nextProps.bqEnabled !== this.props.bqEnabled) {\r\n            this.setState({\r\n                ...this.state,\r\n                bqEnabled: nextProps.bqEnabled\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    setWifiInfo = () => {\r\n        this.props.setWifiInfo(this.state.ssid, this.state.password)\r\n    }\r\n\r\n    DHCPToggle = () => {\r\n        this.setState({...this.state, DHCP: !this.state.DHCP})\r\n    }\r\n\r\n    BQToggle = () => {\r\n        this.setState({...this.state, BQ: !this.state.BQ})\r\n    }\r\n\r\n    setWindLimits = () => {\r\n        this.props.setWindLimits(this.state.lowerSpeedLimit, this.state.upperSpeedLimit, this.state.minBreachTime, this.state.maxBreachTime, this.state.maxBreachCount)\r\n    }\r\n    \r\n    setFloodLimits = () => {\r\n        this.props.setFloodLimits(this.state.maxFloodLevel, this.state.floodMovingAveragePeriod)\r\n    }\r\n    \r\n    setSnowLimits = () => {\r\n        this.props.setSnowLimits(this.state.maxSnowLevel, this.state.snowMovingAveragePeriod, this.state.rowHeight, this.state.rowWidth, this.state.stepSize)\r\n    }\r\n\r\n    handleSelectedFile = e => {\r\n        this.setState({\r\n            ...this.state,\r\n            bqFile: e.target.files[0],\r\n            bqFileName: e.target.files[0].name\r\n        })\r\n    }\r\n\r\n    saveBQKey = () => {\r\n        this.props.saveBQKey(this.state.bqFile)\r\n        this.setState({\r\n            ...this.state,\r\n            bqFile: '',\r\n            bqFileName: ''\r\n        })\r\n    }\r\n\r\n    BQToggle = () => {\r\n        if(this.state.bqEnabled) {\r\n            this.props.disableBQ()\r\n            this.setState({\r\n                ...this.state,\r\n                bqEnabled: false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                bqEnabled: true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes, wifiList } = this.props\r\n        return (\r\n            <Fragment>\r\n                    <Grid item xs={12} container justify='center' alignItems='flex-start' className={classes.root}>\r\n                        <Grid item className={[classes.grid, classes.specialBorder]}>\r\n                            <AppBar position=\"static\" color='primary' className={classes.appBar}>\r\n                            <Toolbar>\r\n                            <Typography variant=\"h5\" color=\"inherit\" noWrap>\r\n                                ZC Parameters\r\n                            </Typography>\r\n                            </Toolbar>\r\n                            </AppBar>\r\n                            <div className={classes.grid2}>\r\n                            <Typography variant='h6' style={{alignSelf: 'flex-start', marginBottom: 10}}>\r\n                                Wifi Configuration\r\n                            </Typography>\r\n                            <FormControl variant=\"outlined\" className={classes.field} fullWidth>\r\n                                <InputLabel htmlFor=\"ssid\">\r\n                                    SSID\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={this.state.ssid}\r\n                                    onChange={this.handleChange}\r\n                                    autoWidth\r\n                                    className={classes.selectWifi}\r\n                                    input={<OutlinedInput labelWidth={50} name=\"ssid\" id=\"ssid\" />}\r\n                                >\r\n                                    {\r\n                                        wifiList.length === 0 ? <MenuItem value={'none'}> <CircularProgress /></MenuItem> : wifiList.map(w => <MenuItem key={w + Math.random() * (+100 - +0) + +0} value={w}>{w}</MenuItem>)\r\n                                    }\r\n                                    \r\n                                </Select>\r\n                                <IconButton className={classes.button} onClick={() => this.props.scanWifi()} aria-label=\"Refresh Wifi list\">\r\n                                    <Refresh />\r\n                                </IconButton>\r\n                            </FormControl>\r\n                            <TextField\r\n                                className={classes.field}\r\n                                fullWidth\r\n                                name='password'\r\n                                label='Password'\r\n                                value={this.state.password}\r\n                                onChange={this.handleChange}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                            />\r\n                            <Button variant='contained' color='primary' onClick={() => this.setWifiInfo()} className={classes.saveButton}>Save</Button>\r\n                            </div>\r\n                            <div className={classes.grid2}>\r\n                            <Typography variant='h6' style={{alignSelf: 'flex-start', marginBottom: 10}}>\r\n                                Ethernet Configuration\r\n                            </Typography>\r\n                            <FormControlLabel style={{ margin: 10 }} labelPlacement=\"start\"\r\n                                control={\r\n                                    <Switch color='primary' checked={this.state.DHCP} onClick={() => this.DHCPToggle()} />\r\n                                }\r\n                                label='Enable DHCP'\r\n                            />\r\n                            <TextField\r\n                                className={classes.field}\r\n                                fullWidth\r\n                                name='staticIP'\r\n                                label='Static IP'\r\n                                value={this.state.staticIP}\r\n                                onChange={this.handleChange}\r\n                                disabled={this.state.DHCP}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                            />\r\n                            <Button variant='contained' color='primary' onClick={() => this.setWifiInfo()} className={classes.saveButton}>Save</Button>\r\n                            </div>\r\n                            <div className={classes.grid2}>\r\n                            <Typography variant='h6' style={{alignSelf: 'flex-start', marginBottom: 10}}>\r\n                                Big Query Configuration\r\n                            </Typography>\r\n                            <FormControlLabel style={{ margin: 10 }} labelPlacement=\"start\"\r\n                                control={\r\n                                    <Switch color='primary' checked={this.state.bqEnabled} onClick={() => this.BQToggle()} />\r\n                                }\r\n                                label='Enable Big Query'\r\n                            />\r\n                            <div style={{display: 'flex', alignItems: 'baseline', width: '100%'}}>\r\n                            <TextField\r\n                                id=\"bqkey\"\r\n                                label=\"Big Query Key\"\r\n                                helperText=\"Upload Big Query Key File\"\r\n                                name='bqFile'\r\n                                value={this.state.bqFileName}\r\n                                disabled={!this.state.bqEnabled}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                            />\r\n                            <input\r\n                                accept=\"*\"\r\n                                style={{ display: 'none'}}\r\n                                id=\"contained-button-file\"\r\n                                type=\"file\"\r\n                                onChange={this.handleSelectedFile}\r\n                            />\r\n                            <label htmlFor=\"contained-button-file\">\r\n                                <Button variant=\"contained\" disabled={!this.state.bqEnabled} color=\"primary\" component=\"span\" style={{margin: 5}}>\r\n                                    Browse\r\n                                </Button>\r\n                            </label>\r\n                            </div>\r\n                            <Button variant='contained' disabled={!this.state.bqEnabled} onClick={() => this.saveBQKey()} color='primary'className={classes.saveButton}>Save</Button>\r\n                            </div>\r\n                            <div className={classes.grid2}>\r\n                            <Typography variant='h6' style={{alignSelf: 'flex-start', marginBottom: 10}}>\r\n                                Heart Beat Configuration\r\n                            </Typography>\r\n                            <TextField\r\n                                className={classes.field}\r\n                                fullWidth\r\n                                name='heartbeatInterval'\r\n                                label='Heart Beat Interval'\r\n                                value={this.state.password}\r\n                                onChange={this.handleChange}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                            />\r\n                            <TextField\r\n                                className={classes.field}\r\n                                fullWidth\r\n                                name='heartbeatMaxMessages'\r\n                                label='Heart Beat Max Messages'\r\n                                value={this.state.password}\r\n                                onChange={this.handleChange}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                            />\r\n                            <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                            </div>{/* \r\n                            <div className={classes.grid2}>\r\n                            <Typography variant='h6' style={{alignSelf: 'flex-start', marginBottom: 10}}>\r\n                                PAN ID Configuration\r\n                            </Typography>\r\n                            <TextField\r\n                                className={classes.field}\r\n                                fullWidth\r\n                                name='panID'\r\n                                label='PAN ID'\r\n                                value={this.state.panID}\r\n                                onChange={this.handleChange}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                            />\r\n                            <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                            </div> */}\r\n                            <div className={classes.grid2}>\r\n                            <Typography variant='h6' style={{alignSelf: 'flex-start', marginBottom: 10}}>\r\n                                Sync Configuration\r\n                            </Typography>\r\n                            <FormControl component=\"fieldset\" className={classes.field}>\r\n                                <RadioGroup\r\n                                    row\r\n                                    aria-label=\"Sync\"\r\n                                    name=\"sync\"\r\n                                    value={this.state.syncTime}\r\n                                    onChange={this.handleChange}\r\n                                >\r\n                                    <FormControlLabel value=\"internet\" control={<Radio color='primary'/>} label=\"Sync from internet\" />\r\n                                    <FormControlLabel value=\"scada\" control={<Radio color='primary'/>} label=\"Sync from SCADA\" />\r\n                                </RadioGroup>\r\n                                <Button variant='contained' color='primary' style={{marginBottom: 10}}>Sync</Button>\r\n                            </FormControl>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item className={classes.grid}>\r\n                        <AppBar position='static' color='primary' className={classes.appBar}>\r\n                            <Toolbar>\r\n                            <Typography variant=\"h5\" color=\"inherit\" noWrap>\r\n                                Sensor Limits\r\n                            </Typography>\r\n                            </Toolbar>\r\n                            </AppBar>\r\n                            <div className={classes.grid2}>\r\n                            <Typography variant='h6' style={{alignSelf: 'flex-start', marginBottom: 10}}>\r\n                                Wind Sensor\r\n                            </Typography>\r\n                            <TextField\r\n                                className={classes.field}\r\n                                fullWidth\r\n                                name='lowerSpeedLimit'\r\n                                label='Lower Speed Limit'\r\n                                value={this.state.lowerSpeedLimit}\r\n                                onChange={this.handleChange}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.gettingWindLimits || this.props.settingWindLimits}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">m/s</InputAdornment>,\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                className={classes.field}\r\n                                fullWidth\r\n                                name='upperSpeedLimit'\r\n                                label='Upper Speed Limit'\r\n                                value={this.state.upperSpeedLimit}\r\n                                onChange={this.handleChange}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.gettingWindLimits || this.props.settingWindLimits}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">m/s</InputAdornment>,\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                className={classes.field}\r\n                                fullWidth\r\n                                name='minBreachTime'\r\n                                label='Min Breach Time'\r\n                                value={this.state.minBreachTime}\r\n                                onChange={this.handleChange}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.gettingWindLimits || this.props.settingWindLimits}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">s</InputAdornment>,\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                className={classes.field}\r\n                                fullWidth\r\n                                name='maxBreachTime'\r\n                                label='Max Breach Time'\r\n                                value={this.state.maxBreachTime}\r\n                                onChange={this.handleChange}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.gettingWindLimits || this.props.settingWindLimits}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">s</InputAdornment>,\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                className={classes.field}\r\n                                fullWidth\r\n                                name='maxBreachCount'\r\n                                label='Max Breach Count'\r\n                                value={this.state.maxBreachCount}\r\n                                onChange={this.handleChange}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.gettingWindLimits || this.props.settingWindLimits}\r\n                            />\r\n                            <Button disabled={this.props.gettingWindLimits || this.props.settingWindLimits} variant='contained' color='primary'className={classes.saveButton} onClick={() => this.setWindLimits()}>{this.props.settingWindLimits ? 'Saving...' : 'Save'}</Button>\r\n                            </div>\r\n                            <div className={classes.grid2}>\r\n                            <Typography variant='h6' style={{alignSelf: 'flex-start', marginBottom: 10}}>\r\n                                Flood Sensor\r\n                            </Typography>\r\n                            <TextField\r\n                                className={classes.field}\r\n                                fullWidth\r\n                                name='maxFloodLevel'\r\n                                label='Max FLood Level'\r\n                                value={this.state.maxFloodLevel}\r\n                                onChange={this.handleChange}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.gettingFloodLimits || this.props.settingFloodLimits}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">mm</InputAdornment>,\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                className={classes.field}\r\n                                fullWidth\r\n                                name='floodMovingAveragePeriod'\r\n                                label='Moving Average Period'\r\n                                value={this.state.floodMovingAveragePeriod}\r\n                                onChange={this.handleChange}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.gettingFloodLimits || this.props.settingFloodLimits}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">s</InputAdornment>,\r\n                                }}\r\n                            />\r\n                            <Button disabled={this.props.gettingFloodLimits || this.props.settingFloodLimits} variant='contained' color='primary'className={classes.saveButton} onClick={() => this.setFloodLimits()}>{this.props.settingFloodLimits ? 'Saving...': 'Save'}</Button>\r\n                            </div>\r\n                            <div className={classes.grid2}>\r\n                            <Typography variant='h6' style={{alignSelf: 'flex-start', marginBottom: 10}}>\r\n                                Snow Sensor\r\n                            </Typography>\r\n                            <TextField\r\n                                className={classes.field}\r\n                                fullWidth\r\n                                name='maxSnowLevel'\r\n                                label='Max Snow Level'\r\n                                value={this.state.maxSnowLevel}\r\n                                onChange={this.handleChange}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">mm</InputAdornment>,\r\n                                }}\r\n                                disabled={this.props.gettingSnowLimits || this.props.settingSnowLimits}\r\n                            />\r\n                            <TextField\r\n                                className={classes.field}\r\n                                fullWidth\r\n                                name='snowMovingAveragePeriod'\r\n                                label='Moving Average Period'\r\n                                value={this.state.snowMovingAveragePeriod}\r\n                                onChange={this.handleChange}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">s</InputAdornment>,\r\n                                }}\r\n                                disabled={this.props.gettingSnowLimits || this.props.settingSnowLimits}\r\n                            />\r\n                            <TextField\r\n                                className={classes.field}\r\n                                fullWidth\r\n                                name='rowHeight'\r\n                                label='Row Height'\r\n                                value={this.state.rowHeight}\r\n                                onChange={this.handleChange}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">mm</InputAdornment>,\r\n                                }}\r\n                                disabled={this.props.gettingSnowLimits || this.props.settingSnowLimits}\r\n                            />\r\n                            <TextField\r\n                                className={classes.field}\r\n                                fullWidth\r\n                                name='rowWidth'\r\n                                label='Row Width'\r\n                                value={this.state.rowWidth}\r\n                                onChange={this.handleChange}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">mm</InputAdornment>,\r\n                                }}\r\n                                disabled={this.props.gettingSnowLimits || this.props.settingSnowLimits}\r\n                            />\r\n                            <TextField\r\n                                className={classes.field}\r\n                                fullWidth\r\n                                name='stepSize'\r\n                                label='Step Size'\r\n                                value={this.state.stepSize}\r\n                                onChange={this.handleChange}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.gettingSnowLimits || this.props.settingSnowLimits}\r\n                            />\r\n                            <Button disabled={this.props.gettingSnowLimits || this.props.settingSnowLimits} variant='contained' color='primary'className={classes.saveButton} onClick={() => this.setSnowLimits()}>{this.props.settingSnowLimits ? 'Saving...' : 'Save'}</Button>\r\n                            </div>\r\n                        </Grid>\r\n                        \r\n                        \r\n                    </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { wifiList, windLimits, floodLimits, snowLimits, gettingFloodLimits, settingFloodLimits, gettingSnowLimits, settingSnowLimits, gettingWindLimits, settingWindLimits, bqEnabled} = state.app\r\n\r\n    return {\r\n        wifiList,\r\n        windLimits,\r\n        floodLimits,\r\n        snowLimits,\r\n        gettingFloodLimits, \r\n        settingFloodLimits, \r\n        gettingSnowLimits, \r\n        settingSnowLimits, \r\n        gettingWindLimits, \r\n        settingWindLimits,\r\n        bqEnabled\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setWifiInfo: (ssid, pass) => {\r\n        dispatch({type: 'SET_WIFI_INFO_REQUEST'}) \r\n        appService.setWifiInfo(ssid, pass)\r\n            .then(json => {\r\n                dispatch({type: 'SET_WIFI_INFO_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'SET_WIFI_INFO_FAILURE'})\r\n            })\r\n    },\r\n    scanWifi: () => {\r\n        dispatch({type: 'SCAN_WIFI_REQUEST'})\r\n        appService.scanWifi()\r\n            .then(json => {\r\n                dispatch({type: 'SCAN_WIFI_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'SCAN_WIFI_FAILURE'})\r\n            })\r\n    },\r\n    setWindLimits: (lowerSpeedLimit, upperSpeedLimit, minBreachTime, maxBreachTime, maxBreachCount) => {\r\n        dispatch({type: 'SET_WIND_LIMITS_REQUEST'})\r\n        appService.setWindLimits(lowerSpeedLimit, upperSpeedLimit, minBreachTime, maxBreachTime, maxBreachCount)\r\n            .then(json => {\r\n                dispatch({type: 'SET_WIND_LIMITS_SUCCESS'})\r\n                dispatch({type: 'GET_WIND_LIMITS_REQUEST'})\r\n                appService.getWindLimits()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_WIND_LIMITS_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_WIND_LIMITS_FAILURE'})\r\n                    })\r\n            }, error => {\r\n                dispatch({type: 'SET_WIND_LIMITS_FAILURE'})\r\n            })\r\n    },\r\n    getWindLimits: () => {\r\n        dispatch({type: 'GET_WIND_LIMITS_REQUEST'})\r\n        appService.getWindLimits()\r\n            .then(json => {\r\n                dispatch({type: 'GET_WIND_LIMITS_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_WIND_LIMITS_FAILURE'})\r\n            })\r\n    },\r\n    setFloodLimits: (maxFloodLevel, movingAveragePeriod) => {\r\n        dispatch({type: 'SET_FLOOD_LIMITS_REQUEST'})\r\n        appService.setFloodLimits(maxFloodLevel, movingAveragePeriod)\r\n            .then(json => {\r\n                dispatch({type: 'SET_FLOOD_LIMITS_SUCCESS'})\r\n                dispatch({type: 'GET_FLOOD_LIMITS_REQUEST'})\r\n                appService.getFloodLimits()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_FLOOD_LIMITS_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_FLOOD_LIMITS_FAILURE'})\r\n                    })\r\n            }, error => {\r\n                dispatch({type: 'SET_FLOOD_LIMITS_FAILURE'})\r\n            })\r\n    },\r\n    getFloodLimits: () => {\r\n        dispatch({type: 'GET_FLOOD_LIMITS_REQUEST'})\r\n        appService.getFloodLimits()\r\n            .then(json => {\r\n                dispatch({type: 'GET_FLOOD_LIMITS_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_FLOOD_LIMITS_FAILURE'})\r\n            })\r\n    },\r\n    setSnowLimits: (maxSnowLevel, snowMovingAveragePeriod, rowHeight, rowWidth, stepSize) => {\r\n        dispatch({type: 'SET_SNOW_LIMITS_REQUEST'})\r\n        appService.setSnowLimits(maxSnowLevel, snowMovingAveragePeriod, rowHeight, rowWidth, stepSize)\r\n            .then(json => {\r\n                dispatch({type: 'SET_SNOW_LIMITS_SUCCESS'})\r\n                dispatch({type: 'GET_SNOW_LIMITS_REQUEST'})\r\n                appService.getSnowLimits()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_SNOW_LIMITS_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_SNOW_LIMITS_FAILURE'})\r\n                    })\r\n            }, error => {\r\n                dispatch({type: 'SET_SNOW_LIMITS_FAILURE'})\r\n            })\r\n    },\r\n    getSnowLimits: () => {\r\n        dispatch({type: 'GET_SNOW_LIMITS_REQUEST'})\r\n        appService.getSnowLimits()\r\n            .then(json => {\r\n                dispatch({type: 'GET_SNOW_LIMITS_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_SNOW_LIMITS_FAILURE'})\r\n            })\r\n    },\r\n    saveBQKey: (file) => {\r\n        dispatch({type: 'SAVE_BQ_KEY_REQUEST'})\r\n        appService.uploadKey(file)\r\n            .then(json => {\r\n                dispatch({type: 'SAVE_BQ_KEY_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'SAVE_BQ_KEY_FAILURE'})\r\n            })\r\n    },\r\n    disableBQ: () => {\r\n        dispatch({type: 'DISABLE_BQ_REQUEST'})\r\n        appService.disableBQ()\r\n            .then(json => {\r\n                dispatch({type: 'DISABLE_BQ_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'DISABLE_BQ_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedZoneController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ZoneController))\r\nexport {connectedZoneController as ZoneController}","import React from 'react'\r\nimport { Grid, Button, Checkbox, TextField, DialogActions, DialogTitle, Dialog, DialogContent, MenuItem, OutlinedInput, InputLabel, FormControl, Select, Tooltip, Switch, InputAdornment } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      height: '100%',\r\n      overflowX: 'auto',\r\n      backgroundColor: 'white'\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    buttons: {\r\n        marginBottom: 10,\r\n        marginRight: 10,\r\n        marginTop: 10\r\n    }\r\n});\r\n  \r\n\r\nclass Sensors extends React.Component {\r\n\r\n    state = {\r\n        selectedSensors: [],\r\n        dialog: false,\r\n        which: 'none',\r\n        port: '',\r\n        type: '',\r\n        model: '',\r\n        samplingPeriod: '',\r\n        driverFile: '',\r\n        driverFileName: '',\r\n        enabled: [...this.props.sensors.filter(s => s.enabled === true)]\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.getSensors()\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.sensors !== this.props.sensors && nextProps.sensors !== undefined) {\r\n            this.setState({...this.state, enabled: [...nextProps.sensors.filter(s => s.enabled === true)]})\r\n        }\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedSensors.length === this.props.sensors.length) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...this.props.sensors]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectSensor = (row) => {\r\n        if(this.state.selectedSensors.filter(t => t.model === row.model && t.type === row.type).length === 0) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...this.state.selectedSensors, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...this.state.selectedSensors.filter(t => t.model !== row.model && t.type !== row.type)]\r\n            })\r\n        }\r\n    }\r\n\r\n    addSensor = () => {\r\n        this.setState({ ...this.state, dialog: true, which: 'add'})\r\n    }\r\n\r\n    editSensor = () => {\r\n        this.setState({ ...this.state, dialog: true, which: 'edit', port: this.state.selectedSensors[0].port, type: this.state.selectedSensors[0].type, model: this.state.selectedSensors[0].model, samplingPeriod: this.state.selectedSensors[0].samplingPeriod})\r\n    }\r\n\r\n    removeSensor = () => {\r\n        this.props.removeSensor(this.state.selectedSensors)\r\n        this.setState({ ...this.state, selectedSensors: [] })\r\n    }\r\n\r\n    enable = (row) => {\r\n        if(this.state.enabled.filter(t => t.model === row.model && t.type === row.type).length === 0) {\r\n            this.props.enableSensor(row.type, row.model)\r\n            this.setState({...this.state, enabled: [...this.state.enabled, row]})\r\n        } else {\r\n            this.props.disableSensor(row.type, row.model)\r\n            this.setState({...this.state, enabled: this.state.enabled.filter(e => e !== row)})\r\n        }\r\n        \r\n    }\r\n\r\n    handleAdd = () => {\r\n        if(this.state.which === 'edit') {\r\n            this.props.softRemoveSensor(this.state.selectedSensors)\r\n            this.props.addSensor(this.state.driverFile, this.state.port, this.state.type, this.state.model, this.state.samplingPeriod)\r\n        } else {\r\n            this.props.addSensor(this.state.driverFile, this.state.port, this.state.type, this.state.model, this.state.samplingPeriod)\r\n        }\r\n            \r\n        \r\n        this.setState({ ...this.state, dialog: false, which: 'none', port: '', type: '', model: '', samplingPeriod: '', driverFile: '', driverFileName: '' });\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ ...this.state, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ ...this.state, dialog: false, which: 'none' });\r\n    }\r\n\r\n    \r\n    handleSelectedFile = e => {\r\n        this.setState({\r\n            ...this.state,\r\n            driverFile: e.target.files[0],\r\n            driverFileName: e.target.files[0].name\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes, sensors } = this.props\r\n\r\n        return (\r\n            <Grid container direction='column' className={classes.root}>\r\n                <Grid item style={{textAlign: 'end'}}>\r\n                    <Button color='primary' variant='contained' className={classes.buttons} onClick={() => this.addSensor()}>Add New</Button>\r\n                    {this.state.selectedSensors.length > 1 ?\r\n                        <Tooltip title='Cannot edit multiple sensors at once. Please choose a single sensor to edit.'>\r\n                            <span><Button color='primary' variant='contained' className={classes.buttons} disabled>Edit</Button></span>\r\n                        </Tooltip> :\r\n                        <Button color='primary' variant='contained' disabled={this.state.selectedSensors.length !== 1} className={classes.buttons} onClick={() => this.editSensor()}>Edit</Button>\r\n                    }\r\n                </Grid>\r\n                <Grid item>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell\r\n                            onClick={() => this.selectAll()}\r\n                            style={{cursor: 'pointer'}}\r\n                        >{sensors && sensors.length > 1 && \r\n                            <Checkbox \r\n                                checked={this.state.selectedSensors.length === this.props.sensors.length}\r\n                                color='primary'\r\n                            />}\r\n                                </TableCell>\r\n                        <TableCell >Port #</TableCell>\r\n                        <TableCell >Sensor Type</TableCell>\r\n                        <TableCell >Model #</TableCell>\r\n                        <TableCell >Sampling Period</TableCell>\r\n                        <TableCell >Enabled</TableCell>\r\n                        <TableCell >Status</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {sensors && sensors.map(row => (\r\n                        <TableRow key={row.port+row.type+row.model}>\r\n                            <TableCell>\r\n                                <Checkbox \r\n                                    onClick={() => this.selectSensor(row)}\r\n                                    checked={this.state.selectedSensors.filter(t => t.model === row.model && t.type === row.type).length !== 0}\r\n                                    color='primary'\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell >{row.port}</TableCell>\r\n                            <TableCell >{row.type}</TableCell>\r\n                            <TableCell >{row.model}</TableCell>\r\n                            <TableCell >{row.samplingPeriod}s</TableCell>\r\n                            <TableCell>\r\n                                {/* <Checkbox \r\n                                    checked={this.state.enabled.filter(t => t.model === row.model && t.type === row.type).length !== 0}\r\n                                    onClick={() => this.enable(row)}\r\n                                    color='primary'\r\n                                /> */}\r\n                                <Switch color='primary' checked={this.state.enabled.filter(t => t.model === row.model && t.type === row.type).length !== 0} onClick={() => this.enable(row)} />\r\n                            </TableCell>\r\n                            <TableCell >{row.status}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>{sensors && sensors.length > 0 &&\r\n                <Grid item style={{textAlign: 'end'}}>\r\n                    <Button color='primary' variant='contained' disabled={this.state.selectedSensors.length === 0} className={classes.buttons} onClick={() => this.removeSensor()}>Remove</Button>\r\n                </Grid>}\r\n                </Grid>\r\n                <Dialog\r\n                    open={this.state.dialog}\r\n                    disableBackdropClick\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">{this.state.which === 'add' ? 'Add Sensor' : 'Edit Sensor'}</DialogTitle>\r\n                    <DialogContent>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl} fullWidth margin='dense'>\r\n                            <InputLabel htmlFor=\"port\">\r\n                                Port #\r\n                            </InputLabel>\r\n                            <Select\r\n                                value={this.state.port}\r\n                                onChange={this.handleChange}\r\n                                autoWidth\r\n                                input={<OutlinedInput labelWidth={50} name=\"port\" id=\"port\" />}\r\n                            >\r\n                                <MenuItem value={'ADC48CH0'}>ADC48CH0 (Address: 0x48; Channel: 0)</MenuItem>\r\n                                <MenuItem value={'ADC48CH1'}>ADC48CH1 (Address: 0x48; Channel: 1)</MenuItem>\r\n                                <MenuItem value={'ADC48CH2'}>ADC48CH2 (Address: 0x48; Channel: 2)</MenuItem>\r\n                                <MenuItem value={'ADC48CH3'}>ADC48CH3 (Address: 0x48; Channel: 3)</MenuItem>\r\n                                <MenuItem value={'ADC49CH0'}>ADC49CH0 (Address: 0x49; Channel: 0)</MenuItem>\r\n                                <MenuItem value={'ADC49CH1'}>ADC49CH1 (Address: 0x49; Channel: 1)</MenuItem>\r\n                                <MenuItem value={'ADC49CH2'}>ADC49CH2 (Address: 0x49; Channel: 2)</MenuItem>\r\n                                <MenuItem value={'ADC49CH3'}>ADC49CH3 (Address: 0x49; Channel: 3)</MenuItem>\r\n                                <MenuItem value={'Modbus RTU'}>Modbus RTU</MenuItem>\r\n                                <MenuItem value={'GPIO11'}>GPIO11 (Pin 11)</MenuItem>\r\n                                <MenuItem value={'GPIO13'}>GPIO13 (Pin 13)</MenuItem>\r\n                                <MenuItem value={'GPIO15'}>GPIO15 (Pin 15)</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl} fullWidth margin='dense'>\r\n                            <InputLabel htmlFor=\"type\">\r\n                                Sensor Type\r\n                            </InputLabel>\r\n                            <Select\r\n                                value={this.state.type}\r\n                                onChange={this.handleChange}\r\n                                autoWidth\r\n                                input={<OutlinedInput labelWidth={100} name=\"type\" id=\"type\" />}\r\n                            >\r\n                                <MenuItem value={'wind'}>Wind Sensor</MenuItem>\r\n                                <MenuItem value={'snow'}>Snow Sensor</MenuItem>\r\n                                <MenuItem value={'flood'}>Flood Sensor</MenuItem>\r\n                                <MenuItem value={'rain'}>Rain Sensor</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField\r\n                            fullWidth\r\n                            id='model'\r\n                            name='model'\r\n                            label='Model #'\r\n                            value={this.state.model}\r\n                            onChange={this.handleChange}\r\n                            margin=\"dense\"\r\n                            variant='outlined'\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id='samplingPeriod'\r\n                            name='samplingPeriod'\r\n                            label='samplingPeriod'\r\n                            value={this.state.samplingPeriod}\r\n                            onChange={this.handleChange}\r\n                            margin=\"dense\"\r\n                            InputProps={{\r\n                                endAdornment: <InputAdornment position=\"end\">s</InputAdornment>,\r\n                              }}\r\n                            variant='outlined'\r\n                        />\r\n                        <div style={{display: 'flex', alignItems: 'baseline'}}>\r\n                        <TextField\r\n                            id=\"driverFile\"\r\n                            label=\"Driver File\"\r\n                            helperText=\"Upload Sensor Driver File\"\r\n                            name='driverFile'\r\n                            value={this.state.driverFileName}\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        />\r\n                        <input\r\n                            accept=\"*\"\r\n                            style={{ display: 'none'}}\r\n                            id=\"contained-button-file\"\r\n                            type=\"file\"\r\n                            onChange={this.handleSelectedFile}\r\n                        />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\" style={{margin: 5}}>\r\n                                Browse\r\n                            </Button>\r\n                        </label>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant='contained' onClick={this.handleAdd} color=\"primary\">\r\n                            {this.state.which === 'add' ? 'Add Sensor' : 'Save'}\r\n                        </Button>\r\n                        <Button variant='contained' onClick={this.handleClose} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Grid>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { sensors } = state.app\r\n\r\n    return {\r\n        sensors,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getSensors: () => {\r\n        dispatch({type: 'GET_SENSORS_REQUEST'})\r\n        appService.getSensors()\r\n            .then(json => {\r\n                dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_SENSORS_FAILURE'})\r\n            })        \r\n    },\r\n    addSensor: (file, port, type, model, samplingPeriod) => {\r\n        dispatch({type: 'ADD_SENSOR_REQUEST'})\r\n        appService.addSensor(file, port, type, model, samplingPeriod)\r\n            .then(json => {\r\n                if(json.result === 'success') {\r\n                    dispatch({type: 'ADD_SENSORS_SUCCESS'})\r\n                    dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                    appService.getSensors()\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                        }) \r\n                } else {\r\n                    const error = json.message\r\n                    dispatch({type: 'ADD_SENSORS_FAILURE', error})    \r\n                }\r\n            }, error => {\r\n                dispatch({type: 'ADD_SENSORS_FAILURE'})\r\n            })\r\n    },\r\n    removeSensor: (selectedSensors) => {\r\n        selectedSensors.map(s => {\r\n            dispatch({type: 'REMOVE_SENSOR_REQUEST'})\r\n            appService.removeSensor(s.model, s.type)\r\n                .then(json => {\r\n                    const type = s.type,\r\n                          model = s.model  \r\n                    dispatch({type: 'REMOVE_SENSOR_SUCCESS', type, model})\r\n                    dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                    appService.getSensors()\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                        })\r\n                }, error => {\r\n                    dispatch({type: 'REMOVE_SENSOR_FAILURE'})\r\n                })\r\n        })\r\n        \r\n    },\r\n    softRemoveSensor: (selectedSensors) => {\r\n        selectedSensors.map(s => {\r\n            dispatch({type: 'SOFT_REMOVE_SENSOR_REQUEST'})\r\n            appService.removeSensor(s.model, s.type)\r\n                .then(json => {\r\n                    dispatch({type: 'SOFT_REMOVE_SENSOR_SUCCESS'})\r\n                }, error => {\r\n                    dispatch({type: 'SOFT_REMOVE_SENSOR_FAILURE'})\r\n                })\r\n        })\r\n    },\r\n    enableSensor: (type, model) => {\r\n        dispatch({type: 'ENABLE_SENSOR_REQUEST'})\r\n        appService.enableSensor(type, model)\r\n            .then(json => {\r\n                dispatch({type: 'ENABLE_SENSOR_SUCCESS'})\r\n                dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                appService.getSensors()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                    }) \r\n            }, error => {\r\n                dispatch({type: 'ENABLE_SENSOR_FAILURE'})\r\n            })\r\n    },\r\n    disableSensor: (type, model) => {\r\n        dispatch({type: 'DISABLE_SENSOR_REQUEST'})\r\n        appService.disableSensor(type, model)\r\n            .then(json => {\r\n                dispatch({type: 'DISABLE_SENSOR_SUCCESS'})\r\n                dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                appService.getSensors()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                    }) \r\n            }, error => {\r\n                dispatch({type: 'DISABLE_SENSOR_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedSensors = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Sensors))\r\nexport {connectedSensors as Sensors}","import React from 'react';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst styles1 = theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n  const { classes, className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={[classes[variant], className]}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={[classes.icon, classes.iconVariant]} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          className={classes.close}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nexport const SnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);","import React from 'react';\r\nimport { NavBar } from '../NavBar/NavBar'\r\nimport {Dashboard} from '../Dashboard/Dashboard'\r\nimport { RowController }  from '../RowController/RowController'\r\nimport { ZoneController } from '../ZoneController/ZoneController'\r\nimport { Sensors } from '../Sensors/Sensors'\r\nimport { About } from '../About/About'\r\nimport { connect } from 'react-redux'\r\nimport { appService } from './app.services';\r\nimport { Snackbar, DialogActions, DialogTitle, Dialog, DialogContent, Button, DialogContentText, Slide } from '@material-ui/core';\r\nimport { SnackbarContentWrapper } from '../util/SnackbarContentWrapper';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { store } from '../util/store'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%'\r\n    },\r\n    topCenter: {\r\n        top: 75\r\n    }\r\n})\r\n\r\nconst Initializing = () => <div style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>INITIALIZING...</div>\r\n\r\nclass App extends React.Component {\r\n    queue = [];\r\n    timer = null\r\n\r\n    state = {\r\n        open: false,\r\n        alert: null,\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.props.init()\r\n        this.props.getPanID()\r\n        this.props.getBQ()\r\n        const io = socketIOClient(`http://${window.location.hostname}:80`);\r\n        io.on('connect', () => {\r\n            console.log('connected')\r\n        })\r\n        io.on('ui/rover/scan', data => {\r\n            try {\r\n                const json = JSON.parse(data)\r\n                this.props.received('ui/rover/scan', json)\r\n            } catch(e) {\r\n                io.emit('ui/log/errors', e)\r\n            } \r\n        })\r\n        io.on('ui/rover/spa', data => {\r\n            try {\r\n                const json = JSON.parse(data)\r\n                this.props.received('ui/rover/spa', json)\r\n            } catch(e) {\r\n                io.emit('ui/log/errors', e)\r\n            } \r\n        })\r\n        io.on('ui/rover/stowangles', data => {\r\n            try {\r\n                const json = JSON.parse(data)\r\n                this.props.received('ui/rover/stowangles', json)\r\n            } catch(e) {\r\n                io.emit('ui/log/errors', e)\r\n            } \r\n        })\r\n        io.on('ui/rover/response/multiple', data => {\r\n            try {\r\n                const json = JSON.parse(data)\r\n                this.props.received('ui/rover/response/multiple', json)\r\n            } catch(e) {\r\n                io.emit('ui/log/errors', e)\r\n            } \r\n        })\r\n        io.on('time', data => {\r\n            try {\r\n                const json = JSON.parse(data)\r\n                this.props.received('time', json)\r\n            } catch(e) {\r\n                io.emit('ui/log/errors', e)\r\n            } \r\n        })\r\n        io.on('sensorReadings/wind', data => {\r\n            try {\r\n                const json = JSON.parse(data)\r\n                if(typeof json.speed !== undefined && typeof json.direction !== undefined) {\r\n                    this.props.received('sensorReadings/wind', json)\r\n                }\r\n            } catch(e) {\r\n                io.emit('ui/log/errors', e)\r\n            } \r\n        })\r\n        io.on('sensorReadings/flood', data => {\r\n            try {\r\n                const json = JSON.parse(data)\r\n                this.props.received('sensorReadings/flood', json)\r\n            } catch(e) {\r\n                io.emit('ui/log/errors', e)\r\n            } \r\n        })\r\n        io.on('sensorReadings/snow', data => {\r\n            try {\r\n                const json = JSON.parse(data)\r\n                this.props.received('sensorReadings/snow', json)\r\n            } catch(e) {\r\n                io.emit('ui/log/errors', e)\r\n            } \r\n        })\r\n        io.on('changeEvent/sensor', data => {\r\n            try {\r\n                if(data === '') this.props.getSensors()\r\n            } catch(e) {\r\n                io.emit('ui/log/errors', e)\r\n            } \r\n        })\r\n        io.on('changeEvent/rover', data => {\r\n            try {\r\n                const json = JSON.parse(data)\r\n                this.props.received('changeEvent/rover', json)\r\n            } catch(e) {\r\n                io.emit('ui/log/errors', e)\r\n            } \r\n        })\r\n        io.on('ui/xbee/panid', data => {\r\n            try {\r\n                const json = JSON.parse(data)\r\n                this.props.received('ui/xbee/panid', json)\r\n            } catch(e) {\r\n                io.emit('ui/log/errors', e)\r\n            } \r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.alert !== null && (nextProps.alert !== this.props.alert)) {\r\n            this.queue.push(nextProps.alert);\r\n        \r\n            if (this.state.open) {\r\n                this.setState({ open: false });\r\n            } else {\r\n                this.processQueue();\r\n            }    \r\n        }\r\n    }\r\n\r\n    processQueue = () => {\r\n        if (this.queue.length > 0) {\r\n            this.setState({\r\n                alert: this.queue.shift(),\r\n                open: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n        return;\r\n        }\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleExited = () => {\r\n        this.processQueue();\r\n    };\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return ( \r\n                <div className={classes.root}>\r\n                    <NavBar>\r\n                    {\r\n                        this.props.currentPage === 'Dashboard' ? <Dashboard /> :\r\n                        this.props.currentPage === 'Row Controller' ? <RowController /> :\r\n                        this.props.currentPage === 'Zone Settings' ? <ZoneController /> :\r\n                        this.props.currentPage === 'Sensors' ? <Sensors /> : \r\n                        this.props.currentPage === 'About' ? <About /> : <Initializing />\r\n                    }\r\n                    </NavBar>\r\n                    <Snackbar\r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'center',\r\n                        }}\r\n                        open={this.state.open}\r\n                        //autoHideDuration={3000}\r\n                        onClose={this.handleClose}\r\n                        onExited={this.handleExited}\r\n                        classes={{anchorOriginTopCenter: classes.topCenter}}\r\n                    >\r\n                        <SnackbarContentWrapper\r\n                            onClose={this.handleClose}\r\n                            variant={this.state.alert === null ? 'info' : this.state.alert.type}\r\n                            message={this.state.alert === null ? '' : this.state.alert.message}\r\n                        />\r\n                    </Snackbar>\r\n                    {/* <Dialog\r\n                        open={this.state.open}\r\n                        onClose={this.handleClose}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                        style={{ minWidth: 300 }}\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\" style={{color:'white', background: this.state.alert !== null ? this.state.alert.type==='success' ? 'green' : this.state.alert.type === 'warning' ? 'orange' : 'red' : 'blue'}}>{this.state.alert === null ? 'info' : this.state.alert.type}</DialogTitle>\r\n                        <DialogContent style={{color:'white', background: this.state.alert !== null ? this.state.alert.type==='success' ? 'green' : this.state.alert.type === 'warning' ? 'orange' : 'red' : 'blue'}}>\r\n                        <DialogContentText id=\"alert-dialog-description\" style={{color:'white'}}>\r\n                            {this.state.alert === null ? '' : this.state.alert.message}\r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions style={{color:'white', background: this.state.alert !== null ? this.state.alert.type==='success' ? 'green' : this.state.alert.type === 'warning' ? 'orange' : 'red' : 'blue'}}>\r\n                        <Button onClick={this.handleClose} color=\"primary\" variant='contained'>\r\n                            Close\r\n                        </Button>\r\n                        </DialogActions>\r\n                    </Dialog> */}\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentPage, alert, timeZone } = state.app\r\n\r\n    return {\r\n        currentPage,\r\n        alert,\r\n        timeZone\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    init: () => {\r\n        dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n        appService.getCommissioningData()\r\n            .then(json => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n            })\r\n        \r\n        dispatch({type: 'GET_TIMEZONE_REQUEST'})\r\n        appService.getTimeZone()\r\n            .then(json => {\r\n                if(json.timeZone === null) {\r\n                    dispatch({type: 'SET_TIMEZONE_REQUEST'})\r\n                    appService.setTimeZone(store.getState().app.timeZone)\r\n                        .then(json => {\r\n                            dispatch({type: 'SET_TIMEZONE_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'SET_TIMEZONE_FAILURE'})\r\n                        })\r\n                }\r\n                dispatch({type: 'GET_TIMEZONE_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_TIMEZONE_FAILURE', error})\r\n            })\r\n        dispatch({type: 'GET_SENSORS_REQUEST'})\r\n        appService.getSensors()\r\n            .then(json => {\r\n                dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_SENSORS_FAILURE'})\r\n            })\r\n    },\r\n    clearAlert: () => {\r\n        dispatch({type: 'CLEAR_ALERT'})\r\n    },\r\n    received: (topic, json) => {\r\n        dispatch({type: topic, json})\r\n    },\r\n    getSensors: () => {\r\n        dispatch({type: 'GET_SENSORS_REQUEST'})\r\n        appService.getSensors()\r\n            .then(json => {\r\n                dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_SENSORS_FAILURE'})\r\n            })\r\n    },\r\n    getPanID: () => {\r\n        dispatch({type: 'GET_PAN_ID_REQUEST'})\r\n        appService.getPanID()\r\n            .then(json => {\r\n                dispatch({type: 'GET_PAN_ID_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_PAN_ID_FAILURE'})\r\n            })\r\n    },\r\n    getBQ: () => {\r\n        dispatch({type: 'GET_BQ_REQUEST'})\r\n        appService.getBQ()\r\n            .then(json => {\r\n                dispatch({type: 'GET_BQ_SUCCESS', json: json.message.enabled})\r\n            }, error => {\r\n                dispatch({type: 'GET_BQ_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(App))\r\nexport {connectedApp as App}","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { store } from './util/store';\r\nimport { App } from './App';\r\nimport './index.css'\r\n\r\n/* const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#54AAB3\",\r\n        contrastText: '#fff'\r\n      }\r\n    },\r\n    overrides: {\r\n      MuiIconButton: {\r\n          root: {\r\n            color: 'white'\r\n          },\r\n      }\r\n    } \r\n  }); */\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#54AAB3',\r\n        dark: '#3c8f98',\r\n        contrastText: '#ffffff'\r\n      },\r\n      secondary: {\r\n        main: '#ffffff',\r\n        contrastText: '#000000'\r\n      }\r\n    }/* ,\r\n    overrides: {\r\n      MuiListItem: {\r\n        root: {\r\n          backgroundColor: '#ffffff',\r\n          '&$selected': {\r\n            backgroundColor: '#54AAB3',\r\n            color: '#ffffff'\r\n          },\r\n          '&$selected:hover': {\r\n            backgroundColor: '#3c8f98',\r\n            color: '#ffffff'\r\n          }\r\n        },\r\n      },\r\n    } */\r\n  });\r\n\r\nrender(\r\n    <MuiThemeProvider theme={theme}>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </MuiThemeProvider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}