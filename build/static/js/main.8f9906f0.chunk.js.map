{"version":3,"sources":["App/app.reducer.js","util/rootReducer.js","util/store.js","NavBar/NavBar.js","Dashboard/TrackerList.js","App/app.services.js","Dashboard/TrackerDetails.js","Dashboard/Dashboard.js","RowController/SPAParameters.js","RowController/StowAngles.js","RowController/EditRowController.js","RowController/_EditRowController.js","RowController/ControlRowController.js","RowController/RowControllerTab.js","RowController/ScanTab.js","RowController/RowController.js","ZoneController/ZoneController.js","Sensors/Sensors.js","util/SnackbarContentWrapper.js","App/App.jsx","index.js"],"names":["initialState","currentPage","currentTab","currentEditTab","timeZone","Intl","DateTimeFormat","resolvedOptions","alert","time","Date","now","commissioningData","fetchingCommissioningData","currentTracker","currentTrackerInfo","xbeeResponse","controlledTrackers","editedTrackers","SPAParameters","stowAngles","sendingSPAParameters","sendingStowAngles","gettingSPAParameters","gettingStowAngles","addingTrackers","sensors","responseQueue","listen","difference","a1","a2","result","i","length","indexOf","push","rootReducer","combineReducers","app","state","action","type","Object","objectSpread","trackerID","concat","toConsumableArray","json","Result","message","page","commandQueue","value","staticData","a","filter","r","DID","deviceID","newXbeeResponse","devices","trackers","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ResponsiveDrawer","mobileOpen","handleDrawerToggle","_this","setState","_this2","this","_this$props","props","classes","theme","children","drawer","react_default","createElement","className","toolbar","src","height","width","alt","Divider","List","map","text","index","ListItem","button","key","onClick","changePage","selected","ListItemIcon","MoveToInbox_default","Mail_default","ListItemText","disableTypography","primary","root","CssBaseline","AppBar","position","color","appBar","Toolbar","IconButton","aria-label","menuButton","Menu_default","Typography","variant","noWrap","Hidden","mdUp","implementation","Drawer","container","anchor","direction","open","onClose","paper","drawerPaper","smDown","content","React","Component","connectedNavBar","connect","_state$app","dispatch","withStyles","display","defineProperty","breakpoints","up","flexShrink","marginLeft","marginRight","mixins","flexGrow","padding","spacing","paddingTop","backgroundColor","withTheme","TrackerList","react","Grid","Table","TableHead","TableRow","TableCell","TableBody","n","hover","setCurrentTracker","style","cursor","connectedTrackerList","appService","setWifiInfo","ssid","pass","requestOptions","method","mode","body","JSON","stringify","password","fetch","hostName","then","handleResponse","upload","file","data","FormData","append","selectSensor","windSensor","rainSensor","floodSensor","snowSensor","uploadKey","setWindAddress","address","deviceAddress","getWindAddress","caliberate","sensor","sendCommand","CMD","VALUES","sendStow","MODE","getCommissioningData","getCurrentTrackerInfo","triggerDiscovery","hostName2","setPanID","panID","console","log","threshold","maxWindSpeed","maxRainFall","meanWindSpeed","windSpeedTimer","maxFloodLevel","maxSnowFall","heartBeat","enabled","hbinterval","maxMsgs","interval","setTimeZone","getHeartBeat","getThreshold","getPanID","getFrequency","setFrequency","power","status","powerRequestTimePeriod","statusRequestTimePeriod","getTimeZone","getTime","discover","did","addTrackers","removeTrackers","DIDs","sendSPAParameters","Lattitude","Longitude","Altitude","EastLimit","WestLimit","TrackerWidth","Pitch","TrackingAccuracy","AzimuthDeviation","AltitudeTrackeronEast","AltitudeTrackeronWest","StartTimeLead","EndTimeLag","backtracking","sendStowAngles","WindStowAngle","SnowStowAngle","CleanStowAngle","NightStowAngle","EmergencyStowAngle","getSPAParameters","getStowAngles","getSensors","addSensor","port","model","samplingPeriod","removeSensor","enableSensor","disableSensor","window","location","hostname","response","ok","error","statusText","Promise","reject","NoCurrentTrackerInfo","alignItems","justifyContent","TrackerDetails","timer","componentDidMount","refresh","componentWillReceiveProps","nextProps","c","arguments","undefined","setTimeout","TrackerDetails_NoCurrentTrackerInfo","currentAngle","marginTop","textAlign","overflow","macID","currentMode","timeStamp","toLocaleDateString","toLocaleTimeString","hour12","connectedTrackerDetails","flexWrap","Initializing","flexDirection","margin","Button","scan","Fetching","Dashboard","Dashboard_Fetching","Dashboard_Initializing","item","trackerList","Paper","trackerDetails","connectedDashboard","minHeight","TrackingLimitEast","TrackingLimitWest","RowWidth","RowPitch","TrackingResolution","AltitudeofTrackerontheEast","AltitudeofTrackerontheWest","EarlyStartMinutes","LateFinishMinutes","LattitudeError","LongitudeError","AltitudeError","TrackingLimitEastError","TrackingLimitWestError","RowWidthError","RowPitchError","TrackingResolutionError","AzimuthDeviationError","AltitudeofTrackerontheEastError","AltitudeofTrackerontheWestError","EarlyStartMinutesError","LateFinishMinutesError","backTracking","submit","values","split","handleChange","event","_objectSpread2","target","name","handleBlur","e","p","RegExp","test","_objectSpread4","Number","min","max","_objectSpread5","_objectSpread6","_objectSpread3","_this$state","fieldGrid","adornment","TextField","field","id","replace","label","onChange","InputLabelProps","shrink","disabled","InputProps","endAdornment","InputAdornment","helperText","onBlur","FormControlLabel","control","Checkbox","checked","connectedSPAParameters","t","StowAngles","_objectSpread7","connectedStowAngles","EditRowController","changeTab","header","back","ArrowBack_default","fontSize","disableGutters","Chip","rowNumber","chip","request","success","tabs","Tabs","indicator","tabsIndicator","Tab","connectedEditRowController","palette","background","fontWeight","boxShadow","green","red","handleChangeSPA","_objectSpread8","_this$state2","borderBottom","paddingLeft","ControlRowController","typeOfStow","auto","handleClick","anchorEl","currentTarget","handleClose","autoToggle","second","aria-owns","aria-haspopup","minWidth","paddingRight","ExpandMore_default","Menu_Menu","Boolean","MenuItem","labelPlacement","Switch","connectedControlRowController","RowControllerTab","selectedTrackers","selectAll","selectRow","row","editTracker","setEditedTrackers","controlTracker","setControlledTrackers","s","_EditRowController_connectedEditRowController","buttons","table","connectedRowControllerTab","overflowX","marginBottom","ScanTab","scanSelection","inputChange","scanParameter","FormControl","component","formControl","RadioGroup","Radio","textField","placeholder","verticalAlign","res","connectedScanTab","RowController","connectedRowController","ZoneController","xs","justify","grid2","staticIP","saveButton","bqKey","floodLevelTimer","maxSnowLevel","snowLevelTimer","maxRainLevel","rainLevelTimer","syncTime","connectedZoneController","alignSelf","down","Sensors","selectedSensors","dialog","which","driverFile","driverFileName","editSensor","enable","softRemoveSensor","handleSelectedFile","files","Tooltip","title","Dialog","aria-labelledby","DialogTitle","DialogContent","fullWidth","InputLabel","htmlFor","Select","autoWidth","input","OutlinedInput","labelWidth","accept","DialogActions","connectedSensors","variantIcon","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","SnackbarContentWrapper","dark","amber","icon","iconVariant","opacity","other","objectWithoutProperties","Icon","SnackbarContent","assign","aria-describedby","close","Close_default","App","queue","init","io","socketIOClient","on","parse","received","processQueue","shift","reason","handleExited","continueInterval","componentWillUnmount","clearTimeout","About","App_Initializing","Snackbar","anchorOrigin","vertical","horizontal","onExited","anchorOriginTopCenter","topCenter","connectedApp","getState","clearAlert","topic","top","createMuiTheme","main","contrastText","secondary","render","MuiThemeProvider","es","document","getElementById"],"mappings":"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","file":"static/js/main.8f9906f0.chunk.js","sourcesContent":["const initialState = {\r\n    currentPage: '',\r\n    currentTab: 0,\r\n    currentEditTab: 0,\r\n    timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n    alert: null,\r\n    time: Date.now(),\r\n    commissioningData: null,\r\n    fetchingCommissioningData: false,\r\n    currentTracker: null,\r\n    currentTrackerInfo: null,\r\n    xbeeResponse: [],\r\n    controlledTrackers: [],\r\n    editedTrackers: [],\r\n    SPAParameters: null,\r\n    stowAngles: null,\r\n    sendingSPAParameters: false,\r\n    sendingStowAngles: false,\r\n    gettingSPAParameters: false,\r\n    gettingStowAngles: false,\r\n    addingTrackers: false,\r\n    sensors: [],\r\n    responseQueue: [],\r\n    listen: false\r\n}\r\n\r\nconst difference = (a1, a2) => {\r\n    var result = [];\r\n    for (var i = 0; i < a1.length; i++) {\r\n    if (a2.indexOf(a1[i]) === -1) {\r\n        result.push(a1[i]);\r\n    }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function app(state, action) {\r\n    if (typeof state === 'undefined') {\r\n      return initialState\r\n    }\r\n    switch (action.type) {\r\n        case 'SET_CURRENT_TRACKER':\r\n        return {\r\n            ...state,\r\n            currentTracker: action.trackerID\r\n        }\r\n\r\n        case 'SET_RESPONSE_LISTENER':\r\n        return {\r\n            ...state,\r\n            listen: true\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: true,\r\n            responseQueue: []\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_REQUEST':\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: true,\r\n            responseQueue: []\r\n        }\r\n\r\n        case 'ui/rover/response':\r\n        if(state.listen) {\r\n            if(state.editedTrackers.length === state.responseQueue.length + 1) {\r\n                return {\r\n                    ...state,\r\n                    responseQueue: [...state.responseQueue, action.json],\r\n                    listen: false\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                responseQueue: [...state.responseQueue, action.json]\r\n            }\r\n        }\r\n        \r\n\r\n        case 'GET_SENSORS_SUCCESS':\r\n        return {\r\n            ...state,\r\n            sensors: action.json.Result\r\n        }\r\n\r\n        case 'REMOVE_SENSOR_SUCCESS':\r\n        return {\r\n            ...state,\r\n            alert: {\r\n                type: 'success',\r\n                message: 'Removed Sensor Successfully'\r\n            }\r\n        }\r\n\r\n        case 'ADD_SENSORS_SUCCESS':\r\n        return {\r\n            ...state,\r\n            alert: {\r\n                type: 'success',\r\n                message: 'Added Sensor Successfully'\r\n            }\r\n        }\r\n        \r\n        case 'CHANGE_PAGE':\r\n        return {\r\n            ...state,\r\n            currentPage: action.page,\r\n            responseQueue: [],\r\n            commandQueue: []\r\n        }\r\n\r\n        case 'CHANGE_TAB':\r\n        return {\r\n            ...state,\r\n            currentTab: action.value.value,\r\n            responseQueue: [],\r\n            commandQueue: []\r\n        }\r\n\r\n        \r\n        case 'CHANGE_EDIT_TAB':\r\n        return {\r\n            ...state,\r\n            currentEditTab: action.value.value,\r\n            responseQueue: [],\r\n            commandQueue: []\r\n        }\r\n\r\n        case 'CLEAR_ALERT':\r\n        return {\r\n            ...state,\r\n            alert: null           \r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_REQUEST':\r\n        return {\r\n            ...state,\r\n            fetchingCommissioningData: true\r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_SUCCESS':\r\n        if(action.json.staticData === null || action.json.staticData.length === 0) {\r\n            return {\r\n                ...state,\r\n                fetchingCommissioningData: false,\r\n                currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,\r\n                commissioningData: null,\r\n                alert: {\r\n                    type: 'warning',\r\n                    message: 'Please add trackers'\r\n                }\r\n            }\r\n        } else {\r\n            return {\r\n                ...state,\r\n                fetchingCommissioningData: false,\r\n                currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,\r\n                commissioningData: action.json.staticData,\r\n                currentTracker: action.json.staticData[0].trackerID\r\n            }\r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_FAILURE':\r\n        return {\r\n            ...state,\r\n            fetchingCommissioningData: false,\r\n            currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error loading commissioning data'\r\n            }\r\n        }\r\n\r\n        case 'GET_TIMEZONE_SUCCESS':\r\n        if(action.json.timeZone !== null) {\r\n            return {\r\n                ...state,\r\n                timeZone: action.json.timeZone\r\n            }\r\n        } else {\r\n            return state\r\n        }\r\n\r\n        case 'GET_TIMEZONE_FAILURE':\r\n        return {\r\n            ...state,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting timezone'\r\n            }\r\n        }\r\n\r\n        case 'GET_TIME_SUCCESS':\r\n        return {\r\n            ...state,\r\n            time: action.json.message\r\n        }\r\n\r\n        case 'SCAN':\r\n        return {\r\n            ...state,\r\n            currentPage: 'Row Controller',\r\n            currentTab: 1\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_REQUEST':\r\n        return {\r\n            ...state\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_SUCCESS':\r\n        return {\r\n            ...state,\r\n            currentTrackerInfo: action.json\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_FAILURE':\r\n        return {\r\n            ...state,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting current tracker info'\r\n            }\r\n        }\r\n\r\n        case 'DISCOVER_SUCCESS':\r\n        return {\r\n            ...state,\r\n            xbeeResponse: [],\r\n            alert: {\r\n                type: 'success',\r\n                message: 'Started Scanning'\r\n            }\r\n        }\r\n\r\n        case 'DISCOVER_FAILURE':\r\n        return {\r\n            ...state,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error starting scan'\r\n            }\r\n        }\r\n\r\n        case 'ui/rover/scan':\r\n        let a = null\r\n        if(state.commissioningData === null) {\r\n            a = [...state.xbeeResponse, action.json]\r\n        } else {\r\n            let b = state.commissioningData.filter(r => action.json.DID === r.deviceID)\r\n            if(b.length === 0) {\r\n                a = [...state.xbeeResponse, action.json]\r\n            } else {\r\n                a = [...state.xbeeResponse]\r\n            }\r\n                \r\n        }\r\n        return {\r\n            ...state,\r\n            xbeeResponse: a\r\n        }\r\n\r\n        case 'ADD_TRACKERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            addingTrackers: true\r\n        }\r\n\r\n        case 'ADD_TRACKERS_SUCCESS':\r\n        const newXbeeResponse = difference(state.xbeeResponse, action.devices)\r\n        return {\r\n            ...state,\r\n            xbeeResponse: newXbeeResponse,\r\n            addingTrackers: false,\r\n            alert: {\r\n                type: 'success',\r\n                message: 'Tracker(s) added'\r\n            }\r\n        }\r\n\r\n        case 'ADD_TRACKERS_FAILURE':\r\n        return {\r\n            ...state,\r\n            addingTrackers: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error adding trackers'\r\n            }\r\n        }\r\n\r\n        case 'SET_EDITED_TRACKERS':\r\n        return {\r\n            ...state,\r\n            editedTrackers: action.trackers\r\n        }\r\n\r\n        case 'SET_CONTROLLED_TRACKERS':\r\n        return {\r\n            ...state,\r\n            controlledTrackers: action.trackers\r\n        }\r\n\r\n        case 'ui/rover/spa':\r\n        return {\r\n            ...state,\r\n            SPAParameters: action.json,\r\n            gettingSPAParameters: false\r\n        }\r\n\r\n        case 'ui/rover/stowangles':\r\n        return {\r\n            ...state,\r\n            stowAngles: action.json,\r\n            gettingStowAngles: false\r\n        }\r\n\r\n        case 'GET_STOW_ANGLES_REQUEST':\r\n        return {\r\n            ...state,\r\n            gettingStowAngles: true\r\n        }\r\n\r\n        case 'GET_STOW_ANGLES_FAILURE':\r\n        return {\r\n            ...state,\r\n            gettingStowAngles: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting stow angles'\r\n            }\r\n        }\r\n\r\n        case 'GET_SPA_PARAMETERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            gettingSPAParameters: true\r\n        }\r\n\r\n        case 'GET_SPA_PARAMETERS_FAILURE':\r\n        return {\r\n            ...state,\r\n            gettingSPAParameters: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting SPA parameters'\r\n            }\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_FAILURE':\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error setting SPA parameters'\r\n            }\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_SUCCESS':\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: false\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_FAILURE':\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error setting stow angles'\r\n            }\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_SUCCESS':\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: false\r\n        }\r\n\r\n        default:\r\n        return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport { app } from '../App/app.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  app\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n        loggerMiddleware        \r\n    )\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport Time from '@material-ui/icons/AccessTime';\r\nimport { Chip } from '@material-ui/core';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100%'\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('md')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    marginLeft: drawerWidth,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: 20,\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    paddingTop: 88\r\n  },\r\n  selected: {\r\n    backgroundColor: '#54AAB3 !important',\r\n    color: '#ffffff !important'\r\n  }\r\n});\r\n\r\nclass ResponsiveDrawer extends React.Component {\r\n  state = {\r\n    mobileOpen: false,\r\n  };\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme, children } = this.props;\r\n\r\n    const drawer = (\r\n      <div>\r\n        <div className={classes.toolbar} >\r\n            <img src='img/Voyager logo - large- no bg.png' height='60px' width='70%' alt=''></img>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Dashboard', 'Row Controller', 'Zone Controller', 'Sensors', 'About'].map((text, index) => (\r\n            <ListItem \r\n                button \r\n                key={text}\r\n                onClick={() => this.props.changePage(text)}\r\n                selected={this.props.currentPage === text}\r\n                classes={{selected: classes.selected}}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText disableTypography primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" color='primary' className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h5\" color=\"inherit\" noWrap>\r\n              Voyager Zone Controller\r\n            </Typography>\r\n            {/* <Chip\r\n              icon={<Time />}\r\n              style={{marginLeft: 'auto', backgroundColor: 'white'}}\r\n              label={`${new Date(new Date(Number(this.props.time)).toLocaleString('en-US', {timeZone:  this.props.timeZone})).getHours()} : ${new Date(new Date(Number(this.props.time)).toLocaleString('en-US', {timeZone:  this.props.timeZone})).getMinutes()}`}\r\n            /> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav className={classes.drawer}>\r\n          <Hidden mdUp implementation=\"css\">\r\n            <Drawer\r\n              container={this.props.container}\r\n              variant=\"temporary\"\r\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n              open={this.state.mobileOpen}\r\n              onClose={this.handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden smDown implementation=\"css\">\r\n            <Drawer\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n        </nav>\r\n        <main className={classes.content}>\r\n          {children}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\n \r\nfunction mapStateToProps(state) {\r\n    const { currentPage, time, timeZone } = state.app;\r\n    \r\n    return {\r\n        currentPage,\r\n        time,\r\n        timeZone\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changePage: (page) => {\r\n      dispatch({type: 'CHANGE_PAGE', page})\r\n    }\r\n})\r\n  \r\nconst connectedNavBar = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ResponsiveDrawer));\r\nexport { connectedNavBar as NavBar }","import React, {Fragment} from 'react'\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { connect } from 'react-redux'\r\nimport {withStyles} from '@material-ui/core/styles'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%', width: '100%', padding: 24\r\n    },\r\n    selected: {\r\n        backgroundColor: '#54aab3 !important',\r\n        color: 'white'\r\n    }\r\n})\r\n\r\nclass TrackerList extends React.Component {\r\n\r\n    render() {\r\n        const {classes, commissioningData, currentTracker} = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Typography variant='h5'>\r\n                        Tracker List\r\n                    </Typography>\r\n                    <Table>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell >TrackerID</TableCell>\r\n                            <TableCell >Status</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {commissioningData && commissioningData.map(n => {\r\n                                return (\r\n                                <TableRow\r\n                                    hover\r\n                                    //className={[n.trackerID === currentTracker ? classes.selected : classes.row, classes.tableRow]}\r\n                                    key={n.trackerID}\r\n                                    onClick={() => this.props.setCurrentTracker(n.trackerID)}\r\n                                    style={{cursor: 'pointer'}}\r\n                                    selected={n.trackerID === currentTracker}\r\n                                    classes={{selected: classes.selected}}\r\n                                >\r\n                                    <TableCell>\r\n                                        {n.trackerID}\r\n                                    </TableCell>\r\n                                    <TableCell>Reachable</TableCell>\r\n                                </TableRow>\r\n                                );\r\n                            })}\r\n                            </TableBody>\r\n                        </Table>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData, currentTracker } = state.app\r\n\r\n    return {\r\n        commissioningData,\r\n        currentTracker\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCurrentTracker: (trackerID) => {\r\n        dispatch({type: 'SET_CURRENT_TRACKER', trackerID})\r\n    }\r\n})\r\n\r\n\r\nconst connectedTrackerList = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TrackerList))\r\nexport {connectedTrackerList as TrackerList}","export const appService = {\r\n    setWifiInfo,\r\n    upload,\r\n    selectSensor,\r\n    uploadKey,\r\n    setWindAddress,\r\n    getWindAddress,\r\n    caliberate,\r\n    sendCommand,\r\n    sendStow,\r\n    getCommissioningData,\r\n    getCurrentTrackerInfo,\r\n    triggerDiscovery,\r\n    setPanID,\r\n    threshold,\r\n    heartBeat,\r\n    setTimeZone,\r\n    getHeartBeat,\r\n    getThreshold,\r\n    getPanID,\r\n    getFrequency,\r\n    setFrequency,\r\n    getTimeZone,\r\n    getTime,\r\n    discover,\r\n    addTrackers,\r\n    removeTrackers,\r\n    sendSPAParameters,\r\n    sendStowAngles,\r\n    getSPAParameters,\r\n    getStowAngles,\r\n    getSensors,\r\n    addSensor,\r\n    removeSensor,\r\n    enableSensor,\r\n    disableSensor\r\n};\r\n/* const hostName = 'http://159.89.169.50:4000'; */\r\nconst hostName = `http://${window.location.hostname}:5000`;\r\n\r\nconst hostName2 = `http://${window.location.hostname}:5001`; \r\n\r\nfunction disableSensor(type, model) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            type: type, \r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/disable`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction enableSensor(type, model) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            type: type, \r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/enable`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction removeSensor(model, type) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            type: type, \r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/remove`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction addSensor(port, type, model, samplingPeriod) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            port: port, \r\n            type: type, \r\n            samplingPeriod: samplingPeriod,\r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/setParams`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getSensors() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        body: null\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/getParams`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getStowAngles(DID) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: 'QSTO'\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/get`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getSPAParameters(DID) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: \"QSPA\"\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/get`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction sendStowAngles(DID, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: 'HSTO',\r\n            VALUES: `${WindStowAngle}, ${SnowStowAngle}, ${CleanStowAngle}, ${NightStowAngle}, ${EmergencyStowAngle}`\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/set`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction sendSPAParameters(DID, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backtracking) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: \"HSPA\",\r\n            VALUES: `${Lattitude}, ${Longitude}, ${Altitude}, ${EastLimit}, ${WestLimit}, ${TrackerWidth}, ${Pitch}, ${TrackingAccuracy}, ${AzimuthDeviation}, ${AltitudeTrackeronEast}, ${AltitudeTrackeronWest}, ${StartTimeLead}, ${EndTimeLag}, 0, ${backtracking}`\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/set`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction removeTrackers(DIDs) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DIDs: DIDs\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/removePairedDevices`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction addTrackers(devices) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            devices: devices\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/addDiscoveredDevices`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction discover(did) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: did\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/scan`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction handleResponse(response) {\r\n    return response.json().then(json => {\r\n        if (!response.ok) {\r\n            const error = (json && json.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return json;\r\n    });\r\n}\r\n\r\n\r\nfunction setWifiInfo(ssid, pass) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"ssid\": ssid,\r\n            \"password\": pass\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/setWifiInfo`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction upload(file) {\r\n    var data = new FormData()\r\n    data.append('file', file)\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: data\r\n    };\r\n\r\n    return fetch(`${hostName}/loadStaticData`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction uploadKey(file) {\r\n    var data = new FormData()\r\n    data.append('file', file)\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: data\r\n    };\r\n\r\n    return fetch(`${hostName}/loadBigQueryKey`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction selectSensor(windSensor, rainSensor, floodSensor, snowSensor) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"windSensor\": windSensor,\r\n            \"rainSensor\": rainSensor,\r\n            \"floodSensor\": floodSensor,\r\n            \"snowSensor\": snowSensor,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/sensors`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setWindAddress(address) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"deviceAddress\": address,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/windSensorSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getWindAddress() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/windSensorSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction caliberate(sensor) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"sensor\": sensor,\r\n        })\r\n    };\r\n\r\n\r\n    return fetch(`${hostName}/calibrateSensor`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n//control\r\n\r\nfunction sendCommand(deviceID, value) {\r\n\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"DID\": deviceID,\r\n            \"CMD\": \"HMNM\",\r\n            \"VALUES\": value\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/rover/control`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction sendStow(deviceID, mode) {\r\n\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"DID\": deviceID,\r\n            \"CMD\": \"HMOD\",\r\n            \"MODE\": mode\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/rover/control`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n//dashboard\r\n\r\n\r\nfunction getCommissioningData() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/getCommissioningData`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getCurrentTrackerInfo(trackerID) {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/getCurrentTrackerInfo?id=${trackerID}`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction triggerDiscovery() {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"CMD\": \"HINF\",\r\n            \"DID\": \"00000\",\r\n        })\r\n    };\r\n\r\n    return fetch(`http://${hostName2}/sendCommand`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\n//settings\r\n\r\nfunction setPanID(panID) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"panID\": panID\r\n        })\r\n    };\r\n\r\n    console.log(panID);\r\n\r\n    return fetch(`http://${hostName2}/settings/xbeePanID `, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction threshold(maxWindSpeed, maxRainFall, meanWindSpeed, windSpeedTimer, maxFloodLevel, maxSnowFall) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"maxWindSpeed\": maxWindSpeed,\r\n            \"maxRainFall\": maxRainFall,\r\n            \"meanWindSpeed\": meanWindSpeed,\r\n            \"windSpeedTimer\": windSpeedTimer,\r\n            \"maxFloodLevel\": maxFloodLevel,\r\n            \"maxSnowFall\": maxSnowFall,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/threshold`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setFrequency(power, status) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"powerRequestTimePeriod\": power,\r\n            \"statusRequestTimePeriod\": status,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/requestFrequency`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\n\r\nfunction heartBeat(enabled, hbinterval, maxMsgs) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"enabled\": enabled,\r\n            \"interval\": hbinterval,\r\n            \"maxMsgs\": maxMsgs,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/heartBeatSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setTimeZone(time) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"timeZone\": time,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/timeZone`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getTimeZone() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/timeZone`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getTime() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/time`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getThreshold() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/threshold`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getFrequency() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/requestFrequency`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getHeartBeat() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/heartBeatSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getPanID() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`http://${hostName2}/gettings/xbeePanID`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n","import React from 'react'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { connect } from 'react-redux'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%', width: '100%', padding: 24, flexWrap: 'nowrap'\r\n    }\r\n})\r\n\r\nconst NoCurrentTrackerInfo = () =>\r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            No Info Found For Selected Tracker.\r\n    </div>\r\n\r\nclass TrackerDetails extends React.Component {\r\n\r\n    timer = null\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.refresh()\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.currentTracker !== this.props.currentTracker) {\r\n            this.props.getCurrentTrackerInfo(nextProps.currentTracker)\r\n        }\r\n    }\r\n\r\n    refresh = (c = true) => {\r\n        this.props.getCurrentTrackerInfo(this.props.currentTracker)\r\n\r\n        if(c) {\r\n            this.timer = setTimeout(this.refresh, 30000)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes, currentTrackerInfo } = this.props\r\n\r\n        return (currentTrackerInfo === null ? <NoCurrentTrackerInfo /> :\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Typography variant='h5' style={{height: '48px'}}>\r\n                        Tracker Details\r\n                    </Typography>\r\n                    <div \r\n                        className={currentTrackerInfo.currentAngle !== '--' && (currentTrackerInfo.currentAngle > 58 ? 'angle60' :\r\n                        currentTrackerInfo.currentAngle > 56 ? 'angle58' :\r\n                        currentTrackerInfo.currentAngle > 54 ? 'angle56' :\r\n                        currentTrackerInfo.currentAngle > 52 ? 'angle54' :\r\n                        currentTrackerInfo.currentAngle > 50 ? 'angle52' :\r\n                        currentTrackerInfo.currentAngle > 48 ? 'angle50' :\r\n                        currentTrackerInfo.currentAngle > 46 ? 'angle48' :\r\n                        currentTrackerInfo.currentAngle > 44 ? 'angle46' :\r\n                        currentTrackerInfo.currentAngle > 42 ? 'angle44' :\r\n                        currentTrackerInfo.currentAngle > 40 ? 'angle42' :\r\n                        currentTrackerInfo.currentAngle > 38 ? 'angle40' :\r\n                        currentTrackerInfo.currentAngle > 36 ? 'angle38' :\r\n                        currentTrackerInfo.currentAngle > 34 ? 'angle36' :\r\n                        currentTrackerInfo.currentAngle > 32 ? 'angle34' :\r\n                        currentTrackerInfo.currentAngle > 30 ? 'angle32' :\r\n                        currentTrackerInfo.currentAngle > 28 ? 'angle30' :\r\n                        currentTrackerInfo.currentAngle > 26 ? 'angle28' :\r\n                        currentTrackerInfo.currentAngle > 24 ? 'angle26' :\r\n                        currentTrackerInfo.currentAngle > 22 ? 'angle24' :\r\n                        currentTrackerInfo.currentAngle > 20 ? 'angle22' :\r\n                        currentTrackerInfo.currentAngle > 18 ? 'angle20' :\r\n                        currentTrackerInfo.currentAngle > 16 ? 'angle18' :\r\n                        currentTrackerInfo.currentAngle > 14 ? 'angle16' :\r\n                        currentTrackerInfo.currentAngle > 12 ? 'angle14' :\r\n                        currentTrackerInfo.currentAngle > 10 ? 'angle12' :\r\n                        currentTrackerInfo.currentAngle > 8 ? 'angle10' :\r\n                        currentTrackerInfo.currentAngle > 6 ? 'angle8' :\r\n                        currentTrackerInfo.currentAngle > 4 ? 'angle6' :\r\n                        currentTrackerInfo.currentAngle > 2 ? 'angle4' :\r\n                        currentTrackerInfo.currentAngle > 0 ? 'angle2' :\r\n                        currentTrackerInfo.currentAngle > -2 ? 'angle0' :\r\n                        currentTrackerInfo.currentAngle > -4 ? 'angle_2' :\r\n                        currentTrackerInfo.currentAngle > -6 ? 'angle_4' :\r\n                        currentTrackerInfo.currentAngle > -8 ? 'angle_6' :\r\n                        currentTrackerInfo.currentAngle > -10 ? 'angle_8' :\r\n                        currentTrackerInfo.currentAngle > -12 ? 'angle_10' :\r\n                        currentTrackerInfo.currentAngle > -14 ? 'angle_12' :\r\n                        currentTrackerInfo.currentAngle > -16 ? 'angle_14' :\r\n                        currentTrackerInfo.currentAngle > -18 ? 'angle_16' :\r\n                        currentTrackerInfo.currentAngle > -20 ? 'angle_18' :\r\n                        currentTrackerInfo.currentAngle > -22 ? 'angle_20' :\r\n                        currentTrackerInfo.currentAngle > -24 ? 'angle_22' :\r\n                        currentTrackerInfo.currentAngle > -26 ? 'angle_24' :\r\n                        currentTrackerInfo.currentAngle > -28 ? 'angle_26' :\r\n                        currentTrackerInfo.currentAngle > -30 ? 'angle_28' :\r\n                        currentTrackerInfo.currentAngle > -32 ? 'angle_30' :\r\n                        currentTrackerInfo.currentAngle > -34 ? 'angle_32' :\r\n                        currentTrackerInfo.currentAngle > -36 ? 'angle_34' :\r\n                        currentTrackerInfo.currentAngle > -38 ? 'angle_36' :\r\n                        currentTrackerInfo.currentAngle > -40 ? 'angle_38' :\r\n                        currentTrackerInfo.currentAngle > -42 ? 'angle_40' :\r\n                        currentTrackerInfo.currentAngle > -44 ? 'angle_42' :\r\n                        currentTrackerInfo.currentAngle > -46 ? 'angle_44' :\r\n                        currentTrackerInfo.currentAngle > -48 ? 'angle_46' :\r\n                        currentTrackerInfo.currentAngle > -50 ? 'angle_48' :\r\n                        currentTrackerInfo.currentAngle > -52 ? 'angle_50' :\r\n                        currentTrackerInfo.currentAngle > -54 ? 'angle_52' :\r\n                        currentTrackerInfo.currentAngle > -56 ? 'angle_54' :\r\n                        currentTrackerInfo.currentAngle > -58 ? 'angle_56' :\r\n                        currentTrackerInfo.currentAngle > -60 ? 'angle_58' :\r\n                        'angle_60')} \r\n                        style={{width: '100%', height: '150px', marginTop: 5}}>\r\n                            {currentTrackerInfo.currentAngle === '--' && <div \r\n                                style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n                                    No Current Angle Data Found.\r\n                            </div>}\r\n                        </div>\r\n                    {currentTrackerInfo.currentAngle !== '--' && <Typography variant='h5' style={{textAlign: 'center', height: 48, marginTop: 5}}>\r\n                        Angle = {currentTrackerInfo.currentAngle}\r\n                    </Typography>}\r\n                    <div style={{height: 'calc(100% - 246px)', width: '100%', overflow: 'auto'}}>\r\n                    <Table padding='none'>\r\n                        <TableBody>\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Tracker ID\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.trackerID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Device ID\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.deviceID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Mac ID \r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.macID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Current Mode\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.currentMode}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                    Current Angle\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.currentAngle}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                    Date and Time\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{new Date(currentTrackerInfo.timeStamp).toLocaleDateString('en-US', {timeZone: this.props.timeZone})} -- {new Date(currentTrackerInfo.timeStamp).toLocaleTimeString('en-US', {timeZone:  this.props.timeZone, hour12: false})}</TableCell>\r\n                        </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                    </div>\r\n                </Grid>\r\n        )\r\n    }\r\n} \r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentTrackerInfo, timeZone, currentTracker } = state.app\r\n\r\n    return {\r\n        currentTrackerInfo,\r\n        timeZone,\r\n        currentTracker\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getCurrentTrackerInfo : (trackerID) => {\r\n        dispatch({type: 'GET_CURRENT_TRACKER_INFO_REQUEST'})\r\n        appService.getCurrentTrackerInfo(trackerID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_CURRENT_TRACKER_INFO_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_CURRENT_TRACKER_INFO_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedTrackerDetails = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TrackerDetails))\r\nexport {connectedTrackerDetails as TrackerDetails}","import React from 'react'\r\nimport { Grid, Paper, Button } from '@material-ui/core';\r\nimport { TrackerList } from './TrackerList'\r\nimport { TrackerDetails } from './TrackerDetails';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexWrap: 'wrap',\r\n        [theme.breakpoints.up('md')]: {\r\n            height: '100%',\r\n        }\r\n    },\r\n    trackerList: {\r\n        width: '100%',\r\n        padding: 10,\r\n        [theme.breakpoints.up('md')]: {\r\n            minHeight: '100%', width: '50%'\r\n        }\r\n    },\r\n    trackerDetails: {\r\n        width: '100%',\r\n        padding: 10,\r\n        [theme.breakpoints.up('md')]: {\r\n            minHeight: '100%', width: '50%'\r\n        }\r\n    }\r\n})\r\n\r\nconst Initializing = (props) => \r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            <p style={{margin: 10}}>No static data found.  </p>\r\n            <Button variant='contained' style={{margin: 10}} color='primary' onClick={() => props.scan()}>Add trackers</Button>\r\n            <Button variant='contained' style={{margin: 10}} color='primary' onClick={() => props.getCommissioningData()}>Refresh static data</Button>\r\n    </div>\r\n\r\n\r\nconst Fetching = () => \r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            FETCHING...\r\n    </div>\r\n\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    state = {\r\n    }\r\n\r\n    getCommissioningData = () => {\r\n        this.props.getCommissioningData()\r\n    }\r\n\r\n    scan = () => {\r\n        this.props.scan()\r\n    }\r\n\r\n    render() {\r\n        const { classes, commissioningData, fetchingCommissioningData } = this.props\r\n        return ( fetchingCommissioningData ? <Fetching /> : commissioningData === null ? <Initializing scan={() => this.scan()} getCommissioningData={() => this.getCommissioningData()}/> :\r\n            <Grid container direction=\"column\" className={classes.root}>\r\n                <Grid item className={classes.trackerList}>\r\n                    <Paper style={{height: '100%'}}>\r\n                        <TrackerList />\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item className={classes.trackerDetails}>\r\n                    <Paper style={{height: '100%'}}>\r\n                        <TrackerDetails />\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData, fetchingCommissioningData } = state.app\r\n\r\n    return {\r\n        commissioningData,\r\n        fetchingCommissioningData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    scan : () => {\r\n        dispatch({type: 'SCAN'})\r\n    },\r\n    getCommissioningData: () => {\r\n        dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n        appService.getCommissioningData()\r\n            .then(json => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedDashboard = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Dashboard))\r\nexport {connectedDashboard as Dashboard}","import React, { Fragment } from 'react'\r\nimport { Grid, Button, TextField, FormControlLabel, Checkbox, InputAdornment } from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    fieldGrid: {\r\n        display: 'flex', \r\n        flexDirection: 'row', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    },\r\n    field: {\r\n        width: '45%',\r\n        margin: '10px 2.5% 0px 2.5%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '31.33%',\r\n            margin: '10px 1% 0px 1%'\r\n        }\r\n    }\r\n})\r\n\r\nclass SPAParameters extends React.Component {\r\n    state = {\r\n        Lattitude: '',\r\n        Longitude: '',\r\n        Altitude: '',\r\n        TrackingLimitEast: '',\r\n        TrackingLimitWest: '',\r\n        RowWidth: '',\r\n        RowPitch: '',\r\n        TrackingResolution: '',\r\n        AzimuthDeviation: '',\r\n        AltitudeofTrackerontheEast: '',\r\n        AltitudeofTrackerontheWest: '',\r\n        EarlyStartMinutes: '',\r\n        LateFinishMinutes: '',\r\n        LattitudeError: '',\r\n        LongitudeError: '',\r\n        AltitudeError: '',\r\n        TrackingLimitEastError: '',\r\n        TrackingLimitWestError: '',\r\n        RowWidthError: '',\r\n        RowPitchError: '',\r\n        TrackingResolutionError: '',\r\n        AzimuthDeviationError: '',\r\n        AltitudeofTrackerontheEastError: '',\r\n        AltitudeofTrackerontheWestError: '',\r\n        EarlyStartMinutesError: '',\r\n        LateFinishMinutesError: '',\r\n        backTracking: '0',\r\n        submit: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.editedTrackers.length ===  1) {\r\n            this.props.getSPAParameters(this.props.editedTrackers[0].deviceID)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.SPAParameters !== this.props.SPAParameters) {\r\n            const values = nextProps.SPAParameters.VALUES.split(',')\r\n            this.setState({\r\n                Lattitude: values[0],\r\n                Longitude: values[1],\r\n                Altitude: values[2],\r\n                TrackingLimitEast: values[3],\r\n                TrackingLimitWest: values[4],\r\n                RowWidth: values[5],\r\n                RowPitch: values[6],\r\n                TrackingResolution: values[7],\r\n                AzimuthDeviation: values[8],\r\n                AltitudeofTrackerontheEast: values[9],\r\n                AltitudeofTrackerontheWest: values[10],\r\n                EarlyStartMinutes: values[11],\r\n                LateFinishMinutes: values[12],\r\n                backTracking: values[14]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleBlur = (e, p) => {\r\n            const regex = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+$\")\r\n            const regexTest = regex.test(e.target.value)\r\n            if(!regexTest) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    [`${e.target.name}Error`]: `Please enter a number.`,\r\n                    submit: false\r\n                })\r\n            } else {\r\n                const value = Number(e.target.value)\r\n                if(p.min !== null && p.max !== null) {\r\n                    if(value < p.min || value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min} max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.min !== null) {\r\n                    if(value < p.min) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.max != null) {\r\n                    if(value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \r\n    }\r\n\r\n    sendSPAParameters = () => {\r\n        const { Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking } = this.state\r\n        this.props.sendSPAParameters(this.props.editedTrackers, Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                    {\r\n                        [\r\n                            {\r\n                                key: 'Lattitude',\r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 0\r\n                            },\r\n                            {\r\n                                key: 'Longitude', \r\n                                adornment: 'Deg',\r\n                                min: -180,\r\n                                max: +180,\r\n                                value: 1\r\n                            }, \r\n                            { \r\n                                key: 'Altitude',\r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 2\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - East', \r\n                                adornment: 'Deg',\r\n                                min: -60,\r\n                                max: 0,\r\n                                value: 3\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - West', \r\n                                adornment: 'Deg',\r\n                                min: 0,\r\n                                max: +60,\r\n                                value: 4 \r\n                            }, \r\n                            { \r\n                                key: 'Row Width', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 5\r\n                            }, \r\n                            { \r\n                                key: 'Row Pitch', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 6\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Resolution', \r\n                                adornment: 'Deg',\r\n                                min: +0.50,\r\n                                max: +30.0,\r\n                                value: 7 \r\n                            }, \r\n                            { \r\n                                key: 'Azimuth Deviation', \r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 8  \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the East', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 9 \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the West', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 10\r\n                            }, \r\n                            { \r\n                                key: 'Early Start Minutes', \r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 11\r\n                            }, \r\n                            { \r\n                                key: 'Late Finish Minutes',\r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 12\r\n                            }\r\n                        ].map(p => {\r\n                            return <TextField\r\n                                key={p.key}\r\n                                className={classes.field}\r\n                                id={p.key}\r\n                                name={p.key.replace(/ /g, '').replace(/-/g, '')}\r\n                                label={p.key}\r\n                                value={this.state[p.key.replace(/ /g, '').replace(/-/g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">{p.adornment}</InputAdornment>,\r\n                                  }}\r\n                                error={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`] !== ''}\r\n                                helperText={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`]}\r\n                                onBlur={(e) => this.handleBlur(e, p)}\r\n                            />\r\n                        })\r\n                    }\r\n                        <FormControlLabel disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters} className={classes.field}\r\n                            control={\r\n                                <Checkbox color='primary' checked={this.state.backTracking === '1'} onClick={() => this.setState({...this.state, backTracking: this.state.backTracking === '0' ? '1' : '0'})}/>\r\n                            }\r\n                            label=\"Enable Backtracking\"\r\n                        />\r\n                        <Button color='primary' disabled variant='contained' className={classes.field}>Sync time with Zone Controller</Button>    \r\n                    </Grid>\r\n                    <Grid item style={{textAlign: 'center'}}>\r\n                        <Button color='primary' disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters || !this.state.submit} variant='contained' onClick={() => this.sendSPAParameters()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { editedTrackers, sendingSPAParameters } = state.app\r\n\r\n    return {\r\n        editedTrackers,\r\n        sendingSPAParameters,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendSPAParameters: (editedTrackers, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking) => {\r\n        dispatch({type: 'SET_RESPONSE_LISTENER'})\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_SPA_PARAMETERS_REQUEST', t})\r\n            appService.sendSPAParameters(t.deviceID, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_SUCCESS'})\r\n                }, error => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_FAILURE'})\r\n                })\r\n        })\r\n        \r\n    }\r\n})\r\n\r\n\r\nconst connectedSPAParameters = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SPAParameters))\r\nexport {connectedSPAParameters as SPAParameters}","import React, { Fragment } from 'react'\r\nimport { Grid, Button, TextField, InputAdornment } from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    fieldGrid: {\r\n        display: 'flex', \r\n        flexDirection: 'row', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    },\r\n    field: {\r\n        width: '45%',\r\n        margin: '10px 2.5% 0px 2.5%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '31.33%',\r\n            margin: '10px 1% 0px 1%'\r\n        }\r\n    }\r\n})\r\n\r\nclass StowAngles extends React.Component {\r\n    state = {\r\n        WindStowAngle: '',\r\n        SnowStowAngle: '',\r\n        NightStowAngle: '',\r\n        EmergencyStowAngle: '',\r\n        CleanStowAngle: '',\r\n        submit: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.editedTrackers.length === 1) {\r\n            this.props.getStowAngles(this.props.editedTrackers[0].deviceID)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.stowAngles !== this.props.stowAngles) {\r\n            const values = nextProps.stowAngles.VALUES.split(',')\r\n            this.setState({\r\n                WindStowAngle: values[0],\r\n                SnowStowAngle: values[1],\r\n                NightStowAngle: values[2],\r\n                EmergencyStowAngle: values[3],\r\n                CleanStowAngle: values[4]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleBlur = (e, p) => {\r\n        if(e.target.value === '') {\r\n            this.setState({\r\n                ...this.state,\r\n                [e.target.name]: this.props.SPAParameters.VALUES.split(',')[p.value],\r\n                [`${e.target.name}Error`]: '',\r\n                submit: false\r\n            })\r\n        } else {\r\n            const regex = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+$\")\r\n            const regexTest = regex.test(e.target.value)\r\n            if(!regexTest) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    [`${e.target.name}Error`]: `Please enter a number.`,\r\n                    submit: false\r\n                })\r\n            } else {\r\n                const value = Number(e.target.value)\r\n                if(p.min !== null && p.max !== null) {\r\n                    if(value < p.min || value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min} max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.min !== null) {\r\n                    if(value < p.min) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.max != null) {\r\n                    if(value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    sendStowAngles = () => {\r\n        const { WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle } = this.state\r\n        this.props.sendStowAngles(this.props.editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                    {\r\n                        ['Wind Stow Angle', 'Snow Stow Angle', 'Night Stow Angle', 'Emergency Stow Angle', 'Clean Stow Angle'].map(p => {\r\n                            return <TextField\r\n                                key={p}\r\n                                className={classes.field}\r\n                                id={p}\r\n                                name={p.replace(/ /g, '')}\r\n                                label={p}\r\n                                value={this.state[p.replace(/ /g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingStowAngles || this.props.gettingStowAngles}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">Deg</InputAdornment>,\r\n                                  }}\r\n                            />\r\n                        })\r\n                    }\r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center'}}>\r\n                        <Button color='primary' disabled={this.props.sendingStowAngles || this.props.gettingStowAngles} variant='contained' onClick={() => this.sendStowAngles()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { editedTrackers, stowAngles, sendingStowAngles, gettingStowAngles } = state.app\r\n\r\n    return {\r\n        editedTrackers,\r\n        stowAngles,\r\n        sendingStowAngles,\r\n        gettingStowAngles\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendStowAngles: (editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle) => {\r\n        dispatch({type: 'SET_RESPONSE_LISTENER'})\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_STOW_ANGLES_REQUEST', t})\r\n            appService.sendStowAngles(t.deviceID, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_SUCCESS'})\r\n                }, error => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_FAILURE'})\r\n                })\r\n        })\r\n    }\r\n})\r\n\r\n\r\nconst connectedStowAngles = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(StowAngles))\r\nexport {connectedStowAngles as StowAngles}","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { connect } from 'react-redux'\r\nimport { SPAParameters } from './SPAParameters';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { StowAngles } from './StowAngles';\r\nimport LeftIcon from '@material-ui/icons/ArrowBack'\r\nimport { Grid, Typography, Chip, Toolbar } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      margin: 10,\r\n      display: 'flex',\r\n      flexDirection: 'column'\r\n    },\r\n    body: {\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    tabsIndicator: {\r\n      backgroundColor: '#54AAB3',\r\n    },\r\n    selected: {\r\n      backgroundColor: '#54AAB3',\r\n      color: '#ffffff',\r\n      fontWeight: 600,\r\n      fontSize: 14\r\n    },\r\n    editedTrackers: {\r\n        width: '25%',\r\n        margin: 10,\r\n    },\r\n    tabs: {\r\n        width: '75%',\r\n        padding: 10,\r\n        boxShadow: '-1px 0px 0px 0px rgba(0,0,0,0.5)'\r\n    },\r\n    chip: {\r\n        margin: 10\r\n    },\r\n    green: {\r\n        backgroundColor: 'green'\r\n    },\r\n    red: {\r\n        backgroundColor: 'red'\r\n    }\r\n});\r\n\r\nclass EditRowController extends React.Component {\r\n    handleChange = (event, value) => {\r\n        this.props.changeTab({ value });\r\n    };\r\n    \r\n    render() {console.log(this.props)\r\n        const { classes, currentEditTab, editedTrackers, responseQueue } = this.props;\r\n    \r\n        return (\r\n        <div className={classes.root}>\r\n            <div className={classes.header}>\r\n            <Grid item>\r\n                <Typography variant='h5'>\r\n                    <IconButton aria-label=\"Back\" onClick={this.props.back} >\r\n                        <LeftIcon fontSize=\"large\" />\r\n                    </IconButton>\r\n                    Edit Parameters\r\n                </Typography>\r\n            </Grid>\r\n            </div>\r\n            <div className={classes.body}>\r\n            <div className={classes.editedTrackers}>\r\n            \r\n            <AppBar position=\"static\" color='secondary'>\r\n                <Toolbar style={{minHeight: 48}} disableGutters>\r\n                <Typography variant=\"subtitle1\" style={{margin: 'auto'}}>\r\n                    Selected Trackers\r\n                </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {\r\n                editedTrackers.map(t => (\r\n                <Chip key={t.deviceID} label={`Row#: ${t.rowNumber}`} className={classes.chip} style={responseQueue.filter(r => r.request.DID === t.deviceID)[0] ? responseQueue.filter(r => r.request.DID === t.deviceID)[0].success ? {backgroundColor: 'green'} : {backgroundColor: 'red'} : {}}/>\r\n            ))}\r\n            </div>\r\n            <div className={classes.tabs}>\r\n            <AppBar position=\"static\" color='secondary'>\r\n                <Tabs value={currentEditTab} onChange={this.handleChange} classes={{indicator: classes.tabsIndicator}}>\r\n                    <Tab label=\"SPA Parameters\" classes={{selected: classes.selected}}/>\r\n                    <Tab label=\"Stow Angles\" classes={{selected: classes.selected}}/>\r\n                </Tabs>\r\n            </AppBar>\r\n            {currentEditTab === 0 && <SPAParameters />}\r\n            {currentEditTab === 1 && <StowAngles />}\r\n            </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentEditTab, editedTrackers, responseQueue } = state.app\r\n\r\n    return {\r\n        currentEditTab,\r\n        editedTrackers,\r\n        responseQueue       \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changeTab: (value) => {\r\n        dispatch({type: 'CHANGE_EDIT_TAB', value})\r\n    }\r\n})\r\n\r\n\r\nconst connectedEditRowController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(EditRowController))\r\nexport {connectedEditRowController as EditRowController}","import React, { Fragment } from 'react'\r\nimport LeftIcon from '@material-ui/icons/ArrowBack'\r\nimport { IconButton, Typography, Grid, Button, TextField, FormControlLabel, Checkbox, InputAdornment } from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    fieldGrid: {\r\n        display: 'flex', \r\n        flexDirection: 'row', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    },\r\n    field: {\r\n        width: '45%',\r\n        margin: '10px 2.5% 0px 2.5%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '23%',\r\n            margin: '10px 1% 0px 1%'\r\n        }\r\n    }\r\n})\r\n\r\nclass EditRowController extends React.Component {\r\n    state = {\r\n        Lattitude: '',\r\n        Longitude: '',\r\n        Altitude: '',\r\n        TrackingLimitEast: '',\r\n        TrackingLimitWest: '',\r\n        RowWidth: '',\r\n        RowPitch: '',\r\n        TrackingResolution: '',\r\n        AzimuthDeviation: '',\r\n        AltitudeofTrackerontheEast: '',\r\n        AltitudeofTrackerontheWest: '',\r\n        EarlyStartMinutes: '',\r\n        LateFinishMinutes: '',\r\n        LattitudeError: '',\r\n        LongitudeError: '',\r\n        AltitudeError: '',\r\n        TrackingLimitEastError: '',\r\n        TrackingLimitWestError: '',\r\n        RowWidthError: '',\r\n        RowPitchError: '',\r\n        TrackingResolutionError: '',\r\n        AzimuthDeviationError: '',\r\n        AltitudeofTrackerontheEastError: '',\r\n        AltitudeofTrackerontheWestError: '',\r\n        EarlyStartMinutesError: '',\r\n        LateFinishMinutesError: '',\r\n        WindStowAngle: '',\r\n        SnowStowAngle: '',\r\n        NightStowAngle: '',\r\n        EmergencyStowAngle: '',\r\n        CleanStowAngle: '',\r\n        backTracking: '0',\r\n        submit: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.editedTrackers.length === 1) {\r\n            this.props.getSPAParameters(this.props.editedTrackers[0].deviceID)\r\n            this.props.getStowAngles(this.props.editedTrackers[0].deviceID)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.SPAParameters !== this.props.SPAParameters) {\r\n            const values = nextProps.SPAParameters.VALUES.split(',')\r\n            this.setState({\r\n                Lattitude: values[0],\r\n                Longitude: values[1],\r\n                Altitude: values[2],\r\n                TrackingLimitEast: values[3],\r\n                TrackingLimitWest: values[4],\r\n                RowWidth: values[5],\r\n                RowPitch: values[6],\r\n                TrackingResolution: values[7],\r\n                AzimuthDeviation: values[8],\r\n                AltitudeofTrackerontheEast: values[9],\r\n                AltitudeofTrackerontheWest: values[10],\r\n                EarlyStartMinutes: values[11],\r\n                LateFinishMinutes: values[12],\r\n                backTracking: values[14]\r\n            })\r\n        }\r\n        if(nextProps.stowAngles !== this.props.stowAngles) {\r\n            const values = nextProps.stowAngles.VALUES.split(',')\r\n            this.setState({\r\n                WindStowAngle: values[0],\r\n                SnowStowAngle: values[1],\r\n                NightStowAngle: values[2],\r\n                EmergencyStowAngle: values[3],\r\n                CleanStowAngle: values[4]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleChangeSPA = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleBlur = (e, p) => {\r\n        if(e.target.value === '') {\r\n            this.setState({\r\n                ...this.state,\r\n                [e.target.name]: this.props.SPAParameters.VALUES.split(',')[p.value],\r\n                [`${e.target.name}Error`]: '',\r\n                submit: false\r\n            })\r\n        } else {\r\n            const regex = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+$\")\r\n            const regexTest = regex.test(e.target.value)\r\n            if(!regexTest) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    [`${e.target.name}Error`]: `Please enter a number.`,\r\n                    submit: false\r\n                })\r\n            } else {\r\n                const value = Number(e.target.value)\r\n                if(p.min !== null && p.max !== null) {\r\n                    if(value < p.min || value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min} max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.min !== null) {\r\n                    if(value < p.min) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.max != null) {\r\n                    if(value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    sendSPAParameters = () => {\r\n        const { Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking } = this.state\r\n        this.props.sendSPAParameters(this.props.editedTrackers, Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking)\r\n    }\r\n\r\n    sendStowAngles = () => {\r\n        const { WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle } = this.state\r\n        this.props.sendStowAngles(this.props.editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item style={{height: 64, borderBottom: '0.1px solid lightgrey'}}>\r\n                        <Typography variant='h5'>\r\n                            <IconButton aria-label=\"Back\" onClick={this.props.back} >\r\n                                <LeftIcon fontSize=\"large\" />\r\n                            </IconButton>\r\n                            Edit Parameters\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Typography variant='h6' style={{paddingLeft: 'calc(1% + 10px)'}}>\r\n                        SPA Settings\r\n                    </Typography>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                        \r\n                    {\r\n                        [\r\n                            {\r\n                                key: 'Lattitude',\r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 0\r\n                            },\r\n                            {\r\n                                key: 'Longitude', \r\n                                adornment: 'Deg',\r\n                                min: -180,\r\n                                max: +180,\r\n                                value: 1\r\n                            }, \r\n                            { \r\n                                key: 'Altitude',\r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 2\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - East', \r\n                                adornment: 'Deg',\r\n                                min: -60,\r\n                                max: 0,\r\n                                value: 3\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - West', \r\n                                adornment: 'Deg',\r\n                                min: 0,\r\n                                max: +60,\r\n                                value: 4 \r\n                            }, \r\n                            { \r\n                                key: 'Row Width', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 5\r\n                            }, \r\n                            { \r\n                                key: 'Row Pitch', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 6\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Resolution', \r\n                                adornment: 'Deg',\r\n                                min: +0.50,\r\n                                max: +30.0,\r\n                                value: 7 \r\n                            }, \r\n                            { \r\n                                key: 'Azimuth Deviation', \r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 8  \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the East', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 9 \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the West', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 10\r\n                            }, \r\n                            { \r\n                                key: 'Early Start Minutes', \r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 11\r\n                            }, \r\n                            { \r\n                                key: 'Late Finish Minutes',\r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 12\r\n                            }\r\n                        ].map(p => {\r\n                            return <TextField\r\n                                key={p.key}\r\n                                className={classes.field}\r\n                                id={p.key}\r\n                                name={p.key.replace(/ /g, '').replace(/-/g, '')}\r\n                                label={p.key}\r\n                                value={this.state[p.key.replace(/ /g, '').replace(/-/g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">{p.adornment}</InputAdornment>,\r\n                                  }}\r\n                                error={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`] !== ''}\r\n                                helperText={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`]}\r\n                                onBlur={(e) => this.handleBlur(e, p)}\r\n                            />\r\n                        })\r\n                    }\r\n                        <FormControlLabel disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters} style={{ margin: 10, marginLeft: 'auto' }}\r\n                            control={\r\n                                <Checkbox color='primary' checked={this.state.backTracking === '1'} onClick={() => this.setState({...this.state, backTracking: this.state.backTracking === '0' ? '1' : '0'})}/>\r\n                            }\r\n                            label=\"Enable Backtracking\"\r\n                        />\r\n                        <Button color='primary' disabled variant='contained' style={{ margin: 10 }}>Sync time with Zone Controller</Button>    \r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center', borderBottom: '0.1px solid lightgrey'}}>\r\n                        <Button color='primary' disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters || !this.state.submit} variant='contained' onClick={() => this.sendSPAParameters()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                    <Typography variant='h6' style={{paddingLeft: 'calc(1% + 10px)'}}>\r\n                        Stow Angle Settings\r\n                    </Typography>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                        \r\n                    {\r\n                        ['Wind Stow Angle', 'Snow Stow Angle', 'Night Stow Angle', 'Emergency Stow Angle', 'Clean Stow Angle'].map(p => {\r\n                            return <TextField\r\n                                key={p}\r\n                                className={classes.field}\r\n                                id={p}\r\n                                name={p.replace(/ /g, '')}\r\n                                label={p}\r\n                                value={this.state[p.replace(/ /g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingStowAngles || this.props.gettingStowAngles}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">Deg</InputAdornment>,\r\n                                  }}\r\n                            />\r\n                        })\r\n                    }\r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center'}}>\r\n                        <Button color='primary' disabled={this.props.sendingStowAngles || this.props.gettingStowAngles} variant='contained' onClick={() => this.sendStowAngles()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { editedTrackers, SPAParameters, stowAngles, sendingSPAParameters, sendingStowAngles, gettingSPAParameters, gettingStowAngles } = state.app\r\n\r\n    return {\r\n        editedTrackers,\r\n        SPAParameters,\r\n        stowAngles,\r\n        sendingSPAParameters,\r\n        sendingStowAngles,\r\n        gettingSPAParameters,\r\n        gettingStowAngles\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendSPAParameters: (editedTrackers, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking) => {\r\n        const values = `${Lattitude}, ${Longitude}, ${Altitude}, ${EastLimit}, ${WestLimit}, ${TrackerWidth}, ${Pitch}, ${TrackingAccuracy}, ${AzimuthDeviation}, ${AltitudeTrackeronEast}, ${AltitudeTrackeronWest}, ${StartTimeLead}, ${EndTimeLag}, 0, ${backTracking}`\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_SPA_PARAMETERS_REQUEST', t, values})\r\n            appService.sendSPAParameters(t.deviceID, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_SUCCESS'})\r\n                    dispatch({type: 'GET_SPA_PARAMETERS_REQUEST'})\r\n                    appService.getSPAParameters(t.deviceID)\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_SPA_PARAMETERS_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_SPA_PARAMETERS_FAILURE'})\r\n                        })\r\n\r\n                }, error => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_FAILURE'})\r\n                })\r\n        })\r\n        \r\n    },\r\n    sendStowAngles: (editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle) => {\r\n        const values = `${WindStowAngle}, ${SnowStowAngle}, ${CleanStowAngle}, ${NightStowAngle}, ${EmergencyStowAngle}`\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_STOW_ANGLES_REQUEST', t, values})\r\n            appService.sendStowAngles(t.deviceID, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_SUCCESS'})\r\n                    dispatch({type: 'GET_STOW_ANGLES_REQUEST'})\r\n                    appService.getStowAngles(t.deviceID)\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_STOW_ANGLES_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_STOW_ANGLES_FAILURE'})\r\n                        })\r\n                }, error => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_FAILURE'})\r\n                })\r\n        })\r\n    },\r\n    getStowAngles: (DID) => {\r\n        dispatch({type: 'GET_STOW_ANGLES_REQUEST'})\r\n        appService.getStowAngles(DID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_STOW_ANGLES_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'GET_STOW_ANGLES_FAILURE'})\r\n            })\r\n    },\r\n    getSPAParameters: (DID) => {\r\n        dispatch({type: 'GET_SPA_PARAMETERS_REQUEST'})\r\n        appService.getSPAParameters(DID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_SPA_PARAMETERS_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'GET_SPA_PARAMETERS_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedEditRowController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(EditRowController))\r\nexport {connectedEditRowController as EditRowController1}","import React, { Fragment } from 'react'\r\nimport LeftIcon from '@material-ui/icons/ArrowBack'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { IconButton, Typography, Grid, Button, Menu, MenuItem, FormControlLabel, Switch } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: 'calc(100% - 48px)'\r\n    },\r\n    second: {\r\n        height: 'calc(100% - 128px)', \r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    }\r\n})\r\n\r\nclass ControlRowController extends React.Component {\r\n    state = {\r\n        typeOfStow: 'STOW',\r\n        auto: false\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.setState({ ...this.state, anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleClose = (key) => {\r\n        this.setState({ typeOfStow: key, anchorEl: null });\r\n    };\r\n\r\n    autoToggle = () => {\r\n        if(this.state.auto) {\r\n            this.props.controlledTrackers.map(t => this.props.sendStow(t.deviceID, 'AUTO'))\r\n            this.setState({...this.state, auto: !this.state.auto})\r\n        } else {\r\n            this.props.controlledTrackers.map(t => this.props.sendStow(t.deviceID, 'MANUAL'))\r\n            this.setState({...this.state, auto: !this.state.auto})\r\n        }\r\n    } \r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        const { anchorEl } = this.state\r\n        return (\r\n            <Fragment>\r\n\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item style={{height: 64}}>\r\n                        <Typography variant='h5'>\r\n                            <IconButton aria-label=\"Back\" onClick={this.props.back} >\r\n                                <LeftIcon fontSize=\"large\" />\r\n                            </IconButton>\r\n                            Control\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item className={classes.second}>\r\n                    \r\n                    </Grid>\r\n                    <Grid item style={{textAlign: 'center'}}>\r\n                        <Button color='primary' variant='contained' onClick={() => this.props.controlledTrackers.map(t => this.props.sendCommand(t.deviceID, 'NEGATIVE'))} style={{ margin: 10 }}>Run West</Button>\r\n                        <Button color='primary' variant='contained' onClick={() => this.props.controlledTrackers.map(t => this.props.sendCommand(t.deviceID, 'POSITIVE'))} style={{ margin: 10 }}>Run East</Button>\r\n                        <Button color='primary' variant='contained' onClick={() => this.props.controlledTrackers.map(t => this.props.sendCommand(t.deviceID, 'STOP'))} style={{ margin: 10 }}>Stop</Button>\r\n                        <Button color='primary' disabled={this.state.typeOfStow === 'STOW'} onClick={() => this.props.controlledTrackers.map(t => this.props.sendStow(t.deviceID, this.state.typeOfStow))} variant='contained' style={{ marginLeft: 10 }}>{this.state.typeOfStow}</Button>\r\n                        <Button \r\n                            color='primary' \r\n                            variant='contained' \r\n                            aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={this.handleClick}\r\n                            style={{ minWidth: 24, paddingLeft: 0, paddingRight: 0}}\r\n                        >\r\n                            <ExpandMoreIcon />\r\n                        </Button>\r\n                        <Menu\r\n                            id=\"simple-menu\"\r\n                            anchorEl={anchorEl}\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={this.handleClose}\r\n                            >\r\n                            <MenuItem onClick={() => this.handleClose('WIND')}>WIND</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('SNOW')}>SNOW</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('NIGHT')}>NIGHT</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('CLEAN')}>CLEAN</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('EMERGENCY')}>EMERGENCY</MenuItem>\r\n                        </Menu>\r\n                        <FormControlLabel style={{ margin: 10 }} labelPlacement=\"top\"\r\n                            control={\r\n                                <Switch color='primary' checked={this.state.auto} onClick={() => this.autoToggle()} />\r\n                            }\r\n                            label=\"Enable Auto Mode\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { controlledTrackers } = state.app\r\n\r\n    return {\r\n        controlledTrackers,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendCommand: (DID, value) => {\r\n        dispatch({type: 'SEND_COMMAND_REQUEST'})\r\n        appService.sendCommand(DID, value)\r\n            .then(json => {\r\n                dispatch({type: 'SEND_COMMAND_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'SEND_COMMAND_FAILURE'})\r\n            })\r\n    },\r\n    sendStow: (DID, mode) => {\r\n        dispatch({type: 'SEND_STOW_REQUEST'})\r\n        appService.sendStow(DID, mode)\r\n            .then(json => {\r\n                dispatch({type: 'SEND_STOW_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'SEND_STOW_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedControlRowController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ControlRowController))\r\nexport {connectedControlRowController as ControlRowController}","import React, { Fragment } from 'react'\r\nimport { Grid, Button, Checkbox } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { EditRowController } from './EditRowController';\r\nimport { EditRowController1 } from './_EditRowController'\r\nimport { ControlRowController } from './ControlRowController'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    buttons: {\r\n        marginBottom: 10,\r\n        marginRight: 10,\r\n        marginTop: 10\r\n    }\r\n});\r\n\r\nclass RowControllerTab extends React.Component {\r\n    state = {\r\n        selectedTrackers: [],\r\n        location: 'home'\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedTrackers.length === this.props.commissioningData.length) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.props.commissioningData]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectRow = (row) => {\r\n        if(this.state.selectedTrackers.indexOf(row) === -1) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.state.selectedTrackers, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.state.selectedTrackers.filter(t => t.macID !== row.macID)]\r\n            })\r\n        }\r\n    }\r\n\r\n    editTracker = () => {\r\n        this.props.setEditedTrackers(this.state.selectedTrackers)\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'edit'\r\n        })\r\n    }\r\n\r\n    controlTracker = () => {\r\n        this.props.setControlledTrackers(this.state.selectedTrackers)\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'control'\r\n        })\r\n    }\r\n\r\n    back = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'home'\r\n        })\r\n    }\r\n\r\n    removeTrackers = () => {\r\n        this.props.removeTrackers(this.state.selectedTrackers.map(s => s.deviceID))\r\n        this.setState({...this.state, selectedTrackers: []})\r\n    }\r\n\r\n    render() {\r\n        const { classes, commissioningData } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    this.state.location === 'edit' ? \r\n                        this.state.selectedTrackers.length > 1 ?\r\n                        <EditRowController back={this.back}/> : <EditRowController1 back={this.back}/> :\r\n                    this.state.location === 'control' ?\r\n                    <ControlRowController back={this.back}/> :\r\n                    <Grid container direction='column' style={{ height: 'calc(100% - 48px)'}}>\r\n                        <Grid item style={{textAlign: 'end'}}>\r\n                            <Button color='primary' variant='contained' disabled={this.state.selectedTrackers.length === 0} className={classes.buttons} onClick={() => this.editTracker()}>Edit</Button>\r\n                            <Button color='primary' variant='contained' disabled={this.state.selectedTrackers.length === 0} className={classes.buttons} onClick={() => this.controlTracker()}>Control</Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    onClick={() => this.selectAll()}\r\n                                    style={{cursor: 'pointer'}}\r\n                                >\r\n                                    {commissioningData !== null && commissioningData.length > 1 && <Checkbox \r\n                                        checked={this.state.selectedTrackers.length === commissioningData.length}\r\n                                        color='primary'\r\n                                    />}\r\n                                        </TableCell>\r\n                                <TableCell >Row #</TableCell>\r\n                                <TableCell >Device ID</TableCell>\r\n                                <TableCell >Mac ID</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {commissioningData && commissioningData.map(row => (\r\n                                <TableRow key={row.macID}\r\n                                    onClick={() => this.selectRow(row)}\r\n                                    style={{cursor: 'pointer'}}\r\n                                >\r\n                                <TableCell>\r\n                                    <Checkbox \r\n                                        checked={this.state.selectedTrackers.indexOf(row) !== -1}\r\n                                        color='primary'\r\n                                    />\r\n                                </TableCell>\r\n                                    <TableCell >{row.rowNumber}</TableCell>\r\n                                    <TableCell >{row.deviceID}</TableCell>\r\n                                    <TableCell >{row.macID}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        </Grid>{commissioningData !== null &&\r\n                        <Grid item style={{textAlign: 'end'}}>\r\n                            <Button variant='contained' color='primary' className={classes.buttons} disabled={this.state.selectedTrackers.length === 0} onClick={() => this.removeTrackers()}>Forget</Button>\r\n                        </Grid>}\r\n                    </Grid>\r\n                    \r\n                }\r\n                \r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData } = state.app\r\n\r\n    return {\r\n        commissioningData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    removeTrackers : (DIDs) => {\r\n        dispatch({type: 'REMOVE_TRACKERS_REQUEST'})\r\n        appService.removeTrackers(DIDs)\r\n            .then(json => {\r\n                dispatch({type: 'REMOVE_TRACKERS_SUCCESS', DIDs})\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n                appService.getCommissioningData()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n                    })\r\n            }, error => {\r\n                dispatch({type: 'REMOVE_TRACKERS_FAILURE'})\r\n            })\r\n    },\r\n    setEditedTrackers: (trackers) => {\r\n        dispatch({type: 'SET_EDITED_TRACKERS', trackers})\r\n    },\r\n    setControlledTrackers: (trackers) => {\r\n        dispatch({type: 'SET_CONTROLLED_TRACKERS', trackers})\r\n    }\r\n})\r\n\r\n\r\nconst connectedRowControllerTab = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RowControllerTab))\r\nexport {connectedRowControllerTab as RowControllerTab}","import React, { Fragment } from 'react'\r\nimport { Grid, Checkbox, TextField, Button } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    textField: {\r\n        marginLeft: 24\r\n    },\r\n    formControl: {\r\n        marginLeft: 24\r\n    }\r\n});\r\n  \r\n\r\nclass ScanTab extends React.Component {\r\n    state = {\r\n        selectedTrackers: [],\r\n        scanSelection: 'PAN ID'\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedTrackers.length === this.props.xbeeResponse.length) {\r\n            this.setState({\r\n                selectedTrackers: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selectedTrackers: [...this.props.xbeeResponse]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectRow = (row) => {\r\n        if(this.state.selectedTrackers.indexOf(row) === -1) {\r\n            this.setState({\r\n                selectedTrackers: [...this.state.selectedTrackers, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selectedTrackers: [...this.state.selectedTrackers.filter(t => t.id !== row.id)]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            scanSelection: e.target.value\r\n        })\r\n    }\r\n\r\n    inputChange = (e) =>{\r\n        this.setState({\r\n            scanParameter: e.target.value\r\n        })\r\n    }\r\n\r\n    scan = () => {\r\n        if(this.state.scanSelection === 'PAN ID') {\r\n            this.props.discover('00000')\r\n        } else {\r\n            this.props.discover(this.state.scanParameter)\r\n        }\r\n    } \r\n\r\n    addTrackers = () => {\r\n        this.props.addTrackers(this.state.selectedTrackers)\r\n    }\r\n\r\n    render() {\r\n        const { classes, xbeeResponse } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column'>\r\n                    <Grid item>\r\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                            <RadioGroup\r\n                                row\r\n                                aria-label=\"Scan\"\r\n                                name=\"scan\"\r\n                                value={this.state.scanSelection}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <FormControlLabel value=\"PAN ID\" control={<Radio color='primary'/>} label=\"PAN ID\" />\r\n                                <FormControlLabel value=\"Device ID\" control={<Radio color='primary'/>} label=\"Device ID\" />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item style={{marginBottom: 24}}>\r\n                    {\r\n                        this.state.scanSelection === 'PAN ID' ?\r\n                        <TextField\r\n                            id=\"scanParameter\"\r\n                            className={classes.textField}\r\n                            value={this.state.scanParameter}\r\n                            onChange={this.inputChange}\r\n                            placeholder='PAN ID'\r\n                            margin=\"none\"\r\n                            variant='outlined'\r\n                        /> :\r\n                        <TextField\r\n                            id=\"scanParameter\"\r\n                            className={classes.textField}\r\n                            value={this.state.scanParameter}\r\n                            onChange={this.inputChange}\r\n                            placeholder='Device ID'\r\n                            margin=\"none\"\r\n                            variant='outlined'\r\n                        />\r\n                    }\r\n                        <Button color='primary' onClick={() => this.scan()} variant='contained' style={{marginLeft: 24, verticalAlign: 'bottom'}}>Scan</Button>\r\n                    </Grid>{xbeeResponse.length !== 0 && xbeeResponse !== undefined &&\r\n                    <Grid item>\r\n                    <Table className={classes.table}>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell\r\n                                onClick={() => this.selectAll()}\r\n                                style={{cursor: 'pointer'}}\r\n                            >\r\n                                {xbeeResponse.length > 1 && xbeeResponse !== undefined && <Checkbox \r\n                                    checked={this.state.selectedTrackers.length === xbeeResponse.length && this.state.selectedTrackers.length !== 0}\r\n                                    color='primary'\r\n                                />}\r\n                                    </TableCell>\r\n                            <TableCell >Row #</TableCell>\r\n                            <TableCell >Device ID</TableCell>\r\n                            <TableCell >Mac ID</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {xbeeResponse.length !== 0 && xbeeResponse !== undefined && xbeeResponse.map(res => {\r\n                            return (\r\n                            <TableRow key={res.DID}\r\n                                onClick={() => this.selectRow(res)}\r\n                                style={{cursor: 'pointer'}}\r\n                            >\r\n                            <TableCell>\r\n                                <Checkbox \r\n                                    checked={this.state.selectedTrackers.indexOf(res) !== -1}\r\n                                    color='primary'\r\n                                />\r\n                            </TableCell>\r\n                                <TableCell >{res.VALUES.split(',')[0]}</TableCell>\r\n                                <TableCell >{res.DID}</TableCell>\r\n                                <TableCell >{res.macID}</TableCell>\r\n                            </TableRow>\r\n                        )})}\r\n                        </TableBody>\r\n                    </Table>\r\n                    </Grid>}{xbeeResponse.length !== 0 && xbeeResponse !== undefined &&\r\n                    <Grid item style={{textAlign: 'end'}}>\r\n                        <Button color='primary' disabled={this.state.selectedTrackers.length === 0} onClick={() => this.addTrackers()} variant='contained' style={{margin: 10}}>Add</Button>\r\n                    </Grid>}\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { xbeeResponse } = state.app\r\n\r\n    return {\r\n        xbeeResponse\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    discover : (did) => {\r\n        dispatch({type: 'DISCOVER_REQUEST'})\r\n        appService.discover(did)\r\n            .then(json => {\r\n                dispatch({type: 'DISCOVER_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'DISCOVER_FAILURE'})\r\n            })\r\n    },\r\n    addTrackers: (devices) => {\r\n        dispatch({type: 'ADD_TRACKERS_REQUEST'})\r\n        appService.addTrackers(devices)\r\n            .then(json => {\r\n                dispatch({type: 'ADD_TRACKERS_SUCCESS', devices})\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n                appService.getCommissioningData()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n                    })\r\n            }, error => {\r\n                dispatch({type: 'ADD_TRACKERS_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedScanTab = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ScanTab))\r\nexport {connectedScanTab as ScanTab}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { RowControllerTab } from './RowControllerTab'\r\nimport { ScanTab } from './ScanTab'\r\nimport { connect } from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  tabsIndicator: {\r\n    backgroundColor: '#54AAB3',\r\n  },\r\n  selected: {\r\n    backgroundColor: '#54AAB3',\r\n    color: '#ffffff',\r\n    fontWeight: 600,\r\n    fontSize: 14\r\n  }\r\n});\r\n\r\nclass RowController extends React.Component {\r\n\r\n  handleChange = (event, value) => {\r\n    this.props.changeTab({ value });\r\n  };\r\n\r\n  render() {\r\n    const { classes, currentTab } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" color='secondary'>\r\n          <Tabs value={currentTab} onChange={this.handleChange} classes={{indicator: classes.tabsIndicator}}>\r\n            <Tab label=\"Paired Rows\" classes={{selected: classes.selected}}/>\r\n            <Tab label=\"Scan\" classes={{selected: classes.selected}}/>\r\n          </Tabs>\r\n        </AppBar>\r\n        {currentTab === 0 && <RowControllerTab />}\r\n        {currentTab === 1 && <ScanTab />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRowController.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentTab } = state.app\r\n\r\n    return {\r\n        currentTab\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changeTab: (value) => {\r\n        dispatch({type: 'CHANGE_TAB', value})\r\n    }\r\n})\r\n\r\n\r\nconst connectedRowController = (connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RowController)))\r\nexport {connectedRowController as RowController}","import React, { Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Grid, TextField, Typography, FormControlLabel, FormControl, Radio, RadioGroup, Button } from '@material-ui/core';\r\nimport { connect } from 'react-redux'\r\nimport { appService } from '../App/app.services';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    [theme.breakpoints.up('md')]: {\r\n        height: '660px'\r\n    }\r\n  },\r\n  grid2: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '90%',\r\n    [theme.breakpoints.up('md')]: {\r\n        width: '30%',\r\n    }\r\n  },\r\n  field: {\r\n    width: '90%',\r\n    [theme.breakpoints.up('md')]: {\r\n        margin: '10px 0 0 0'\r\n    }\r\n  },\r\n  saveButton: {\r\n    margin: '10px 10px 10px 5%',\r\n    alignSelf: 'start',\r\n    [theme.breakpoints.down('sm')]: {\r\n        width: '90%',\r\n        margin: 10,\r\n        alignSelf: 'center'\r\n    }\r\n  }\r\n});\r\n\r\nclass ZoneController extends React.Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        return (\r\n            <Fragment>\r\n                    <Grid item xs={12} container direction='column' justify='center' alignItems='center' className={classes.root}>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Network\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='ssid'\r\n                            label='SSID'\r\n                            value={this.state.ssid}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='password'\r\n                            label='Password'\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='staticIP'\r\n                            label='Static IP'\r\n                            value={this.state.staticIP}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary' className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Heart Beat\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='heartbeatInterval'\r\n                            label='Heart Beat Interval'\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='heartbeatMaxMessages'\r\n                            label='Heart Beat Max Messages'\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Big Query\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='bqKey'\r\n                            label='Big Query key'\r\n                            value={this.state.bqKey}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            PAN ID\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='panID'\r\n                            label='PAN ID'\r\n                            value={this.state.panID}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Wind Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='maxWindSpeed'\r\n                            label='Max Wind Speed'\r\n                            value={this.state.maxWindSpeed}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='meanWindSpeed'\r\n                            label='Mean Wind Speed'\r\n                            value={this.state.meanWindSpeed}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='windSpeedTimer'\r\n                            label='Wind Speed Timer'\r\n                            value={this.state.windSpeedTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Flood Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='maxFloodLevel'\r\n                            label='Max FLood Level'\r\n                            value={this.state.maxFloodLevel}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='floodLevelTimer'\r\n                            label='Flood level Timer'\r\n                            value={this.state.floodLevelTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Snow Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='maxSnowLevel'\r\n                            label='Max Snow Level'\r\n                            value={this.state.maxSnowLevel}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='snowLevelTimer'\r\n                            label='Snow level Timer'\r\n                            value={this.state.snowLevelTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Rain Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='maxRainLevel'\r\n                            label='Max Rain Level'\r\n                            value={this.state.maxRainLevel}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='rainLevelTimer'\r\n                            label='Rain level Timer'\r\n                            value={this.state.rainLevelTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <FormControl component=\"fieldset\" className={classes.field}>\r\n                            <RadioGroup\r\n                                row\r\n                                aria-label=\"Sync\"\r\n                                name=\"sync\"\r\n                                value={this.state.syncTime}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <FormControlLabel value=\"internet\" control={<Radio color='primary'/>} label=\"Sync from internet\" />\r\n                                <FormControlLabel value=\"scada\" control={<Radio color='primary'/>} label=\"Sync from SCADA\" />\r\n                            </RadioGroup>\r\n                            <Button variant='contained' color='primary' style={{marginBottom: 10}}>Sync</Button>\r\n                        </FormControl>\r\n                        </div>\r\n                    </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData } = state.app\r\n\r\n    return {\r\n        commissioningData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setWifiInfo: (ssid, pass, staticIP) => {\r\n        dispatch({type: 'SET_WIFI_INFO'}) \r\n        appService.setWifiInfo(ssid, pass)\r\n    }\r\n})\r\n\r\n\r\nconst connectedZoneController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ZoneController))\r\nexport {connectedZoneController as ZoneController}","import React from 'react'\r\nimport { Grid, Button, Checkbox, TextField, DialogActions, DialogTitle, Dialog, DialogContent, MenuItem, OutlinedInput, InputLabel, FormControl, Select, Tooltip } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      height: '100%',\r\n      overflowX: 'auto',\r\n      backgroundColor: 'white'\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    buttons: {\r\n        marginBottom: 10,\r\n        marginRight: 10,\r\n        marginTop: 10\r\n    }\r\n});\r\n  \r\n\r\nclass Sensors extends React.Component {\r\n\r\n    state = {\r\n        selectedSensors: [],\r\n        dialog: false,\r\n        which: 'none',\r\n        port: '',\r\n        type: '',\r\n        model: '',\r\n        samplingPeriod: '',\r\n        driverFile: '',\r\n        driverFileName: '',\r\n        enabled: []\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.getSensors()\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.sensors !== this.props.sensors) {\r\n            this.setState({...this.state, enabled: [...nextProps.sensors.filter(s => s.enabled === true)]})\r\n        }\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedSensors.length === this.props.sensors.length) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...this.props.sensors]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectSensor = (row) => {\r\n        if(this.state.selectedSensors.filter(t => t.model === row.model && t.type === row.type).length === 0) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...this.state.selectedSensors, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...this.state.selectedSensors.filter(t => t.model !== row.model)]\r\n            })\r\n        }\r\n    }\r\n\r\n    addSensor = () => {\r\n        this.setState({ ...this.state, dialog: true, which: 'add'})\r\n    }\r\n\r\n    editSensor = () => {\r\n        this.setState({ ...this.state, dialog: true, which: 'edit', port: this.state.selectedSensors[0].port, type: this.state.selectedSensors[0].type, model: this.state.selectedSensors[0].model, samplingPeriod: this.state.selectedSensors[0].samplingPeriod})\r\n    }\r\n\r\n    removeSensor = () => {\r\n        this.props.removeSensor(this.state.selectedSensors)\r\n    }\r\n\r\n    enable = (row) => {\r\n        if(this.state.enabled.filter(t => t.model === row.model && t.type === row.type).length === 0) {\r\n            this.props.enableSensor(row.type, row.model)\r\n            this.setState({...this.state, enabled: [...this.state.enabled, row]})\r\n        } else {\r\n            this.props.disableSensor(row.type, row.model)\r\n            this.setState({...this.state, enabled: this.state.enabled.filter(e => e !== row)})\r\n        }\r\n        \r\n    }\r\n\r\n    handleClose = () => {\r\n        if(this.state.which === 'edit') {\r\n            this.props.softRemoveSensor(this.state.selectedSensors)\r\n            this.props.addSensor(this.state.port, this.state.type, this.state.model, this.state.samplingPeriod)\r\n            //this.props.addDriverFile(this.state.driverFile)   \r\n        } else {\r\n            this.props.addSensor(this.state.port, this.state.type, this.state.model, this.state.samplingPeriod)\r\n            //this.props.addDriverFile(this.state.driverFile)\r\n        }\r\n            \r\n        \r\n        this.setState({ ...this.state, dialog: false, which: 'none' });\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ ...this.state, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    \r\n    handleSelectedFile = e => {\r\n        this.setState({\r\n            ...this.state,\r\n            driverFile: e.target.files[0],\r\n            driverFileName: e.target.files[0].name\r\n        })\r\n    }\r\n\r\n    render() {console.log(this.state)\r\n        const { classes, sensors } = this.props\r\n\r\n        return (\r\n            <Grid container direction='column' className={classes.root}>\r\n                <Grid item style={{textAlign: 'end'}}>\r\n                    <Button color='primary' variant='contained' className={classes.buttons} onClick={() => this.addSensor()}>Add New</Button>\r\n                    {this.state.selectedSensors.length > 1 ?\r\n                        <Tooltip title='Cannot edit multiple sensors at once. Please choose a single sensor to edit.'>\r\n                            <span><Button color='primary' variant='contained' className={classes.buttons} disabled>Edit</Button></span>\r\n                        </Tooltip> :\r\n                        <Button color='primary' variant='contained' disabled={this.state.selectedSensors.length !== 1} className={classes.buttons} onClick={() => this.editSensor()}>Edit</Button>\r\n                    }\r\n                </Grid>\r\n                <Grid item>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell\r\n                            onClick={() => this.selectAll()}\r\n                            style={{cursor: 'pointer'}}\r\n                        >{sensors && sensors.length > 1 && \r\n                            <Checkbox \r\n                                checked={this.state.selectedSensors.length === this.props.sensors.length}\r\n                                color='primary'\r\n                            />}\r\n                                </TableCell>\r\n                        <TableCell >Port #</TableCell>\r\n                        <TableCell >Sensor Type</TableCell>\r\n                        <TableCell >Model #</TableCell>\r\n                        <TableCell >Sampling Period</TableCell>\r\n                        <TableCell >Enable</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {sensors.map(row => (\r\n                        <TableRow key={row.port+row.type+row.model}\r\n                            style={{cursor: 'pointer'}}\r\n                        >\r\n                            <TableCell>\r\n                                <Checkbox \r\n                                    onClick={() => this.selectSensor(row)}\r\n                                    checked={this.state.selectedSensors.filter(t => t.model === row.model && t.type === row.type).length !== 0}\r\n                                    color='primary'\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell >{row.port}</TableCell>\r\n                            <TableCell >{row.type}</TableCell>\r\n                            <TableCell >{row.model}</TableCell>\r\n                            <TableCell >{row.samplingPeriod}</TableCell>\r\n                            <TableCell>\r\n                                <Checkbox \r\n                                    checked={this.state.enabled.filter(t => t.model === row.model && t.type === row.type).length !== 0}\r\n                                    onClick={() => this.enable(row)}\r\n                                    color='primary'\r\n                                />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>{this.props.sensors.length > 0 &&\r\n                <Grid item style={{textAlign: 'end'}}>\r\n                    <Button color='primary' variant='contained' disabled={this.state.selectedSensors.length === 0} className={classes.buttons} onClick={() => this.removeSensor()}>Remove</Button>\r\n                </Grid>}\r\n                </Grid>\r\n                <Dialog\r\n                    open={this.state.dialog}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">{this.state.which === 'add' ? 'Add Sensor' : 'Edit Sensor'}</DialogTitle>\r\n                    <DialogContent>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl} fullWidth margin='dense'>\r\n                            <InputLabel htmlFor=\"port\">\r\n                                Port #\r\n                            </InputLabel>\r\n                            <Select\r\n                                value={this.state.port}\r\n                                onChange={this.handleChange}\r\n                                autoWidth\r\n                                input={<OutlinedInput labelWidth={50} name=\"port\" id=\"port\" />}\r\n                            >\r\n                                <MenuItem value={'ADC48CH0'}>ADC48CH0 (Address: 0x48; Channel: 0)</MenuItem>\r\n                                <MenuItem value={'ADC48CH1'}>ADC48CH1 (Address: 0x48; Channel: 1)</MenuItem>\r\n                                <MenuItem value={'ADC48CH2'}>ADC48CH2 (Address: 0x48; Channel: 2)</MenuItem>\r\n                                <MenuItem value={'ADC48CH3'}>ADC48CH3 (Address: 0x48; Channel: 3)</MenuItem>\r\n                                <MenuItem value={'ADC49CH0'}>ADC49CH0 (Address: 0x49; Channel: 0)</MenuItem>\r\n                                <MenuItem value={'ADC49CH1'}>ADC49CH1 (Address: 0x49; Channel: 1)</MenuItem>\r\n                                <MenuItem value={'ADC49CH2'}>ADC49CH2 (Address: 0x49; Channel: 2)</MenuItem>\r\n                                <MenuItem value={'ADC49CH3'}>ADC49CH3 (Address: 0x49; Channel: 3)</MenuItem>\r\n                                <MenuItem value={'Modbus RTU'}>Modbus RTU</MenuItem>\r\n                                <MenuItem value={'GPIO11'}>GPIO11 (Pin 11)</MenuItem>\r\n                                <MenuItem value={'GPIO13'}>GPIO13 (Pin 13)</MenuItem>\r\n                                <MenuItem value={'GPIO15'}>GPIO15 (Pin 15)</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl} fullWidth margin='dense'>\r\n                            <InputLabel htmlFor=\"type\">\r\n                                Sensor Type\r\n                            </InputLabel>\r\n                            <Select\r\n                                value={this.state.type}\r\n                                onChange={this.handleChange}\r\n                                autoWidth\r\n                                input={<OutlinedInput labelWidth={100} name=\"type\" id=\"type\" />}\r\n                            >\r\n                                <MenuItem value={'wind'}>Wind Sensor</MenuItem>\r\n                                <MenuItem value={'snow'}>Snow Sensor</MenuItem>\r\n                                <MenuItem value={'flood'}>Flood Sensor</MenuItem>\r\n                                <MenuItem value={'rain'}>Rain Sensor</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField\r\n                            fullWidth\r\n                            id='model'\r\n                            name='model'\r\n                            label='Model #'\r\n                            value={this.state.model}\r\n                            onChange={this.handleChange}\r\n                            margin=\"dense\"\r\n                            variant='outlined'\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id='samplingPeriod'\r\n                            name='samplingPeriod'\r\n                            label='samplingPeriod'\r\n                            value={this.state.samplingPeriod}\r\n                            onChange={this.handleChange}\r\n                            margin=\"dense\"\r\n                            variant='outlined'\r\n                        />\r\n                        <div style={{display: 'flex', alignItems: 'baseline'}}>\r\n                        <TextField\r\n                            id=\"driverFile\"\r\n                            label=\"Driver File\"\r\n                            helperText=\"Upload Sensor Driver File\"\r\n                            name='driverFile'\r\n                            value={this.state.driverFileName}\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        />\r\n                        <input\r\n                            accept=\"*\"\r\n                            style={{ display: 'none'}}\r\n                            id=\"contained-button-file\"\r\n                            type=\"file\"\r\n                            onChange={this.handleSelectedFile}\r\n                        />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\" style={{margin: 5}}>\r\n                                Browse\r\n                            </Button>\r\n                        </label>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant='contained' onClick={this.handleClose} color=\"primary\">\r\n                            {this.state.which === 'add' ? 'Add Sensor' : 'Save'}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Grid>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { sensors } = state.app\r\n\r\n    return {\r\n        sensors,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getSensors: () => {\r\n        dispatch({type: 'GET_SENSORS_REQUEST'})\r\n        appService.getSensors()\r\n            .then(json => {\r\n                dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_SENSORS_FAILURE'})\r\n            })        \r\n    },\r\n    addSensor: (port, type, model, samplingPeriod) => {\r\n        dispatch({type: 'ADD_SENSOR_REQUEST'})\r\n        appService.addSensor(port, type, model, samplingPeriod)\r\n            .then(json => {\r\n                dispatch({type: 'ADD_SENSORS_SUCCESS'})\r\n                dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                appService.getSensors()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                    }) \r\n            }, error => {\r\n                dispatch({type: 'ADD_SENSORS_FAILURE'})\r\n            })\r\n    },\r\n    removeSensor: (selectedSensors) => {\r\n        selectedSensors.map(s => {\r\n            dispatch({type: 'REMOVE_SENSOR_REQUEST'})\r\n            appService.removeSensor(s.model, s.type)\r\n                .then(json => {\r\n                    dispatch({type: 'REMOVE_SENSOR_SUCCESS'})\r\n                    dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                    appService.getSensors()\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                        })\r\n                }, error => {\r\n                    dispatch({type: 'REMOVE_SENSOR_FAILURE'})\r\n                })\r\n        })\r\n        \r\n    },\r\n    softRemoveSensor: (selectedSensors) => {\r\n        selectedSensors.map(s => {\r\n            dispatch({type: 'REMOVE_SENSOR_REQUEST'})\r\n            appService.removeSensor(s.model, s.type)\r\n                .then(json => {\r\n                    dispatch({type: 'REMOVE_SENSOR_SUCCESS'})\r\n                }, error => {\r\n                    dispatch({type: 'REMOVE_SENSOR_FAILURE'})\r\n                })\r\n        })\r\n    },\r\n    enableSensor: (type, model) => {\r\n        dispatch({type: 'ENABLE_SENSOR_REQUEST'})\r\n        appService.enableSensor(type, model)\r\n            .then(json => {\r\n                dispatch({type: 'ENABLE_SENSOR_SUCCESS'})\r\n                dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                appService.getSensors()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                    }) \r\n            }, error => {\r\n                dispatch({type: 'ENABLE_SENSOR_FAILURE'})\r\n            })\r\n    },\r\n    disableSensor: (type, model) => {\r\n        dispatch({type: 'DISABLE_SENSOR_REQUEST'})\r\n        appService.disableSensor(type, model)\r\n            .then(json => {\r\n                dispatch({type: 'DISABLE_SENSOR_SUCCESS'})\r\n                dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                appService.getSensors()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                    }) \r\n            }, error => {\r\n                dispatch({type: 'DISABLE_SENSOR_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedSensors = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Sensors))\r\nexport {connectedSensors as Sensors}","import React from 'react';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst styles1 = theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n  const { classes, className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={[classes[variant], className]}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={[classes.icon, classes.iconVariant]} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          className={classes.close}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nexport const SnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);","import React from 'react';\r\nimport { NavBar } from '../NavBar/NavBar'\r\nimport {Dashboard} from '../Dashboard/Dashboard'\r\nimport { RowController }  from '../RowController/RowController'\r\nimport { ZoneController } from '../ZoneController/ZoneController'\r\nimport { Sensors } from '../Sensors/Sensors'\r\nimport { About } from '../About/About'\r\nimport { connect } from 'react-redux'\r\nimport { appService } from './app.services';\r\nimport { Snackbar, DialogActions, DialogTitle, Dialog, DialogContent, Button, DialogContentText, Slide } from '@material-ui/core';\r\nimport { SnackbarContentWrapper } from '../util/SnackbarContentWrapper';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { store } from '../util/store'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%'\r\n    },\r\n    topCenter: {\r\n        top: 75\r\n    }\r\n})\r\n\r\nconst Initializing = () => <div style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>INITIALIZING...</div>\r\n\r\nclass App extends React.Component {\r\n    queue = [];\r\n    timer = null\r\n\r\n    state = {\r\n        open: false,\r\n        alert: null,\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.props.init()\r\n        this.getTime()\r\n        const io = socketIOClient(`http://${window.location.hostname}:8080`);\r\n        io.on('connect', () => {\r\n            console.log('connected')\r\n        })\r\n        io.on('ui/rover/scan', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/scan', json)\r\n        })\r\n        io.on('ui/rover/spa', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/spa', json)\r\n        })\r\n        io.on('ui/rover/stowangles', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/stowangles', json)\r\n        })\r\n        io.on('ui/rover/response', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/response', json)\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.alert !== null && (nextProps.alert !== this.props.alert)) {\r\n            this.queue.push(nextProps.alert);\r\n        \r\n            if (this.state.open) {\r\n                this.setState({ open: false });\r\n            } else {\r\n                this.processQueue();\r\n            }    \r\n        }\r\n    }\r\n\r\n    processQueue = () => {\r\n        if (this.queue.length > 0) {\r\n            this.setState({\r\n                alert: this.queue.shift(),\r\n                open: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n        return;\r\n        }\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleExited = () => {\r\n        this.processQueue();\r\n    };\r\n\r\n    \r\n    getTime = (continueInterval = true) => {\r\n        this.props.getTime()\r\n        if(continueInterval) {\r\n            this.timer = setTimeout(this.getTime, 60000)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timer)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return ( \r\n                <div className={classes.root}>\r\n                    <NavBar>\r\n                    {\r\n                        this.props.currentPage === 'Dashboard' ? <Dashboard /> :\r\n                        this.props.currentPage === 'Row Controller' ? <RowController /> :\r\n                        this.props.currentPage === 'Zone Controller' ? <ZoneController /> :\r\n                        this.props.currentPage === 'Sensors' ? <Sensors /> : \r\n                        this.props.currentPage === 'About' ? <About /> : <Initializing />\r\n                    }\r\n                    </NavBar>\r\n                    <Snackbar\r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'center',\r\n                        }}\r\n                        open={this.state.open}\r\n                        //autoHideDuration={3000}\r\n                        onClose={this.handleClose}\r\n                        onExited={this.handleExited}\r\n                        classes={{anchorOriginTopCenter: classes.topCenter}}\r\n                    >\r\n                        <SnackbarContentWrapper\r\n                            onClose={this.handleClose}\r\n                            variant={this.state.alert === null ? 'info' : this.state.alert.type}\r\n                            message={this.state.alert === null ? '' : this.state.alert.message}\r\n                        />\r\n                    </Snackbar>\r\n                    {/* <Dialog\r\n                        open={this.state.open}\r\n                        onClose={this.handleClose}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                        style={{ minWidth: 300 }}\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\" style={{color:'white', background: this.state.alert !== null ? this.state.alert.type==='success' ? 'green' : this.state.alert.type === 'warning' ? 'orange' : 'red' : 'blue'}}>{this.state.alert === null ? 'info' : this.state.alert.type}</DialogTitle>\r\n                        <DialogContent style={{color:'white', background: this.state.alert !== null ? this.state.alert.type==='success' ? 'green' : this.state.alert.type === 'warning' ? 'orange' : 'red' : 'blue'}}>\r\n                        <DialogContentText id=\"alert-dialog-description\" style={{color:'white'}}>\r\n                            {this.state.alert === null ? '' : this.state.alert.message}\r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions style={{color:'white', background: this.state.alert !== null ? this.state.alert.type==='success' ? 'green' : this.state.alert.type === 'warning' ? 'orange' : 'red' : 'blue'}}>\r\n                        <Button onClick={this.handleClose} color=\"primary\" variant='contained'>\r\n                            Close\r\n                        </Button>\r\n                        </DialogActions>\r\n                    </Dialog> */}\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentPage, alert, timeZone } = state.app\r\n\r\n    return {\r\n        currentPage,\r\n        alert,\r\n        timeZone\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    init: () => {\r\n        dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n        appService.getCommissioningData()\r\n            .then(json => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n            })\r\n        \r\n        dispatch({type: 'GET_TIMEZONE_REQUEST'})\r\n        appService.getTimeZone()\r\n            .then(json => {\r\n                if(json.timeZone === null) {\r\n                    dispatch({type: 'SET_TIMEZONE_REQUEST'})\r\n                    appService.setTimeZone(store.getState().app.timeZone)\r\n                        .then(json => {\r\n                            dispatch({type: 'SET_TIMEZONE_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'SET_TIMEZONE_FAILURE'})\r\n                        })\r\n                }\r\n                dispatch({type: 'GET_TIMEZONE_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_TIMEZONE_FAILURE', error})\r\n            })\r\n    },\r\n    getTime: () => {\r\n        dispatch({type: 'GET_TIME_REQUEST'})\r\n        appService.getTime()\r\n            .then(json => {\r\n                dispatch({type: 'GET_TIME_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_TIME_FAILURE', error})\r\n            })\r\n    },\r\n    clearAlert : () => {\r\n        dispatch({type: 'CLEAR_ALERT'})\r\n    },\r\n    received: (topic, json) => {\r\n        dispatch({type: topic, json})\r\n    }\r\n})\r\n\r\n\r\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(App))\r\nexport {connectedApp as App}","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { store } from './util/store';\r\nimport { App } from './App';\r\nimport './index.css'\r\n\r\n/* const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#54AAB3\",\r\n        contrastText: '#fff'\r\n      }\r\n    },\r\n    overrides: {\r\n      MuiIconButton: {\r\n          root: {\r\n            color: 'white'\r\n          },\r\n      }\r\n    } \r\n  }); */\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#54AAB3',\r\n        dark: '#3c8f98',\r\n        contrastText: '#ffffff'\r\n      },\r\n      secondary: {\r\n        main: '#ffffff',\r\n        contrastText: '#000000'\r\n      }\r\n    }/* ,\r\n    overrides: {\r\n      MuiListItem: {\r\n        root: {\r\n          backgroundColor: '#ffffff',\r\n          '&$selected': {\r\n            backgroundColor: '#54AAB3',\r\n            color: '#ffffff'\r\n          },\r\n          '&$selected:hover': {\r\n            backgroundColor: '#3c8f98',\r\n            color: '#ffffff'\r\n          }\r\n        },\r\n      },\r\n    } */\r\n  });\r\n\r\nrender(\r\n    <MuiThemeProvider theme={theme}>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </MuiThemeProvider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}