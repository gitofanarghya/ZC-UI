{"version":3,"sources":["App/app.reducer.js","util/rootReducer.js","util/store.js","NavBar/NavBar.js","Dashboard/TrackerList.js","App/app.services.js","Dashboard/TrackerDetails.js","Dashboard/Dashboard.js","RowController/SPAParameters.js","RowController/StowAngles.js","RowController/EditRowController.js","RowController/_EditRowController.js","RowController/ControlRowController.js","RowController/RowControllerTab.js","RowController/ScanTab.js","RowController/RowController.js","ZoneController/ZoneController.js","Sensors/Sensors.js","util/SnackbarContentWrapper.js","App/App.jsx","index.js"],"names":["initialState","currentPage","currentTab","currentEditTab","timeZone","Intl","DateTimeFormat","resolvedOptions","alert","time","Date","now","commissioningData","fetchingCommissioningData","currentTracker","currentTrackerInfo","xbeeResponse","controlledTrackers","editedTrackers","SPAParameters","stowAngles","sendingSPAParameters","sendingStowAngles","gettingSPAParameters","gettingStowAngles","addingTrackers","sensors","responseQueue","listen","difference","a1","a2","result","i","length","indexOf","push","rootReducer","combineReducers","app","state","action","type","Object","objectSpread","json","trackerID","concat","toConsumableArray","Result","message","page","commandQueue","value","staticData","a","filter","r","DID","deviceID","newXbeeResponse","devices","trackers","newSPAParameters","defineProperty","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ResponsiveDrawer","mobileOpen","handleDrawerToggle","_this","setState","_this2","this","_this$props","props","classes","theme","children","drawer","react_default","createElement","className","toolbar","src","height","width","alt","Divider","List","map","text","index","ListItem","button","key","onClick","changePage","selected","ListItemIcon","MoveToInbox_default","Mail_default","ListItemText","disableTypography","primary","root","CssBaseline","AppBar","position","color","appBar","Toolbar","IconButton","aria-label","menuButton","Menu_default","Typography","variant","noWrap","Hidden","mdUp","implementation","Drawer","container","anchor","direction","open","onClose","paper","drawerPaper","smDown","content","React","Component","connectedNavBar","connect","_state$app","dispatch","withStyles","display","breakpoints","up","flexShrink","marginLeft","marginRight","mixins","flexGrow","padding","spacing","paddingTop","backgroundColor","withTheme","TrackerList","react","Grid","Table","TableHead","TableRow","TableCell","TableBody","n","hover","setCurrentTracker","style","cursor","connectedTrackerList","appService","setWifiInfo","ssid","pass","requestOptions","method","mode","body","JSON","stringify","password","fetch","hostName","then","handleResponse","uploadDriver","file","model","data","FormData","append","selectSensor","windSensor","rainSensor","floodSensor","snowSensor","uploadKey","setWindAddress","address","deviceAddress","getWindAddress","caliberate","sensor","sendCommand","CMD","VALUES","sendStow","MODE","getCommissioningData","getCurrentTrackerInfo","triggerDiscovery","hostName2","setPanID","panID","console","log","threshold","maxWindSpeed","maxRainFall","meanWindSpeed","windSpeedTimer","maxFloodLevel","maxSnowFall","heartBeat","enabled","hbinterval","maxMsgs","interval","setTimeZone","getHeartBeat","getThreshold","getPanID","getFrequency","setFrequency","power","status","powerRequestTimePeriod","statusRequestTimePeriod","getTimeZone","getTime","discover","did","addTrackers","removeTrackers","DIDs","sendSPAParameters","Lattitude","Longitude","Altitude","EastLimit","WestLimit","TrackerWidth","Pitch","TrackingAccuracy","AzimuthDeviation","AltitudeTrackeronEast","AltitudeTrackeronWest","StartTimeLead","EndTimeLag","backtracking","sendStowAngles","WindStowAngle","SnowStowAngle","CleanStowAngle","NightStowAngle","EmergencyStowAngle","getSPAParameters","getStowAngles","getSensors","addSensor","port","samplingPeriod","removeSensor","enableSensor","disableSensor","window","location","hostname","response","ok","error","statusText","Promise","reject","NoCurrentTrackerInfo","alignItems","justifyContent","TrackerDetails","timer","componentDidMount","refresh","componentWillReceiveProps","nextProps","c","arguments","undefined","setTimeout","TrackerDetails_NoCurrentTrackerInfo","currentAngle","marginTop","textAlign","overflow","macID","currentMode","timeStamp","toLocaleDateString","toLocaleTimeString","hour12","connectedTrackerDetails","flexWrap","Initializing","flexDirection","margin","Button","scan","Fetching","Dashboard","Dashboard_Fetching","Dashboard_Initializing","item","trackerList","Paper","trackerDetails","connectedDashboard","minHeight","TrackingLimitEast","TrackingLimitWest","RowWidth","RowPitch","TrackingResolution","AltitudeofTrackerontheEast","AltitudeofTrackerontheWest","EarlyStartMinutes","LateFinishMinutes","LattitudeError","LongitudeError","AltitudeError","TrackingLimitEastError","TrackingLimitWestError","RowWidthError","RowPitchError","TrackingResolutionError","AzimuthDeviationError","AltitudeofTrackerontheEastError","AltitudeofTrackerontheWestError","EarlyStartMinutesError","LateFinishMinutesError","backTracking","submit","values","split","handleChange","event","_objectSpread2","target","name","handleBlur","e","p","RegExp","test","_objectSpread4","Number","min","max","_objectSpread5","_objectSpread6","_objectSpread3","_this$state","fieldGrid","adornment","TextField","field","id","replace","label","onChange","InputLabelProps","shrink","disabled","InputProps","endAdornment","InputAdornment","helperText","onBlur","FormControlLabel","control","Checkbox","checked","connectedSPAParameters","t","StowAngles","_objectSpread7","connectedStowAngles","EditRowController","changeTab","header","back","ArrowBack_default","fontSize","disableGutters","Chip","rowNumber","chip","request","success","tabs","Tabs","indicator","tabsIndicator","Tab","connectedEditRowController","palette","background","fontWeight","boxShadow","green","red","handleChangeSPA","_objectSpread8","_this$state2","borderBottom","paddingLeft","ControlRowController","typeOfStow","auto","handleClick","anchorEl","currentTarget","handleClose","autoToggle","second","aria-owns","aria-haspopup","minWidth","paddingRight","ExpandMore_default","Menu_Menu","Boolean","MenuItem","labelPlacement","Switch","connectedControlRowController","RowControllerTab","selectedTrackers","selectAll","selectRow","row","editTracker","setEditedTrackers","controlTracker","setControlledTrackers","s","_EditRowController_connectedEditRowController","buttons","table","connectedRowControllerTab","overflowX","marginBottom","ScanTab","scanSelection","inputChange","scanParameter","FormControl","component","formControl","RadioGroup","Radio","textField","placeholder","verticalAlign","res","connectedScanTab","RowController","connectedRowController","ZoneController","xs","justify","grid2","staticIP","saveButton","bqKey","floodLevelTimer","maxSnowLevel","snowLevelTimer","maxRainLevel","rainLevelTimer","syncTime","connectedZoneController","alignSelf","down","Sensors","selectedSensors","dialog","which","driverFile","driverFileName","editSensor","enable","softRemoveSensor","handleSelectedFile","files","Tooltip","title","Dialog","aria-labelledby","DialogTitle","DialogContent","fullWidth","InputLabel","htmlFor","Select","autoWidth","input","OutlinedInput","labelWidth","accept","DialogActions","connectedSensors","variantIcon","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","SnackbarContentWrapper","dark","amber","icon","iconVariant","opacity","other","objectWithoutProperties","Icon","SnackbarContent","assign","aria-describedby","close","Close_default","App","queue","init","io","socketIOClient","on","parse","received","processQueue","shift","reason","handleExited","About","App_Initializing","Snackbar","anchorOrigin","vertical","horizontal","onExited","anchorOriginTopCenter","topCenter","connectedApp","getState","clearAlert","topic","top","createMuiTheme","main","contrastText","secondary","render","MuiThemeProvider","es","document","getElementById"],"mappings":"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","file":"static/js/main.315b44ff.chunk.js","sourcesContent":["const initialState = {\r\n    currentPage: '',\r\n    currentTab: 0,\r\n    currentEditTab: 0,\r\n    timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n    alert: null,\r\n    time: Date.now(),\r\n    commissioningData: null,\r\n    fetchingCommissioningData: false,\r\n    currentTracker: null,\r\n    currentTrackerInfo: null,\r\n    xbeeResponse: [],\r\n    controlledTrackers: [],\r\n    editedTrackers: [],\r\n    SPAParameters: null,\r\n    stowAngles: null,\r\n    sendingSPAParameters: false,\r\n    sendingStowAngles: false,\r\n    gettingSPAParameters: false,\r\n    gettingStowAngles: false,\r\n    addingTrackers: false,\r\n    sensors: [],\r\n    responseQueue: [],\r\n    listen: false\r\n}\r\n\r\nconst difference = (a1, a2) => {\r\n    var result = [];\r\n    for (var i = 0; i < a1.length; i++) {\r\n    if (a2.indexOf(a1[i]) === -1) {\r\n        result.push(a1[i]);\r\n    }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function app(state, action) {\r\n    if (typeof state === 'undefined') {\r\n      return initialState\r\n    }\r\n    switch (action.type) {\r\n        case 'time':\r\n        return {\r\n            ...state,\r\n            time: action.json.time\r\n        }\r\n\r\n        case 'SET_CURRENT_TRACKER':\r\n        return {\r\n            ...state,\r\n            currentTracker: action.trackerID\r\n        }\r\n\r\n        case 'SET_RESPONSE_LISTENER':\r\n        return {\r\n            ...state,\r\n            listen: true\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: true,\r\n            responseQueue: []\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_REQUEST':\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: true,\r\n            responseQueue: []\r\n        }\r\n\r\n        case 'ui/rover/response':\r\n        if(state.listen) {\r\n            if(state.editedTrackers.length === state.responseQueue.length + 1) {\r\n                return {\r\n                    ...state,\r\n                    responseQueue: [...state.responseQueue, action.json],\r\n                    listen: false\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                responseQueue: [...state.responseQueue, action.json]\r\n            }\r\n        }\r\n        \r\n\r\n        case 'GET_SENSORS_SUCCESS':\r\n        return {\r\n            ...state,\r\n            sensors: action.json.Result\r\n        }\r\n\r\n        case 'REMOVE_SENSOR_SUCCESS':\r\n        return {\r\n            ...state,\r\n            alert: {\r\n                type: 'success',\r\n                message: 'Removed Sensor Successfully'\r\n            }\r\n        }\r\n\r\n        case 'ADD_SENSORS_SUCCESS':\r\n        return {\r\n            ...state,\r\n            alert: {\r\n                type: 'success',\r\n                message: 'Added Sensor Successfully'\r\n            }\r\n        }\r\n        \r\n        case 'CHANGE_PAGE':\r\n        return {\r\n            ...state,\r\n            currentPage: action.page,\r\n            responseQueue: [],\r\n            commandQueue: []\r\n        }\r\n\r\n        case 'CHANGE_TAB':\r\n        return {\r\n            ...state,\r\n            currentTab: action.value.value,\r\n            responseQueue: [],\r\n            commandQueue: []\r\n        }\r\n\r\n        \r\n        case 'CHANGE_EDIT_TAB':\r\n        return {\r\n            ...state,\r\n            currentEditTab: action.value.value,\r\n            responseQueue: [],\r\n            commandQueue: []\r\n        }\r\n\r\n        case 'CLEAR_ALERT':\r\n        return {\r\n            ...state,\r\n            alert: null           \r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_REQUEST':\r\n        return {\r\n            ...state,\r\n            fetchingCommissioningData: true\r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_SUCCESS':\r\n        if(action.json.staticData === null || action.json.staticData.length === 0) {\r\n            return {\r\n                ...state,\r\n                fetchingCommissioningData: false,\r\n                currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,\r\n                commissioningData: null,\r\n                alert: {\r\n                    type: 'warning',\r\n                    message: 'Please add trackers'\r\n                }\r\n            }\r\n        } else {\r\n            return {\r\n                ...state,\r\n                fetchingCommissioningData: false,\r\n                currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,\r\n                commissioningData: action.json.staticData,\r\n                currentTracker: action.json.staticData[0].trackerID\r\n            }\r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_FAILURE':\r\n        return {\r\n            ...state,\r\n            fetchingCommissioningData: false,\r\n            currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error loading commissioning data'\r\n            }\r\n        }\r\n\r\n        case 'GET_TIMEZONE_SUCCESS':\r\n        if(action.json.timeZone !== null) {\r\n            return {\r\n                ...state,\r\n                timeZone: action.json.timeZone\r\n            }\r\n        } else {\r\n            return state\r\n        }\r\n\r\n        case 'GET_TIMEZONE_FAILURE':\r\n        return {\r\n            ...state,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting timezone'\r\n            }\r\n        }\r\n\r\n        case 'SCAN':\r\n        return {\r\n            ...state,\r\n            currentPage: 'Row Controller',\r\n            currentTab: 1\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_REQUEST':\r\n        return {\r\n            ...state\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_SUCCESS':\r\n        return {\r\n            ...state,\r\n            currentTrackerInfo: action.json\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_FAILURE':\r\n        return {\r\n            ...state,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting current tracker info'\r\n            }\r\n        }\r\n\r\n        case 'DISCOVER_SUCCESS':\r\n        return {\r\n            ...state,\r\n            xbeeResponse: [],\r\n            alert: {\r\n                type: 'success',\r\n                message: 'Started Scanning'\r\n            }\r\n        }\r\n\r\n        case 'DISCOVER_FAILURE':\r\n        return {\r\n            ...state,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error starting scan'\r\n            }\r\n        }\r\n\r\n        case 'ui/rover/scan':\r\n        let a = null\r\n        if(state.commissioningData === null) {\r\n            a = [...state.xbeeResponse, action.json]\r\n        } else {\r\n            let b = state.commissioningData.filter(r => action.json.DID === r.deviceID)\r\n            if(b.length === 0) {\r\n                a = [...state.xbeeResponse, action.json]\r\n            } else {\r\n                a = [...state.xbeeResponse]\r\n            }\r\n                \r\n        }\r\n        return {\r\n            ...state,\r\n            xbeeResponse: a\r\n        }\r\n\r\n        case 'ADD_TRACKERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            addingTrackers: true\r\n        }\r\n\r\n        case 'ADD_TRACKERS_SUCCESS':\r\n        const newXbeeResponse = difference(state.xbeeResponse, action.devices)\r\n        return {\r\n            ...state,\r\n            xbeeResponse: newXbeeResponse,\r\n            addingTrackers: false,\r\n            alert: {\r\n                type: 'success',\r\n                message: 'Tracker(s) added'\r\n            }\r\n        }\r\n\r\n        case 'ADD_TRACKERS_FAILURE':\r\n        return {\r\n            ...state,\r\n            addingTrackers: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error adding trackers'\r\n            }\r\n        }\r\n\r\n        case 'SET_EDITED_TRACKERS':\r\n        return {\r\n            ...state,\r\n            editedTrackers: action.trackers\r\n        }\r\n\r\n        case 'SET_CONTROLLED_TRACKERS':\r\n        return {\r\n            ...state,\r\n            controlledTrackers: action.trackers\r\n        }\r\n\r\n        case 'ui/rover/spa':\r\n        let DID = action.json.DID\r\n        let newSPAParameters = {...state.SPAParameters, [DID]: action.json}\r\n        return {\r\n            ...state,\r\n            SPAParameters: newSPAParameters,\r\n            gettingSPAParameters: false\r\n        }\r\n\r\n        case 'ui/rover/stowangles':\r\n        return {\r\n            ...state,\r\n            stowAngles: action.json,\r\n            gettingStowAngles: false\r\n        }\r\n\r\n        case 'GET_STOW_ANGLES_REQUEST':\r\n        return {\r\n            ...state,\r\n            gettingStowAngles: true\r\n        }\r\n\r\n        case 'GET_STOW_ANGLES_FAILURE':\r\n        return {\r\n            ...state,\r\n            gettingStowAngles: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting stow angles'\r\n            }\r\n        }\r\n\r\n        case 'GET_SPA_PARAMETERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            gettingSPAParameters: true\r\n        }\r\n\r\n        case 'GET_SPA_PARAMETERS_FAILURE':\r\n        return {\r\n            ...state,\r\n            gettingSPAParameters: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting SPA parameters'\r\n            }\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_FAILURE':\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error setting SPA parameters'\r\n            }\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_SUCCESS':\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: false\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_FAILURE':\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error setting stow angles'\r\n            }\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_SUCCESS':\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: false\r\n        }\r\n\r\n        default:\r\n        return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport { app } from '../App/app.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  app\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n        loggerMiddleware        \r\n    )\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport Time from '@material-ui/icons/AccessTime';\r\nimport { Chip } from '@material-ui/core';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100%'\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('md')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    marginLeft: drawerWidth,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: 20,\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    paddingTop: 88\r\n  },\r\n  selected: {\r\n    backgroundColor: '#54AAB3 !important',\r\n    color: '#ffffff !important'\r\n  }\r\n});\r\n\r\nclass ResponsiveDrawer extends React.Component {\r\n  state = {\r\n    mobileOpen: false,\r\n  };\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme, children } = this.props;\r\n\r\n    const drawer = (\r\n      <div>\r\n        <div className={classes.toolbar} >\r\n            <img src='img/Voyager logo - large- no bg.png' height='60px' width='70%' alt=''></img>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Dashboard', 'Row Controller', 'Zone Controller', 'Sensors', 'About'].map((text, index) => (\r\n            <ListItem \r\n                button \r\n                key={text}\r\n                onClick={() => this.props.changePage(text)}\r\n                selected={this.props.currentPage === text}\r\n                classes={{selected: classes.selected}}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText disableTypography primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" color='primary' className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h5\" color=\"inherit\" noWrap>\r\n              Voyager Zone Controller\r\n            </Typography>\r\n            {/* <Chip\r\n              icon={<Time />}\r\n              style={{marginLeft: 'auto', backgroundColor: 'white'}}\r\n              label={`${new Date(new Date(Number(this.props.time)).toLocaleString('en-US', {timeZone:  this.props.timeZone})).getHours()} : ${new Date(new Date(Number(this.props.time)).toLocaleString('en-US', {timeZone:  this.props.timeZone})).getMinutes()}`}\r\n            /> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav className={classes.drawer}>\r\n          <Hidden mdUp implementation=\"css\">\r\n            <Drawer\r\n              container={this.props.container}\r\n              variant=\"temporary\"\r\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n              open={this.state.mobileOpen}\r\n              onClose={this.handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden smDown implementation=\"css\">\r\n            <Drawer\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n        </nav>\r\n        <main className={classes.content}>\r\n          {children}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\n \r\nfunction mapStateToProps(state) {\r\n    const { currentPage, time, timeZone } = state.app;\r\n    \r\n    return {\r\n        currentPage,\r\n        time,\r\n        timeZone\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changePage: (page) => {\r\n      dispatch({type: 'CHANGE_PAGE', page})\r\n    }\r\n})\r\n  \r\nconst connectedNavBar = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ResponsiveDrawer));\r\nexport { connectedNavBar as NavBar }","import React, {Fragment} from 'react'\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { connect } from 'react-redux'\r\nimport {withStyles} from '@material-ui/core/styles'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%', width: '100%', padding: 24\r\n    },\r\n    selected: {\r\n        backgroundColor: '#54aab3 !important',\r\n        color: 'white'\r\n    }\r\n})\r\n\r\nclass TrackerList extends React.Component {\r\n\r\n    render() {\r\n        const {classes, commissioningData, currentTracker} = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Typography variant='h5'>\r\n                        Tracker List\r\n                    </Typography>\r\n                    <Table>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell >TrackerID</TableCell>\r\n                            <TableCell >Status</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {commissioningData && commissioningData.map(n => {\r\n                                return (\r\n                                <TableRow\r\n                                    hover\r\n                                    //className={[n.trackerID === currentTracker ? classes.selected : classes.row, classes.tableRow]}\r\n                                    key={n.trackerID}\r\n                                    onClick={() => this.props.setCurrentTracker(n.trackerID)}\r\n                                    style={{cursor: 'pointer'}}\r\n                                    selected={n.trackerID === currentTracker}\r\n                                    classes={{selected: classes.selected}}\r\n                                >\r\n                                    <TableCell>\r\n                                        {n.trackerID}\r\n                                    </TableCell>\r\n                                    <TableCell>Reachable</TableCell>\r\n                                </TableRow>\r\n                                );\r\n                            })}\r\n                            </TableBody>\r\n                        </Table>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData, currentTracker } = state.app\r\n\r\n    return {\r\n        commissioningData,\r\n        currentTracker\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCurrentTracker: (trackerID) => {\r\n        dispatch({type: 'SET_CURRENT_TRACKER', trackerID})\r\n    }\r\n})\r\n\r\n\r\nconst connectedTrackerList = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TrackerList))\r\nexport {connectedTrackerList as TrackerList}","export const appService = {\r\n    setWifiInfo,\r\n    uploadDriver,\r\n    selectSensor,\r\n    uploadKey,\r\n    setWindAddress,\r\n    getWindAddress,\r\n    caliberate,\r\n    sendCommand,\r\n    sendStow,\r\n    getCommissioningData,\r\n    getCurrentTrackerInfo,\r\n    triggerDiscovery,\r\n    setPanID,\r\n    threshold,\r\n    heartBeat,\r\n    setTimeZone,\r\n    getHeartBeat,\r\n    getThreshold,\r\n    getPanID,\r\n    getFrequency,\r\n    setFrequency,\r\n    getTimeZone,\r\n    getTime,\r\n    discover,\r\n    addTrackers,\r\n    removeTrackers,\r\n    sendSPAParameters,\r\n    sendStowAngles,\r\n    getSPAParameters,\r\n    getStowAngles,\r\n    getSensors,\r\n    addSensor,\r\n    removeSensor,\r\n    enableSensor,\r\n    disableSensor\r\n};\r\n/* const hostName = 'http://159.89.169.50:4000'; */\r\nconst hostName = `http://${window.location.hostname}:5000`;\r\n\r\nconst hostName2 = `http://${window.location.hostname}:5001`; \r\n\r\nfunction disableSensor(type, model) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            type: type, \r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/disable`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction enableSensor(type, model) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            type: type, \r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/enable`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction removeSensor(model, type) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            type: type, \r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/remove`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction addSensor(port, type, model, samplingPeriod) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            port: port, \r\n            type: type, \r\n            samplingPeriod: samplingPeriod,\r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/setParams`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getSensors() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        body: null\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/getParams`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getStowAngles(DID) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: 'QSTO'\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/get`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getSPAParameters(DID) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: \"QSPA\"\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/get`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction sendStowAngles(DID, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: 'HSTO',\r\n            VALUES: `${WindStowAngle}, ${SnowStowAngle}, ${CleanStowAngle}, ${NightStowAngle}, ${EmergencyStowAngle}`\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/set`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction sendSPAParameters(DID, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backtracking) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: \"HSPA\",\r\n            VALUES: `${Lattitude}, ${Longitude}, ${Altitude}, ${EastLimit}, ${WestLimit}, ${TrackerWidth}, ${Pitch}, ${TrackingAccuracy}, ${AzimuthDeviation}, ${AltitudeTrackeronEast}, ${AltitudeTrackeronWest}, ${StartTimeLead}, ${EndTimeLag}, 0, ${backtracking}`\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/set`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction removeTrackers(DIDs) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DIDs: DIDs\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/removePairedDevices`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction addTrackers(devices) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            devices: devices\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/addDiscoveredDevices`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction discover(did) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: did\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/scan`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction handleResponse(response) {\r\n    return response.json().then(json => {\r\n        if (!response.ok) {\r\n            const error = (json && json.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return json;\r\n    });\r\n}\r\n\r\n\r\nfunction setWifiInfo(ssid, pass) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"ssid\": ssid,\r\n            \"password\": pass\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/setWifiInfo`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction uploadDriver(file, type, model) {\r\n    var data = new FormData()\r\n    data.append('file', file)\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: data\r\n    };\r\n\r\n    return fetch(`${hostName}/sensors/addDriver?type=${type}&model=${model}`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction uploadKey(file) {\r\n    var data = new FormData()\r\n    data.append('file', file)\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: data\r\n    };\r\n\r\n    return fetch(`${hostName}/loadBigQueryKey`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction selectSensor(windSensor, rainSensor, floodSensor, snowSensor) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"windSensor\": windSensor,\r\n            \"rainSensor\": rainSensor,\r\n            \"floodSensor\": floodSensor,\r\n            \"snowSensor\": snowSensor,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/sensors`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setWindAddress(address) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"deviceAddress\": address,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/windSensorSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getWindAddress() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/windSensorSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction caliberate(sensor) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"sensor\": sensor,\r\n        })\r\n    };\r\n\r\n\r\n    return fetch(`${hostName}/calibrateSensor`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n//control\r\n\r\nfunction sendCommand(deviceID, value) {\r\n\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"DID\": deviceID,\r\n            \"CMD\": \"HMNM\",\r\n            \"VALUES\": value\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/rover/control`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction sendStow(deviceID, mode) {\r\n\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"DID\": deviceID,\r\n            \"CMD\": \"HMOD\",\r\n            \"MODE\": mode\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/rover/control`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n//dashboard\r\n\r\n\r\nfunction getCommissioningData() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/getCommissioningData`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getCurrentTrackerInfo(trackerID) {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/getCurrentTrackerInfo?id=${trackerID}`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction triggerDiscovery() {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"CMD\": \"HINF\",\r\n            \"DID\": \"00000\",\r\n        })\r\n    };\r\n\r\n    return fetch(`http://${hostName2}/sendCommand`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\n//settings\r\n\r\nfunction setPanID(panID) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"panID\": panID\r\n        })\r\n    };\r\n\r\n    console.log(panID);\r\n\r\n    return fetch(`http://${hostName2}/settings/xbeePanID `, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction threshold(maxWindSpeed, maxRainFall, meanWindSpeed, windSpeedTimer, maxFloodLevel, maxSnowFall) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"maxWindSpeed\": maxWindSpeed,\r\n            \"maxRainFall\": maxRainFall,\r\n            \"meanWindSpeed\": meanWindSpeed,\r\n            \"windSpeedTimer\": windSpeedTimer,\r\n            \"maxFloodLevel\": maxFloodLevel,\r\n            \"maxSnowFall\": maxSnowFall,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/threshold`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setFrequency(power, status) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"powerRequestTimePeriod\": power,\r\n            \"statusRequestTimePeriod\": status,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/requestFrequency`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\n\r\nfunction heartBeat(enabled, hbinterval, maxMsgs) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"enabled\": enabled,\r\n            \"interval\": hbinterval,\r\n            \"maxMsgs\": maxMsgs,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/heartBeatSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setTimeZone(time) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"timeZone\": time,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/timeZone`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getTimeZone() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/timeZone`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getTime() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/time`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getThreshold() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/threshold`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getFrequency() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/requestFrequency`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getHeartBeat() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/heartBeatSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getPanID() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`http://${hostName2}/gettings/xbeePanID`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n","import React from 'react'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { connect } from 'react-redux'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%', width: '100%', padding: 24, flexWrap: 'nowrap'\r\n    }\r\n})\r\n\r\nconst NoCurrentTrackerInfo = () =>\r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            No Info Found For Selected Tracker.\r\n    </div>\r\n\r\nclass TrackerDetails extends React.Component {\r\n\r\n    timer = null\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.refresh()\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.currentTracker !== this.props.currentTracker) {\r\n            this.props.getCurrentTrackerInfo(nextProps.currentTracker)\r\n        }\r\n    }\r\n\r\n    refresh = (c = true) => {\r\n        this.props.getCurrentTrackerInfo(this.props.currentTracker)\r\n\r\n        if(c) {\r\n            this.timer = setTimeout(this.refresh, 30000)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes, currentTrackerInfo } = this.props\r\n\r\n        return (currentTrackerInfo === null ? <NoCurrentTrackerInfo /> :\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Typography variant='h5' style={{height: '48px'}}>\r\n                        Tracker Details\r\n                    </Typography>\r\n                    <div \r\n                        className={currentTrackerInfo.currentAngle !== '--' && (currentTrackerInfo.currentAngle > 58 ? 'angle60' :\r\n                        currentTrackerInfo.currentAngle > 56 ? 'angle58' :\r\n                        currentTrackerInfo.currentAngle > 54 ? 'angle56' :\r\n                        currentTrackerInfo.currentAngle > 52 ? 'angle54' :\r\n                        currentTrackerInfo.currentAngle > 50 ? 'angle52' :\r\n                        currentTrackerInfo.currentAngle > 48 ? 'angle50' :\r\n                        currentTrackerInfo.currentAngle > 46 ? 'angle48' :\r\n                        currentTrackerInfo.currentAngle > 44 ? 'angle46' :\r\n                        currentTrackerInfo.currentAngle > 42 ? 'angle44' :\r\n                        currentTrackerInfo.currentAngle > 40 ? 'angle42' :\r\n                        currentTrackerInfo.currentAngle > 38 ? 'angle40' :\r\n                        currentTrackerInfo.currentAngle > 36 ? 'angle38' :\r\n                        currentTrackerInfo.currentAngle > 34 ? 'angle36' :\r\n                        currentTrackerInfo.currentAngle > 32 ? 'angle34' :\r\n                        currentTrackerInfo.currentAngle > 30 ? 'angle32' :\r\n                        currentTrackerInfo.currentAngle > 28 ? 'angle30' :\r\n                        currentTrackerInfo.currentAngle > 26 ? 'angle28' :\r\n                        currentTrackerInfo.currentAngle > 24 ? 'angle26' :\r\n                        currentTrackerInfo.currentAngle > 22 ? 'angle24' :\r\n                        currentTrackerInfo.currentAngle > 20 ? 'angle22' :\r\n                        currentTrackerInfo.currentAngle > 18 ? 'angle20' :\r\n                        currentTrackerInfo.currentAngle > 16 ? 'angle18' :\r\n                        currentTrackerInfo.currentAngle > 14 ? 'angle16' :\r\n                        currentTrackerInfo.currentAngle > 12 ? 'angle14' :\r\n                        currentTrackerInfo.currentAngle > 10 ? 'angle12' :\r\n                        currentTrackerInfo.currentAngle > 8 ? 'angle10' :\r\n                        currentTrackerInfo.currentAngle > 6 ? 'angle8' :\r\n                        currentTrackerInfo.currentAngle > 4 ? 'angle6' :\r\n                        currentTrackerInfo.currentAngle > 2 ? 'angle4' :\r\n                        currentTrackerInfo.currentAngle > 0 ? 'angle2' :\r\n                        currentTrackerInfo.currentAngle > -2 ? 'angle0' :\r\n                        currentTrackerInfo.currentAngle > -4 ? 'angle_2' :\r\n                        currentTrackerInfo.currentAngle > -6 ? 'angle_4' :\r\n                        currentTrackerInfo.currentAngle > -8 ? 'angle_6' :\r\n                        currentTrackerInfo.currentAngle > -10 ? 'angle_8' :\r\n                        currentTrackerInfo.currentAngle > -12 ? 'angle_10' :\r\n                        currentTrackerInfo.currentAngle > -14 ? 'angle_12' :\r\n                        currentTrackerInfo.currentAngle > -16 ? 'angle_14' :\r\n                        currentTrackerInfo.currentAngle > -18 ? 'angle_16' :\r\n                        currentTrackerInfo.currentAngle > -20 ? 'angle_18' :\r\n                        currentTrackerInfo.currentAngle > -22 ? 'angle_20' :\r\n                        currentTrackerInfo.currentAngle > -24 ? 'angle_22' :\r\n                        currentTrackerInfo.currentAngle > -26 ? 'angle_24' :\r\n                        currentTrackerInfo.currentAngle > -28 ? 'angle_26' :\r\n                        currentTrackerInfo.currentAngle > -30 ? 'angle_28' :\r\n                        currentTrackerInfo.currentAngle > -32 ? 'angle_30' :\r\n                        currentTrackerInfo.currentAngle > -34 ? 'angle_32' :\r\n                        currentTrackerInfo.currentAngle > -36 ? 'angle_34' :\r\n                        currentTrackerInfo.currentAngle > -38 ? 'angle_36' :\r\n                        currentTrackerInfo.currentAngle > -40 ? 'angle_38' :\r\n                        currentTrackerInfo.currentAngle > -42 ? 'angle_40' :\r\n                        currentTrackerInfo.currentAngle > -44 ? 'angle_42' :\r\n                        currentTrackerInfo.currentAngle > -46 ? 'angle_44' :\r\n                        currentTrackerInfo.currentAngle > -48 ? 'angle_46' :\r\n                        currentTrackerInfo.currentAngle > -50 ? 'angle_48' :\r\n                        currentTrackerInfo.currentAngle > -52 ? 'angle_50' :\r\n                        currentTrackerInfo.currentAngle > -54 ? 'angle_52' :\r\n                        currentTrackerInfo.currentAngle > -56 ? 'angle_54' :\r\n                        currentTrackerInfo.currentAngle > -58 ? 'angle_56' :\r\n                        currentTrackerInfo.currentAngle > -60 ? 'angle_58' :\r\n                        'angle_60')} \r\n                        style={{width: '100%', height: '150px', marginTop: 5}}>\r\n                            {currentTrackerInfo.currentAngle === '--' && <div \r\n                                style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n                                    No Current Angle Data Found.\r\n                            </div>}\r\n                        </div>\r\n                    {currentTrackerInfo.currentAngle !== '--' && <Typography variant='h5' style={{textAlign: 'center', height: 48, marginTop: 5}}>\r\n                        Angle = {currentTrackerInfo.currentAngle}\r\n                    </Typography>}\r\n                    <div style={{height: 'calc(100% - 246px)', width: '100%', overflow: 'auto'}}>\r\n                    <Table padding='none'>\r\n                        <TableBody>\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Tracker ID\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.trackerID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Device ID\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.deviceID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Mac ID \r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.macID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Current Mode\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.currentMode}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                    Current Angle\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.currentAngle}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                    Date and Time\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{new Date(currentTrackerInfo.timeStamp).toLocaleDateString('en-US', {timeZone: this.props.timeZone})} -- {new Date(currentTrackerInfo.timeStamp).toLocaleTimeString('en-US', {timeZone:  this.props.timeZone, hour12: false})}</TableCell>\r\n                        </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                    </div>\r\n                </Grid>\r\n        )\r\n    }\r\n} \r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentTrackerInfo, timeZone, currentTracker } = state.app\r\n\r\n    return {\r\n        currentTrackerInfo,\r\n        timeZone,\r\n        currentTracker\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getCurrentTrackerInfo : (trackerID) => {\r\n        dispatch({type: 'GET_CURRENT_TRACKER_INFO_REQUEST'})\r\n        appService.getCurrentTrackerInfo(trackerID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_CURRENT_TRACKER_INFO_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_CURRENT_TRACKER_INFO_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedTrackerDetails = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TrackerDetails))\r\nexport {connectedTrackerDetails as TrackerDetails}","import React from 'react'\r\nimport { Grid, Paper, Button } from '@material-ui/core';\r\nimport { TrackerList } from './TrackerList'\r\nimport { TrackerDetails } from './TrackerDetails';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexWrap: 'wrap',\r\n        [theme.breakpoints.up('md')]: {\r\n            height: '100%',\r\n        }\r\n    },\r\n    trackerList: {\r\n        width: '100%',\r\n        padding: 10,\r\n        [theme.breakpoints.up('md')]: {\r\n            minHeight: '100%', width: '50%'\r\n        }\r\n    },\r\n    trackerDetails: {\r\n        width: '100%',\r\n        padding: 10,\r\n        [theme.breakpoints.up('md')]: {\r\n            minHeight: '100%', width: '50%'\r\n        }\r\n    }\r\n})\r\n\r\nconst Initializing = (props) => \r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            <p style={{margin: 10}}>No static data found.  </p>\r\n            <Button variant='contained' style={{margin: 10}} color='primary' onClick={() => props.scan()}>Add trackers</Button>\r\n            <Button variant='contained' style={{margin: 10}} color='primary' onClick={() => props.getCommissioningData()}>Refresh static data</Button>\r\n    </div>\r\n\r\n\r\nconst Fetching = () => \r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            FETCHING...\r\n    </div>\r\n\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    state = {\r\n    }\r\n\r\n    getCommissioningData = () => {\r\n        this.props.getCommissioningData()\r\n    }\r\n\r\n    scan = () => {\r\n        this.props.scan()\r\n    }\r\n\r\n    render() {\r\n        const { classes, commissioningData, fetchingCommissioningData } = this.props\r\n        return ( fetchingCommissioningData ? <Fetching /> : commissioningData === null ? <Initializing scan={() => this.scan()} getCommissioningData={() => this.getCommissioningData()}/> :\r\n            <Grid container direction=\"column\" className={classes.root}>\r\n                <Grid item className={classes.trackerList}>\r\n                    <Paper style={{height: '100%'}}>\r\n                        <TrackerList />\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item className={classes.trackerDetails}>\r\n                    <Paper style={{height: '100%'}}>\r\n                        <TrackerDetails />\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData, fetchingCommissioningData } = state.app\r\n\r\n    return {\r\n        commissioningData,\r\n        fetchingCommissioningData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    scan : () => {\r\n        dispatch({type: 'SCAN'})\r\n    },\r\n    getCommissioningData: () => {\r\n        dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n        appService.getCommissioningData()\r\n            .then(json => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedDashboard = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Dashboard))\r\nexport {connectedDashboard as Dashboard}","import React, { Fragment } from 'react'\r\nimport { Grid, Button, TextField, FormControlLabel, Checkbox, InputAdornment } from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    fieldGrid: {\r\n        display: 'flex', \r\n        flexDirection: 'row', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    },\r\n    field: {\r\n        width: '45%',\r\n        margin: '10px 2.5% 0px 2.5%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '31.33%',\r\n            margin: '10px 1% 0px 1%'\r\n        }\r\n    }\r\n})\r\n\r\nclass SPAParameters extends React.Component {\r\n    state = {\r\n        Lattitude: '',\r\n        Longitude: '',\r\n        Altitude: '',\r\n        TrackingLimitEast: '',\r\n        TrackingLimitWest: '',\r\n        RowWidth: '',\r\n        RowPitch: '',\r\n        TrackingResolution: '',\r\n        AzimuthDeviation: '',\r\n        AltitudeofTrackerontheEast: '',\r\n        AltitudeofTrackerontheWest: '',\r\n        EarlyStartMinutes: '',\r\n        LateFinishMinutes: '',\r\n        LattitudeError: '',\r\n        LongitudeError: '',\r\n        AltitudeError: '',\r\n        TrackingLimitEastError: '',\r\n        TrackingLimitWestError: '',\r\n        RowWidthError: '',\r\n        RowPitchError: '',\r\n        TrackingResolutionError: '',\r\n        AzimuthDeviationError: '',\r\n        AltitudeofTrackerontheEastError: '',\r\n        AltitudeofTrackerontheWestError: '',\r\n        EarlyStartMinutesError: '',\r\n        LateFinishMinutesError: '',\r\n        backTracking: '0',\r\n        submit: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.editedTrackers.length ===  1) {\r\n            this.props.getSPAParameters(this.props.editedTrackers[0].deviceID)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.SPAParameters !== this.props.SPAParameters) {\r\n            const values = nextProps.SPAParameters.VALUES.split(',')\r\n            this.setState({\r\n                Lattitude: values[0],\r\n                Longitude: values[1],\r\n                Altitude: values[2],\r\n                TrackingLimitEast: values[3],\r\n                TrackingLimitWest: values[4],\r\n                RowWidth: values[5],\r\n                RowPitch: values[6],\r\n                TrackingResolution: values[7],\r\n                AzimuthDeviation: values[8],\r\n                AltitudeofTrackerontheEast: values[9],\r\n                AltitudeofTrackerontheWest: values[10],\r\n                EarlyStartMinutes: values[11],\r\n                LateFinishMinutes: values[12],\r\n                backTracking: values[14]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleBlur = (e, p) => {\r\n            const regex = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+$\")\r\n            const regexTest = regex.test(e.target.value)\r\n            if(!regexTest) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    [`${e.target.name}Error`]: `Please enter a number.`,\r\n                    submit: false\r\n                })\r\n            } else {\r\n                const value = Number(e.target.value)\r\n                if(p.min !== null && p.max !== null) {\r\n                    if(value < p.min || value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min} max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.min !== null) {\r\n                    if(value < p.min) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.max != null) {\r\n                    if(value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \r\n    }\r\n\r\n    sendSPAParameters = () => {\r\n        const { Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking } = this.state\r\n        this.props.sendSPAParameters(this.props.editedTrackers, Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                    {\r\n                        [\r\n                            {\r\n                                key: 'Lattitude',\r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 0\r\n                            },\r\n                            {\r\n                                key: 'Longitude', \r\n                                adornment: 'Deg',\r\n                                min: -180,\r\n                                max: +180,\r\n                                value: 1\r\n                            }, \r\n                            { \r\n                                key: 'Altitude',\r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 2\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - East', \r\n                                adornment: 'Deg',\r\n                                min: -60,\r\n                                max: 0,\r\n                                value: 3\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - West', \r\n                                adornment: 'Deg',\r\n                                min: 0,\r\n                                max: +60,\r\n                                value: 4 \r\n                            }, \r\n                            { \r\n                                key: 'Row Width', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 5\r\n                            }, \r\n                            { \r\n                                key: 'Row Pitch', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 6\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Resolution', \r\n                                adornment: 'Deg',\r\n                                min: +0.50,\r\n                                max: +30.0,\r\n                                value: 7 \r\n                            }, \r\n                            { \r\n                                key: 'Azimuth Deviation', \r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 8  \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the East', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 9 \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the West', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 10\r\n                            }, \r\n                            { \r\n                                key: 'Early Start Minutes', \r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 11\r\n                            }, \r\n                            { \r\n                                key: 'Late Finish Minutes',\r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 12\r\n                            }\r\n                        ].map(p => {\r\n                            return <TextField\r\n                                key={p.key}\r\n                                className={classes.field}\r\n                                id={p.key}\r\n                                name={p.key.replace(/ /g, '').replace(/-/g, '')}\r\n                                label={p.key}\r\n                                value={this.state[p.key.replace(/ /g, '').replace(/-/g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">{p.adornment}</InputAdornment>,\r\n                                  }}\r\n                                error={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`] !== ''}\r\n                                helperText={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`]}\r\n                                onBlur={(e) => this.handleBlur(e, p)}\r\n                            />\r\n                        })\r\n                    }\r\n                        <FormControlLabel disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters} className={classes.field}\r\n                            control={\r\n                                <Checkbox color='primary' checked={this.state.backTracking === '1'} onClick={() => this.setState({...this.state, backTracking: this.state.backTracking === '0' ? '1' : '0'})}/>\r\n                            }\r\n                            label=\"Enable Backtracking\"\r\n                        />\r\n                        <Button color='primary' disabled variant='contained' className={classes.field}>Sync time with Zone Controller</Button>    \r\n                    </Grid>\r\n                    <Grid item style={{textAlign: 'center'}}>\r\n                        <Button color='primary' disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters || !this.state.submit} variant='contained' onClick={() => this.sendSPAParameters()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { editedTrackers, sendingSPAParameters } = state.app\r\n\r\n    return {\r\n        editedTrackers,\r\n        sendingSPAParameters,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendSPAParameters: (editedTrackers, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking) => {\r\n        dispatch({type: 'SET_RESPONSE_LISTENER'})\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_SPA_PARAMETERS_REQUEST', t})\r\n            appService.sendSPAParameters(t.deviceID, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_SUCCESS'})\r\n                }, error => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_FAILURE'})\r\n                })\r\n        })\r\n        \r\n    }\r\n})\r\n\r\n\r\nconst connectedSPAParameters = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SPAParameters))\r\nexport {connectedSPAParameters as SPAParameters}","import React, { Fragment } from 'react'\r\nimport { Grid, Button, TextField, InputAdornment } from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    fieldGrid: {\r\n        display: 'flex', \r\n        flexDirection: 'row', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    },\r\n    field: {\r\n        width: '45%',\r\n        margin: '10px 2.5% 0px 2.5%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '31.33%',\r\n            margin: '10px 1% 0px 1%'\r\n        }\r\n    }\r\n})\r\n\r\nclass StowAngles extends React.Component {\r\n    state = {\r\n        WindStowAngle: '',\r\n        SnowStowAngle: '',\r\n        NightStowAngle: '',\r\n        EmergencyStowAngle: '',\r\n        CleanStowAngle: '',\r\n        submit: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.editedTrackers.length === 1) {\r\n            this.props.getStowAngles(this.props.editedTrackers[0].deviceID)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.stowAngles !== this.props.stowAngles) {\r\n            const values = nextProps.stowAngles.VALUES.split(',')\r\n            this.setState({\r\n                WindStowAngle: values[0],\r\n                SnowStowAngle: values[1],\r\n                NightStowAngle: values[2],\r\n                EmergencyStowAngle: values[3],\r\n                CleanStowAngle: values[4]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleBlur = (e, p) => {\r\n        if(e.target.value === '') {\r\n            this.setState({\r\n                ...this.state,\r\n                [e.target.name]: this.props.SPAParameters.VALUES.split(',')[p.value],\r\n                [`${e.target.name}Error`]: '',\r\n                submit: false\r\n            })\r\n        } else {\r\n            const regex = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+$\")\r\n            const regexTest = regex.test(e.target.value)\r\n            if(!regexTest) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    [`${e.target.name}Error`]: `Please enter a number.`,\r\n                    submit: false\r\n                })\r\n            } else {\r\n                const value = Number(e.target.value)\r\n                if(p.min !== null && p.max !== null) {\r\n                    if(value < p.min || value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min} max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.min !== null) {\r\n                    if(value < p.min) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.max != null) {\r\n                    if(value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    sendStowAngles = () => {\r\n        const { WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle } = this.state\r\n        this.props.sendStowAngles(this.props.editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                    {\r\n                        ['Wind Stow Angle', 'Snow Stow Angle', 'Night Stow Angle', 'Emergency Stow Angle', 'Clean Stow Angle'].map(p => {\r\n                            return <TextField\r\n                                key={p}\r\n                                className={classes.field}\r\n                                id={p}\r\n                                name={p.replace(/ /g, '')}\r\n                                label={p}\r\n                                value={this.state[p.replace(/ /g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingStowAngles || this.props.gettingStowAngles}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">Deg</InputAdornment>,\r\n                                  }}\r\n                            />\r\n                        })\r\n                    }\r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center'}}>\r\n                        <Button color='primary' disabled={this.props.sendingStowAngles || this.props.gettingStowAngles} variant='contained' onClick={() => this.sendStowAngles()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { editedTrackers, stowAngles, sendingStowAngles, gettingStowAngles } = state.app\r\n\r\n    return {\r\n        editedTrackers,\r\n        stowAngles,\r\n        sendingStowAngles,\r\n        gettingStowAngles\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendStowAngles: (editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle) => {\r\n        dispatch({type: 'SET_RESPONSE_LISTENER'})\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_STOW_ANGLES_REQUEST', t})\r\n            appService.sendStowAngles(t.deviceID, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_SUCCESS'})\r\n                }, error => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_FAILURE'})\r\n                })\r\n        })\r\n    }\r\n})\r\n\r\n\r\nconst connectedStowAngles = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(StowAngles))\r\nexport {connectedStowAngles as StowAngles}","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { connect } from 'react-redux'\r\nimport { SPAParameters } from './SPAParameters';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { StowAngles } from './StowAngles';\r\nimport LeftIcon from '@material-ui/icons/ArrowBack'\r\nimport { Grid, Typography, Chip, Toolbar } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      margin: 10,\r\n      display: 'flex',\r\n      flexDirection: 'column'\r\n    },\r\n    body: {\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    tabsIndicator: {\r\n      backgroundColor: '#54AAB3',\r\n    },\r\n    selected: {\r\n      backgroundColor: '#54AAB3',\r\n      color: '#ffffff',\r\n      fontWeight: 600,\r\n      fontSize: 14\r\n    },\r\n    editedTrackers: {\r\n        width: '25%',\r\n        margin: 10,\r\n    },\r\n    tabs: {\r\n        width: '75%',\r\n        padding: 10,\r\n        boxShadow: '-1px 0px 0px 0px rgba(0,0,0,0.5)'\r\n    },\r\n    chip: {\r\n        margin: 10\r\n    },\r\n    green: {\r\n        backgroundColor: 'green'\r\n    },\r\n    red: {\r\n        backgroundColor: 'red'\r\n    }\r\n});\r\n\r\nclass EditRowController extends React.Component {\r\n    handleChange = (event, value) => {\r\n        this.props.changeTab({ value });\r\n    };\r\n    \r\n    render() {console.log(this.props)\r\n        const { classes, currentEditTab, editedTrackers, responseQueue } = this.props;\r\n    \r\n        return (\r\n        <div className={classes.root}>\r\n            <div className={classes.header}>\r\n            <Grid item>\r\n                <Typography variant='h5'>\r\n                    <IconButton aria-label=\"Back\" onClick={this.props.back} >\r\n                        <LeftIcon fontSize=\"large\" />\r\n                    </IconButton>\r\n                    Edit Parameters\r\n                </Typography>\r\n            </Grid>\r\n            </div>\r\n            <div className={classes.body}>\r\n            <div className={classes.editedTrackers}>\r\n            \r\n            <AppBar position=\"static\" color='secondary'>\r\n                <Toolbar style={{minHeight: 48}} disableGutters>\r\n                <Typography variant=\"subtitle1\" style={{margin: 'auto'}}>\r\n                    Selected Trackers\r\n                </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {\r\n                editedTrackers.map(t => (\r\n                <Chip key={t.deviceID} label={`Row#: ${t.rowNumber}`} className={classes.chip} style={responseQueue.filter(r => r.request.DID === t.deviceID)[0] ? responseQueue.filter(r => r.request.DID === t.deviceID)[0].success ? {backgroundColor: 'green'} : {backgroundColor: 'red'} : {}}/>\r\n            ))}\r\n            </div>\r\n            <div className={classes.tabs}>\r\n            <AppBar position=\"static\" color='secondary'>\r\n                <Tabs value={currentEditTab} onChange={this.handleChange} classes={{indicator: classes.tabsIndicator}}>\r\n                    <Tab label=\"SPA Parameters\" classes={{selected: classes.selected}}/>\r\n                    <Tab label=\"Stow Angles\" classes={{selected: classes.selected}}/>\r\n                </Tabs>\r\n            </AppBar>\r\n            {currentEditTab === 0 && <SPAParameters />}\r\n            {currentEditTab === 1 && <StowAngles />}\r\n            </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentEditTab, editedTrackers, responseQueue } = state.app\r\n\r\n    return {\r\n        currentEditTab,\r\n        editedTrackers,\r\n        responseQueue       \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changeTab: (value) => {\r\n        dispatch({type: 'CHANGE_EDIT_TAB', value})\r\n    }\r\n})\r\n\r\n\r\nconst connectedEditRowController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(EditRowController))\r\nexport {connectedEditRowController as EditRowController}","import React, { Fragment } from 'react'\r\nimport LeftIcon from '@material-ui/icons/ArrowBack'\r\nimport { IconButton, Typography, Grid, Button, TextField, FormControlLabel, Checkbox, InputAdornment } from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    fieldGrid: {\r\n        display: 'flex', \r\n        flexDirection: 'row', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    },\r\n    field: {\r\n        width: '45%',\r\n        margin: '10px 2.5% 0px 2.5%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '23%',\r\n            margin: '10px 1% 0px 1%'\r\n        }\r\n    }\r\n})\r\n\r\nclass EditRowController extends React.Component {\r\n    state = {\r\n        Lattitude: '',\r\n        Longitude: '',\r\n        Altitude: '',\r\n        TrackingLimitEast: '',\r\n        TrackingLimitWest: '',\r\n        RowWidth: '',\r\n        RowPitch: '',\r\n        TrackingResolution: '',\r\n        AzimuthDeviation: '',\r\n        AltitudeofTrackerontheEast: '',\r\n        AltitudeofTrackerontheWest: '',\r\n        EarlyStartMinutes: '',\r\n        LateFinishMinutes: '',\r\n        LattitudeError: '',\r\n        LongitudeError: '',\r\n        AltitudeError: '',\r\n        TrackingLimitEastError: '',\r\n        TrackingLimitWestError: '',\r\n        RowWidthError: '',\r\n        RowPitchError: '',\r\n        TrackingResolutionError: '',\r\n        AzimuthDeviationError: '',\r\n        AltitudeofTrackerontheEastError: '',\r\n        AltitudeofTrackerontheWestError: '',\r\n        EarlyStartMinutesError: '',\r\n        LateFinishMinutesError: '',\r\n        WindStowAngle: '',\r\n        SnowStowAngle: '',\r\n        NightStowAngle: '',\r\n        EmergencyStowAngle: '',\r\n        CleanStowAngle: '',\r\n        backTracking: '0',\r\n        submit: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.editedTrackers.length === 1) {\r\n            this.props.getSPAParameters(this.props.editedTrackers[0].deviceID)\r\n            this.props.getStowAngles(this.props.editedTrackers[0].deviceID)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.SPAParameters !== this.props.SPAParameters) {\r\n            if(nextProps.SPAParameters[this.props.editedTrackers[0].deviceID]) {\r\n                const values = nextProps.SPAParameters[this.props.editedTrackers[0].deviceID].VALUES.split(',')\r\n                this.setState({\r\n                    Lattitude: values[0],\r\n                    Longitude: values[1],\r\n                    Altitude: values[2],\r\n                    TrackingLimitEast: values[3],\r\n                    TrackingLimitWest: values[4],\r\n                    RowWidth: values[5],\r\n                    RowPitch: values[6],\r\n                    TrackingResolution: values[7],\r\n                    AzimuthDeviation: values[8],\r\n                    AltitudeofTrackerontheEast: values[9],\r\n                    AltitudeofTrackerontheWest: values[10],\r\n                    EarlyStartMinutes: values[11],\r\n                    LateFinishMinutes: values[12],\r\n                    backTracking: values[14]\r\n                })\r\n            }\r\n        }\r\n        if(nextProps.stowAngles !== this.props.stowAngles) {\r\n            const values = nextProps.stowAngles.VALUES.split(',')\r\n            this.setState({\r\n                WindStowAngle: values[0],\r\n                SnowStowAngle: values[1],\r\n                NightStowAngle: values[2],\r\n                EmergencyStowAngle: values[3],\r\n                CleanStowAngle: values[4]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleChangeSPA = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleBlur = (e, p) => {\r\n        if(e.target.value === '') {\r\n            this.setState({\r\n                ...this.state,\r\n                [e.target.name]: this.props.SPAParameters.VALUES.split(',')[p.value],\r\n                [`${e.target.name}Error`]: '',\r\n                submit: false\r\n            })\r\n        } else {\r\n            const regex = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+$\")\r\n            const regexTest = regex.test(e.target.value)\r\n            if(!regexTest) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    [`${e.target.name}Error`]: `Please enter a number.`,\r\n                    submit: false\r\n                })\r\n            } else {\r\n                const value = Number(e.target.value)\r\n                if(p.min !== null && p.max !== null) {\r\n                    if(value < p.min || value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min} max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.min !== null) {\r\n                    if(value < p.min) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.max != null) {\r\n                    if(value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    sendSPAParameters = () => {\r\n        const { Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking } = this.state\r\n        this.props.sendSPAParameters(this.props.editedTrackers, Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking)\r\n    }\r\n\r\n    sendStowAngles = () => {\r\n        const { WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle } = this.state\r\n        this.props.sendStowAngles(this.props.editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item style={{height: 64, borderBottom: '0.1px solid lightgrey'}}>\r\n                        <Typography variant='h5'>\r\n                            <IconButton aria-label=\"Back\" onClick={this.props.back} >\r\n                                <LeftIcon fontSize=\"large\" />\r\n                            </IconButton>\r\n                            Edit Parameters\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Typography variant='h6' style={{paddingLeft: 'calc(1% + 10px)'}}>\r\n                        SPA Settings\r\n                    </Typography>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                        \r\n                    {\r\n                        [\r\n                            {\r\n                                key: 'Lattitude',\r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 0\r\n                            },\r\n                            {\r\n                                key: 'Longitude', \r\n                                adornment: 'Deg',\r\n                                min: -180,\r\n                                max: +180,\r\n                                value: 1\r\n                            }, \r\n                            { \r\n                                key: 'Altitude',\r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 2\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - East', \r\n                                adornment: 'Deg',\r\n                                min: -60,\r\n                                max: 0,\r\n                                value: 3\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - West', \r\n                                adornment: 'Deg',\r\n                                min: 0,\r\n                                max: +60,\r\n                                value: 4 \r\n                            }, \r\n                            { \r\n                                key: 'Row Width', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 5\r\n                            }, \r\n                            { \r\n                                key: 'Row Pitch', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 6\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Resolution', \r\n                                adornment: 'Deg',\r\n                                min: +0.50,\r\n                                max: +30.0,\r\n                                value: 7 \r\n                            }, \r\n                            { \r\n                                key: 'Azimuth Deviation', \r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 8  \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the East', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 9 \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the West', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 10\r\n                            }, \r\n                            { \r\n                                key: 'Early Start Minutes', \r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 11\r\n                            }, \r\n                            { \r\n                                key: 'Late Finish Minutes',\r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 12\r\n                            }\r\n                        ].map(p => {\r\n                            return <TextField\r\n                                key={p.key}\r\n                                className={classes.field}\r\n                                id={p.key}\r\n                                name={p.key.replace(/ /g, '').replace(/-/g, '')}\r\n                                label={p.key}\r\n                                value={this.state[p.key.replace(/ /g, '').replace(/-/g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">{p.adornment}</InputAdornment>,\r\n                                  }}\r\n                                error={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`] !== ''}\r\n                                helperText={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`]}\r\n                                onBlur={(e) => this.handleBlur(e, p)}\r\n                            />\r\n                        })\r\n                    }\r\n                        <FormControlLabel disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters} style={{ margin: 10, marginLeft: 'auto' }}\r\n                            control={\r\n                                <Checkbox color='primary' checked={this.state.backTracking === '1'} onClick={() => this.setState({...this.state, backTracking: this.state.backTracking === '0' ? '1' : '0'})}/>\r\n                            }\r\n                            label=\"Enable Backtracking\"\r\n                        />\r\n                        <Button color='primary' disabled variant='contained' style={{ margin: 10 }}>Sync time with Zone Controller</Button>    \r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center', borderBottom: '0.1px solid lightgrey'}}>\r\n                        <Button color='primary' disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters || !this.state.submit} variant='contained' onClick={() => this.sendSPAParameters()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                    <Typography variant='h6' style={{paddingLeft: 'calc(1% + 10px)'}}>\r\n                        Stow Angle Settings\r\n                    </Typography>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                        \r\n                    {\r\n                        ['Wind Stow Angle', 'Snow Stow Angle', 'Night Stow Angle', 'Emergency Stow Angle', 'Clean Stow Angle'].map(p => {\r\n                            return <TextField\r\n                                key={p}\r\n                                className={classes.field}\r\n                                id={p}\r\n                                name={p.replace(/ /g, '')}\r\n                                label={p}\r\n                                value={this.state[p.replace(/ /g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingStowAngles || this.props.gettingStowAngles}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">Deg</InputAdornment>,\r\n                                  }}\r\n                            />\r\n                        })\r\n                    }\r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center'}}>\r\n                        <Button color='primary' disabled={this.props.sendingStowAngles || this.props.gettingStowAngles} variant='contained' onClick={() => this.sendStowAngles()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { editedTrackers, SPAParameters, stowAngles, sendingSPAParameters, sendingStowAngles, gettingSPAParameters, gettingStowAngles } = state.app\r\n\r\n    return {\r\n        editedTrackers,\r\n        SPAParameters,\r\n        stowAngles,\r\n        sendingSPAParameters,\r\n        sendingStowAngles,\r\n        gettingSPAParameters,\r\n        gettingStowAngles\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendSPAParameters: (editedTrackers, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking) => {\r\n        const values = `${Lattitude}, ${Longitude}, ${Altitude}, ${EastLimit}, ${WestLimit}, ${TrackerWidth}, ${Pitch}, ${TrackingAccuracy}, ${AzimuthDeviation}, ${AltitudeTrackeronEast}, ${AltitudeTrackeronWest}, ${StartTimeLead}, ${EndTimeLag}, 0, ${backTracking}`\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_SPA_PARAMETERS_REQUEST', t, values})\r\n            appService.sendSPAParameters(t.deviceID, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_SUCCESS'})\r\n                    dispatch({type: 'GET_SPA_PARAMETERS_REQUEST'})\r\n                    appService.getSPAParameters(t.deviceID)\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_SPA_PARAMETERS_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_SPA_PARAMETERS_FAILURE'})\r\n                        })\r\n\r\n                }, error => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_FAILURE'})\r\n                })\r\n        })\r\n        \r\n    },\r\n    sendStowAngles: (editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle) => {\r\n        const values = `${WindStowAngle}, ${SnowStowAngle}, ${CleanStowAngle}, ${NightStowAngle}, ${EmergencyStowAngle}`\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_STOW_ANGLES_REQUEST', t, values})\r\n            appService.sendStowAngles(t.deviceID, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_SUCCESS'})\r\n                    dispatch({type: 'GET_STOW_ANGLES_REQUEST'})\r\n                    appService.getStowAngles(t.deviceID)\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_STOW_ANGLES_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_STOW_ANGLES_FAILURE'})\r\n                        })\r\n                }, error => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_FAILURE'})\r\n                })\r\n        })\r\n    },\r\n    getStowAngles: (DID) => {\r\n        dispatch({type: 'GET_STOW_ANGLES_REQUEST'})\r\n        appService.getStowAngles(DID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_STOW_ANGLES_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'GET_STOW_ANGLES_FAILURE'})\r\n            })\r\n    },\r\n    getSPAParameters: (DID) => {\r\n        dispatch({type: 'GET_SPA_PARAMETERS_REQUEST'})\r\n        appService.getSPAParameters(DID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_SPA_PARAMETERS_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'GET_SPA_PARAMETERS_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedEditRowController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(EditRowController))\r\nexport {connectedEditRowController as EditRowController1}","import React, { Fragment } from 'react'\r\nimport LeftIcon from '@material-ui/icons/ArrowBack'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { IconButton, Typography, Grid, Button, Menu, MenuItem, FormControlLabel, Switch } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: 'calc(100% - 48px)'\r\n    },\r\n    second: {\r\n        height: 'calc(100% - 128px)', \r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    }\r\n})\r\n\r\nclass ControlRowController extends React.Component {\r\n    state = {\r\n        typeOfStow: 'STOW',\r\n        auto: false\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.setState({ ...this.state, anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleClose = (key) => {\r\n        this.setState({ typeOfStow: key, anchorEl: null });\r\n    };\r\n\r\n    autoToggle = () => {\r\n        if(this.state.auto) {\r\n            this.props.controlledTrackers.map(t => this.props.sendStow(t.deviceID, 'AUTO'))\r\n            this.setState({...this.state, auto: !this.state.auto})\r\n        } else {\r\n            this.props.controlledTrackers.map(t => this.props.sendStow(t.deviceID, 'MANUAL'))\r\n            this.setState({...this.state, auto: !this.state.auto})\r\n        }\r\n    } \r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        const { anchorEl } = this.state\r\n        return (\r\n            <Fragment>\r\n\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item style={{height: 64}}>\r\n                        <Typography variant='h5'>\r\n                            <IconButton aria-label=\"Back\" onClick={this.props.back} >\r\n                                <LeftIcon fontSize=\"large\" />\r\n                            </IconButton>\r\n                            Control\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item className={classes.second}>\r\n                    \r\n                    </Grid>\r\n                    <Grid item style={{textAlign: 'center'}}>\r\n                        <Button color='primary' variant='contained' onClick={() => this.props.controlledTrackers.map(t => this.props.sendCommand(t.deviceID, 'NEGATIVE'))} style={{ margin: 10 }}>Run West</Button>\r\n                        <Button color='primary' variant='contained' onClick={() => this.props.controlledTrackers.map(t => this.props.sendCommand(t.deviceID, 'POSITIVE'))} style={{ margin: 10 }}>Run East</Button>\r\n                        <Button color='primary' variant='contained' onClick={() => this.props.controlledTrackers.map(t => this.props.sendCommand(t.deviceID, 'STOP'))} style={{ margin: 10 }}>Stop</Button>\r\n                        <Button color='primary' disabled={this.state.typeOfStow === 'STOW'} onClick={() => this.props.controlledTrackers.map(t => this.props.sendStow(t.deviceID, this.state.typeOfStow))} variant='contained' style={{ marginLeft: 10 }}>{this.state.typeOfStow}</Button>\r\n                        <Button \r\n                            color='primary' \r\n                            variant='contained' \r\n                            aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={this.handleClick}\r\n                            style={{ minWidth: 24, paddingLeft: 0, paddingRight: 0}}\r\n                        >\r\n                            <ExpandMoreIcon />\r\n                        </Button>\r\n                        <Menu\r\n                            id=\"simple-menu\"\r\n                            anchorEl={anchorEl}\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={this.handleClose}\r\n                            >\r\n                            <MenuItem onClick={() => this.handleClose('WIND')}>WIND</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('SNOW')}>SNOW</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('NIGHT')}>NIGHT</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('CLEAN')}>CLEAN</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('EMERGENCY')}>EMERGENCY</MenuItem>\r\n                        </Menu>\r\n                        <FormControlLabel style={{ margin: 10 }} labelPlacement=\"top\"\r\n                            control={\r\n                                <Switch color='primary' checked={this.state.auto} onClick={() => this.autoToggle()} />\r\n                            }\r\n                            label=\"Enable Auto Mode\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { controlledTrackers } = state.app\r\n\r\n    return {\r\n        controlledTrackers,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendCommand: (DID, value) => {\r\n        dispatch({type: 'SEND_COMMAND_REQUEST'})\r\n        appService.sendCommand(DID, value)\r\n            .then(json => {\r\n                dispatch({type: 'SEND_COMMAND_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'SEND_COMMAND_FAILURE'})\r\n            })\r\n    },\r\n    sendStow: (DID, mode) => {\r\n        dispatch({type: 'SEND_STOW_REQUEST'})\r\n        appService.sendStow(DID, mode)\r\n            .then(json => {\r\n                dispatch({type: 'SEND_STOW_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'SEND_STOW_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedControlRowController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ControlRowController))\r\nexport {connectedControlRowController as ControlRowController}","import React, { Fragment } from 'react'\r\nimport { Grid, Button, Checkbox } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { EditRowController } from './EditRowController';\r\nimport { EditRowController1 } from './_EditRowController'\r\nimport { ControlRowController } from './ControlRowController'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    buttons: {\r\n        marginBottom: 10,\r\n        marginRight: 10,\r\n        marginTop: 10\r\n    }\r\n});\r\n\r\nclass RowControllerTab extends React.Component {\r\n    state = {\r\n        selectedTrackers: [],\r\n        location: 'home'\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedTrackers.length === this.props.commissioningData.length) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.props.commissioningData]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectRow = (row) => {\r\n        if(this.state.selectedTrackers.indexOf(row) === -1) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.state.selectedTrackers, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.state.selectedTrackers.filter(t => t.macID !== row.macID)]\r\n            })\r\n        }\r\n    }\r\n\r\n    editTracker = () => {\r\n        this.props.setEditedTrackers(this.state.selectedTrackers)\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'edit'\r\n        })\r\n    }\r\n\r\n    controlTracker = () => {\r\n        this.props.setControlledTrackers(this.state.selectedTrackers)\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'control'\r\n        })\r\n    }\r\n\r\n    back = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'home'\r\n        })\r\n    }\r\n\r\n    removeTrackers = () => {\r\n        this.props.removeTrackers(this.state.selectedTrackers.map(s => s.deviceID))\r\n        this.setState({...this.state, selectedTrackers: []})\r\n    }\r\n\r\n    render() {\r\n        const { classes, commissioningData } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    this.state.location === 'edit' ? \r\n                        this.state.selectedTrackers.length > 1 ?\r\n                        <EditRowController back={this.back}/> : <EditRowController1 back={this.back}/> :\r\n                    this.state.location === 'control' ?\r\n                    <ControlRowController back={this.back}/> :\r\n                    <Grid container direction='column' style={{ height: 'calc(100% - 48px)'}}>\r\n                        <Grid item style={{textAlign: 'end'}}>\r\n                            <Button color='primary' variant='contained' disabled={this.state.selectedTrackers.length === 0} className={classes.buttons} onClick={() => this.editTracker()}>Edit</Button>\r\n                            <Button color='primary' variant='contained' disabled={this.state.selectedTrackers.length === 0} className={classes.buttons} onClick={() => this.controlTracker()}>Control</Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    onClick={() => this.selectAll()}\r\n                                    style={{cursor: 'pointer'}}\r\n                                >\r\n                                    {commissioningData !== null && commissioningData.length > 1 && <Checkbox \r\n                                        checked={this.state.selectedTrackers.length === commissioningData.length}\r\n                                        color='primary'\r\n                                    />}\r\n                                        </TableCell>\r\n                                <TableCell >Row #</TableCell>\r\n                                <TableCell >Device ID</TableCell>\r\n                                <TableCell >Mac ID</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {commissioningData && commissioningData.map(row => (\r\n                                <TableRow key={row.macID}\r\n                                    onClick={() => this.selectRow(row)}\r\n                                    style={{cursor: 'pointer'}}\r\n                                >\r\n                                <TableCell>\r\n                                    <Checkbox \r\n                                        checked={this.state.selectedTrackers.indexOf(row) !== -1}\r\n                                        color='primary'\r\n                                    />\r\n                                </TableCell>\r\n                                    <TableCell >{row.rowNumber}</TableCell>\r\n                                    <TableCell >{row.deviceID}</TableCell>\r\n                                    <TableCell >{row.macID}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        </Grid>{commissioningData !== null &&\r\n                        <Grid item style={{textAlign: 'end'}}>\r\n                            <Button variant='contained' color='primary' className={classes.buttons} disabled={this.state.selectedTrackers.length === 0} onClick={() => this.removeTrackers()}>Forget</Button>\r\n                        </Grid>}\r\n                    </Grid>\r\n                    \r\n                }\r\n                \r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData } = state.app\r\n\r\n    return {\r\n        commissioningData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    removeTrackers : (DIDs) => {\r\n        dispatch({type: 'REMOVE_TRACKERS_REQUEST'})\r\n        appService.removeTrackers(DIDs)\r\n            .then(json => {\r\n                dispatch({type: 'REMOVE_TRACKERS_SUCCESS', DIDs})\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n                appService.getCommissioningData()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n                    })\r\n            }, error => {\r\n                dispatch({type: 'REMOVE_TRACKERS_FAILURE'})\r\n            })\r\n    },\r\n    setEditedTrackers: (trackers) => {\r\n        dispatch({type: 'SET_EDITED_TRACKERS', trackers})\r\n    },\r\n    setControlledTrackers: (trackers) => {\r\n        dispatch({type: 'SET_CONTROLLED_TRACKERS', trackers})\r\n    }\r\n})\r\n\r\n\r\nconst connectedRowControllerTab = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RowControllerTab))\r\nexport {connectedRowControllerTab as RowControllerTab}","import React, { Fragment } from 'react'\r\nimport { Grid, Checkbox, TextField, Button } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    textField: {\r\n        marginLeft: 24\r\n    },\r\n    formControl: {\r\n        marginLeft: 24\r\n    }\r\n});\r\n  \r\n\r\nclass ScanTab extends React.Component {\r\n    state = {\r\n        selectedTrackers: [],\r\n        scanSelection: 'PAN ID'\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedTrackers.length === this.props.xbeeResponse.length) {\r\n            this.setState({\r\n                selectedTrackers: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selectedTrackers: [...this.props.xbeeResponse]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectRow = (row) => {\r\n        if(this.state.selectedTrackers.indexOf(row) === -1) {\r\n            this.setState({\r\n                selectedTrackers: [...this.state.selectedTrackers, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selectedTrackers: [...this.state.selectedTrackers.filter(t => t.id !== row.id)]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            scanSelection: e.target.value\r\n        })\r\n    }\r\n\r\n    inputChange = (e) =>{\r\n        this.setState({\r\n            scanParameter: e.target.value\r\n        })\r\n    }\r\n\r\n    scan = () => {\r\n        if(this.state.scanSelection === 'PAN ID') {\r\n            this.props.discover('00000')\r\n        } else {\r\n            this.props.discover(this.state.scanParameter)\r\n        }\r\n    } \r\n\r\n    addTrackers = () => {\r\n        this.props.addTrackers(this.state.selectedTrackers)\r\n    }\r\n\r\n    render() {\r\n        const { classes, xbeeResponse } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column'>\r\n                    <Grid item>\r\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                            <RadioGroup\r\n                                row\r\n                                aria-label=\"Scan\"\r\n                                name=\"scan\"\r\n                                value={this.state.scanSelection}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <FormControlLabel value=\"PAN ID\" control={<Radio color='primary'/>} label=\"PAN ID\" />\r\n                                <FormControlLabel value=\"Device ID\" control={<Radio color='primary'/>} label=\"Device ID\" />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item style={{marginBottom: 24}}>\r\n                    {\r\n                        this.state.scanSelection === 'PAN ID' ?\r\n                        <TextField\r\n                            id=\"scanParameter\"\r\n                            className={classes.textField}\r\n                            value={this.state.scanParameter}\r\n                            onChange={this.inputChange}\r\n                            placeholder='PAN ID'\r\n                            margin=\"none\"\r\n                            variant='outlined'\r\n                        /> :\r\n                        <TextField\r\n                            id=\"scanParameter\"\r\n                            className={classes.textField}\r\n                            value={this.state.scanParameter}\r\n                            onChange={this.inputChange}\r\n                            placeholder='Device ID'\r\n                            margin=\"none\"\r\n                            variant='outlined'\r\n                        />\r\n                    }\r\n                        <Button color='primary' onClick={() => this.scan()} variant='contained' style={{marginLeft: 24, verticalAlign: 'bottom'}}>Scan</Button>\r\n                    </Grid>{xbeeResponse.length !== 0 && xbeeResponse !== undefined &&\r\n                    <Grid item>\r\n                    <Table className={classes.table}>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell\r\n                                onClick={() => this.selectAll()}\r\n                                style={{cursor: 'pointer'}}\r\n                            >\r\n                                {xbeeResponse.length > 1 && xbeeResponse !== undefined && <Checkbox \r\n                                    checked={this.state.selectedTrackers.length === xbeeResponse.length && this.state.selectedTrackers.length !== 0}\r\n                                    color='primary'\r\n                                />}\r\n                                    </TableCell>\r\n                            <TableCell >Row #</TableCell>\r\n                            <TableCell >Device ID</TableCell>\r\n                            <TableCell >Mac ID</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {xbeeResponse.length !== 0 && xbeeResponse !== undefined && xbeeResponse.map(res => {\r\n                            return (\r\n                            <TableRow key={res.DID}\r\n                                onClick={() => this.selectRow(res)}\r\n                                style={{cursor: 'pointer'}}\r\n                            >\r\n                            <TableCell>\r\n                                <Checkbox \r\n                                    checked={this.state.selectedTrackers.indexOf(res) !== -1}\r\n                                    color='primary'\r\n                                />\r\n                            </TableCell>\r\n                                <TableCell >{res.VALUES.split(',')[0]}</TableCell>\r\n                                <TableCell >{res.DID}</TableCell>\r\n                                <TableCell >{res.macID}</TableCell>\r\n                            </TableRow>\r\n                        )})}\r\n                        </TableBody>\r\n                    </Table>\r\n                    </Grid>}{xbeeResponse.length !== 0 && xbeeResponse !== undefined &&\r\n                    <Grid item style={{textAlign: 'end'}}>\r\n                        <Button color='primary' disabled={this.state.selectedTrackers.length === 0} onClick={() => this.addTrackers()} variant='contained' style={{margin: 10}}>Add</Button>\r\n                    </Grid>}\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { xbeeResponse } = state.app\r\n\r\n    return {\r\n        xbeeResponse\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    discover : (did) => {\r\n        dispatch({type: 'DISCOVER_REQUEST'})\r\n        appService.discover(did)\r\n            .then(json => {\r\n                dispatch({type: 'DISCOVER_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'DISCOVER_FAILURE'})\r\n            })\r\n    },\r\n    addTrackers: (devices) => {\r\n        dispatch({type: 'ADD_TRACKERS_REQUEST'})\r\n        appService.addTrackers(devices)\r\n            .then(json => {\r\n                dispatch({type: 'ADD_TRACKERS_SUCCESS', devices})\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n                appService.getCommissioningData()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n                    })\r\n            }, error => {\r\n                dispatch({type: 'ADD_TRACKERS_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedScanTab = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ScanTab))\r\nexport {connectedScanTab as ScanTab}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { RowControllerTab } from './RowControllerTab'\r\nimport { ScanTab } from './ScanTab'\r\nimport { connect } from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  tabsIndicator: {\r\n    backgroundColor: '#54AAB3',\r\n  },\r\n  selected: {\r\n    backgroundColor: '#54AAB3',\r\n    color: '#ffffff',\r\n    fontWeight: 600,\r\n    fontSize: 14\r\n  }\r\n});\r\n\r\nclass RowController extends React.Component {\r\n\r\n  handleChange = (event, value) => {\r\n    this.props.changeTab({ value });\r\n  };\r\n\r\n  render() {\r\n    const { classes, currentTab } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" color='secondary'>\r\n          <Tabs value={currentTab} onChange={this.handleChange} classes={{indicator: classes.tabsIndicator}}>\r\n            <Tab label=\"Paired Rows\" classes={{selected: classes.selected}}/>\r\n            <Tab label=\"Scan\" classes={{selected: classes.selected}}/>\r\n          </Tabs>\r\n        </AppBar>\r\n        {currentTab === 0 && <RowControllerTab />}\r\n        {currentTab === 1 && <ScanTab />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRowController.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentTab } = state.app\r\n\r\n    return {\r\n        currentTab\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changeTab: (value) => {\r\n        dispatch({type: 'CHANGE_TAB', value})\r\n    }\r\n})\r\n\r\n\r\nconst connectedRowController = (connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RowController)))\r\nexport {connectedRowController as RowController}","import React, { Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Grid, TextField, Typography, FormControlLabel, FormControl, Radio, RadioGroup, Button } from '@material-ui/core';\r\nimport { connect } from 'react-redux'\r\nimport { appService } from '../App/app.services';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    [theme.breakpoints.up('md')]: {\r\n        height: '660px'\r\n    }\r\n  },\r\n  grid2: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '90%',\r\n    [theme.breakpoints.up('md')]: {\r\n        width: '30%',\r\n    }\r\n  },\r\n  field: {\r\n    width: '90%',\r\n    [theme.breakpoints.up('md')]: {\r\n        margin: '10px 0 0 0'\r\n    }\r\n  },\r\n  saveButton: {\r\n    margin: '10px 10px 10px 5%',\r\n    alignSelf: 'start',\r\n    [theme.breakpoints.down('sm')]: {\r\n        width: '90%',\r\n        margin: 10,\r\n        alignSelf: 'center'\r\n    }\r\n  }\r\n});\r\n\r\nclass ZoneController extends React.Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        return (\r\n            <Fragment>\r\n                    <Grid item xs={12} container direction='column' justify='center' alignItems='center' className={classes.root}>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Network\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='ssid'\r\n                            label='SSID'\r\n                            value={this.state.ssid}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='password'\r\n                            label='Password'\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='staticIP'\r\n                            label='Static IP'\r\n                            value={this.state.staticIP}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary' className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Heart Beat\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='heartbeatInterval'\r\n                            label='Heart Beat Interval'\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='heartbeatMaxMessages'\r\n                            label='Heart Beat Max Messages'\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Big Query\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='bqKey'\r\n                            label='Big Query key'\r\n                            value={this.state.bqKey}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            PAN ID\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='panID'\r\n                            label='PAN ID'\r\n                            value={this.state.panID}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Wind Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='maxWindSpeed'\r\n                            label='Max Wind Speed'\r\n                            value={this.state.maxWindSpeed}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='meanWindSpeed'\r\n                            label='Mean Wind Speed'\r\n                            value={this.state.meanWindSpeed}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='windSpeedTimer'\r\n                            label='Wind Speed Timer'\r\n                            value={this.state.windSpeedTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Flood Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='maxFloodLevel'\r\n                            label='Max FLood Level'\r\n                            value={this.state.maxFloodLevel}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='floodLevelTimer'\r\n                            label='Flood level Timer'\r\n                            value={this.state.floodLevelTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Snow Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='maxSnowLevel'\r\n                            label='Max Snow Level'\r\n                            value={this.state.maxSnowLevel}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='snowLevelTimer'\r\n                            label='Snow level Timer'\r\n                            value={this.state.snowLevelTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Rain Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='maxRainLevel'\r\n                            label='Max Rain Level'\r\n                            value={this.state.maxRainLevel}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='rainLevelTimer'\r\n                            label='Rain level Timer'\r\n                            value={this.state.rainLevelTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <FormControl component=\"fieldset\" className={classes.field}>\r\n                            <RadioGroup\r\n                                row\r\n                                aria-label=\"Sync\"\r\n                                name=\"sync\"\r\n                                value={this.state.syncTime}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <FormControlLabel value=\"internet\" control={<Radio color='primary'/>} label=\"Sync from internet\" />\r\n                                <FormControlLabel value=\"scada\" control={<Radio color='primary'/>} label=\"Sync from SCADA\" />\r\n                            </RadioGroup>\r\n                            <Button variant='contained' color='primary' style={{marginBottom: 10}}>Sync</Button>\r\n                        </FormControl>\r\n                        </div>\r\n                    </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData } = state.app\r\n\r\n    return {\r\n        commissioningData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setWifiInfo: (ssid, pass, staticIP) => {\r\n        dispatch({type: 'SET_WIFI_INFO'}) \r\n        appService.setWifiInfo(ssid, pass)\r\n    }\r\n})\r\n\r\n\r\nconst connectedZoneController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ZoneController))\r\nexport {connectedZoneController as ZoneController}","import React from 'react'\r\nimport { Grid, Button, Checkbox, TextField, DialogActions, DialogTitle, Dialog, DialogContent, MenuItem, OutlinedInput, InputLabel, FormControl, Select, Tooltip } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      height: '100%',\r\n      overflowX: 'auto',\r\n      backgroundColor: 'white'\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    buttons: {\r\n        marginBottom: 10,\r\n        marginRight: 10,\r\n        marginTop: 10\r\n    }\r\n});\r\n  \r\n\r\nclass Sensors extends React.Component {\r\n\r\n    state = {\r\n        selectedSensors: [],\r\n        dialog: false,\r\n        which: 'none',\r\n        port: '',\r\n        type: '',\r\n        model: '',\r\n        samplingPeriod: '',\r\n        driverFile: '',\r\n        driverFileName: '',\r\n        enabled: []\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.getSensors()\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.sensors !== this.props.sensors) {\r\n            this.setState({...this.state, enabled: [...nextProps.sensors.filter(s => s.enabled === true)]})\r\n        }\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedSensors.length === this.props.sensors.length) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...this.props.sensors]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectSensor = (row) => {\r\n        if(this.state.selectedSensors.filter(t => t.model === row.model && t.type === row.type).length === 0) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...this.state.selectedSensors, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...this.state.selectedSensors.filter(t => t.model !== row.model)]\r\n            })\r\n        }\r\n    }\r\n\r\n    addSensor = () => {\r\n        this.setState({ ...this.state, dialog: true, which: 'add'})\r\n    }\r\n\r\n    editSensor = () => {\r\n        this.setState({ ...this.state, dialog: true, which: 'edit', port: this.state.selectedSensors[0].port, type: this.state.selectedSensors[0].type, model: this.state.selectedSensors[0].model, samplingPeriod: this.state.selectedSensors[0].samplingPeriod})\r\n    }\r\n\r\n    removeSensor = () => {\r\n        this.props.removeSensor(this.state.selectedSensors)\r\n    }\r\n\r\n    enable = (row) => {\r\n        if(this.state.enabled.filter(t => t.model === row.model && t.type === row.type).length === 0) {\r\n            this.props.enableSensor(row.type, row.model)\r\n            this.setState({...this.state, enabled: [...this.state.enabled, row]})\r\n        } else {\r\n            this.props.disableSensor(row.type, row.model)\r\n            this.setState({...this.state, enabled: this.state.enabled.filter(e => e !== row)})\r\n        }\r\n        \r\n    }\r\n\r\n    handleClose = () => {\r\n        if(this.state.which === 'edit') {\r\n            this.props.softRemoveSensor(this.state.selectedSensors)\r\n            this.props.addSensor(this.state.port, this.state.type, this.state.model, this.state.samplingPeriod)\r\n            this.props.uploadDriver(this.state.driverFile, this.state.type, this.state.model)   \r\n        } else {\r\n            this.props.addSensor(this.state.port, this.state.type, this.state.model, this.state.samplingPeriod)\r\n            this.props.uploadDriver(this.state.driverFile, this.state.type, this.state.model)\r\n        }\r\n            \r\n        \r\n        this.setState({ ...this.state, dialog: false, which: 'none' });\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ ...this.state, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    \r\n    handleSelectedFile = e => {\r\n        this.setState({\r\n            ...this.state,\r\n            driverFile: e.target.files[0],\r\n            driverFileName: e.target.files[0].name\r\n        })\r\n    }\r\n\r\n    render() {console.log(this.state)\r\n        const { classes, sensors } = this.props\r\n\r\n        return (\r\n            <Grid container direction='column' className={classes.root}>\r\n                <Grid item style={{textAlign: 'end'}}>\r\n                    <Button color='primary' variant='contained' className={classes.buttons} onClick={() => this.addSensor()}>Add New</Button>\r\n                    {this.state.selectedSensors.length > 1 ?\r\n                        <Tooltip title='Cannot edit multiple sensors at once. Please choose a single sensor to edit.'>\r\n                            <span><Button color='primary' variant='contained' className={classes.buttons} disabled>Edit</Button></span>\r\n                        </Tooltip> :\r\n                        <Button color='primary' variant='contained' disabled={this.state.selectedSensors.length !== 1} className={classes.buttons} onClick={() => this.editSensor()}>Edit</Button>\r\n                    }\r\n                </Grid>\r\n                <Grid item>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell\r\n                            onClick={() => this.selectAll()}\r\n                            style={{cursor: 'pointer'}}\r\n                        >{sensors && sensors.length > 1 && \r\n                            <Checkbox \r\n                                checked={this.state.selectedSensors.length === this.props.sensors.length}\r\n                                color='primary'\r\n                            />}\r\n                                </TableCell>\r\n                        <TableCell >Port #</TableCell>\r\n                        <TableCell >Sensor Type</TableCell>\r\n                        <TableCell >Model #</TableCell>\r\n                        <TableCell >Sampling Period</TableCell>\r\n                        <TableCell >Enable</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {sensors.map(row => (\r\n                        <TableRow key={row.port+row.type+row.model}\r\n                            style={{cursor: 'pointer'}}\r\n                        >\r\n                            <TableCell>\r\n                                <Checkbox \r\n                                    onClick={() => this.selectSensor(row)}\r\n                                    checked={this.state.selectedSensors.filter(t => t.model === row.model && t.type === row.type).length !== 0}\r\n                                    color='primary'\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell >{row.port}</TableCell>\r\n                            <TableCell >{row.type}</TableCell>\r\n                            <TableCell >{row.model}</TableCell>\r\n                            <TableCell >{row.samplingPeriod}</TableCell>\r\n                            <TableCell>\r\n                                <Checkbox \r\n                                    checked={this.state.enabled.filter(t => t.model === row.model && t.type === row.type).length !== 0}\r\n                                    onClick={() => this.enable(row)}\r\n                                    color='primary'\r\n                                />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>{this.props.sensors.length > 0 &&\r\n                <Grid item style={{textAlign: 'end'}}>\r\n                    <Button color='primary' variant='contained' disabled={this.state.selectedSensors.length === 0} className={classes.buttons} onClick={() => this.removeSensor()}>Remove</Button>\r\n                </Grid>}\r\n                </Grid>\r\n                <Dialog\r\n                    open={this.state.dialog}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">{this.state.which === 'add' ? 'Add Sensor' : 'Edit Sensor'}</DialogTitle>\r\n                    <DialogContent>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl} fullWidth margin='dense'>\r\n                            <InputLabel htmlFor=\"port\">\r\n                                Port #\r\n                            </InputLabel>\r\n                            <Select\r\n                                value={this.state.port}\r\n                                onChange={this.handleChange}\r\n                                autoWidth\r\n                                input={<OutlinedInput labelWidth={50} name=\"port\" id=\"port\" />}\r\n                            >\r\n                                <MenuItem value={'ADC48CH0'}>ADC48CH0 (Address: 0x48; Channel: 0)</MenuItem>\r\n                                <MenuItem value={'ADC48CH1'}>ADC48CH1 (Address: 0x48; Channel: 1)</MenuItem>\r\n                                <MenuItem value={'ADC48CH2'}>ADC48CH2 (Address: 0x48; Channel: 2)</MenuItem>\r\n                                <MenuItem value={'ADC48CH3'}>ADC48CH3 (Address: 0x48; Channel: 3)</MenuItem>\r\n                                <MenuItem value={'ADC49CH0'}>ADC49CH0 (Address: 0x49; Channel: 0)</MenuItem>\r\n                                <MenuItem value={'ADC49CH1'}>ADC49CH1 (Address: 0x49; Channel: 1)</MenuItem>\r\n                                <MenuItem value={'ADC49CH2'}>ADC49CH2 (Address: 0x49; Channel: 2)</MenuItem>\r\n                                <MenuItem value={'ADC49CH3'}>ADC49CH3 (Address: 0x49; Channel: 3)</MenuItem>\r\n                                <MenuItem value={'Modbus RTU'}>Modbus RTU</MenuItem>\r\n                                <MenuItem value={'GPIO11'}>GPIO11 (Pin 11)</MenuItem>\r\n                                <MenuItem value={'GPIO13'}>GPIO13 (Pin 13)</MenuItem>\r\n                                <MenuItem value={'GPIO15'}>GPIO15 (Pin 15)</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl} fullWidth margin='dense'>\r\n                            <InputLabel htmlFor=\"type\">\r\n                                Sensor Type\r\n                            </InputLabel>\r\n                            <Select\r\n                                value={this.state.type}\r\n                                onChange={this.handleChange}\r\n                                autoWidth\r\n                                input={<OutlinedInput labelWidth={100} name=\"type\" id=\"type\" />}\r\n                            >\r\n                                <MenuItem value={'wind'}>Wind Sensor</MenuItem>\r\n                                <MenuItem value={'snow'}>Snow Sensor</MenuItem>\r\n                                <MenuItem value={'flood'}>Flood Sensor</MenuItem>\r\n                                <MenuItem value={'rain'}>Rain Sensor</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField\r\n                            fullWidth\r\n                            id='model'\r\n                            name='model'\r\n                            label='Model #'\r\n                            value={this.state.model}\r\n                            onChange={this.handleChange}\r\n                            margin=\"dense\"\r\n                            variant='outlined'\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id='samplingPeriod'\r\n                            name='samplingPeriod'\r\n                            label='samplingPeriod'\r\n                            value={this.state.samplingPeriod}\r\n                            onChange={this.handleChange}\r\n                            margin=\"dense\"\r\n                            variant='outlined'\r\n                        />\r\n                        <div style={{display: 'flex', alignItems: 'baseline'}}>\r\n                        <TextField\r\n                            id=\"driverFile\"\r\n                            label=\"Driver File\"\r\n                            helperText=\"Upload Sensor Driver File\"\r\n                            name='driverFile'\r\n                            value={this.state.driverFileName}\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        />\r\n                        <input\r\n                            accept=\"*\"\r\n                            style={{ display: 'none'}}\r\n                            id=\"contained-button-file\"\r\n                            type=\"file\"\r\n                            onChange={this.handleSelectedFile}\r\n                        />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\" style={{margin: 5}}>\r\n                                Browse\r\n                            </Button>\r\n                        </label>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant='contained' onClick={this.handleClose} color=\"primary\">\r\n                            {this.state.which === 'add' ? 'Add Sensor' : 'Save'}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Grid>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { sensors } = state.app\r\n\r\n    return {\r\n        sensors,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getSensors: () => {\r\n        dispatch({type: 'GET_SENSORS_REQUEST'})\r\n        appService.getSensors()\r\n            .then(json => {\r\n                dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_SENSORS_FAILURE'})\r\n            })        \r\n    },\r\n    addSensor: (port, type, model, samplingPeriod) => {\r\n        dispatch({type: 'ADD_SENSOR_REQUEST'})\r\n        appService.addSensor(port, type, model, samplingPeriod)\r\n            .then(json => {\r\n                dispatch({type: 'ADD_SENSORS_SUCCESS'})\r\n                dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                appService.getSensors()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                    }) \r\n            }, error => {\r\n                dispatch({type: 'ADD_SENSORS_FAILURE'})\r\n            })\r\n    },\r\n    removeSensor: (selectedSensors) => {\r\n        selectedSensors.map(s => {\r\n            dispatch({type: 'REMOVE_SENSOR_REQUEST'})\r\n            appService.removeSensor(s.model, s.type)\r\n                .then(json => {\r\n                    dispatch({type: 'REMOVE_SENSOR_SUCCESS'})\r\n                    dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                    appService.getSensors()\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                        })\r\n                }, error => {\r\n                    dispatch({type: 'REMOVE_SENSOR_FAILURE'})\r\n                })\r\n        })\r\n        \r\n    },\r\n    softRemoveSensor: (selectedSensors) => {\r\n        selectedSensors.map(s => {\r\n            dispatch({type: 'REMOVE_SENSOR_REQUEST'})\r\n            appService.removeSensor(s.model, s.type)\r\n                .then(json => {\r\n                    dispatch({type: 'REMOVE_SENSOR_SUCCESS'})\r\n                }, error => {\r\n                    dispatch({type: 'REMOVE_SENSOR_FAILURE'})\r\n                })\r\n        })\r\n    },\r\n    enableSensor: (type, model) => {\r\n        dispatch({type: 'ENABLE_SENSOR_REQUEST'})\r\n        appService.enableSensor(type, model)\r\n            .then(json => {\r\n                dispatch({type: 'ENABLE_SENSOR_SUCCESS'})\r\n                dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                appService.getSensors()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                    }) \r\n            }, error => {\r\n                dispatch({type: 'ENABLE_SENSOR_FAILURE'})\r\n            })\r\n    },\r\n    disableSensor: (type, model) => {\r\n        dispatch({type: 'DISABLE_SENSOR_REQUEST'})\r\n        appService.disableSensor(type, model)\r\n            .then(json => {\r\n                dispatch({type: 'DISABLE_SENSOR_SUCCESS'})\r\n                dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                appService.getSensors()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                    }) \r\n            }, error => {\r\n                dispatch({type: 'DISABLE_SENSOR_FAILURE'})\r\n            })\r\n    },\r\n    uploadDriver: (file, type, model) => {\r\n        dispatch({type: 'UPLOAD_DRIVER_FILE_REQUEST'})\r\n        appService.uploadDriver(file, type, model)\r\n            .then(json => {\r\n                dispatch({type: 'UPLOAD_DRIVER_FILE_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'UPLOAD_DRIVER_FILE_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedSensors = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Sensors))\r\nexport {connectedSensors as Sensors}","import React from 'react';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst styles1 = theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n  const { classes, className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={[classes[variant], className]}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={[classes.icon, classes.iconVariant]} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          className={classes.close}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nexport const SnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);","import React from 'react';\r\nimport { NavBar } from '../NavBar/NavBar'\r\nimport {Dashboard} from '../Dashboard/Dashboard'\r\nimport { RowController }  from '../RowController/RowController'\r\nimport { ZoneController } from '../ZoneController/ZoneController'\r\nimport { Sensors } from '../Sensors/Sensors'\r\nimport { About } from '../About/About'\r\nimport { connect } from 'react-redux'\r\nimport { appService } from './app.services';\r\nimport { Snackbar, DialogActions, DialogTitle, Dialog, DialogContent, Button, DialogContentText, Slide } from '@material-ui/core';\r\nimport { SnackbarContentWrapper } from '../util/SnackbarContentWrapper';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { store } from '../util/store'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%'\r\n    },\r\n    topCenter: {\r\n        top: 75\r\n    }\r\n})\r\n\r\nconst Initializing = () => <div style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>INITIALIZING...</div>\r\n\r\nclass App extends React.Component {\r\n    queue = [];\r\n    timer = null\r\n\r\n    state = {\r\n        open: false,\r\n        alert: null,\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.props.init()\r\n        const io = socketIOClient(`http://${window.location.hostname}:8080`);\r\n        io.on('connect', () => {\r\n            console.log('connected')\r\n        })\r\n        io.on('ui/rover/scan', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/scan', json)\r\n        })\r\n        io.on('ui/rover/spa', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/spa', json)\r\n        })\r\n        io.on('ui/rover/stowangles', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/stowangles', json)\r\n        })\r\n        io.on('ui/rover/response', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/response', json)\r\n        })\r\n        io.on('time', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('time', json)\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.alert !== null && (nextProps.alert !== this.props.alert)) {\r\n            this.queue.push(nextProps.alert);\r\n        \r\n            if (this.state.open) {\r\n                this.setState({ open: false });\r\n            } else {\r\n                this.processQueue();\r\n            }    \r\n        }\r\n    }\r\n\r\n    processQueue = () => {\r\n        if (this.queue.length > 0) {\r\n            this.setState({\r\n                alert: this.queue.shift(),\r\n                open: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n        return;\r\n        }\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleExited = () => {\r\n        this.processQueue();\r\n    };\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return ( \r\n                <div className={classes.root}>\r\n                    <NavBar>\r\n                    {\r\n                        this.props.currentPage === 'Dashboard' ? <Dashboard /> :\r\n                        this.props.currentPage === 'Row Controller' ? <RowController /> :\r\n                        this.props.currentPage === 'Zone Controller' ? <ZoneController /> :\r\n                        this.props.currentPage === 'Sensors' ? <Sensors /> : \r\n                        this.props.currentPage === 'About' ? <About /> : <Initializing />\r\n                    }\r\n                    </NavBar>\r\n                    <Snackbar\r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'center',\r\n                        }}\r\n                        open={this.state.open}\r\n                        //autoHideDuration={3000}\r\n                        onClose={this.handleClose}\r\n                        onExited={this.handleExited}\r\n                        classes={{anchorOriginTopCenter: classes.topCenter}}\r\n                    >\r\n                        <SnackbarContentWrapper\r\n                            onClose={this.handleClose}\r\n                            variant={this.state.alert === null ? 'info' : this.state.alert.type}\r\n                            message={this.state.alert === null ? '' : this.state.alert.message}\r\n                        />\r\n                    </Snackbar>\r\n                    {/* <Dialog\r\n                        open={this.state.open}\r\n                        onClose={this.handleClose}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                        style={{ minWidth: 300 }}\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\" style={{color:'white', background: this.state.alert !== null ? this.state.alert.type==='success' ? 'green' : this.state.alert.type === 'warning' ? 'orange' : 'red' : 'blue'}}>{this.state.alert === null ? 'info' : this.state.alert.type}</DialogTitle>\r\n                        <DialogContent style={{color:'white', background: this.state.alert !== null ? this.state.alert.type==='success' ? 'green' : this.state.alert.type === 'warning' ? 'orange' : 'red' : 'blue'}}>\r\n                        <DialogContentText id=\"alert-dialog-description\" style={{color:'white'}}>\r\n                            {this.state.alert === null ? '' : this.state.alert.message}\r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions style={{color:'white', background: this.state.alert !== null ? this.state.alert.type==='success' ? 'green' : this.state.alert.type === 'warning' ? 'orange' : 'red' : 'blue'}}>\r\n                        <Button onClick={this.handleClose} color=\"primary\" variant='contained'>\r\n                            Close\r\n                        </Button>\r\n                        </DialogActions>\r\n                    </Dialog> */}\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentPage, alert, timeZone } = state.app\r\n\r\n    return {\r\n        currentPage,\r\n        alert,\r\n        timeZone\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    init: () => {\r\n        dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n        appService.getCommissioningData()\r\n            .then(json => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n            })\r\n        \r\n        dispatch({type: 'GET_TIMEZONE_REQUEST'})\r\n        appService.getTimeZone()\r\n            .then(json => {\r\n                if(json.timeZone === null) {\r\n                    dispatch({type: 'SET_TIMEZONE_REQUEST'})\r\n                    appService.setTimeZone(store.getState().app.timeZone)\r\n                        .then(json => {\r\n                            dispatch({type: 'SET_TIMEZONE_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'SET_TIMEZONE_FAILURE'})\r\n                        })\r\n                }\r\n                dispatch({type: 'GET_TIMEZONE_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_TIMEZONE_FAILURE', error})\r\n            })\r\n    },\r\n    getTime: () => {\r\n        dispatch({type: 'GET_TIME_REQUEST'})\r\n        appService.getTime()\r\n            .then(json => {\r\n                dispatch({type: 'GET_TIME_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_TIME_FAILURE', error})\r\n            })\r\n    },\r\n    clearAlert : () => {\r\n        dispatch({type: 'CLEAR_ALERT'})\r\n    },\r\n    received: (topic, json) => {\r\n        dispatch({type: topic, json})\r\n    }\r\n})\r\n\r\n\r\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(App))\r\nexport {connectedApp as App}","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { store } from './util/store';\r\nimport { App } from './App';\r\nimport './index.css'\r\n\r\n/* const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#54AAB3\",\r\n        contrastText: '#fff'\r\n      }\r\n    },\r\n    overrides: {\r\n      MuiIconButton: {\r\n          root: {\r\n            color: 'white'\r\n          },\r\n      }\r\n    } \r\n  }); */\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#54AAB3',\r\n        dark: '#3c8f98',\r\n        contrastText: '#ffffff'\r\n      },\r\n      secondary: {\r\n        main: '#ffffff',\r\n        contrastText: '#000000'\r\n      }\r\n    }/* ,\r\n    overrides: {\r\n      MuiListItem: {\r\n        root: {\r\n          backgroundColor: '#ffffff',\r\n          '&$selected': {\r\n            backgroundColor: '#54AAB3',\r\n            color: '#ffffff'\r\n          },\r\n          '&$selected:hover': {\r\n            backgroundColor: '#3c8f98',\r\n            color: '#ffffff'\r\n          }\r\n        },\r\n      },\r\n    } */\r\n  });\r\n\r\nrender(\r\n    <MuiThemeProvider theme={theme}>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </MuiThemeProvider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}