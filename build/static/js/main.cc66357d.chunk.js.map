{"version":3,"sources":["App/app.reducer.js","util/rootReducer.js","util/store.js","NavBar/NavBar.js","Dashboard/TrackerList.js","App/app.services.js","Dashboard/TrackerDetails.js","Dashboard/Dashboard.js","RowController/SPAParameters.js","RowController/StowAngles.js","RowController/EditRowController.js","RowController/_EditRowController.js","RowController/ControlRowController.js","RowController/RowControllerTab.js","RowController/ScanTab.js","RowController/RowController.js","ZoneController/ZoneController.js","Sensors/Sensors.js","util/SnackbarContentWrapper.js","App/App.jsx","index.js"],"names":["initialState","currentPage","currentTab","currentEditTab","timeZone","Intl","DateTimeFormat","resolvedOptions","alert","time","Date","now","commissioningData","fetchingCommissioningData","currentTracker","currentTrackerInfo","xbeeResponse","controlledTrackers","editedTrackers","SPAParameters","stowAngles","sendingSPAParameters","sendingStowAngles","gettingSPAParameters","gettingStowAngles","addingTrackers","sensors","responseQueue","listen","windSense","wifiList","difference","a1","a2","result","i","length","indexOf","push","rootReducer","combineReducers","app","state","action","type","Object","objectSpread","json","Result","reading","trackerID","concat","toConsumableArray","page","commandQueue","value","staticData","a","filter","r","DID","deviceID","newXbeeResponse","devices","trackers","newSPAParameters","defineProperty","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ResponsiveDrawer","mobileOpen","handleDrawerToggle","_this","setState","checkTime","_this2","this","_this$props","props","classes","theme","children","drawer","react_default","createElement","className","toolbar","src","height","width","style","marginLeft","marginRight","alt","Divider","List","map","text","index","ListItem","button","key","onClick","changePage","selected","disabled","ListItemText","disableTypography","primary","root","CssBaseline","AppBar","position","color","appBar","Toolbar","IconButton","aria-label","menuButton","Menu_default","Typography","variant","noWrap","Chip","icon","Toys_default","backgroundColor","label","toFixed","AccessTime_default","Number","toLocaleString","getHours","getMinutes","Hidden","mdUp","implementation","Drawer","container","anchor","direction","open","onClose","paper","drawerPaper","smDown","content","React","Component","connectedNavBar","connect","_state$app","dispatch","withStyles","display","breakpoints","up","flexShrink","mixins","flexGrow","padding","spacing","paddingTop","withTheme","TrackerList","react","Grid","Table","TableHead","TableRow","TableCell","TableBody","n","hover","setCurrentTracker","cursor","connectedTrackerList","appService","setWifiInfo","ssid","pass","staticIP","requestOptions","method","mode","body","JSON","stringify","password","fetch","hostName","then","handleResponse","uploadDriver","file","model","data","FormData","append","selectSensor","windSensor","rainSensor","floodSensor","snowSensor","uploadKey","setWindAddress","address","deviceAddress","getWindAddress","caliberate","sensor","sendCommand","CMD","VALUES","sendStow","MODE","getCommissioningData","getCurrentTrackerInfo","triggerDiscovery","hostName2","setPanID","panID","console","log","threshold","maxWindSpeed","maxRainFall","meanWindSpeed","windSpeedTimer","maxFloodLevel","maxSnowFall","heartBeat","enabled","hbinterval","maxMsgs","interval","setTimeZone","getHeartBeat","getThreshold","getPanID","getFrequency","setFrequency","power","status","powerRequestTimePeriod","statusRequestTimePeriod","getTimeZone","getTime","discover","did","addTrackers","removeTrackers","DIDs","sendSPAParameters","Lattitude","Longitude","Altitude","EastLimit","WestLimit","TrackerWidth","Pitch","TrackingAccuracy","AzimuthDeviation","AltitudeTrackeronEast","AltitudeTrackeronWest","StartTimeLead","EndTimeLag","backtracking","sendStowAngles","WindStowAngle","SnowStowAngle","CleanStowAngle","NightStowAngle","EmergencyStowAngle","getSPAParameters","getStowAngles","getSensors","addSensor","port","samplingPeriod","removeSensor","enableSensor","disableSensor","scanWifi","window","location","hostname","response","ok","error","message","statusText","Promise","reject","NoCurrentTrackerInfo","alignItems","justifyContent","TrackerDetails","timer","componentDidMount","refresh","componentWillReceiveProps","nextProps","c","arguments","undefined","setTimeout","TrackerDetails_NoCurrentTrackerInfo","currentAngle","marginTop","textAlign","overflow","macID","currentMode","timeStamp","toLocaleDateString","toLocaleTimeString","hour12","connectedTrackerDetails","flexWrap","Initializing","flexDirection","margin","Button","scan","Fetching","Dashboard","Dashboard_Fetching","Dashboard_Initializing","item","trackerList","Paper","trackerDetails","connectedDashboard","minHeight","TrackingLimitEast","TrackingLimitWest","RowWidth","RowPitch","TrackingResolution","AltitudeofTrackerontheEast","AltitudeofTrackerontheWest","EarlyStartMinutes","LateFinishMinutes","LattitudeError","LongitudeError","AltitudeError","TrackingLimitEastError","TrackingLimitWestError","RowWidthError","RowPitchError","TrackingResolutionError","AzimuthDeviationError","AltitudeofTrackerontheEastError","AltitudeofTrackerontheWestError","EarlyStartMinutesError","LateFinishMinutesError","backTracking","submit","values","split","handleChange","event","_objectSpread2","target","name","handleBlur","e","p","RegExp","test","_objectSpread4","min","max","_objectSpread5","_objectSpread6","_objectSpread3","_this$state","fieldGrid","adornment","TextField","field","id","replace","onChange","InputLabelProps","shrink","InputProps","endAdornment","InputAdornment","helperText","onBlur","FormControlLabel","control","Checkbox","checked","connectedSPAParameters","t","StowAngles","_objectSpread7","connectedStowAngles","EditRowController","changeTab","header","back","ArrowBack_default","fontSize","disableGutters","rowNumber","chip","request","success","tabs","Tabs","indicator","tabsIndicator","Tab","connectedEditRowController","palette","background","fontWeight","boxShadow","green","red","handleChangeSPA","_objectSpread8","_this$state2","borderBottom","paddingLeft","ControlRowController","typeOfStow","auto","handleClick","anchorEl","currentTarget","handleClose","autoToggle","second","aria-owns","aria-haspopup","minWidth","paddingRight","ExpandMore_default","Menu_Menu","Boolean","MenuItem","labelPlacement","Switch","connectedControlRowController","RowControllerTab","selectedTrackers","selectAll","selectRow","row","editTracker","setEditedTrackers","controlTracker","setControlledTrackers","s","_EditRowController_connectedEditRowController","buttons","table","connectedRowControllerTab","overflowX","marginBottom","ScanTab","scanSelection","inputChange","scanParameter","FormControl","component","formControl","RadioGroup","Radio","textField","placeholder","verticalAlign","res","connectedScanTab","RowController","connectedRowController","ZoneController","xs","justify","grid2","fullWidth","InputLabel","htmlFor","Select","autoWidth","selectWifi","input","OutlinedInput","labelWidth","CircularProgress","w","Refresh_default","saveButton","bqKey","floodLevelTimer","maxSnowLevel","snowLevelTimer","maxRainLevel","rainLevelTimer","syncTime","connectedZoneController","alignSelf","down","Sensors","selectedSensors","dialog","which","driverFile","driverFileName","editSensor","enable","softRemoveSensor","handleSelectedFile","files","Tooltip","title","Dialog","aria-labelledby","DialogTitle","DialogContent","accept","DialogActions","connectedSensors","variantIcon","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","SnackbarContentWrapper","dark","amber","iconVariant","opacity","other","objectWithoutProperties","Icon","SnackbarContent","assign","aria-describedby","close","Close_default","App","queue","init","io","socketIOClient","on","parse","received","processQueue","shift","reason","handleExited","About","App_Initializing","Snackbar","anchorOrigin","vertical","horizontal","onExited","anchorOriginTopCenter","topCenter","connectedApp","getState","clearAlert","topic","top","createMuiTheme","main","contrastText","secondary","render","MuiThemeProvider","es","document","getElementById"],"mappings":"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","file":"static/js/main.cc66357d.chunk.js","sourcesContent":["const initialState = {\r\n    currentPage: '',\r\n    currentTab: 0,\r\n    currentEditTab: 0,\r\n    timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n    alert: null,\r\n    time: Date.now(),\r\n    commissioningData: null,\r\n    fetchingCommissioningData: false,\r\n    currentTracker: null,\r\n    currentTrackerInfo: null,\r\n    xbeeResponse: [],\r\n    controlledTrackers: [],\r\n    editedTrackers: [],\r\n    SPAParameters: null,\r\n    stowAngles: null,\r\n    sendingSPAParameters: false,\r\n    sendingStowAngles: false,\r\n    gettingSPAParameters: false,\r\n    gettingStowAngles: false,\r\n    addingTrackers: false,\r\n    sensors: [],\r\n    responseQueue: [],\r\n    listen: false,\r\n    windSense: 0.0,\r\n    wifiList: []\r\n}\r\n\r\nconst difference = (a1, a2) => {\r\n    var result = [];\r\n    for (var i = 0; i < a1.length; i++) {\r\n        if (a2.indexOf(a1[i]) === -1) {\r\n            result.push(a1[i]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function app(state, action) {\r\n    if (typeof state === 'undefined') {\r\n      return initialState\r\n    }\r\n    switch (action.type) {\r\n        case 'SCAN_WIFI_SUCCESS':\r\n        return {\r\n            ...state,\r\n            wifiList: action.json.Result\r\n        }\r\n\r\n        case 'sensorReadings/wind':\r\n        return {\r\n            ...state,\r\n            windSense: action.json.reading\r\n        }\r\n\r\n        case 'time':\r\n        return {\r\n            ...state,\r\n            time: action.json.time\r\n        }\r\n\r\n        case 'SET_CURRENT_TRACKER':\r\n        return {\r\n            ...state,\r\n            currentTracker: action.trackerID\r\n        }\r\n\r\n        case 'SET_RESPONSE_LISTENER':\r\n        return {\r\n            ...state,\r\n            listen: true\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: true,\r\n            responseQueue: []\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_REQUEST':\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: true,\r\n            responseQueue: []\r\n        }\r\n\r\n        case 'ui/rover/response/multiple':\r\n        if(state.listen) {\r\n            if(state.editedTrackers.length === state.responseQueue.length + 1) {\r\n                return {\r\n                    ...state,\r\n                    responseQueue: [...state.responseQueue, action.json],\r\n                    listen: false\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                responseQueue: [...state.responseQueue, action.json]\r\n            }\r\n        } else {\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        \r\n\r\n        case 'GET_SENSORS_SUCCESS':\r\n        return {\r\n            ...state,\r\n            sensors: action.json.Result\r\n        }\r\n\r\n        case 'REMOVE_SENSOR_SUCCESS':\r\n                alert('Removed Sensor Successfully')\r\n        return {\r\n            ...state,/* \r\n            alert: {\r\n                type: 'success',\r\n                message: 'Removed Sensor Successfully'\r\n            } */\r\n        }\r\n\r\n        case 'ADD_SENSORS_SUCCESS':\r\n        alert('Added Sensor Successfully')\r\n        return {\r\n            ...state,/* \r\n            alert: {\r\n                type: 'success',\r\n                message: 'Added Sensor Successfully'\r\n            } */\r\n        }\r\n        \r\n        case 'CHANGE_PAGE':\r\n        return {\r\n            ...state,\r\n            currentPage: action.page,\r\n            responseQueue: [],\r\n            commandQueue: []\r\n        }\r\n\r\n        case 'CHANGE_TAB':\r\n        return {\r\n            ...state,\r\n            currentTab: action.value.value,\r\n            responseQueue: [],\r\n            commandQueue: []\r\n        }\r\n\r\n        \r\n        case 'CHANGE_EDIT_TAB':\r\n        return {\r\n            ...state,\r\n            currentEditTab: action.value.value,\r\n            responseQueue: [],\r\n            commandQueue: []\r\n        }\r\n\r\n        case 'CLEAR_ALERT':\r\n        return {\r\n            ...state,\r\n            alert: null           \r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_REQUEST':\r\n        return {\r\n            ...state,\r\n            fetchingCommissioningData: true\r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_SUCCESS':\r\n        if(action.json.staticData === null || action.json.staticData.length === 0) {\r\n            return {\r\n                ...state,\r\n                fetchingCommissioningData: false,\r\n                currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,\r\n                commissioningData: null\r\n            }\r\n        } else {\r\n            return {\r\n                ...state,\r\n                fetchingCommissioningData: false,\r\n                currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,\r\n                commissioningData: action.json.staticData,\r\n                currentTracker: action.json.staticData[0].trackerID\r\n            }\r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_FAILURE':\r\n        alert('Error loading commissioning data')\r\n        return {\r\n            ...state,\r\n            fetchingCommissioningData: false,\r\n            currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error loading commissioning data'\r\n            } */\r\n        }\r\n\r\n        case 'GET_TIMEZONE_SUCCESS':\r\n        if(action.json.timeZone !== null) {\r\n            return {\r\n                ...state,\r\n                timeZone: action.json.timeZone\r\n            }\r\n        } else {\r\n            return state\r\n        }\r\n\r\n        case 'GET_TIMEZONE_FAILURE':\r\n        alert('Error getting timezone')\r\n        return {\r\n            ...state,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting timezone'\r\n            } */\r\n        }\r\n\r\n        case 'SCAN':\r\n        return {\r\n            ...state,\r\n            currentPage: 'Row Controller',\r\n            currentTab: 1\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_REQUEST':\r\n        return {\r\n            ...state\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_SUCCESS':\r\n        return {\r\n            ...state,\r\n            currentTrackerInfo: action.json\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_FAILURE':\r\n        alert('Error getting current tracker info')\r\n        return {\r\n            ...state,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting current tracker info'\r\n            } */\r\n        }\r\n\r\n        case 'DISCOVER_SUCCESS':\r\n        alert('Started Scanning')\r\n        return {\r\n            ...state,\r\n            xbeeResponse: [],/* \r\n            alert: {\r\n                type: 'success',\r\n                message: 'Started Scanning'\r\n            } */\r\n        }\r\n\r\n        case 'DISCOVER_FAILURE':\r\n        alert('Error Starting Scan')\r\n        return {\r\n            ...state,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error starting scan'\r\n            } */\r\n        }\r\n\r\n        case 'ui/rover/scan':\r\n        let a = null\r\n        if(state.commissioningData === null) {\r\n            a = [...state.xbeeResponse, action.json]\r\n        } else {\r\n            let b = state.commissioningData.filter(r => action.json.DID === r.deviceID)\r\n            if(b.length === 0) {\r\n                a = [...state.xbeeResponse, action.json]\r\n            } else {\r\n                a = [...state.xbeeResponse]\r\n            }\r\n                \r\n        }\r\n        return {\r\n            ...state,\r\n            xbeeResponse: a\r\n        }\r\n\r\n        case 'ADD_TRACKERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            addingTrackers: true\r\n        }\r\n\r\n        case 'ADD_TRACKERS_SUCCESS':\r\n        alert('Tracker(s) added')\r\n        const newXbeeResponse = difference(state.xbeeResponse, action.devices)\r\n        return {\r\n            ...state,\r\n            xbeeResponse: newXbeeResponse,\r\n            addingTrackers: false,/* \r\n            alert: {\r\n                type: 'success',\r\n                message: 'Tracker(s) added'\r\n            } */\r\n        }\r\n\r\n        case 'ADD_TRACKERS_FAILURE':\r\n        alert('Error adding trackers')\r\n        return {\r\n            ...state,\r\n            addingTrackers: false,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error adding trackers'\r\n            } */\r\n        }\r\n\r\n        case 'SET_EDITED_TRACKERS':\r\n        return {\r\n            ...state,\r\n            editedTrackers: action.trackers\r\n        }\r\n\r\n        case 'SET_CONTROLLED_TRACKERS':\r\n        return {\r\n            ...state,\r\n            controlledTrackers: action.trackers\r\n        }\r\n\r\n        case 'ui/rover/spa':\r\n        let DID = action.json.DID\r\n        let newSPAParameters = {...state.SPAParameters, [DID]: action.json}\r\n        return {\r\n            ...state,\r\n            SPAParameters: newSPAParameters,\r\n            gettingSPAParameters: false\r\n        }\r\n\r\n        case 'ui/rover/stowangles':\r\n        return {\r\n            ...state,\r\n            stowAngles: action.json,\r\n            gettingStowAngles: false\r\n        }\r\n\r\n        case 'GET_STOW_ANGLES_REQUEST':\r\n        return {\r\n            ...state,\r\n            gettingStowAngles: true\r\n        }\r\n\r\n        case 'GET_STOW_ANGLES_FAILURE':\r\n        alert('Error getting stow angles')\r\n        return {\r\n            ...state,\r\n            gettingStowAngles: false,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting stow angles'\r\n            } */\r\n        }\r\n\r\n        case 'GET_SPA_PARAMETERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            gettingSPAParameters: true\r\n        }\r\n\r\n        case 'GET_SPA_PARAMETERS_FAILURE':\r\n        alert('Error getting SPA parameters')\r\n        return {\r\n            ...state,\r\n            gettingSPAParameters: false,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting SPA parameters'\r\n            } */\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_FAILURE':\r\n        alert('Error setting SPA parameters')\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: false,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error setting SPA parameters'\r\n            } */\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_SUCCESS':\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: false\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_FAILURE':\r\n        alert('Error setting stow angles')\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: false,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error setting stow angles'\r\n            } */\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_SUCCESS':\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: false\r\n        }\r\n\r\n        default:\r\n        return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport { app } from '../App/app.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  app\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n        loggerMiddleware        \r\n    )\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport Time from '@material-ui/icons/AccessTime';\r\nimport Toys from '@material-ui/icons/Toys';\r\nimport { Chip } from '@material-ui/core';\r\n\r\n\r\nconst drawerWidth = 190;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100%'\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('md')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    marginLeft: drawerWidth,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: 20,\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    paddingTop: 88\r\n  },\r\n  selected: {\r\n    backgroundColor: '#54AAB3 !important',\r\n    color: '#ffffff !important'\r\n  }\r\n});\r\n\r\nclass ResponsiveDrawer extends React.Component {\r\n  state = {\r\n    mobileOpen: false,\r\n  };\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n  };\r\n\r\n  \r\n  checkTime = (i) => {\r\n    if (i < 10) {i = \"0\" + i};  // add zero in front of numbers < 10\r\n    return i;\r\n  }\r\n\r\n  render() {\r\n    const { classes, theme, children } = this.props;\r\n\r\n    const drawer = (\r\n      <div>\r\n        <div className={classes.toolbar} >\r\n            <img src='img/voyager-logo-no bg.png' height='60px' width='90%' style={{marginLeft: '2.5%', marginRight: '2.5%'}} alt=''></img>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Dashboard', 'Row Controller', 'Zone Controller', 'Sensors', 'About'].map((text, index) => (\r\n            <ListItem \r\n                button \r\n                key={text}\r\n                onClick={() => this.props.changePage(text)}\r\n                selected={this.props.currentPage === text}\r\n                classes={{selected: classes.selected}}\r\n                disabled={text === 'About'}\r\n            >{/* \r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\r\n              <ListItemText disableTypography primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" color='primary' className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h5\" color=\"inherit\" noWrap>\r\n              Voyager Zone Controller\r\n            </Typography>\r\n            <Chip\r\n              icon={<Toys />}\r\n              style={{marginLeft: 'auto', backgroundColor: 'white'}}\r\n              label={this.props.windSense.toFixed(2)}\r\n            />\r\n            <Chip\r\n              icon={<Time />}\r\n              style={{marginLeft: 10, backgroundColor: 'white'}}\r\n              label={`${this.checkTime(new Date(new Date(Number(this.props.time)).toLocaleString('en-US', {timeZone:  this.props.timeZone})).getHours())} : ${this.checkTime(new Date(new Date(Number(this.props.time)).toLocaleString('en-US', {timeZone:  this.props.timeZone})).getMinutes())}`}\r\n            />\r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav className={classes.drawer}>\r\n          <Hidden mdUp implementation=\"css\">\r\n            <Drawer\r\n              container={this.props.container}\r\n              variant=\"temporary\"\r\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n              open={this.state.mobileOpen}\r\n              onClose={this.handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden smDown implementation=\"css\">\r\n            <Drawer\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n        </nav>\r\n        <main className={classes.content}>\r\n          {children}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\n \r\nfunction mapStateToProps(state) {\r\n    const { currentPage, time, timeZone, windSense } = state.app;\r\n    \r\n    return {\r\n        currentPage,\r\n        time,\r\n        timeZone,\r\n        windSense\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changePage: (page) => {\r\n      dispatch({type: 'CHANGE_PAGE', page})\r\n    }\r\n})\r\n  \r\nconst connectedNavBar = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ResponsiveDrawer));\r\nexport { connectedNavBar as NavBar }","import React, {Fragment} from 'react'\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { connect } from 'react-redux'\r\nimport {withStyles} from '@material-ui/core/styles'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%', width: '100%', padding: 24\r\n    },\r\n    selected: {\r\n        backgroundColor: '#54aab3 !important',\r\n        color: 'white'\r\n    }\r\n})\r\n\r\nclass TrackerList extends React.Component {\r\n\r\n    render() {\r\n        const {classes, commissioningData, currentTracker} = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Typography variant='h5'>\r\n                        Tracker List\r\n                    </Typography>\r\n                    <Table>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell >TrackerID</TableCell>\r\n                            <TableCell >Status</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {commissioningData && commissioningData.map(n => {\r\n                                return (\r\n                                <TableRow\r\n                                    hover\r\n                                    //className={[n.trackerID === currentTracker ? classes.selected : classes.row, classes.tableRow]}\r\n                                    key={n.trackerID}\r\n                                    onClick={() => this.props.setCurrentTracker(n.trackerID)}\r\n                                    style={{cursor: 'pointer'}}\r\n                                    selected={n.trackerID === currentTracker}\r\n                                    classes={{selected: classes.selected}}\r\n                                >\r\n                                    <TableCell>\r\n                                        {n.trackerID}\r\n                                    </TableCell>\r\n                                    <TableCell>Reachable</TableCell>\r\n                                </TableRow>\r\n                                );\r\n                            })}\r\n                            </TableBody>\r\n                        </Table>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData, currentTracker } = state.app\r\n\r\n    return {\r\n        commissioningData,\r\n        currentTracker\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCurrentTracker: (trackerID) => {\r\n        dispatch({type: 'SET_CURRENT_TRACKER', trackerID})\r\n    }\r\n})\r\n\r\n\r\nconst connectedTrackerList = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TrackerList))\r\nexport {connectedTrackerList as TrackerList}","export const appService = {\r\n    setWifiInfo,\r\n    uploadDriver,\r\n    selectSensor,\r\n    uploadKey,\r\n    setWindAddress,\r\n    getWindAddress,\r\n    caliberate,\r\n    sendCommand,\r\n    sendStow,\r\n    getCommissioningData,\r\n    getCurrentTrackerInfo,\r\n    triggerDiscovery,\r\n    setPanID,\r\n    threshold,\r\n    heartBeat,\r\n    setTimeZone,\r\n    getHeartBeat,\r\n    getThreshold,\r\n    getPanID,\r\n    getFrequency,\r\n    setFrequency,\r\n    getTimeZone,\r\n    getTime,\r\n    discover,\r\n    addTrackers,\r\n    removeTrackers,\r\n    sendSPAParameters,\r\n    sendStowAngles,\r\n    getSPAParameters,\r\n    getStowAngles,\r\n    getSensors,\r\n    addSensor,\r\n    removeSensor,\r\n    enableSensor,\r\n    disableSensor,\r\n    scanWifi\r\n};\r\nconst hostName = 'http://159.89.169.50:4000'; \r\n/*const hostName = `http://${window.location.hostname}:5000`;*/\r\n\r\nconst hostName2 = `http://${window.location.hostname}:5001`; \r\n\r\nfunction scanWifi() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        body: null\r\n    }\r\n\r\n    return fetch(`${hostName}/scanWifi`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction disableSensor(type, model) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            type: type, \r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/disable`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction enableSensor(type, model) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            type: type, \r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/enable`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction removeSensor(model, type) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            type: type, \r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/remove`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction addSensor(port, type, model, samplingPeriod) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            port: port, \r\n            type: type, \r\n            samplingPeriod: samplingPeriod,\r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/setParams`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getSensors() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        body: null\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/getParams`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getStowAngles(DID) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: 'QSTO'\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/get`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getSPAParameters(DID) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: \"QSPA\"\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/get`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction sendStowAngles(DID, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: 'HSTO',\r\n            VALUES: `${WindStowAngle}, ${SnowStowAngle}, ${CleanStowAngle}, ${NightStowAngle}, ${EmergencyStowAngle}`\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/set`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction sendSPAParameters(DID, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backtracking) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: \"HSPA\",\r\n            VALUES: `${Lattitude}, ${Longitude}, ${Altitude}, ${EastLimit}, ${WestLimit}, ${TrackerWidth}, ${Pitch}, ${TrackingAccuracy}, ${AzimuthDeviation}, ${AltitudeTrackeronEast}, ${AltitudeTrackeronWest}, ${StartTimeLead}, ${EndTimeLag}, 0, ${backtracking}`\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/set`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction removeTrackers(DIDs) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DIDs: DIDs\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/removePairedDevices`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction addTrackers(devices) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            devices: devices\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/addDiscoveredDevices`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction discover(did) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: did\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/scan`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction handleResponse(response) {\r\n    return response.json().then(json => {\r\n        if (!response.ok) {\r\n            const error = (json && json.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return json;\r\n    });\r\n}\r\n\r\n\r\nfunction setWifiInfo(ssid, pass, staticIP) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"ssid\": ssid,\r\n            \"password\": pass,\r\n            \"staticIP\": staticIP\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/setWifiInfo`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction uploadDriver(file, type, model) {\r\n    var data = new FormData()\r\n    data.append('file', file)\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: data\r\n    };\r\n\r\n    return fetch(`${hostName}/sensors/addDriver?type=${type}&model=${model}`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction uploadKey(file) {\r\n    var data = new FormData()\r\n    data.append('file', file)\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: data\r\n    };\r\n\r\n    return fetch(`${hostName}/loadBigQueryKey`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction selectSensor(windSensor, rainSensor, floodSensor, snowSensor) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"windSensor\": windSensor,\r\n            \"rainSensor\": rainSensor,\r\n            \"floodSensor\": floodSensor,\r\n            \"snowSensor\": snowSensor,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/sensors`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setWindAddress(address) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"deviceAddress\": address,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/windSensorSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getWindAddress() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/windSensorSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction caliberate(sensor) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"sensor\": sensor,\r\n        })\r\n    };\r\n\r\n\r\n    return fetch(`${hostName}/calibrateSensor`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n//control\r\n\r\nfunction sendCommand(deviceID, value) {\r\n\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"DID\": deviceID,\r\n            \"CMD\": \"HMNM\",\r\n            \"VALUES\": value\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/rover/control`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction sendStow(deviceID, mode) {\r\n\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"DID\": deviceID,\r\n            \"CMD\": \"HMOD\",\r\n            \"MODE\": mode\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/rover/control`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n//dashboard\r\n\r\n\r\nfunction getCommissioningData() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/getCommissioningData`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getCurrentTrackerInfo(trackerID) {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/getCurrentTrackerInfo?id=${trackerID}`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction triggerDiscovery() {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"CMD\": \"HINF\",\r\n            \"DID\": \"00000\",\r\n        })\r\n    };\r\n\r\n    return fetch(`http://${hostName2}/sendCommand`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\n//settings\r\n\r\nfunction setPanID(panID) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"panID\": panID\r\n        })\r\n    };\r\n\r\n    console.log(panID);\r\n\r\n    return fetch(`http://${hostName2}/settings/xbeePanID `, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction threshold(maxWindSpeed, maxRainFall, meanWindSpeed, windSpeedTimer, maxFloodLevel, maxSnowFall) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"maxWindSpeed\": maxWindSpeed,\r\n            \"maxRainFall\": maxRainFall,\r\n            \"meanWindSpeed\": meanWindSpeed,\r\n            \"windSpeedTimer\": windSpeedTimer,\r\n            \"maxFloodLevel\": maxFloodLevel,\r\n            \"maxSnowFall\": maxSnowFall,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/threshold`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setFrequency(power, status) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"powerRequestTimePeriod\": power,\r\n            \"statusRequestTimePeriod\": status,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/requestFrequency`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\n\r\nfunction heartBeat(enabled, hbinterval, maxMsgs) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"enabled\": enabled,\r\n            \"interval\": hbinterval,\r\n            \"maxMsgs\": maxMsgs,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/heartBeatSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setTimeZone(time) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"timeZone\": time,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/timeZone`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getTimeZone() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/timeZone`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getTime() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/time`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getThreshold() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/threshold`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getFrequency() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/requestFrequency`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getHeartBeat() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/heartBeatSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getPanID() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`http://${hostName2}/gettings/xbeePanID`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n","import React from 'react'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { connect } from 'react-redux'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%', width: '100%', padding: 24, flexWrap: 'nowrap'\r\n    }\r\n})\r\n\r\nconst NoCurrentTrackerInfo = () =>\r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            No Info Found For Selected Tracker.\r\n    </div>\r\n\r\nclass TrackerDetails extends React.Component {\r\n\r\n    timer = null\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.refresh()\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.currentTracker !== this.props.currentTracker) {\r\n            this.props.getCurrentTrackerInfo(nextProps.currentTracker)\r\n        }\r\n    }\r\n\r\n    refresh = (c = true) => {\r\n        this.props.getCurrentTrackerInfo(this.props.currentTracker)\r\n\r\n        if(c) {\r\n            this.timer = setTimeout(this.refresh, 30000)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes, currentTrackerInfo } = this.props\r\n\r\n        return (currentTrackerInfo === null ? <NoCurrentTrackerInfo /> :\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Typography variant='h5' style={{height: '48px'}}>\r\n                        Tracker Details\r\n                    </Typography>\r\n                    <div \r\n                        className={currentTrackerInfo.currentAngle !== '--' && (currentTrackerInfo.currentAngle > 58 ? 'angle60' :\r\n                        currentTrackerInfo.currentAngle > 56 ? 'angle58' :\r\n                        currentTrackerInfo.currentAngle > 54 ? 'angle56' :\r\n                        currentTrackerInfo.currentAngle > 52 ? 'angle54' :\r\n                        currentTrackerInfo.currentAngle > 50 ? 'angle52' :\r\n                        currentTrackerInfo.currentAngle > 48 ? 'angle50' :\r\n                        currentTrackerInfo.currentAngle > 46 ? 'angle48' :\r\n                        currentTrackerInfo.currentAngle > 44 ? 'angle46' :\r\n                        currentTrackerInfo.currentAngle > 42 ? 'angle44' :\r\n                        currentTrackerInfo.currentAngle > 40 ? 'angle42' :\r\n                        currentTrackerInfo.currentAngle > 38 ? 'angle40' :\r\n                        currentTrackerInfo.currentAngle > 36 ? 'angle38' :\r\n                        currentTrackerInfo.currentAngle > 34 ? 'angle36' :\r\n                        currentTrackerInfo.currentAngle > 32 ? 'angle34' :\r\n                        currentTrackerInfo.currentAngle > 30 ? 'angle32' :\r\n                        currentTrackerInfo.currentAngle > 28 ? 'angle30' :\r\n                        currentTrackerInfo.currentAngle > 26 ? 'angle28' :\r\n                        currentTrackerInfo.currentAngle > 24 ? 'angle26' :\r\n                        currentTrackerInfo.currentAngle > 22 ? 'angle24' :\r\n                        currentTrackerInfo.currentAngle > 20 ? 'angle22' :\r\n                        currentTrackerInfo.currentAngle > 18 ? 'angle20' :\r\n                        currentTrackerInfo.currentAngle > 16 ? 'angle18' :\r\n                        currentTrackerInfo.currentAngle > 14 ? 'angle16' :\r\n                        currentTrackerInfo.currentAngle > 12 ? 'angle14' :\r\n                        currentTrackerInfo.currentAngle > 10 ? 'angle12' :\r\n                        currentTrackerInfo.currentAngle > 8 ? 'angle10' :\r\n                        currentTrackerInfo.currentAngle > 6 ? 'angle8' :\r\n                        currentTrackerInfo.currentAngle > 4 ? 'angle6' :\r\n                        currentTrackerInfo.currentAngle > 2 ? 'angle4' :\r\n                        currentTrackerInfo.currentAngle > 0 ? 'angle2' :\r\n                        currentTrackerInfo.currentAngle > -2 ? 'angle0' :\r\n                        currentTrackerInfo.currentAngle > -4 ? 'angle_2' :\r\n                        currentTrackerInfo.currentAngle > -6 ? 'angle_4' :\r\n                        currentTrackerInfo.currentAngle > -8 ? 'angle_6' :\r\n                        currentTrackerInfo.currentAngle > -10 ? 'angle_8' :\r\n                        currentTrackerInfo.currentAngle > -12 ? 'angle_10' :\r\n                        currentTrackerInfo.currentAngle > -14 ? 'angle_12' :\r\n                        currentTrackerInfo.currentAngle > -16 ? 'angle_14' :\r\n                        currentTrackerInfo.currentAngle > -18 ? 'angle_16' :\r\n                        currentTrackerInfo.currentAngle > -20 ? 'angle_18' :\r\n                        currentTrackerInfo.currentAngle > -22 ? 'angle_20' :\r\n                        currentTrackerInfo.currentAngle > -24 ? 'angle_22' :\r\n                        currentTrackerInfo.currentAngle > -26 ? 'angle_24' :\r\n                        currentTrackerInfo.currentAngle > -28 ? 'angle_26' :\r\n                        currentTrackerInfo.currentAngle > -30 ? 'angle_28' :\r\n                        currentTrackerInfo.currentAngle > -32 ? 'angle_30' :\r\n                        currentTrackerInfo.currentAngle > -34 ? 'angle_32' :\r\n                        currentTrackerInfo.currentAngle > -36 ? 'angle_34' :\r\n                        currentTrackerInfo.currentAngle > -38 ? 'angle_36' :\r\n                        currentTrackerInfo.currentAngle > -40 ? 'angle_38' :\r\n                        currentTrackerInfo.currentAngle > -42 ? 'angle_40' :\r\n                        currentTrackerInfo.currentAngle > -44 ? 'angle_42' :\r\n                        currentTrackerInfo.currentAngle > -46 ? 'angle_44' :\r\n                        currentTrackerInfo.currentAngle > -48 ? 'angle_46' :\r\n                        currentTrackerInfo.currentAngle > -50 ? 'angle_48' :\r\n                        currentTrackerInfo.currentAngle > -52 ? 'angle_50' :\r\n                        currentTrackerInfo.currentAngle > -54 ? 'angle_52' :\r\n                        currentTrackerInfo.currentAngle > -56 ? 'angle_54' :\r\n                        currentTrackerInfo.currentAngle > -58 ? 'angle_56' :\r\n                        currentTrackerInfo.currentAngle > -60 ? 'angle_58' :\r\n                        'angle_60')} \r\n                        style={{width: '100%', height: '150px', marginTop: 5}}>\r\n                            {currentTrackerInfo.currentAngle === '--' && <div \r\n                                style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n                                    No Current Angle Data Found.\r\n                            </div>}\r\n                        </div>\r\n                    {currentTrackerInfo.currentAngle !== '--' && <Typography variant='h5' style={{textAlign: 'center', height: 48, marginTop: 5}}>\r\n                        Angle = {currentTrackerInfo.currentAngle}\r\n                    </Typography>}\r\n                    <div style={{height: 'calc(100% - 246px)', width: '100%', overflow: 'auto'}}>\r\n                    <Table padding='none'>\r\n                        <TableBody>\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Tracker ID\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.trackerID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Device ID\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.deviceID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Mac ID \r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.macID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Current Mode\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.currentMode}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                    Current Angle\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.currentAngle}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                    Date and Time\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{new Date(currentTrackerInfo.timeStamp).toLocaleDateString('en-US', {timeZone: this.props.timeZone})} -- {new Date(currentTrackerInfo.timeStamp).toLocaleTimeString('en-US', {timeZone:  this.props.timeZone, hour12: false})}</TableCell>\r\n                        </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                    </div>\r\n                </Grid>\r\n        )\r\n    }\r\n} \r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentTrackerInfo, timeZone, currentTracker } = state.app\r\n\r\n    return {\r\n        currentTrackerInfo,\r\n        timeZone,\r\n        currentTracker\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getCurrentTrackerInfo : (trackerID) => {\r\n        dispatch({type: 'GET_CURRENT_TRACKER_INFO_REQUEST'})\r\n        appService.getCurrentTrackerInfo(trackerID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_CURRENT_TRACKER_INFO_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_CURRENT_TRACKER_INFO_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedTrackerDetails = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TrackerDetails))\r\nexport {connectedTrackerDetails as TrackerDetails}","import React from 'react'\r\nimport { Grid, Paper, Button } from '@material-ui/core';\r\nimport { TrackerList } from './TrackerList'\r\nimport { TrackerDetails } from './TrackerDetails';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexWrap: 'wrap',\r\n        [theme.breakpoints.up('md')]: {\r\n            height: '100%',\r\n        }\r\n    },\r\n    trackerList: {\r\n        width: '100%',\r\n        padding: 10,\r\n        [theme.breakpoints.up('md')]: {\r\n            minHeight: '100%', width: '50%'\r\n        }\r\n    },\r\n    trackerDetails: {\r\n        width: '100%',\r\n        padding: 10,\r\n        [theme.breakpoints.up('md')]: {\r\n            minHeight: '100%', width: '50%'\r\n        }\r\n    }\r\n})\r\n\r\nconst Initializing = (props) => \r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            <p style={{margin: 10}}>No static data found.  </p>\r\n            <Button variant='contained' style={{margin: 10}} color='primary' onClick={() => props.scan()}>Add trackers</Button>\r\n            <Button variant='contained' style={{margin: 10}} color='primary' onClick={() => props.getCommissioningData()}>Refresh static data</Button>\r\n    </div>\r\n\r\n\r\nconst Fetching = () => \r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            FETCHING...\r\n    </div>\r\n\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    state = {\r\n    }\r\n\r\n    getCommissioningData = () => {\r\n        this.props.getCommissioningData()\r\n    }\r\n\r\n    scan = () => {\r\n        this.props.scan()\r\n    }\r\n\r\n    render() {\r\n        const { classes, commissioningData, fetchingCommissioningData } = this.props\r\n        return ( fetchingCommissioningData ? <Fetching /> : commissioningData === null ? <Initializing scan={() => this.scan()} getCommissioningData={() => this.getCommissioningData()}/> :\r\n            <Grid container direction=\"column\" className={classes.root}>\r\n                <Grid item className={classes.trackerList}>\r\n                    <Paper style={{height: '100%'}}>\r\n                        <TrackerList />\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item className={classes.trackerDetails}>\r\n                    <Paper style={{height: '100%'}}>\r\n                        <TrackerDetails />\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData, fetchingCommissioningData } = state.app\r\n\r\n    return {\r\n        commissioningData,\r\n        fetchingCommissioningData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    scan : () => {\r\n        dispatch({type: 'SCAN'})\r\n    },\r\n    getCommissioningData: () => {\r\n        dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n        appService.getCommissioningData()\r\n            .then(json => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedDashboard = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Dashboard))\r\nexport {connectedDashboard as Dashboard}","import React, { Fragment } from 'react'\r\nimport { Grid, Button, TextField, FormControlLabel, Checkbox, InputAdornment } from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    fieldGrid: {\r\n        display: 'flex', \r\n        flexDirection: 'row', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    },\r\n    field: {\r\n        width: '45%',\r\n        margin: '10px 2.5% 0px 2.5%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '31.33%',\r\n            margin: '10px 1% 0px 1%'\r\n        }\r\n    }\r\n})\r\n\r\nclass SPAParameters extends React.Component {\r\n    state = {\r\n        Lattitude: '',\r\n        Longitude: '',\r\n        Altitude: '',\r\n        TrackingLimitEast: '',\r\n        TrackingLimitWest: '',\r\n        RowWidth: '',\r\n        RowPitch: '',\r\n        TrackingResolution: '',\r\n        AzimuthDeviation: '',\r\n        AltitudeofTrackerontheEast: '',\r\n        AltitudeofTrackerontheWest: '',\r\n        EarlyStartMinutes: '',\r\n        LateFinishMinutes: '',\r\n        LattitudeError: '',\r\n        LongitudeError: '',\r\n        AltitudeError: '',\r\n        TrackingLimitEastError: '',\r\n        TrackingLimitWestError: '',\r\n        RowWidthError: '',\r\n        RowPitchError: '',\r\n        TrackingResolutionError: '',\r\n        AzimuthDeviationError: '',\r\n        AltitudeofTrackerontheEastError: '',\r\n        AltitudeofTrackerontheWestError: '',\r\n        EarlyStartMinutesError: '',\r\n        LateFinishMinutesError: '',\r\n        backTracking: '0',\r\n        submit: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.editedTrackers.length ===  1) {\r\n            this.props.getSPAParameters(this.props.editedTrackers[0].deviceID)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.SPAParameters !== this.props.SPAParameters) {\r\n            const values = nextProps.SPAParameters.VALUES.split(',')\r\n            this.setState({\r\n                Lattitude: values[0],\r\n                Longitude: values[1],\r\n                Altitude: values[2],\r\n                TrackingLimitEast: values[3],\r\n                TrackingLimitWest: values[4],\r\n                RowWidth: values[5],\r\n                RowPitch: values[6],\r\n                TrackingResolution: values[7],\r\n                AzimuthDeviation: values[8],\r\n                AltitudeofTrackerontheEast: values[9],\r\n                AltitudeofTrackerontheWest: values[10],\r\n                EarlyStartMinutes: values[11],\r\n                LateFinishMinutes: values[12],\r\n                backTracking: values[14]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleBlur = (e, p) => {\r\n            const regex = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+$\")\r\n            const regexTest = regex.test(e.target.value)\r\n            if(!regexTest) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    [`${e.target.name}Error`]: `Please enter a number.`,\r\n                    submit: false\r\n                })\r\n            } else {\r\n                const value = Number(e.target.value)\r\n                if(p.min !== null && p.max !== null) {\r\n                    if(value < p.min || value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min} max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.min !== null) {\r\n                    if(value < p.min) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.max != null) {\r\n                    if(value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \r\n    }\r\n\r\n    sendSPAParameters = () => {\r\n        const { Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking } = this.state\r\n        this.props.sendSPAParameters(this.props.editedTrackers, Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                    {\r\n                        [\r\n                            {\r\n                                key: 'Lattitude',\r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 0\r\n                            },\r\n                            {\r\n                                key: 'Longitude', \r\n                                adornment: 'Deg',\r\n                                min: -180,\r\n                                max: +180,\r\n                                value: 1\r\n                            }, \r\n                            { \r\n                                key: 'Altitude',\r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 2\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - East', \r\n                                adornment: 'Deg',\r\n                                min: -60,\r\n                                max: 0,\r\n                                value: 3\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - West', \r\n                                adornment: 'Deg',\r\n                                min: 0,\r\n                                max: +60,\r\n                                value: 4 \r\n                            }, \r\n                            { \r\n                                key: 'Row Width', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 5\r\n                            }, \r\n                            { \r\n                                key: 'Row Pitch', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 6\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Resolution', \r\n                                adornment: 'Deg',\r\n                                min: +0.50,\r\n                                max: +30.0,\r\n                                value: 7 \r\n                            }, \r\n                            { \r\n                                key: 'Azimuth Deviation', \r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 8  \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the East', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 9 \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the West', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 10\r\n                            }, \r\n                            { \r\n                                key: 'Early Start Minutes', \r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 11\r\n                            }, \r\n                            { \r\n                                key: 'Late Finish Minutes',\r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 12\r\n                            }\r\n                        ].map(p => {\r\n                            return <TextField\r\n                                key={p.key}\r\n                                className={classes.field}\r\n                                id={p.key}\r\n                                name={p.key.replace(/ /g, '').replace(/-/g, '')}\r\n                                label={p.key}\r\n                                value={this.state[p.key.replace(/ /g, '').replace(/-/g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">{p.adornment}</InputAdornment>,\r\n                                  }}\r\n                                error={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`] !== ''}\r\n                                helperText={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`]}\r\n                                onBlur={(e) => this.handleBlur(e, p)}\r\n                            />\r\n                        })\r\n                    }\r\n                        <FormControlLabel disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters} className={classes.field}\r\n                            control={\r\n                                <Checkbox color='primary' checked={this.state.backTracking === '1'} onClick={() => this.setState({...this.state, backTracking: this.state.backTracking === '0' ? '1' : '0'})}/>\r\n                            }\r\n                            label=\"Enable Backtracking\"\r\n                        />\r\n                        <Button color='primary' disabled variant='contained' className={classes.field}>Sync time with Zone Controller</Button>    \r\n                    </Grid>\r\n                    <Grid item style={{textAlign: 'center'}}>\r\n                        <Button color='primary' disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters || !this.state.submit} variant='contained' onClick={() => this.sendSPAParameters()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { editedTrackers, sendingSPAParameters } = state.app\r\n\r\n    return {\r\n        editedTrackers,\r\n        sendingSPAParameters,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendSPAParameters: (editedTrackers, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking) => {\r\n        dispatch({type: 'SET_RESPONSE_LISTENER'})\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_SPA_PARAMETERS_REQUEST', t})\r\n            appService.sendSPAParameters(t.deviceID, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_SUCCESS'})\r\n                }, error => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_FAILURE'})\r\n                })\r\n        })\r\n        \r\n    }\r\n})\r\n\r\n\r\nconst connectedSPAParameters = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SPAParameters))\r\nexport {connectedSPAParameters as SPAParameters}","import React, { Fragment } from 'react'\r\nimport { Grid, Button, TextField, InputAdornment } from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    fieldGrid: {\r\n        display: 'flex', \r\n        flexDirection: 'row', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    },\r\n    field: {\r\n        width: '45%',\r\n        margin: '10px 2.5% 0px 2.5%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '31.33%',\r\n            margin: '10px 1% 0px 1%'\r\n        }\r\n    }\r\n})\r\n\r\nclass StowAngles extends React.Component {\r\n    state = {\r\n        WindStowAngle: '',\r\n        SnowStowAngle: '',\r\n        NightStowAngle: '',\r\n        EmergencyStowAngle: '',\r\n        CleanStowAngle: '',\r\n        submit: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.editedTrackers.length === 1) {\r\n            this.props.getStowAngles(this.props.editedTrackers[0].deviceID)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.stowAngles !== this.props.stowAngles) {\r\n            const values = nextProps.stowAngles.VALUES.split(',')\r\n            this.setState({\r\n                WindStowAngle: values[0],\r\n                SnowStowAngle: values[1],\r\n                NightStowAngle: values[2],\r\n                EmergencyStowAngle: values[3],\r\n                CleanStowAngle: values[4]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleBlur = (e, p) => {\r\n        if(e.target.value === '') {\r\n            this.setState({\r\n                ...this.state,\r\n                [e.target.name]: this.props.SPAParameters.VALUES.split(',')[p.value],\r\n                [`${e.target.name}Error`]: '',\r\n                submit: false\r\n            })\r\n        } else {\r\n            const regex = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+$\")\r\n            const regexTest = regex.test(e.target.value)\r\n            if(!regexTest) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    [`${e.target.name}Error`]: `Please enter a number.`,\r\n                    submit: false\r\n                })\r\n            } else {\r\n                const value = Number(e.target.value)\r\n                if(p.min !== null && p.max !== null) {\r\n                    if(value < p.min || value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min} max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.min !== null) {\r\n                    if(value < p.min) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.max != null) {\r\n                    if(value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    sendStowAngles = () => {\r\n        const { WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle } = this.state\r\n        this.props.sendStowAngles(this.props.editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                    {\r\n                        ['Wind Stow Angle', 'Snow Stow Angle', 'Night Stow Angle', 'Emergency Stow Angle', 'Clean Stow Angle'].map(p => {\r\n                            return <TextField\r\n                                key={p}\r\n                                className={classes.field}\r\n                                id={p}\r\n                                name={p.replace(/ /g, '')}\r\n                                label={p}\r\n                                value={this.state[p.replace(/ /g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingStowAngles || this.props.gettingStowAngles}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">Deg</InputAdornment>,\r\n                                  }}\r\n                            />\r\n                        })\r\n                    }\r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center'}}>\r\n                        <Button color='primary' disabled={this.props.sendingStowAngles || this.props.gettingStowAngles} variant='contained' onClick={() => this.sendStowAngles()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { editedTrackers, stowAngles, sendingStowAngles, gettingStowAngles } = state.app\r\n\r\n    return {\r\n        editedTrackers,\r\n        stowAngles,\r\n        sendingStowAngles,\r\n        gettingStowAngles\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendStowAngles: (editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle) => {\r\n        dispatch({type: 'SET_RESPONSE_LISTENER'})\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_STOW_ANGLES_REQUEST', t})\r\n            appService.sendStowAngles(t.deviceID, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_SUCCESS'})\r\n                }, error => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_FAILURE'})\r\n                })\r\n        })\r\n    }\r\n})\r\n\r\n\r\nconst connectedStowAngles = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(StowAngles))\r\nexport {connectedStowAngles as StowAngles}","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { connect } from 'react-redux'\r\nimport { SPAParameters } from './SPAParameters';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { StowAngles } from './StowAngles';\r\nimport LeftIcon from '@material-ui/icons/ArrowBack'\r\nimport { Grid, Typography, Chip, Toolbar } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      margin: 10,\r\n      display: 'flex',\r\n      flexDirection: 'column'\r\n    },\r\n    body: {\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    tabsIndicator: {\r\n      backgroundColor: '#54AAB3',\r\n    },\r\n    selected: {\r\n      backgroundColor: '#54AAB3',\r\n      color: '#ffffff',\r\n      fontWeight: 600,\r\n      fontSize: 14\r\n    },\r\n    editedTrackers: {\r\n        width: '25%',\r\n        margin: 10,\r\n    },\r\n    tabs: {\r\n        width: '75%',\r\n        padding: 10,\r\n        boxShadow: '-1px 0px 0px 0px rgba(0,0,0,0.5)'\r\n    },\r\n    chip: {\r\n        margin: 10\r\n    },\r\n    green: {\r\n        backgroundColor: 'green'\r\n    },\r\n    red: {\r\n        backgroundColor: 'red'\r\n    }\r\n});\r\n\r\nclass EditRowController extends React.Component {\r\n    handleChange = (event, value) => {\r\n        this.props.changeTab({ value });\r\n    };\r\n    \r\n    render() {console.log(this.props)\r\n        const { classes, currentEditTab, editedTrackers, responseQueue } = this.props;\r\n    \r\n        return (\r\n        <div className={classes.root}>\r\n            <div className={classes.header}>\r\n            <Grid item>\r\n                <Typography variant='h5'>\r\n                    <IconButton aria-label=\"Back\" onClick={this.props.back} >\r\n                        <LeftIcon fontSize=\"large\" />\r\n                    </IconButton>\r\n                    Edit Parameters\r\n                </Typography>\r\n            </Grid>\r\n            </div>\r\n            <div className={classes.body}>\r\n            <div className={classes.editedTrackers}>\r\n            \r\n            <AppBar position=\"static\" color='secondary'>\r\n                <Toolbar style={{minHeight: 48}} disableGutters>\r\n                <Typography variant=\"subtitle1\" style={{margin: 'auto'}}>\r\n                    Selected Trackers\r\n                </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {\r\n                editedTrackers.map(t => (\r\n                <Chip key={t.deviceID} label={`Row#: ${t.rowNumber}`} className={classes.chip} style={responseQueue.filter(r => r.request.DID === t.deviceID)[0] ? responseQueue.filter(r => r.request.DID === t.deviceID)[0].success ? {backgroundColor: 'green'} : {backgroundColor: 'red'} : {}}/>\r\n            ))}\r\n            </div>\r\n            <div className={classes.tabs}>\r\n            <AppBar position=\"static\" color='secondary'>\r\n                <Tabs value={currentEditTab} onChange={this.handleChange} classes={{indicator: classes.tabsIndicator}}>\r\n                    <Tab label=\"SPA Parameters\" classes={{selected: classes.selected}}/>\r\n                    <Tab label=\"Stow Angles\" classes={{selected: classes.selected}}/>\r\n                </Tabs>\r\n            </AppBar>\r\n            {currentEditTab === 0 && <SPAParameters />}\r\n            {currentEditTab === 1 && <StowAngles />}\r\n            </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentEditTab, editedTrackers, responseQueue } = state.app\r\n\r\n    return {\r\n        currentEditTab,\r\n        editedTrackers,\r\n        responseQueue       \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changeTab: (value) => {\r\n        dispatch({type: 'CHANGE_EDIT_TAB', value})\r\n    }\r\n})\r\n\r\n\r\nconst connectedEditRowController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(EditRowController))\r\nexport {connectedEditRowController as EditRowController}","import React, { Fragment } from 'react'\r\nimport LeftIcon from '@material-ui/icons/ArrowBack'\r\nimport { IconButton, Typography, Grid, Button, TextField, FormControlLabel, Checkbox, InputAdornment } from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    fieldGrid: {\r\n        display: 'flex', \r\n        flexDirection: 'row', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    },\r\n    field: {\r\n        width: '45%',\r\n        margin: '10px 2.5% 0px 2.5%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '23%',\r\n            margin: '10px 1% 0px 1%'\r\n        }\r\n    }\r\n})\r\n\r\nclass EditRowController extends React.Component {\r\n    state = {\r\n        Lattitude: '',\r\n        Longitude: '',\r\n        Altitude: '',\r\n        TrackingLimitEast: '',\r\n        TrackingLimitWest: '',\r\n        RowWidth: '',\r\n        RowPitch: '',\r\n        TrackingResolution: '',\r\n        AzimuthDeviation: '',\r\n        AltitudeofTrackerontheEast: '',\r\n        AltitudeofTrackerontheWest: '',\r\n        EarlyStartMinutes: '',\r\n        LateFinishMinutes: '',\r\n        LattitudeError: '',\r\n        LongitudeError: '',\r\n        AltitudeError: '',\r\n        TrackingLimitEastError: '',\r\n        TrackingLimitWestError: '',\r\n        RowWidthError: '',\r\n        RowPitchError: '',\r\n        TrackingResolutionError: '',\r\n        AzimuthDeviationError: '',\r\n        AltitudeofTrackerontheEastError: '',\r\n        AltitudeofTrackerontheWestError: '',\r\n        EarlyStartMinutesError: '',\r\n        LateFinishMinutesError: '',\r\n        WindStowAngle: '',\r\n        SnowStowAngle: '',\r\n        NightStowAngle: '',\r\n        EmergencyStowAngle: '',\r\n        CleanStowAngle: '',\r\n        backTracking: '0',\r\n        submit: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.editedTrackers.length === 1) {\r\n            this.props.getSPAParameters(this.props.editedTrackers[0].deviceID)\r\n            this.props.getStowAngles(this.props.editedTrackers[0].deviceID)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.SPAParameters !== this.props.SPAParameters) {\r\n            if(nextProps.SPAParameters[this.props.editedTrackers[0].deviceID]) {\r\n                const values = nextProps.SPAParameters[this.props.editedTrackers[0].deviceID].VALUES.split(',')\r\n                this.setState({\r\n                    Lattitude: values[0],\r\n                    Longitude: values[1],\r\n                    Altitude: values[2],\r\n                    TrackingLimitEast: values[3],\r\n                    TrackingLimitWest: values[4],\r\n                    RowWidth: values[5],\r\n                    RowPitch: values[6],\r\n                    TrackingResolution: values[7],\r\n                    AzimuthDeviation: values[8],\r\n                    AltitudeofTrackerontheEast: values[9],\r\n                    AltitudeofTrackerontheWest: values[10],\r\n                    EarlyStartMinutes: values[11],\r\n                    LateFinishMinutes: values[12],\r\n                    backTracking: values[14]\r\n                })\r\n            }\r\n        }\r\n        if(nextProps.stowAngles !== this.props.stowAngles) {\r\n            const values = nextProps.stowAngles.VALUES.split(',')\r\n            this.setState({\r\n                WindStowAngle: values[0],\r\n                SnowStowAngle: values[1],\r\n                NightStowAngle: values[2],\r\n                EmergencyStowAngle: values[3],\r\n                CleanStowAngle: values[4]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleChangeSPA = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleBlur = (e, p) => {\r\n        if(e.target.value === '') {\r\n            this.setState({\r\n                ...this.state,\r\n                [e.target.name]: this.props.SPAParameters.VALUES.split(',')[p.value],\r\n                [`${e.target.name}Error`]: '',\r\n                submit: false\r\n            })\r\n        } else {\r\n            const regex = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+$\")\r\n            const regexTest = regex.test(e.target.value)\r\n            if(!regexTest) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    [`${e.target.name}Error`]: `Please enter a number.`,\r\n                    submit: false\r\n                })\r\n            } else {\r\n                const value = Number(e.target.value)\r\n                if(p.min !== null && p.max !== null) {\r\n                    if(value < p.min || value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min} max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.min !== null) {\r\n                    if(value < p.min) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.max != null) {\r\n                    if(value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    sendSPAParameters = () => {\r\n        const { Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking } = this.state\r\n        this.props.sendSPAParameters(this.props.editedTrackers, Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking)\r\n    }\r\n\r\n    sendStowAngles = () => {\r\n        const { WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle } = this.state\r\n        this.props.sendStowAngles(this.props.editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item style={{height: 64, borderBottom: '0.1px solid lightgrey'}}>\r\n                        <Typography variant='h5'>\r\n                            <IconButton aria-label=\"Back\" onClick={this.props.back} >\r\n                                <LeftIcon fontSize=\"large\" />\r\n                            </IconButton>\r\n                            Edit Parameters\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Typography variant='h6' style={{paddingLeft: 'calc(1% + 10px)'}}>\r\n                        SPA Settings\r\n                    </Typography>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                        \r\n                    {\r\n                        [\r\n                            {\r\n                                key: 'Lattitude',\r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 0\r\n                            },\r\n                            {\r\n                                key: 'Longitude', \r\n                                adornment: 'Deg',\r\n                                min: -180,\r\n                                max: +180,\r\n                                value: 1\r\n                            }, \r\n                            { \r\n                                key: 'Altitude',\r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 2\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - East', \r\n                                adornment: 'Deg',\r\n                                min: -60,\r\n                                max: 0,\r\n                                value: 3\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - West', \r\n                                adornment: 'Deg',\r\n                                min: 0,\r\n                                max: +60,\r\n                                value: 4 \r\n                            }, \r\n                            { \r\n                                key: 'Row Width', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 5\r\n                            }, \r\n                            { \r\n                                key: 'Row Pitch', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 6\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Resolution', \r\n                                adornment: 'Deg',\r\n                                min: +0.50,\r\n                                max: +30.0,\r\n                                value: 7 \r\n                            }, \r\n                            { \r\n                                key: 'Azimuth Deviation', \r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 8  \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the East', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 9 \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the West', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 10\r\n                            }, \r\n                            { \r\n                                key: 'Early Start Minutes', \r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 11\r\n                            }, \r\n                            { \r\n                                key: 'Late Finish Minutes',\r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 12\r\n                            }\r\n                        ].map(p => {\r\n                            return <TextField\r\n                                key={p.key}\r\n                                className={classes.field}\r\n                                id={p.key}\r\n                                name={p.key.replace(/ /g, '').replace(/-/g, '')}\r\n                                label={p.key}\r\n                                value={this.state[p.key.replace(/ /g, '').replace(/-/g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">{p.adornment}</InputAdornment>,\r\n                                  }}\r\n                                error={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`] !== ''}\r\n                                helperText={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`]}\r\n                                onBlur={(e) => this.handleBlur(e, p)}\r\n                            />\r\n                        })\r\n                    }\r\n                        <FormControlLabel disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters} style={{ margin: 10, marginLeft: 'auto' }}\r\n                            control={\r\n                                <Checkbox color='primary' checked={this.state.backTracking === '1'} onClick={() => this.setState({...this.state, backTracking: this.state.backTracking === '0' ? '1' : '0'})}/>\r\n                            }\r\n                            label=\"Enable Backtracking\"\r\n                        />\r\n                        <Button color='primary' disabled variant='contained' style={{ margin: 10 }}>Sync time with Zone Controller</Button>    \r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center', borderBottom: '0.1px solid lightgrey'}}>\r\n                        <Button color='primary' disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters || !this.state.submit} variant='contained' onClick={() => this.sendSPAParameters()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                    <Typography variant='h6' style={{paddingLeft: 'calc(1% + 10px)'}}>\r\n                        Stow Angle Settings\r\n                    </Typography>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                        \r\n                    {\r\n                        ['Wind Stow Angle', 'Snow Stow Angle', 'Night Stow Angle', 'Emergency Stow Angle', 'Clean Stow Angle'].map(p => {\r\n                            return <TextField\r\n                                key={p}\r\n                                className={classes.field}\r\n                                id={p}\r\n                                name={p.replace(/ /g, '')}\r\n                                label={p}\r\n                                value={this.state[p.replace(/ /g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingStowAngles || this.props.gettingStowAngles}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">Deg</InputAdornment>,\r\n                                  }}\r\n                            />\r\n                        })\r\n                    }\r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center'}}>\r\n                        <Button color='primary' disabled={this.props.sendingStowAngles || this.props.gettingStowAngles} variant='contained' onClick={() => this.sendStowAngles()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { editedTrackers, SPAParameters, stowAngles, sendingSPAParameters, sendingStowAngles, gettingSPAParameters, gettingStowAngles } = state.app\r\n\r\n    return {\r\n        editedTrackers,\r\n        SPAParameters,\r\n        stowAngles,\r\n        sendingSPAParameters,\r\n        sendingStowAngles,\r\n        gettingSPAParameters,\r\n        gettingStowAngles\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendSPAParameters: (editedTrackers, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking) => {\r\n        const values = `${Lattitude}, ${Longitude}, ${Altitude}, ${EastLimit}, ${WestLimit}, ${TrackerWidth}, ${Pitch}, ${TrackingAccuracy}, ${AzimuthDeviation}, ${AltitudeTrackeronEast}, ${AltitudeTrackeronWest}, ${StartTimeLead}, ${EndTimeLag}, 0, ${backTracking}`\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_SPA_PARAMETERS_REQUEST', t, values})\r\n            appService.sendSPAParameters(t.deviceID, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_SUCCESS'})\r\n                    dispatch({type: 'GET_SPA_PARAMETERS_REQUEST'})\r\n                    appService.getSPAParameters(t.deviceID)\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_SPA_PARAMETERS_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_SPA_PARAMETERS_FAILURE'})\r\n                        })\r\n\r\n                }, error => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_FAILURE'})\r\n                })\r\n        })\r\n        \r\n    },\r\n    sendStowAngles: (editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle) => {\r\n        const values = `${WindStowAngle}, ${SnowStowAngle}, ${CleanStowAngle}, ${NightStowAngle}, ${EmergencyStowAngle}`\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_STOW_ANGLES_REQUEST', t, values})\r\n            appService.sendStowAngles(t.deviceID, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_SUCCESS'})\r\n                    dispatch({type: 'GET_STOW_ANGLES_REQUEST'})\r\n                    appService.getStowAngles(t.deviceID)\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_STOW_ANGLES_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_STOW_ANGLES_FAILURE'})\r\n                        })\r\n                }, error => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_FAILURE'})\r\n                })\r\n        })\r\n    },\r\n    getStowAngles: (DID) => {\r\n        dispatch({type: 'GET_STOW_ANGLES_REQUEST'})\r\n        appService.getStowAngles(DID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_STOW_ANGLES_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'GET_STOW_ANGLES_FAILURE'})\r\n            })\r\n    },\r\n    getSPAParameters: (DID) => {\r\n        dispatch({type: 'GET_SPA_PARAMETERS_REQUEST'})\r\n        appService.getSPAParameters(DID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_SPA_PARAMETERS_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'GET_SPA_PARAMETERS_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedEditRowController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(EditRowController))\r\nexport {connectedEditRowController as EditRowController1}","import React, { Fragment } from 'react'\r\nimport LeftIcon from '@material-ui/icons/ArrowBack'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { IconButton, Typography, Grid, Button, Menu, MenuItem, FormControlLabel, Switch } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: 'calc(100% - 48px)'\r\n    },\r\n    second: {\r\n        height: 'calc(100% - 128px)', \r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    }\r\n})\r\n\r\nclass ControlRowController extends React.Component {\r\n    state = {\r\n        typeOfStow: 'STOW',\r\n        auto: false\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.setState({ ...this.state, anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleClose = (key) => {\r\n        this.setState({ typeOfStow: key, anchorEl: null });\r\n    };\r\n\r\n    autoToggle = () => {\r\n        if(this.state.auto) {\r\n            this.props.controlledTrackers.map(t => this.props.sendStow(t.deviceID, 'AUTO'))\r\n            this.setState({...this.state, auto: !this.state.auto})\r\n        } else {\r\n            this.props.controlledTrackers.map(t => this.props.sendStow(t.deviceID, 'MANUAL'))\r\n            this.setState({...this.state, auto: !this.state.auto})\r\n        }\r\n    } \r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        const { anchorEl } = this.state\r\n        return (\r\n            <Fragment>\r\n\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item style={{height: 64}}>\r\n                        <Typography variant='h5'>\r\n                            <IconButton aria-label=\"Back\" onClick={this.props.back} >\r\n                                <LeftIcon fontSize=\"large\" />\r\n                            </IconButton>\r\n                            Control\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item className={classes.second}>\r\n                    \r\n                    </Grid>\r\n                    <Grid item style={{textAlign: 'center'}}>\r\n                        <Button color='primary' variant='contained' onClick={() => this.props.controlledTrackers.map(t => this.props.sendCommand(t.deviceID, 'NEGATIVE'))} style={{ margin: 10 }}>Run West</Button>\r\n                        <Button color='primary' variant='contained' onClick={() => this.props.controlledTrackers.map(t => this.props.sendCommand(t.deviceID, 'POSITIVE'))} style={{ margin: 10 }}>Run East</Button>\r\n                        <Button color='primary' variant='contained' onClick={() => this.props.controlledTrackers.map(t => this.props.sendCommand(t.deviceID, 'STOP'))} style={{ margin: 10 }}>Stop</Button>\r\n                        <Button color='primary' disabled={this.state.typeOfStow === 'STOW'} onClick={() => this.props.controlledTrackers.map(t => this.props.sendStow(t.deviceID, this.state.typeOfStow))} variant='contained' style={{ marginLeft: 10 }}>{this.state.typeOfStow}</Button>\r\n                        <Button \r\n                            color='primary' \r\n                            variant='contained' \r\n                            aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={this.handleClick}\r\n                            style={{ minWidth: 24, paddingLeft: 0, paddingRight: 0}}\r\n                        >\r\n                            <ExpandMoreIcon />\r\n                        </Button>\r\n                        <Menu\r\n                            id=\"simple-menu\"\r\n                            anchorEl={anchorEl}\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={this.handleClose}\r\n                            >\r\n                            <MenuItem onClick={() => this.handleClose('WIND')}>WIND</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('SNOW')}>SNOW</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('NIGHT')}>NIGHT</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('CLEAN')}>CLEAN</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('EMERGENCY')}>EMERGENCY</MenuItem>\r\n                        </Menu>\r\n                        <FormControlLabel style={{ margin: 10 }} labelPlacement=\"top\"\r\n                            control={\r\n                                <Switch color='primary' checked={this.state.auto} onClick={() => this.autoToggle()} />\r\n                            }\r\n                            label=\"Enable Auto Mode\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { controlledTrackers } = state.app\r\n\r\n    return {\r\n        controlledTrackers,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendCommand: (DID, value) => {\r\n        dispatch({type: 'SEND_COMMAND_REQUEST'})\r\n        appService.sendCommand(DID, value)\r\n            .then(json => {\r\n                dispatch({type: 'SEND_COMMAND_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'SEND_COMMAND_FAILURE'})\r\n            })\r\n    },\r\n    sendStow: (DID, mode) => {\r\n        dispatch({type: 'SEND_STOW_REQUEST'})\r\n        appService.sendStow(DID, mode)\r\n            .then(json => {\r\n                dispatch({type: 'SEND_STOW_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'SEND_STOW_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedControlRowController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ControlRowController))\r\nexport {connectedControlRowController as ControlRowController}","import React, { Fragment } from 'react'\r\nimport { Grid, Button, Checkbox } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { EditRowController } from './EditRowController';\r\nimport { EditRowController1 } from './_EditRowController'\r\nimport { ControlRowController } from './ControlRowController'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    buttons: {\r\n        marginBottom: 10,\r\n        marginRight: 10,\r\n        marginTop: 10\r\n    }\r\n});\r\n\r\nclass RowControllerTab extends React.Component {\r\n    state = {\r\n        selectedTrackers: [],\r\n        location: 'home'\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedTrackers.length === this.props.commissioningData.length) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.props.commissioningData]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectRow = (row) => {\r\n        if(this.state.selectedTrackers.indexOf(row) === -1) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.state.selectedTrackers, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.state.selectedTrackers.filter(t => t.macID !== row.macID)]\r\n            })\r\n        }\r\n    }\r\n\r\n    editTracker = () => {\r\n        this.props.setEditedTrackers(this.state.selectedTrackers)\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'edit'\r\n        })\r\n    }\r\n\r\n    controlTracker = () => {\r\n        this.props.setControlledTrackers(this.state.selectedTrackers)\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'control'\r\n        })\r\n    }\r\n\r\n    back = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'home'\r\n        })\r\n    }\r\n\r\n    removeTrackers = () => {\r\n        this.props.removeTrackers(this.state.selectedTrackers.map(s => s.deviceID))\r\n        this.setState({...this.state, selectedTrackers: []})\r\n    }\r\n\r\n    render() {\r\n        const { classes, commissioningData } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    this.state.location === 'edit' ? \r\n                        this.state.selectedTrackers.length > 1 ?\r\n                        <EditRowController back={this.back}/> : <EditRowController1 back={this.back}/> :\r\n                    this.state.location === 'control' ?\r\n                    <ControlRowController back={this.back}/> :\r\n                    <Grid container direction='column' style={{ height: 'calc(100% - 48px)'}}>\r\n                        <Grid item style={{textAlign: 'end'}}>\r\n                            <Button color='primary' variant='contained' disabled={this.state.selectedTrackers.length === 0} className={classes.buttons} onClick={() => this.editTracker()}>Edit</Button>\r\n                            <Button color='primary' variant='contained' disabled={this.state.selectedTrackers.length === 0} className={classes.buttons} onClick={() => this.controlTracker()}>Control</Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    onClick={() => this.selectAll()}\r\n                                    style={{cursor: 'pointer'}}\r\n                                >\r\n                                    {commissioningData !== null && commissioningData.length > 1 && <Checkbox \r\n                                        checked={this.state.selectedTrackers.length === commissioningData.length}\r\n                                        color='primary'\r\n                                    />}\r\n                                        </TableCell>\r\n                                <TableCell >Row #</TableCell>\r\n                                <TableCell >Device ID</TableCell>\r\n                                <TableCell >Mac ID</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {commissioningData && commissioningData.map(row => (\r\n                                <TableRow key={row.macID}\r\n                                    onClick={() => this.selectRow(row)}\r\n                                    style={{cursor: 'pointer'}}\r\n                                >\r\n                                <TableCell>\r\n                                    <Checkbox \r\n                                        checked={this.state.selectedTrackers.indexOf(row) !== -1}\r\n                                        color='primary'\r\n                                    />\r\n                                </TableCell>\r\n                                    <TableCell >{row.rowNumber}</TableCell>\r\n                                    <TableCell >{row.deviceID}</TableCell>\r\n                                    <TableCell >{row.macID}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        </Grid>{commissioningData !== null &&\r\n                        <Grid item style={{textAlign: 'end'}}>\r\n                            <Button variant='contained' color='primary' className={classes.buttons} disabled={this.state.selectedTrackers.length === 0} onClick={() => this.removeTrackers()}>Forget</Button>\r\n                        </Grid>}\r\n                    </Grid>\r\n                    \r\n                }\r\n                \r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData } = state.app\r\n\r\n    return {\r\n        commissioningData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    removeTrackers : (DIDs) => {\r\n        dispatch({type: 'REMOVE_TRACKERS_REQUEST'})\r\n        appService.removeTrackers(DIDs)\r\n            .then(json => {\r\n                dispatch({type: 'REMOVE_TRACKERS_SUCCESS', DIDs})\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n                appService.getCommissioningData()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n                    })\r\n            }, error => {\r\n                dispatch({type: 'REMOVE_TRACKERS_FAILURE'})\r\n            })\r\n    },\r\n    setEditedTrackers: (trackers) => {\r\n        dispatch({type: 'SET_EDITED_TRACKERS', trackers})\r\n    },\r\n    setControlledTrackers: (trackers) => {\r\n        dispatch({type: 'SET_CONTROLLED_TRACKERS', trackers})\r\n    }\r\n})\r\n\r\n\r\nconst connectedRowControllerTab = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RowControllerTab))\r\nexport {connectedRowControllerTab as RowControllerTab}","import React, { Fragment } from 'react'\r\nimport { Grid, Checkbox, TextField, Button } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    textField: {\r\n        marginLeft: 24\r\n    },\r\n    formControl: {\r\n        marginLeft: 24\r\n    }\r\n});\r\n  \r\n\r\nclass ScanTab extends React.Component {\r\n    state = {\r\n        selectedTrackers: [],\r\n        scanSelection: 'PAN ID'\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedTrackers.length === this.props.xbeeResponse.length) {\r\n            this.setState({\r\n                selectedTrackers: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selectedTrackers: [...this.props.xbeeResponse]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectRow = (row) => {\r\n        if(this.state.selectedTrackers.indexOf(row) === -1) {\r\n            this.setState({\r\n                selectedTrackers: [...this.state.selectedTrackers, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selectedTrackers: [...this.state.selectedTrackers.filter(t => t.id !== row.id)]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            scanSelection: e.target.value\r\n        })\r\n    }\r\n\r\n    inputChange = (e) =>{\r\n        this.setState({\r\n            scanParameter: e.target.value\r\n        })\r\n    }\r\n\r\n    scan = () => {\r\n        if(this.state.scanSelection === 'PAN ID') {\r\n            this.props.discover('00000')\r\n        } else {\r\n            this.props.discover(this.state.scanParameter)\r\n        }\r\n    } \r\n\r\n    addTrackers = () => {\r\n        this.props.addTrackers(this.state.selectedTrackers)\r\n    }\r\n\r\n    render() {\r\n        const { classes, xbeeResponse } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column'>\r\n                    <Grid item>\r\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                            <RadioGroup\r\n                                row\r\n                                aria-label=\"Scan\"\r\n                                name=\"scan\"\r\n                                value={this.state.scanSelection}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <FormControlLabel value=\"PAN ID\" control={<Radio color='primary'/>} label=\"PAN ID\" />\r\n                                <FormControlLabel value=\"Device ID\" control={<Radio color='primary'/>} label=\"Device ID\" />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item style={{marginBottom: 24}}>\r\n                    {\r\n                        this.state.scanSelection === 'PAN ID' ?\r\n                        <TextField\r\n                            id=\"scanParameter\"\r\n                            className={classes.textField}\r\n                            value={this.state.scanParameter}\r\n                            onChange={this.inputChange}\r\n                            placeholder='PAN ID'\r\n                            margin=\"none\"\r\n                            variant='outlined'\r\n                        /> :\r\n                        <TextField\r\n                            id=\"scanParameter\"\r\n                            className={classes.textField}\r\n                            value={this.state.scanParameter}\r\n                            onChange={this.inputChange}\r\n                            placeholder='Device ID'\r\n                            margin=\"none\"\r\n                            variant='outlined'\r\n                        />\r\n                    }\r\n                        <Button color='primary' onClick={() => this.scan()} variant='contained' style={{marginLeft: 24, verticalAlign: 'bottom'}}>Scan</Button>\r\n                    </Grid>{xbeeResponse.length !== 0 && xbeeResponse !== undefined &&\r\n                    <Grid item>\r\n                    <Table className={classes.table}>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell\r\n                                onClick={() => this.selectAll()}\r\n                                style={{cursor: 'pointer'}}\r\n                            >\r\n                                {xbeeResponse.length > 1 && xbeeResponse !== undefined && <Checkbox \r\n                                    checked={this.state.selectedTrackers.length === xbeeResponse.length && this.state.selectedTrackers.length !== 0}\r\n                                    color='primary'\r\n                                />}\r\n                                    </TableCell>\r\n                            <TableCell >Row #</TableCell>\r\n                            <TableCell >Device ID</TableCell>\r\n                            <TableCell >Mac ID</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {xbeeResponse.length !== 0 && xbeeResponse !== undefined && xbeeResponse.map(res => {\r\n                            return (\r\n                            <TableRow key={res.DID}\r\n                                onClick={() => this.selectRow(res)}\r\n                                style={{cursor: 'pointer'}}\r\n                            >\r\n                            <TableCell>\r\n                                <Checkbox \r\n                                    checked={this.state.selectedTrackers.indexOf(res) !== -1}\r\n                                    color='primary'\r\n                                />\r\n                            </TableCell>\r\n                                <TableCell >{res.VALUES.split(',')[0]}</TableCell>\r\n                                <TableCell >{res.DID}</TableCell>\r\n                                <TableCell >{res.macID}</TableCell>\r\n                            </TableRow>\r\n                        )})}\r\n                        </TableBody>\r\n                    </Table>\r\n                    </Grid>}{xbeeResponse.length !== 0 && xbeeResponse !== undefined &&\r\n                    <Grid item style={{textAlign: 'end'}}>\r\n                        <Button color='primary' disabled={this.state.selectedTrackers.length === 0} onClick={() => this.addTrackers()} variant='contained' style={{margin: 10}}>Add</Button>\r\n                    </Grid>}\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { xbeeResponse } = state.app\r\n\r\n    return {\r\n        xbeeResponse\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    discover : (did) => {\r\n        dispatch({type: 'DISCOVER_REQUEST'})\r\n        appService.discover(did)\r\n            .then(json => {\r\n                dispatch({type: 'DISCOVER_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'DISCOVER_FAILURE'})\r\n            })\r\n    },\r\n    addTrackers: (devices) => {\r\n        dispatch({type: 'ADD_TRACKERS_REQUEST'})\r\n        appService.addTrackers(devices)\r\n            .then(json => {\r\n                dispatch({type: 'ADD_TRACKERS_SUCCESS', devices})\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n                appService.getCommissioningData()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n                    })\r\n            }, error => {\r\n                dispatch({type: 'ADD_TRACKERS_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedScanTab = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ScanTab))\r\nexport {connectedScanTab as ScanTab}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { RowControllerTab } from './RowControllerTab'\r\nimport { ScanTab } from './ScanTab'\r\nimport { connect } from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    minWidth: 550\r\n  },\r\n  tabsIndicator: {\r\n    backgroundColor: '#54AAB3',\r\n  },\r\n  selected: {\r\n    backgroundColor: '#54AAB3',\r\n    color: '#ffffff',\r\n    fontWeight: 600,\r\n    fontSize: 14\r\n  }\r\n});\r\n\r\nclass RowController extends React.Component {\r\n\r\n  handleChange = (event, value) => {\r\n    this.props.changeTab({ value });\r\n  };\r\n\r\n  render() {\r\n    const { classes, currentTab } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" color='secondary'>\r\n          <Tabs value={currentTab} onChange={this.handleChange} classes={{indicator: classes.tabsIndicator}}>\r\n            <Tab label=\"Paired Rows\" classes={{selected: classes.selected}}/>\r\n            <Tab label=\"Scan\" classes={{selected: classes.selected}}/>\r\n          </Tabs>\r\n        </AppBar>\r\n        {currentTab === 0 && <RowControllerTab />}\r\n        {currentTab === 1 && <ScanTab />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRowController.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentTab } = state.app\r\n\r\n    return {\r\n        currentTab\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changeTab: (value) => {\r\n        dispatch({type: 'CHANGE_TAB', value})\r\n    }\r\n})\r\n\r\n\r\nconst connectedRowController = (connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RowController)))\r\nexport {connectedRowController as RowController}","import React, { Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Grid, TextField, Typography, IconButton, FormControlLabel, FormControl, Radio, RadioGroup, Button, MenuItem, OutlinedInput, Select, InputLabel, CircularProgress } from '@material-ui/core';\r\nimport { connect } from 'react-redux'\r\nimport { appService } from '../App/app.services';\r\nimport Refresh from '@material-ui/icons/Refresh'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    minWidth: 300,\r\n    backgroundColor: theme.palette.background.paper,\r\n    [theme.breakpoints.up('md')]: {\r\n        height: '660px'\r\n    }\r\n  },\r\n  grid2: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '90%',\r\n    [theme.breakpoints.up('md')]: {\r\n        width: '30%',\r\n    }\r\n  },\r\n  field: {\r\n    flexDirection: 'row',\r\n    [theme.breakpoints.up('md')]: {\r\n        margin: '10px 0 0 0'\r\n    }\r\n  },\r\n  saveButton: {\r\n    margin: '10px 10px 10px 5%',\r\n    alignSelf: 'start',\r\n    [theme.breakpoints.down('sm')]: {\r\n        width: '90%',\r\n        margin: 10,\r\n        alignSelf: 'center'\r\n    }\r\n  },\r\n  button: {\r\n      width: '10%'\r\n  },\r\n  selectWifi: {\r\n      width: '90%'\r\n  }\r\n});\r\n\r\nclass ZoneController extends React.Component {\r\n\r\n    state = {\r\n        ssid: '',\r\n        password: '',\r\n        staticIP: ''\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.scanWifi()\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    setWifiInfo = () => {\r\n        this.props.setWifiInfo(this.state.ssid, this.props.password, this.state.staticIP)\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes, wifiList } = this.props\r\n        return (\r\n            <Fragment>\r\n                    <Grid item xs={12} container direction='column' justify='center' alignItems='center' className={classes.root}>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Network\r\n                        </Typography>\r\n                        <FormControl variant=\"outlined\" className={classes.field} fullWidth>\r\n                            <InputLabel htmlFor=\"ssid\">\r\n                                SSID\r\n                            </InputLabel>\r\n                            <Select\r\n                                value={this.state.ssid}\r\n                                onChange={this.handleChange}\r\n                                autoWidth\r\n                                className={classes.selectWifi}\r\n                                input={<OutlinedInput labelWidth={50} name=\"ssid\" id=\"ssid\" />}\r\n                            >\r\n                                {\r\n                                    wifiList.length === 0 ? <MenuItem value={'none'}> <CircularProgress /></MenuItem> : wifiList.map(w => <MenuItem key={w} value={w}>{w}</MenuItem>)\r\n                                }\r\n                                \r\n                            </Select>\r\n                            <IconButton className={classes.button} onClick={() => this.props.scanWifi()} aria-label=\"Refresh Wifi list\">\r\n                                <Refresh />\r\n                            </IconButton>\r\n                        </FormControl>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            name='password'\r\n                            label='Password'\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            name='staticIP'\r\n                            label='Static IP'\r\n                            value={this.state.staticIP}\r\n                            onChange={this.handleChange}\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary' onClick={() => this.setWifiInfo()} className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Heart Beat\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='heartbeatInterval'\r\n                            label='Heart Beat Interval'\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='heartbeatMaxMessages'\r\n                            label='Heart Beat Max Messages'\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Big Query\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='bqKey'\r\n                            label='Big Query key'\r\n                            value={this.state.bqKey}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            PAN ID\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='panID'\r\n                            label='PAN ID'\r\n                            value={this.state.panID}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Wind Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='maxWindSpeed'\r\n                            label='Max Wind Speed'\r\n                            value={this.state.maxWindSpeed}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='meanWindSpeed'\r\n                            label='Mean Wind Speed'\r\n                            value={this.state.meanWindSpeed}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='windSpeedTimer'\r\n                            label='Wind Speed Timer'\r\n                            value={this.state.windSpeedTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Flood Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='maxFloodLevel'\r\n                            label='Max FLood Level'\r\n                            value={this.state.maxFloodLevel}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='floodLevelTimer'\r\n                            label='Flood level Timer'\r\n                            value={this.state.floodLevelTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Snow Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='maxSnowLevel'\r\n                            label='Max Snow Level'\r\n                            value={this.state.maxSnowLevel}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='snowLevelTimer'\r\n                            label='Snow level Timer'\r\n                            value={this.state.snowLevelTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Rain Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='maxRainLevel'\r\n                            label='Max Rain Level'\r\n                            value={this.state.maxRainLevel}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='rainLevelTimer'\r\n                            label='Rain level Timer'\r\n                            value={this.state.rainLevelTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <FormControl component=\"fieldset\" className={classes.field}>\r\n                            <RadioGroup\r\n                                row\r\n                                aria-label=\"Sync\"\r\n                                name=\"sync\"\r\n                                value={this.state.syncTime}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <FormControlLabel value=\"internet\" control={<Radio color='primary'/>} label=\"Sync from internet\" />\r\n                                <FormControlLabel value=\"scada\" control={<Radio color='primary'/>} label=\"Sync from SCADA\" />\r\n                            </RadioGroup>\r\n                            <Button variant='contained' color='primary' style={{marginBottom: 10}}>Sync</Button>\r\n                        </FormControl>\r\n                        </div>\r\n                    </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { wifiList } = state.app\r\n\r\n    return {\r\n        wifiList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setWifiInfo: (ssid, pass, staticIP) => {\r\n        dispatch({type: 'SET_WIFI_INFO_REQUEST'}) \r\n        appService.setWifiInfo(ssid, pass, staticIP)\r\n            .then(json => {\r\n                dispatch({type: 'SET_WIFI_INFO_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'SET_WIFI_INFO_FAILURE'})\r\n            })\r\n    },\r\n    scanWifi: () => {\r\n        dispatch({type: 'SCAN_WIFI_REQUEST'})\r\n        appService.scanWifi()\r\n            .then(json => {\r\n                dispatch({type: 'SCAN_WIFI_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'SCAN_WIFI_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedZoneController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ZoneController))\r\nexport {connectedZoneController as ZoneController}","import React from 'react'\r\nimport { Grid, Button, Checkbox, TextField, DialogActions, DialogTitle, Dialog, DialogContent, MenuItem, OutlinedInput, InputLabel, FormControl, Select, Tooltip, Switch } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      height: '100%',\r\n      overflowX: 'auto',\r\n      backgroundColor: 'white'\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    buttons: {\r\n        marginBottom: 10,\r\n        marginRight: 10,\r\n        marginTop: 10\r\n    }\r\n});\r\n  \r\n\r\nclass Sensors extends React.Component {\r\n\r\n    state = {\r\n        selectedSensors: [],\r\n        dialog: false,\r\n        which: 'none',\r\n        port: '',\r\n        type: '',\r\n        model: '',\r\n        samplingPeriod: '',\r\n        driverFile: '',\r\n        driverFileName: '',\r\n        enabled: []\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.getSensors()\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.sensors !== this.props.sensors && nextProps.sensors !== undefined) {\r\n            this.setState({...this.state, enabled: [...nextProps.sensors.filter(s => s.enabled === true)]})\r\n        }\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedSensors.length === this.props.sensors.length) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...this.props.sensors]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectSensor = (row) => {\r\n        if(this.state.selectedSensors.filter(t => t.model === row.model && t.type === row.type).length === 0) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...this.state.selectedSensors, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...this.state.selectedSensors.filter(t => t.model !== row.model)]\r\n            })\r\n        }\r\n    }\r\n\r\n    addSensor = () => {\r\n        this.setState({ ...this.state, dialog: true, which: 'add'})\r\n    }\r\n\r\n    editSensor = () => {\r\n        this.setState({ ...this.state, dialog: true, which: 'edit', port: this.state.selectedSensors[0].port, type: this.state.selectedSensors[0].type, model: this.state.selectedSensors[0].model, samplingPeriod: this.state.selectedSensors[0].samplingPeriod})\r\n    }\r\n\r\n    removeSensor = () => {\r\n        this.props.removeSensor(this.state.selectedSensors)\r\n    }\r\n\r\n    enable = (row) => {\r\n        if(this.state.enabled.filter(t => t.model === row.model && t.type === row.type).length === 0) {\r\n            this.props.enableSensor(row.type, row.model)\r\n            this.setState({...this.state, enabled: [...this.state.enabled, row]})\r\n        } else {\r\n            this.props.disableSensor(row.type, row.model)\r\n            this.setState({...this.state, enabled: this.state.enabled.filter(e => e !== row)})\r\n        }\r\n        \r\n    }\r\n\r\n    handleClose = () => {\r\n        if(this.state.which === 'edit') {\r\n            this.props.softRemoveSensor(this.state.selectedSensors)\r\n            this.props.addSensor(this.state.port, this.state.type, this.state.model, this.state.samplingPeriod)\r\n            this.props.uploadDriver(this.state.driverFile, this.state.type, this.state.model)   \r\n        } else {\r\n            this.props.addSensor(this.state.port, this.state.type, this.state.model, this.state.samplingPeriod)\r\n            this.props.uploadDriver(this.state.driverFile, this.state.type, this.state.model)\r\n        }\r\n            \r\n        \r\n        this.setState({ ...this.state, dialog: false, which: 'none' });\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ ...this.state, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    \r\n    handleSelectedFile = e => {\r\n        this.setState({\r\n            ...this.state,\r\n            driverFile: e.target.files[0],\r\n            driverFileName: e.target.files[0].name\r\n        })\r\n    }\r\n\r\n    render() {console.log(this.state)\r\n        const { classes, sensors } = this.props\r\n\r\n        return (\r\n            <Grid container direction='column' className={classes.root}>\r\n                <Grid item style={{textAlign: 'end'}}>\r\n                    <Button color='primary' variant='contained' className={classes.buttons} onClick={() => this.addSensor()}>Add New</Button>\r\n                    {this.state.selectedSensors.length > 1 ?\r\n                        <Tooltip title='Cannot edit multiple sensors at once. Please choose a single sensor to edit.'>\r\n                            <span><Button color='primary' variant='contained' className={classes.buttons} disabled>Edit</Button></span>\r\n                        </Tooltip> :\r\n                        <Button color='primary' variant='contained' disabled={this.state.selectedSensors.length !== 1} className={classes.buttons} onClick={() => this.editSensor()}>Edit</Button>\r\n                    }\r\n                </Grid>\r\n                <Grid item>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell\r\n                            onClick={() => this.selectAll()}\r\n                            style={{cursor: 'pointer'}}\r\n                        >{sensors && sensors.length > 1 && \r\n                            <Checkbox \r\n                                checked={this.state.selectedSensors.length === this.props.sensors.length}\r\n                                color='primary'\r\n                            />}\r\n                                </TableCell>\r\n                        <TableCell >Port #</TableCell>\r\n                        <TableCell >Sensor Type</TableCell>\r\n                        <TableCell >Model #</TableCell>\r\n                        <TableCell >Sampling Period</TableCell>\r\n                        <TableCell >Enabled</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {sensors && sensors.map(row => (\r\n                        <TableRow key={row.port+row.type+row.model}\r\n                            style={{cursor: 'pointer'}}\r\n                        >\r\n                            <TableCell>\r\n                                <Checkbox \r\n                                    onClick={() => this.selectSensor(row)}\r\n                                    checked={this.state.selectedSensors.filter(t => t.model === row.model && t.type === row.type).length !== 0}\r\n                                    color='primary'\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell >{row.port}</TableCell>\r\n                            <TableCell >{row.type}</TableCell>\r\n                            <TableCell >{row.model}</TableCell>\r\n                            <TableCell >{row.samplingPeriod}</TableCell>\r\n                            <TableCell>\r\n                                {/* <Checkbox \r\n                                    checked={this.state.enabled.filter(t => t.model === row.model && t.type === row.type).length !== 0}\r\n                                    onClick={() => this.enable(row)}\r\n                                    color='primary'\r\n                                /> */}\r\n                                <Switch color='primary' checked={this.state.enabled.filter(t => t.model === row.model && t.type === row.type).length !== 0} onClick={() => this.enable(row)} />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>{sensors && sensors.length > 0 &&\r\n                <Grid item style={{textAlign: 'end'}}>\r\n                    <Button color='primary' variant='contained' disabled={this.state.selectedSensors.length === 0} className={classes.buttons} onClick={() => this.removeSensor()}>Remove</Button>\r\n                </Grid>}\r\n                </Grid>\r\n                <Dialog\r\n                    open={this.state.dialog}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">{this.state.which === 'add' ? 'Add Sensor' : 'Edit Sensor'}</DialogTitle>\r\n                    <DialogContent>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl} fullWidth margin='dense'>\r\n                            <InputLabel htmlFor=\"port\">\r\n                                Port #\r\n                            </InputLabel>\r\n                            <Select\r\n                                value={this.state.port}\r\n                                onChange={this.handleChange}\r\n                                autoWidth\r\n                                input={<OutlinedInput labelWidth={50} name=\"port\" id=\"port\" />}\r\n                            >\r\n                                <MenuItem value={'ADC48CH0'}>ADC48CH0 (Address: 0x48; Channel: 0)</MenuItem>\r\n                                <MenuItem value={'ADC48CH1'}>ADC48CH1 (Address: 0x48; Channel: 1)</MenuItem>\r\n                                <MenuItem value={'ADC48CH2'}>ADC48CH2 (Address: 0x48; Channel: 2)</MenuItem>\r\n                                <MenuItem value={'ADC48CH3'}>ADC48CH3 (Address: 0x48; Channel: 3)</MenuItem>\r\n                                <MenuItem value={'ADC49CH0'}>ADC49CH0 (Address: 0x49; Channel: 0)</MenuItem>\r\n                                <MenuItem value={'ADC49CH1'}>ADC49CH1 (Address: 0x49; Channel: 1)</MenuItem>\r\n                                <MenuItem value={'ADC49CH2'}>ADC49CH2 (Address: 0x49; Channel: 2)</MenuItem>\r\n                                <MenuItem value={'ADC49CH3'}>ADC49CH3 (Address: 0x49; Channel: 3)</MenuItem>\r\n                                <MenuItem value={'Modbus RTU'}>Modbus RTU</MenuItem>\r\n                                <MenuItem value={'GPIO11'}>GPIO11 (Pin 11)</MenuItem>\r\n                                <MenuItem value={'GPIO13'}>GPIO13 (Pin 13)</MenuItem>\r\n                                <MenuItem value={'GPIO15'}>GPIO15 (Pin 15)</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl} fullWidth margin='dense'>\r\n                            <InputLabel htmlFor=\"type\">\r\n                                Sensor Type\r\n                            </InputLabel>\r\n                            <Select\r\n                                value={this.state.type}\r\n                                onChange={this.handleChange}\r\n                                autoWidth\r\n                                input={<OutlinedInput labelWidth={100} name=\"type\" id=\"type\" />}\r\n                            >\r\n                                <MenuItem value={'wind'}>Wind Sensor</MenuItem>\r\n                                <MenuItem value={'snow'}>Snow Sensor</MenuItem>\r\n                                <MenuItem value={'flood'}>Flood Sensor</MenuItem>\r\n                                <MenuItem value={'rain'}>Rain Sensor</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField\r\n                            fullWidth\r\n                            id='model'\r\n                            name='model'\r\n                            label='Model #'\r\n                            value={this.state.model}\r\n                            onChange={this.handleChange}\r\n                            margin=\"dense\"\r\n                            variant='outlined'\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id='samplingPeriod'\r\n                            name='samplingPeriod'\r\n                            label='samplingPeriod'\r\n                            value={this.state.samplingPeriod}\r\n                            onChange={this.handleChange}\r\n                            margin=\"dense\"\r\n                            variant='outlined'\r\n                        />\r\n                        <div style={{display: 'flex', alignItems: 'baseline'}}>\r\n                        <TextField\r\n                            id=\"driverFile\"\r\n                            label=\"Driver File\"\r\n                            helperText=\"Upload Sensor Driver File\"\r\n                            name='driverFile'\r\n                            value={this.state.driverFileName}\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        />\r\n                        <input\r\n                            accept=\"*\"\r\n                            style={{ display: 'none'}}\r\n                            id=\"contained-button-file\"\r\n                            type=\"file\"\r\n                            onChange={this.handleSelectedFile}\r\n                        />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\" style={{margin: 5}}>\r\n                                Browse\r\n                            </Button>\r\n                        </label>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant='contained' onClick={this.handleClose} color=\"primary\">\r\n                            {this.state.which === 'add' ? 'Add Sensor' : 'Save'}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Grid>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { sensors } = state.app\r\n\r\n    return {\r\n        sensors,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getSensors: () => {\r\n        dispatch({type: 'GET_SENSORS_REQUEST'})\r\n        appService.getSensors()\r\n            .then(json => {\r\n                dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_SENSORS_FAILURE'})\r\n            })        \r\n    },\r\n    addSensor: (port, type, model, samplingPeriod) => {\r\n        dispatch({type: 'ADD_SENSOR_REQUEST'})\r\n        appService.addSensor(port, type, model, samplingPeriod)\r\n            .then(json => {\r\n                dispatch({type: 'ADD_SENSORS_SUCCESS'})\r\n                dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                appService.getSensors()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                    }) \r\n            }, error => {\r\n                dispatch({type: 'ADD_SENSORS_FAILURE'})\r\n            })\r\n    },\r\n    removeSensor: (selectedSensors) => {\r\n        selectedSensors.map(s => {\r\n            dispatch({type: 'REMOVE_SENSOR_REQUEST'})\r\n            appService.removeSensor(s.model, s.type)\r\n                .then(json => {\r\n                    dispatch({type: 'REMOVE_SENSOR_SUCCESS'})\r\n                    dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                    appService.getSensors()\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                        })\r\n                }, error => {\r\n                    dispatch({type: 'REMOVE_SENSOR_FAILURE'})\r\n                })\r\n        })\r\n        \r\n    },\r\n    softRemoveSensor: (selectedSensors) => {\r\n        selectedSensors.map(s => {\r\n            dispatch({type: 'REMOVE_SENSOR_REQUEST'})\r\n            appService.removeSensor(s.model, s.type)\r\n                .then(json => {\r\n                    dispatch({type: 'REMOVE_SENSOR_SUCCESS'})\r\n                }, error => {\r\n                    dispatch({type: 'REMOVE_SENSOR_FAILURE'})\r\n                })\r\n        })\r\n    },\r\n    enableSensor: (type, model) => {\r\n        dispatch({type: 'ENABLE_SENSOR_REQUEST'})\r\n        appService.enableSensor(type, model)\r\n            .then(json => {\r\n                dispatch({type: 'ENABLE_SENSOR_SUCCESS'})\r\n                dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                appService.getSensors()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                    }) \r\n            }, error => {\r\n                dispatch({type: 'ENABLE_SENSOR_FAILURE'})\r\n            })\r\n    },\r\n    disableSensor: (type, model) => {\r\n        dispatch({type: 'DISABLE_SENSOR_REQUEST'})\r\n        appService.disableSensor(type, model)\r\n            .then(json => {\r\n                dispatch({type: 'DISABLE_SENSOR_SUCCESS'})\r\n                dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                appService.getSensors()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                    }) \r\n            }, error => {\r\n                dispatch({type: 'DISABLE_SENSOR_FAILURE'})\r\n            })\r\n    },\r\n    uploadDriver: (file, type, model) => {\r\n        dispatch({type: 'UPLOAD_DRIVER_FILE_REQUEST'})\r\n        appService.uploadDriver(file, type, model)\r\n            .then(json => {\r\n                dispatch({type: 'UPLOAD_DRIVER_FILE_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'UPLOAD_DRIVER_FILE_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedSensors = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Sensors))\r\nexport {connectedSensors as Sensors}","import React from 'react';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst styles1 = theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n  const { classes, className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={[classes[variant], className]}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={[classes.icon, classes.iconVariant]} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          className={classes.close}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nexport const SnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);","import React from 'react';\r\nimport { NavBar } from '../NavBar/NavBar'\r\nimport {Dashboard} from '../Dashboard/Dashboard'\r\nimport { RowController }  from '../RowController/RowController'\r\nimport { ZoneController } from '../ZoneController/ZoneController'\r\nimport { Sensors } from '../Sensors/Sensors'\r\nimport { About } from '../About/About'\r\nimport { connect } from 'react-redux'\r\nimport { appService } from './app.services';\r\nimport { Snackbar, DialogActions, DialogTitle, Dialog, DialogContent, Button, DialogContentText, Slide } from '@material-ui/core';\r\nimport { SnackbarContentWrapper } from '../util/SnackbarContentWrapper';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { store } from '../util/store'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%'\r\n    },\r\n    topCenter: {\r\n        top: 75\r\n    }\r\n})\r\n\r\nconst Initializing = () => <div style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>INITIALIZING...</div>\r\n\r\nclass App extends React.Component {\r\n    queue = [];\r\n    timer = null\r\n\r\n    state = {\r\n        open: false,\r\n        alert: null,\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.props.init()\r\n        const io = socketIOClient(`http://${window.location.hostname}:8080`);\r\n        io.on('connect', () => {\r\n            console.log('connected')\r\n        })\r\n        io.on('ui/rover/scan', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/scan', json)\r\n        })\r\n        io.on('ui/rover/spa', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/spa', json)\r\n        })\r\n        io.on('ui/rover/stowangles', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/stowangles', json)\r\n        })\r\n        io.on('ui/rover/response/multiple', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/response/multiple', json)\r\n        })\r\n        io.on('time', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('time', json)\r\n        })\r\n        io.on('sensorReadings/wind', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('sensorReadings/wind', json)\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.alert !== null && (nextProps.alert !== this.props.alert)) {\r\n            this.queue.push(nextProps.alert);\r\n        \r\n            if (this.state.open) {\r\n                this.setState({ open: false });\r\n            } else {\r\n                this.processQueue();\r\n            }    \r\n        }\r\n    }\r\n\r\n    processQueue = () => {\r\n        if (this.queue.length > 0) {\r\n            this.setState({\r\n                alert: this.queue.shift(),\r\n                open: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n        return;\r\n        }\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleExited = () => {\r\n        this.processQueue();\r\n    };\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return ( \r\n                <div className={classes.root}>\r\n                    <NavBar>\r\n                    {\r\n                        this.props.currentPage === 'Dashboard' ? <Dashboard /> :\r\n                        this.props.currentPage === 'Row Controller' ? <RowController /> :\r\n                        this.props.currentPage === 'Zone Controller' ? <ZoneController /> :\r\n                        this.props.currentPage === 'Sensors' ? <Sensors /> : \r\n                        this.props.currentPage === 'About' ? <About /> : <Initializing />\r\n                    }\r\n                    </NavBar>\r\n                    <Snackbar\r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'center',\r\n                        }}\r\n                        open={this.state.open}\r\n                        //autoHideDuration={3000}\r\n                        onClose={this.handleClose}\r\n                        onExited={this.handleExited}\r\n                        classes={{anchorOriginTopCenter: classes.topCenter}}\r\n                    >\r\n                        <SnackbarContentWrapper\r\n                            onClose={this.handleClose}\r\n                            variant={this.state.alert === null ? 'info' : this.state.alert.type}\r\n                            message={this.state.alert === null ? '' : this.state.alert.message}\r\n                        />\r\n                    </Snackbar>\r\n                    {/* <Dialog\r\n                        open={this.state.open}\r\n                        onClose={this.handleClose}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                        style={{ minWidth: 300 }}\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\" style={{color:'white', background: this.state.alert !== null ? this.state.alert.type==='success' ? 'green' : this.state.alert.type === 'warning' ? 'orange' : 'red' : 'blue'}}>{this.state.alert === null ? 'info' : this.state.alert.type}</DialogTitle>\r\n                        <DialogContent style={{color:'white', background: this.state.alert !== null ? this.state.alert.type==='success' ? 'green' : this.state.alert.type === 'warning' ? 'orange' : 'red' : 'blue'}}>\r\n                        <DialogContentText id=\"alert-dialog-description\" style={{color:'white'}}>\r\n                            {this.state.alert === null ? '' : this.state.alert.message}\r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions style={{color:'white', background: this.state.alert !== null ? this.state.alert.type==='success' ? 'green' : this.state.alert.type === 'warning' ? 'orange' : 'red' : 'blue'}}>\r\n                        <Button onClick={this.handleClose} color=\"primary\" variant='contained'>\r\n                            Close\r\n                        </Button>\r\n                        </DialogActions>\r\n                    </Dialog> */}\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentPage, alert, timeZone } = state.app\r\n\r\n    return {\r\n        currentPage,\r\n        alert,\r\n        timeZone\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    init: () => {\r\n        dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n        appService.getCommissioningData()\r\n            .then(json => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n            })\r\n        \r\n        dispatch({type: 'GET_TIMEZONE_REQUEST'})\r\n        appService.getTimeZone()\r\n            .then(json => {\r\n                if(json.timeZone === null) {\r\n                    dispatch({type: 'SET_TIMEZONE_REQUEST'})\r\n                    appService.setTimeZone(store.getState().app.timeZone)\r\n                        .then(json => {\r\n                            dispatch({type: 'SET_TIMEZONE_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'SET_TIMEZONE_FAILURE'})\r\n                        })\r\n                }\r\n                dispatch({type: 'GET_TIMEZONE_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_TIMEZONE_FAILURE', error})\r\n            })\r\n    },\r\n    getTime: () => {\r\n        dispatch({type: 'GET_TIME_REQUEST'})\r\n        appService.getTime()\r\n            .then(json => {\r\n                dispatch({type: 'GET_TIME_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_TIME_FAILURE', error})\r\n            })\r\n    },\r\n    clearAlert : () => {\r\n        dispatch({type: 'CLEAR_ALERT'})\r\n    },\r\n    received: (topic, json) => {\r\n        dispatch({type: topic, json})\r\n    }\r\n})\r\n\r\n\r\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(App))\r\nexport {connectedApp as App}","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { store } from './util/store';\r\nimport { App } from './App';\r\nimport './index.css'\r\n\r\n/* const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#54AAB3\",\r\n        contrastText: '#fff'\r\n      }\r\n    },\r\n    overrides: {\r\n      MuiIconButton: {\r\n          root: {\r\n            color: 'white'\r\n          },\r\n      }\r\n    } \r\n  }); */\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#54AAB3',\r\n        dark: '#3c8f98',\r\n        contrastText: '#ffffff'\r\n      },\r\n      secondary: {\r\n        main: '#ffffff',\r\n        contrastText: '#000000'\r\n      }\r\n    }/* ,\r\n    overrides: {\r\n      MuiListItem: {\r\n        root: {\r\n          backgroundColor: '#ffffff',\r\n          '&$selected': {\r\n            backgroundColor: '#54AAB3',\r\n            color: '#ffffff'\r\n          },\r\n          '&$selected:hover': {\r\n            backgroundColor: '#3c8f98',\r\n            color: '#ffffff'\r\n          }\r\n        },\r\n      },\r\n    } */\r\n  });\r\n\r\nrender(\r\n    <MuiThemeProvider theme={theme}>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </MuiThemeProvider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}