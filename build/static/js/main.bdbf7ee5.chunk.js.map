{"version":3,"sources":["App/app.reducer.js","util/rootReducer.js","util/store.js","NavBar/NavBar.js","App/app.services.js","Dashboard/TrackerList.js","Dashboard/TrackerDetails.js","Dashboard/Dashboard.js","RowController/EditRowController.js","RowController/ControlRowController.js","RowController/RowControllerTab.js","RowController/ScanTab.js","RowController/RowController.js","ZoneController/ZoneController.js","Sensors/Sensors.js","util/SnackbarContentWrapper.js","App/App.jsx","index.js"],"names":["initialState","currentPage","currentTab","timeZone","Intl","DateTimeFormat","resolvedOptions","alert","time","Date","now","commissioningData","fetchingCommissioningData","currentTracker","currentTrackerInfo","xbeeResponse","controlledTrackers","editedTrackers","SPAParameters","stowAngles","sendingSPAParameters","sendingStowAngles","gettingSPAParameters","gettingStowAngles","addingTrackers","difference","a1","a2","result","i","length","indexOf","push","rootReducer","combineReducers","app","state","action","type","Object","objectSpread","page","value","json","staticData","message","trackerID","a","concat","toConsumableArray","filter","r","DID","deviceID","newXbeeResponse","devices","trackers","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ResponsiveDrawer","mobileOpen","handleDrawerToggle","_this","setState","_this2","this","_this$props","props","classes","theme","children","drawer","react_default","createElement","className","toolbar","src","height","width","alt","Divider","List","map","text","index","ListItem","button","key","onClick","changePage","selected","ListItemIcon","MoveToInbox_default","Mail_default","ListItemText","disableTypography","primary","root","CssBaseline","AppBar","position","color","appBar","Toolbar","IconButton","aria-label","menuButton","Menu_default","Typography","variant","noWrap","Hidden","mdUp","implementation","Drawer","container","anchor","direction","open","onClose","paper","drawerPaper","smDown","content","React","Component","connectedNavBar","connect","_state$app","dispatch","withStyles","display","defineProperty","breakpoints","up","flexShrink","marginLeft","marginRight","mixins","flexGrow","padding","spacing","paddingTop","backgroundColor","withTheme","appService","setWifiInfo","ssid","pass","requestOptions","method","mode","body","JSON","stringify","password","fetch","hostName","then","handleResponse","upload","file","data","FormData","append","selectSensor","windSensor","rainSensor","floodSensor","snowSensor","uploadKey","getSensors","setWindAddress","address","deviceAddress","getWindAddress","caliberate","sensor","sendCommand","command","macID","CMD","VALUES","MODE","hostName2","getCommissioningData","getCurrentTrackerInfo","triggerDiscovery","setPanID","panID","console","log","threshold","maxWindSpeed","maxRainFall","meanWindSpeed","windSpeedTimer","maxFloodLevel","maxSnowFall","heartBeat","enabled","hbinterval","maxMsgs","interval","setTimeZone","getHeartBeat","getThreshold","getPanID","getFrequency","setFrequency","power","status","powerRequestTimePeriod","statusRequestTimePeriod","getTimeZone","getTime","discover","did","addTrackers","removeTrackers","DIDs","sendSPAParameters","Lattitude","Longitude","Altitude","EastLimit","WestLimit","TrackerWidth","Pitch","TrackingAccuracy","AzimuthDeviation","AltitudeTrackeronEast","AltitudeTrackeronWest","StartTimeLead","EndTimeLag","backtracking","sendStowAngles","WindStowAngle","SnowStowAngle","CleanStowAngle","NightStowAngle","EmergencyStowAngle","getSPAParameters","getStowAngles","window","location","hostname","response","ok","error","statusText","Promise","reject","TrackerList","componentDidMount","react","Grid","Table","TableHead","TableRow","TableCell","TableBody","n","hover","style","cursor","connectedTrackerList","NoCurrentTrackerInfo","alignItems","justifyContent","TrackerDetails","TrackerDetails_NoCurrentTrackerInfo","currentAngle","marginTop","textAlign","overflow","currentMode","timeStamp","toLocaleDateString","toLocaleTimeString","hour12","connectedTrackerDetails","flexWrap","Initializing","flexDirection","margin","Button","scan","Fetching","Dashboard","Dashboard_Fetching","Dashboard_Initializing","item","trackerList","Paper","trackerDetails","connectedDashboard","minHeight","EditRowController","TrackingLimitEast","TrackingLimitWest","RowWidth","RowPitch","TrackingResolution","AltitudeofTrackerontheEast","AltitudeofTrackerontheWest","EarlyStartMinutes","LateFinishMinutes","LattitudeError","LongitudeError","AltitudeError","TrackingLimitEastError","TrackingLimitWestError","RowWidthError","RowPitchError","TrackingResolutionError","AzimuthDeviationError","AltitudeofTrackerontheEastError","AltitudeofTrackerontheWestError","EarlyStartMinutesError","LateFinishMinutesError","backTracking","componentWillReceiveProps","nextProps","values","split","handleChange","event","target","name","handleChangeSPA","p","_objectSpread4","Number","isNaN","min","max","_objectSpread6","_objectSpread8","_objectSpread9","handleBlur","e","_objectSpread11","isFloat","_this$state","_this$state2","borderBottom","back","ArrowBack_default","fontSize","paddingLeft","fieldGrid","adornment","TextField","field","id","replace","label","onChange","InputLabelProps","shrink","disabled","InputProps","endAdornment","InputAdornment","helperText","onBlur","FormControlLabel","control","Checkbox","checked","connectedEditRowController","t","ControlRowController","typeOfStow","handleClick","anchorEl","currentTarget","handleClose","second","aria-owns","undefined","aria-haspopup","minWidth","paddingRight","ExpandMore_default","Menu_Menu","Boolean","MenuItem","RowControllerTab","selectedTrackers","selectAll","selectRow","row","editTracker","setEditedTrackers","controlTracker","setControlledTrackers","s","RowController_ControlRowController","buttons","table","rowNumber","connectedRowControllerTab","overflowX","marginBottom","ScanTab","scanSelection","inputChange","scanParameter","FormControl","component","formControl","RadioGroup","Radio","textField","placeholder","verticalAlign","res","connectedScanTab","RowController","changeTab","Tabs","indicator","tabsIndicator","Tab","connectedRowController","palette","background","fontWeight","ZoneController","xs","justify","grid2","staticIP","saveButton","bqKey","floodLevelTimer","maxSnowLevel","snowLevelTimer","maxRainLevel","rainLevelTimer","syncTime","connectedZoneController","alignSelf","down","createData","portNum","sensorType","modelNum","samplingFq","rows","Sensors","selectedSensors","dialog","which","addSensor","editSensor","Dialog","aria-labelledby","DialogTitle","DialogContent","fullWidth","samplingFrequency","accept","multiple","htmlFor","DialogActions","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","SnackbarContentWrapper","green","dark","amber","icon","iconVariant","opacity","other","objectWithoutProperties","Icon","SnackbarContent","assign","aria-describedby","close","Close_default","App","queue","init","io","socketIOClient","on","parse","received","processQueue","shift","reason","handleExited","continueInterval","arguments","setTimeout","src_Sensors_Sensors","About","App_Initializing","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onExited","connectedApp","getState","clearAlert","topic","createMuiTheme","main","contrastText","secondary","render","MuiThemeProvider","es","document","getElementById"],"mappings":"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","file":"static/js/main.bdbf7ee5.chunk.js","sourcesContent":["const initialState = {\r\n    currentPage: '',\r\n    currentTab: 0,\r\n    timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n    alert: null,\r\n    time: Date.now(),\r\n    commissioningData: null,\r\n    fetchingCommissioningData: false,\r\n    currentTracker: null,\r\n    currentTrackerInfo: null,\r\n    xbeeResponse: [],\r\n    controlledTrackers: [],\r\n    editedTrackers: [],\r\n    SPAParameters: null,\r\n    stowAngles: null,\r\n    sendingSPAParameters: false,\r\n    sendingStowAngles: false,\r\n    gettingSPAParameters: false,\r\n    gettingStowAngles: false,\r\n    addingTrackers: false\r\n}\r\n\r\nconst difference = (a1, a2) => {\r\n    var result = [];\r\n    for (var i = 0; i < a1.length; i++) {\r\n    if (a2.indexOf(a1[i]) === -1) {\r\n        result.push(a1[i]);\r\n    }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function app(state, action) {\r\n    if (typeof state === 'undefined') {\r\n      return initialState\r\n    }\r\n    switch (action.type) {\r\n        case 'CHANGE_PAGE':\r\n        return {\r\n            ...state,\r\n            currentPage: action.page\r\n        }\r\n\r\n        case 'CHANGE_TAB':\r\n        return {\r\n            ...state,\r\n            currentTab: action.value.value\r\n        }\r\n\r\n        case 'CLEAR_ALERT':\r\n        return {\r\n            ...state,\r\n            alert: null           \r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_REQUEST':\r\n        return {\r\n            ...state,\r\n            fetchingCommissioningData: true\r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_SUCCESS':\r\n        if(action.json.staticData === null || action.json.staticData.length === 0) {\r\n            return {\r\n                ...state,\r\n                fetchingCommissioningData: false,\r\n                currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,\r\n                commissioningData: null,\r\n                alert: {\r\n                    type: 'warning',\r\n                    message: 'Please add trackers'\r\n                }\r\n            }\r\n        } else {\r\n            return {\r\n                ...state,\r\n                fetchingCommissioningData: false,\r\n                currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,\r\n                commissioningData: action.json.staticData\r\n            }\r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_FAILURE':\r\n        return {\r\n            ...state,\r\n            fetchingCommissioningData: false,\r\n            currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error loading commissioning data'\r\n            }\r\n        }\r\n\r\n        case 'GET_TIMEZONE_SUCCESS':\r\n        if(action.json.timeZone !== null) {\r\n            return {\r\n                ...state,\r\n                timeZone: action.json.timeZone\r\n            }\r\n        } else {\r\n            return state\r\n        }\r\n\r\n        case 'GET_TIMEZONE_FAILURE':\r\n        return {\r\n            ...state,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting timezone'\r\n            }\r\n        }\r\n\r\n        case 'GET_TIME_SUCCESS':\r\n        return {\r\n            ...state,\r\n            time: action.json.message\r\n        }\r\n\r\n        case 'SCAN':\r\n        return {\r\n            ...state,\r\n            currentPage: 'Row Controller',\r\n            currentTab: 1\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_REQUEST':\r\n        return {\r\n            ...state,\r\n            currentTracker: action.trackerID\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_SUCCESS':\r\n        return {\r\n            ...state,\r\n            currentTrackerInfo: action.json\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_FAILURE':\r\n        return {\r\n            ...state,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting current tracker info'\r\n            }\r\n        }\r\n\r\n        case 'DISCOVER_SUCCESS':\r\n        return {\r\n            ...state,\r\n            xbeeResponse: [],\r\n            alert: {\r\n                type: 'success',\r\n                message: 'Started Scanning'\r\n            }\r\n        }\r\n\r\n        case 'DISCOVER_FAILURE':\r\n        return {\r\n            ...state,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error starting scan'\r\n            }\r\n        }\r\n\r\n        case 'ui/rover/scan':\r\n        let a = null\r\n        if(state.commissioningData === null) {\r\n            a = [...state.xbeeResponse, action.json]\r\n        } else {\r\n            let b = state.commissioningData.filter(r => action.json.DID === r.deviceID)\r\n            if(b.length === 0) {\r\n                a = [...state.xbeeResponse, action.json]\r\n            } else {\r\n                a = [...state.xbeeResponse]\r\n            }\r\n                \r\n        }\r\n        return {\r\n            ...state,\r\n            xbeeResponse: a\r\n        }\r\n\r\n        case 'ADD_TRACKERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            addingTrackers: true\r\n        }\r\n\r\n        case 'ADD_TRACKERS_SUCCESS':\r\n        const newXbeeResponse = difference(state.xbeeResponse, action.devices)\r\n        return {\r\n            ...state,\r\n            xbeeResponse: newXbeeResponse,\r\n            addingTrackers: false,\r\n            alert: {\r\n                type: 'success',\r\n                message: 'Tracker(s) added'\r\n            }\r\n        }\r\n\r\n        case 'ADD_TRACKERS_FAILURE':\r\n        return {\r\n            ...state,\r\n            addingTrackers: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error adding trackers'\r\n            }\r\n        }\r\n\r\n        case 'SET_EDITED_TRACKERS':\r\n        return {\r\n            ...state,\r\n            editedTrackers: action.trackers\r\n        }\r\n\r\n        case 'SET_CONTROLLED_TRACKERS':\r\n        return {\r\n            ...state,\r\n            controlledTrackers: action.trackers\r\n        }\r\n\r\n        case 'ui/rover/spa':\r\n        return {\r\n            ...state,\r\n            SPAParameters: action.json,\r\n            gettingSPAParameters: false\r\n        }\r\n\r\n        case 'ui/rover/stowangles':\r\n        return {\r\n            ...state,\r\n            stowAngles: action.json,\r\n            gettingStowAngles: false\r\n        }\r\n\r\n        case 'GET_STOW_ANGLES_REQUEST':\r\n        return {\r\n            ...state,\r\n            gettingStowAngles: true\r\n        }\r\n\r\n        case 'GET_STOW_ANGLES_FAILURE':\r\n        return {\r\n            ...state,\r\n            gettingStowAngles: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting stow angles'\r\n            }\r\n        }\r\n\r\n        case 'GET_SPA_PARAMETERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            gettingSPAParameters: true\r\n        }\r\n\r\n        case 'GET_SPA_PARAMETERS_FAILURE':\r\n        return {\r\n            ...state,\r\n            gettingSPAParameters: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting SPA parameters'\r\n            }\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: true\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_FAILURE':\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error setting SPA parameters'\r\n            }\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_SUCCESS':\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: false\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_REQUEST':\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: true\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_FAILURE':\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error setting stow angles'\r\n            }\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_SUCCESS':\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: false\r\n        }\r\n\r\n        default:\r\n        return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport { app } from '../App/app.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  app\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n        loggerMiddleware        \r\n    )\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport Time from '@material-ui/icons/AccessTime';\r\nimport { Chip } from '@material-ui/core';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100%'\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('md')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    marginLeft: drawerWidth,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: 20,\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    paddingTop: 88\r\n  },\r\n  selected: {\r\n    backgroundColor: '#54AAB3 !important',\r\n    color: '#ffffff !important'\r\n  }\r\n});\r\n\r\nclass ResponsiveDrawer extends React.Component {\r\n  state = {\r\n    mobileOpen: false,\r\n  };\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme, children } = this.props;\r\n\r\n    const drawer = (\r\n      <div>\r\n        <div className={classes.toolbar} >\r\n            <img src='img/Voyager logo - large- no bg.png' height='60px' width='70%' alt=''></img>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Dashboard', 'Row Controller', 'Zone Controller', 'Sensors', 'About'].map((text, index) => (\r\n            <ListItem \r\n                button \r\n                key={text}\r\n                onClick={() => this.props.changePage(text)}\r\n                selected={this.props.currentPage === text}\r\n                classes={{selected: classes.selected}}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText disableTypography primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" color='primary' className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h5\" color=\"inherit\" noWrap>\r\n              Voyager Zone Controller\r\n            </Typography>\r\n            {/* <Chip\r\n              icon={<Time />}\r\n              style={{marginLeft: 'auto', backgroundColor: 'white'}}\r\n              label={`${new Date(new Date(Number(this.props.time)).toLocaleString('en-US', {timeZone:  this.props.timeZone})).getHours()} : ${new Date(new Date(Number(this.props.time)).toLocaleString('en-US', {timeZone:  this.props.timeZone})).getMinutes()}`}\r\n            /> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav className={classes.drawer}>\r\n          <Hidden mdUp implementation=\"css\">\r\n            <Drawer\r\n              container={this.props.container}\r\n              variant=\"temporary\"\r\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n              open={this.state.mobileOpen}\r\n              onClose={this.handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden smDown implementation=\"css\">\r\n            <Drawer\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n        </nav>\r\n        <main className={classes.content}>\r\n          {children}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\n \r\nfunction mapStateToProps(state) {\r\n    const { currentPage, time, timeZone } = state.app;\r\n    \r\n    return {\r\n        currentPage,\r\n        time,\r\n        timeZone\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changePage: (page) => {\r\n      dispatch({type: 'CHANGE_PAGE', page})\r\n    }\r\n})\r\n  \r\nconst connectedNavBar = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ResponsiveDrawer));\r\nexport { connectedNavBar as NavBar }","export const appService = {\r\n    setWifiInfo,\r\n    upload,\r\n    selectSensor,\r\n    uploadKey,\r\n    getSensors,\r\n    setWindAddress,\r\n    getWindAddress,\r\n    caliberate,\r\n    sendCommand,\r\n    getCommissioningData,\r\n    getCurrentTrackerInfo,\r\n    triggerDiscovery,\r\n    setPanID,\r\n    threshold,\r\n    heartBeat,\r\n    setTimeZone,\r\n    getHeartBeat,\r\n    getThreshold,\r\n    getPanID,\r\n    getFrequency,\r\n    setFrequency,\r\n    getTimeZone,\r\n    getTime,\r\n    discover,\r\n    addTrackers,\r\n    removeTrackers,\r\n    sendSPAParameters,\r\n    sendStowAngles,\r\n    getSPAParameters,\r\n    getStowAngles\r\n};\r\n\r\n/*const hostName = 'https://swift-bear-94.localtunnel.me' */\r\nconst hostName = `http://${window.location.hostname}:5000`; \r\nconst hostName2 = `http://${window.location.hostname}:5001`; \r\n\r\n\r\n\r\nfunction getStowAngles(DID) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: 'QSTO'\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/get`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getSPAParameters(DID) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: \"QSPA\"\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/get`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction sendStowAngles(DID, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: 'HSTO',\r\n            VALUES: `${WindStowAngle}, ${SnowStowAngle}, ${CleanStowAngle}, ${NightStowAngle}, ${EmergencyStowAngle}`\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/set`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction sendSPAParameters(DID, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backtracking) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: \"HSPA\",\r\n            VALUES: `${Lattitude}, ${Longitude}, ${Altitude}, ${EastLimit}, ${WestLimit}, ${TrackerWidth}, ${Pitch}, ${TrackingAccuracy}, ${AzimuthDeviation}, ${AltitudeTrackeronEast}, ${AltitudeTrackeronWest}, ${StartTimeLead}, ${EndTimeLag}, 0, ${backtracking}`\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/set`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction removeTrackers(DIDs) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DIDs: DIDs\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/removePairedDevices`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction addTrackers(devices) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            devices: devices\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/addDiscoveredDevices`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction discover(did) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: did\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/scan`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction handleResponse(response) {\r\n    return response.json().then(json => {\r\n        if (!response.ok) {\r\n            const error = (json && json.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return json;\r\n    });\r\n}\r\n\r\n\r\nfunction setWifiInfo(ssid, pass) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"ssid\": ssid,\r\n            \"password\": pass\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/setWifiInfo`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction upload(file) {\r\n    var data = new FormData()\r\n    data.append('file', file)\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: data\r\n    };\r\n\r\n    return fetch(`${hostName}/loadStaticData`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction uploadKey(file) {\r\n    var data = new FormData()\r\n    data.append('file', file)\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: data\r\n    };\r\n\r\n    return fetch(`${hostName}/loadBigQueryKey`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction selectSensor(windSensor, rainSensor, floodSensor, snowSensor) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"windSensor\": windSensor,\r\n            \"rainSensor\": rainSensor,\r\n            \"floodSensor\": floodSensor,\r\n            \"snowSensor\": snowSensor,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/sensors`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setWindAddress(address) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"deviceAddress\": address,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/windSensorSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getWindAddress() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/windSensorSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getSensors() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/sensors`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction caliberate(sensor) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"sensor\": sensor,\r\n        })\r\n    };\r\n\r\n\r\n    return fetch(`${hostName}/calibrateSensor`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n//control\r\n\r\nfunction sendCommand(deviceID, command, macID) {\r\n\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors'\r\n    };\r\n\r\n    if(command === \"WE\" && macID === '00000'){\r\n            requestOptions[\"body\"] = JSON.stringify({\r\n                \"CMD\" : \"HMNM\",\r\n                \"DID\": deviceID,\r\n                \"VALUES\": \"NEGATIVE\",\r\n            });\r\n        }\r\n\r\n    if(command === \"WIND\" && macID === '00000'){\r\n        requestOptions[\"body\"] = JSON.stringify({\r\n                \"CMD\" : \"HMOD\",\r\n                \"DID\": deviceID,\r\n                \"MODE\": \"WIND\",\r\n            });\r\n    }\r\n\r\n    if(command === \"EMERGENCY\" && macID === '00000'){\r\n        requestOptions[\"body\"] = JSON.stringify({\r\n                \"CMD\" : \"HMOD\",\r\n                \"DID\": deviceID,\r\n                \"MODE\": \"EMERGENCY\",\r\n            });\r\n    }\r\n\r\n    if(command === \"CLEAN\" && macID === '00000'){\r\n        requestOptions[\"body\"] = JSON.stringify({\r\n                \"CMD\" : \"HMOD\",\r\n                \"DID\": deviceID,\r\n                \"MODE\": \"CLEAN\",\r\n            });\r\n    }\r\n\r\n    if(command === \"SNOW\" && macID === '00000'){\r\n        requestOptions[\"body\"] = JSON.stringify({\r\n                \"CMD\" : \"HMOD\",\r\n                \"DID\": deviceID,\r\n                \"MODE\": \"SNOW\",\r\n            });\r\n    }\r\n\r\n    if(command === \"NIGHT\" && macID === '00000'){\r\n        requestOptions[\"body\"] = JSON.stringify({\r\n                \"CMD\" : \"HMOD\",\r\n                \"DID\": deviceID,\r\n                \"MODE\": \"NIGHT\",\r\n            });\r\n    }\r\n\r\n    if(command === \"SMTALStop\" && macID === '00000'){\r\n        requestOptions[\"body\"] = JSON.stringify({\r\n                \"CMD\" : \"HMNM\",\r\n                \"DID\": deviceID,\r\n                \"VALUES\": \"STOP\",\r\n            });\r\n    }\r\n\r\n    if(command === \"ES\" && macID === '00000'){\r\n        requestOptions[\"body\"] = JSON.stringify({\r\n                \"CMD\" : \"HMNM\",\r\n                \"DID\": deviceID,\r\n                \"VALUES\": \"POSITIVE\",\r\n            });\r\n    }\r\n\r\n    if(command === \"WE\" && macID !== '00000'){\r\n        requestOptions[\"body\"] = JSON.stringify({\r\n            \"CMD\" : \"HMNM\",\r\n            \"DID\": deviceID,\r\n            \"VALUES\": \"NEGATIVE\",\r\n            \"macID\": macID,\r\n        });\r\n    }\r\n\r\nif(command === \"NIGHT\" && macID !== '00000'){\r\n    requestOptions[\"body\"] = JSON.stringify({\r\n            \"CMD\" : \"HMOD\",\r\n            \"DID\": deviceID,\r\n            \"MODE\": \"NIGHT\",\r\n            \"macID\": macID,\r\n        });\r\n}\r\n\r\nif(command === \"CLEAN\" && macID !== '00000'){\r\n    requestOptions[\"body\"] = JSON.stringify({\r\n            \"CMD\" : \"HMOD\",\r\n            \"DID\": deviceID,\r\n            \"MODE\": \"CLEAN\",\r\n            \"macID\": macID,\r\n        });\r\n}\r\n\r\nif(command === \"EMERGENCY\" && macID !== '00000'){\r\n    requestOptions[\"body\"] = JSON.stringify({\r\n            \"CMD\" : \"HMOD\",\r\n            \"DID\": deviceID,\r\n            \"MODE\": \"EMERGENCY\",\r\n            \"macID\": macID,\r\n        });\r\n}\r\n\r\nif(command === \"WIND\" && macID !== '00000'){\r\n    requestOptions[\"body\"] = JSON.stringify({\r\n            \"CMD\" : \"HMOD\",\r\n            \"DID\": deviceID,\r\n            \"MODE\": \"WIND\",\r\n            \"macID\": macID,\r\n        });\r\n}\r\n\r\nif(command === \"SNOW\" && macID !== '00000'){\r\n    requestOptions[\"body\"] = JSON.stringify({\r\n            \"CMD\" : \"HMOD\",\r\n            \"DID\": deviceID,\r\n            \"MODE\": \"SNOW\",\r\n            \"macID\": macID,\r\n        });\r\n}\r\n\r\nif(command === \"SMTALStop\" && macID !== '00000'){\r\n    requestOptions[\"body\"] = JSON.stringify({\r\n            \"CMD\" : \"HMNM\",\r\n            \"DID\": deviceID,\r\n            \"VALUES\": \"STOP\",\r\n            \"macID\": macID,\r\n        });\r\n}\r\n\r\nif(command === \"ES\" && macID !== '00000'){\r\n    requestOptions[\"body\"] = JSON.stringify({\r\n            \"CMD\" : \"HMNM\",\r\n            \"DID\": deviceID,\r\n            \"VALUES\": \"POSITIVE\",\r\n            \"macID\": macID,\r\n        });\r\n}\r\n\r\nif(command === \"SMTALReset\" && macID === '00000'){\r\n    requestOptions[\"body\"] = JSON.stringify({\r\n            \"CMD\" : \"RESET\",\r\n            \"DID\": \"00000\",\r\n        });\r\n}\r\n\r\nif(command === \"SMTALReset\" && macID !== '00000'){\r\n    requestOptions[\"body\"] = JSON.stringify({\r\n            \"CMD\" : \"RESET\",\r\n            \"DID\": deviceID,\r\n            \"macID\": macID,\r\n        });\r\n}\r\n\r\n\r\n    return fetch(`http://${hostName2}/sendCommand`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n//dashboard\r\n\r\n\r\nfunction getCommissioningData() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/getCommissioningData`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getCurrentTrackerInfo(trackerID) {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/getCurrentTrackerInfo?id=${trackerID}`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction triggerDiscovery() {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"CMD\": \"HINF\",\r\n            \"DID\": \"00000\",\r\n        })\r\n    };\r\n\r\n    return fetch(`http://${hostName2}/sendCommand`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\n//settings\r\n\r\nfunction setPanID(panID) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"panID\": panID\r\n        })\r\n    };\r\n\r\n    console.log(panID);\r\n\r\n    return fetch(`http://${hostName2}/settings/xbeePanID `, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction threshold(maxWindSpeed, maxRainFall, meanWindSpeed, windSpeedTimer, maxFloodLevel, maxSnowFall) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"maxWindSpeed\": maxWindSpeed,\r\n            \"maxRainFall\": maxRainFall,\r\n            \"meanWindSpeed\": meanWindSpeed,\r\n            \"windSpeedTimer\": windSpeedTimer,\r\n            \"maxFloodLevel\": maxFloodLevel,\r\n            \"maxSnowFall\": maxSnowFall,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/threshold`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setFrequency(power, status) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"powerRequestTimePeriod\": power,\r\n            \"statusRequestTimePeriod\": status,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/requestFrequency`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\n\r\nfunction heartBeat(enabled, hbinterval, maxMsgs) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"enabled\": enabled,\r\n            \"interval\": hbinterval,\r\n            \"maxMsgs\": maxMsgs,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/heartBeatSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setTimeZone(time) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"timeZone\": time,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/timeZone`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getTimeZone() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/timeZone`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getTime() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/time`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getThreshold() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/threshold`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getFrequency() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/requestFrequency`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getHeartBeat() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/heartBeatSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getPanID() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`http://${hostName2}/gettings/xbeePanID`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n","import React, {Fragment} from 'react'\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { connect } from 'react-redux'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%', width: '100%', padding: 24\r\n    }\r\n})\r\n\r\nclass TrackerList extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.commissioningData) {\r\n            this.props.getCurrentTrackerInfo(this.props.commissioningData[0].trackerID)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes, commissioningData} = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Typography variant='h5'>\r\n                        Tracker List\r\n                    </Typography>\r\n                    <Table>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell >TrackerID</TableCell>\r\n                            <TableCell >Status</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {commissioningData && commissioningData.map(n => {\r\n                                return (\r\n                                <TableRow\r\n                                    hover\r\n                                    //className={classNames(n.trackerID === selectedTrackerID ? classes.selected : classes.row, classes.tableRow)}\r\n                                    key={n.trackerID}\r\n                                    onClick={() => this.props.getCurrentTrackerInfo(n.trackerID)}\r\n                                    style={{cursor: 'pointer'}}\r\n                                >\r\n                                    <TableCell>\r\n                                        {n.trackerID}\r\n                                    </TableCell>\r\n                                    <TableCell>Reachable</TableCell>\r\n                                </TableRow>\r\n                                );\r\n                            })}\r\n                            </TableBody>\r\n                        </Table>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData } = state.app\r\n\r\n    return {\r\n        commissioningData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getCurrentTrackerInfo : (trackerID) => {\r\n        dispatch({type: 'GET_CURRENT_TRACKER_INFO_REQUEST'})\r\n        appService.getCurrentTrackerInfo(trackerID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_CURRENT_TRACKER_INFO_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_CURRENT_TRACKER_INFO_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedTrackerList = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TrackerList))\r\nexport {connectedTrackerList as TrackerList}","import React from 'react'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { connect } from 'react-redux'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%', width: '100%', padding: 24, flexWrap: 'nowrap'\r\n    }\r\n})\r\n\r\nconst NoCurrentTrackerInfo = () =>\r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            No Info Found For Selected Tracker.\r\n    </div>\r\n\r\nclass TrackerDetails extends React.Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    render() {\r\n        const { classes, currentTrackerInfo } = this.props\r\n\r\n        return (currentTrackerInfo === null ? <NoCurrentTrackerInfo /> :\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Typography variant='h5' style={{height: '48px'}}>\r\n                        Tracker Details\r\n                    </Typography>\r\n                    <div \r\n                        className={currentTrackerInfo.currentAngle !== '--' && (currentTrackerInfo.currentAngle > 58 ? 'angle60' :\r\n                        currentTrackerInfo.currentAngle > 56 ? 'angle58' :\r\n                        currentTrackerInfo.currentAngle > 54 ? 'angle56' :\r\n                        currentTrackerInfo.currentAngle > 52 ? 'angle54' :\r\n                        currentTrackerInfo.currentAngle > 50 ? 'angle52' :\r\n                        currentTrackerInfo.currentAngle > 48 ? 'angle50' :\r\n                        currentTrackerInfo.currentAngle > 46 ? 'angle48' :\r\n                        currentTrackerInfo.currentAngle > 44 ? 'angle46' :\r\n                        currentTrackerInfo.currentAngle > 42 ? 'angle44' :\r\n                        currentTrackerInfo.currentAngle > 40 ? 'angle42' :\r\n                        currentTrackerInfo.currentAngle > 38 ? 'angle40' :\r\n                        currentTrackerInfo.currentAngle > 36 ? 'angle38' :\r\n                        currentTrackerInfo.currentAngle > 34 ? 'angle36' :\r\n                        currentTrackerInfo.currentAngle > 32 ? 'angle34' :\r\n                        currentTrackerInfo.currentAngle > 30 ? 'angle32' :\r\n                        currentTrackerInfo.currentAngle > 28 ? 'angle30' :\r\n                        currentTrackerInfo.currentAngle > 26 ? 'angle28' :\r\n                        currentTrackerInfo.currentAngle > 24 ? 'angle26' :\r\n                        currentTrackerInfo.currentAngle > 22 ? 'angle24' :\r\n                        currentTrackerInfo.currentAngle > 20 ? 'angle22' :\r\n                        currentTrackerInfo.currentAngle > 18 ? 'angle20' :\r\n                        currentTrackerInfo.currentAngle > 16 ? 'angle18' :\r\n                        currentTrackerInfo.currentAngle > 14 ? 'angle16' :\r\n                        currentTrackerInfo.currentAngle > 12 ? 'angle14' :\r\n                        currentTrackerInfo.currentAngle > 10 ? 'angle12' :\r\n                        currentTrackerInfo.currentAngle > 8 ? 'angle10' :\r\n                        currentTrackerInfo.currentAngle > 6 ? 'angle8' :\r\n                        currentTrackerInfo.currentAngle > 4 ? 'angle6' :\r\n                        currentTrackerInfo.currentAngle > 2 ? 'angle4' :\r\n                        currentTrackerInfo.currentAngle > 0 ? 'angle2' :\r\n                        currentTrackerInfo.currentAngle > -2 ? 'angle0' :\r\n                        currentTrackerInfo.currentAngle > -4 ? 'angle_2' :\r\n                        currentTrackerInfo.currentAngle > -6 ? 'angle_4' :\r\n                        currentTrackerInfo.currentAngle > -8 ? 'angle_6' :\r\n                        currentTrackerInfo.currentAngle > -10 ? 'angle_8' :\r\n                        currentTrackerInfo.currentAngle > -12 ? 'angle_10' :\r\n                        currentTrackerInfo.currentAngle > -14 ? 'angle_12' :\r\n                        currentTrackerInfo.currentAngle > -16 ? 'angle_14' :\r\n                        currentTrackerInfo.currentAngle > -18 ? 'angle_16' :\r\n                        currentTrackerInfo.currentAngle > -20 ? 'angle_18' :\r\n                        currentTrackerInfo.currentAngle > -22 ? 'angle_20' :\r\n                        currentTrackerInfo.currentAngle > -24 ? 'angle_22' :\r\n                        currentTrackerInfo.currentAngle > -26 ? 'angle_24' :\r\n                        currentTrackerInfo.currentAngle > -28 ? 'angle_26' :\r\n                        currentTrackerInfo.currentAngle > -30 ? 'angle_28' :\r\n                        currentTrackerInfo.currentAngle > -32 ? 'angle_30' :\r\n                        currentTrackerInfo.currentAngle > -34 ? 'angle_32' :\r\n                        currentTrackerInfo.currentAngle > -36 ? 'angle_34' :\r\n                        currentTrackerInfo.currentAngle > -38 ? 'angle_36' :\r\n                        currentTrackerInfo.currentAngle > -40 ? 'angle_38' :\r\n                        currentTrackerInfo.currentAngle > -42 ? 'angle_40' :\r\n                        currentTrackerInfo.currentAngle > -44 ? 'angle_42' :\r\n                        currentTrackerInfo.currentAngle > -46 ? 'angle_44' :\r\n                        currentTrackerInfo.currentAngle > -48 ? 'angle_46' :\r\n                        currentTrackerInfo.currentAngle > -50 ? 'angle_48' :\r\n                        currentTrackerInfo.currentAngle > -52 ? 'angle_50' :\r\n                        currentTrackerInfo.currentAngle > -54 ? 'angle_52' :\r\n                        currentTrackerInfo.currentAngle > -56 ? 'angle_54' :\r\n                        currentTrackerInfo.currentAngle > -58 ? 'angle_56' :\r\n                        currentTrackerInfo.currentAngle > -60 ? 'angle_58' :\r\n                        'angle_60')} \r\n                        style={{width: '100%', height: '150px', marginTop: 5}}>\r\n                            {currentTrackerInfo.currentAngle === '--' && <div \r\n                                style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n                                    No Current Angle Data Found.\r\n                            </div>}\r\n                        </div>\r\n                    {currentTrackerInfo.currentAngle !== '--' && <Typography variant='h5' style={{textAlign: 'center', height: 48, marginTop: 5}}>\r\n                        Angle = {currentTrackerInfo.currentAngle}\r\n                    </Typography>}\r\n                    <div style={{height: 'calc(100% - 246px)', width: '100%', overflow: 'auto'}}>\r\n                    <Table padding='none'>\r\n                        <TableBody>\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Tracker ID\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.trackerID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Device ID\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.deviceID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Mac ID \r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.macID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Current Mode\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.currentMode}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                    Current Angle\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.currentAngle}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                    Date and Time\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{new Date(currentTrackerInfo.timeStamp).toLocaleDateString('en-US', {timeZone: this.props.timeZone})} -- {new Date(currentTrackerInfo.timeStamp).toLocaleTimeString('en-US', {timeZone:  this.props.timeZone, hour12: false})}</TableCell>\r\n                        </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                    </div>\r\n                </Grid>\r\n        )\r\n    }\r\n} \r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentTrackerInfo, timeZone } = state.app\r\n\r\n    return {\r\n        currentTrackerInfo,\r\n        timeZone\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getCurrentTrackerInfo : (trackerID) => {\r\n        dispatch({type: 'GET_CURRENT_TRACKER_INFO_REQUEST'})\r\n        appService.getCurrentTrackerInfo(trackerID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_CURRENT_TRACKER_INFO_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_CURRENT_TRACKER_INFO_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedTrackerDetails = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TrackerDetails))\r\nexport {connectedTrackerDetails as TrackerDetails}","import React from 'react'\r\nimport { Grid, Paper, Button } from '@material-ui/core';\r\nimport { TrackerList } from './TrackerList'\r\nimport { TrackerDetails } from './TrackerDetails';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexWrap: 'wrap',\r\n        [theme.breakpoints.up('md')]: {\r\n            height: '100%',\r\n        }\r\n    },\r\n    trackerList: {\r\n        width: '100%',\r\n        padding: 10,\r\n        [theme.breakpoints.up('md')]: {\r\n            minHeight: '100%', width: '50%'\r\n        }\r\n    },\r\n    trackerDetails: {\r\n        width: '100%',\r\n        padding: 10,\r\n        [theme.breakpoints.up('md')]: {\r\n            minHeight: '100%', width: '50%'\r\n        }\r\n    }\r\n})\r\n\r\nconst Initializing = (props) => \r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            <p style={{margin: 10}}>No static data found.  </p>\r\n            <Button variant='contained' style={{margin: 10}} color='primary' onClick={() => props.scan()}>Add trackers</Button>\r\n            <Button variant='contained' style={{margin: 10}} color='primary' onClick={() => props.getCommissioningData()}>Refresh static data</Button>\r\n    </div>\r\n\r\n\r\nconst Fetching = () => \r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            FETCHING...\r\n    </div>\r\n\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    state = {\r\n    }\r\n\r\n    getCommissioningData = () => {\r\n        this.props.getCommissioningData()\r\n    }\r\n\r\n    scan = () => {\r\n        this.props.scan()\r\n    }\r\n\r\n    render() {\r\n        const { classes, commissioningData, fetchingCommissioningData } = this.props\r\n        return ( fetchingCommissioningData ? <Fetching /> : commissioningData === null ? <Initializing scan={() => this.scan()} getCommissioningData={() => this.getCommissioningData()}/> :\r\n            <Grid container direction=\"column\" className={classes.root}>\r\n                <Grid item className={classes.trackerList}>\r\n                    <Paper style={{height: '100%'}}>\r\n                        <TrackerList />\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item className={classes.trackerDetails}>\r\n                    <Paper style={{height: '100%'}}>\r\n                        <TrackerDetails />\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData, fetchingCommissioningData } = state.app\r\n\r\n    return {\r\n        commissioningData,\r\n        fetchingCommissioningData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    scan : () => {\r\n        dispatch({type: 'SCAN'})\r\n    },\r\n    getCommissioningData: () => {\r\n        dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n        appService.getCommissioningData()\r\n            .then(json => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedDashboard = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Dashboard))\r\nexport {connectedDashboard as Dashboard}","import React, { Fragment } from 'react'\r\nimport LeftIcon from '@material-ui/icons/ArrowBack'\r\nimport { IconButton, Typography, Grid, Button, TextField, FormControlLabel, Checkbox, InputAdornment } from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    fieldGrid: {\r\n        display: 'flex', \r\n        flexDirection: 'row', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    },\r\n    field: {\r\n        width: '45%',\r\n        margin: '10px 2.5% 0px 2.5%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '23%',\r\n            margin: '10px 1% 0px 1%'\r\n        }\r\n    }\r\n})\r\n\r\nclass EditRowController extends React.Component {\r\n    state = {\r\n        Lattitude: '',\r\n        Longitude: '',\r\n        Altitude: '',\r\n        TrackingLimitEast: '',\r\n        TrackingLimitWest: '',\r\n        RowWidth: '',\r\n        RowPitch: '',\r\n        TrackingResolution: '',\r\n        AzimuthDeviation: '',\r\n        AltitudeofTrackerontheEast: '',\r\n        AltitudeofTrackerontheWest: '',\r\n        EarlyStartMinutes: '',\r\n        LateFinishMinutes: '',\r\n        LattitudeError: '',\r\n        LongitudeError: '',\r\n        AltitudeError: '',\r\n        TrackingLimitEastError: '',\r\n        TrackingLimitWestError: '',\r\n        RowWidthError: '',\r\n        RowPitchError: '',\r\n        TrackingResolutionError: '',\r\n        AzimuthDeviationError: '',\r\n        AltitudeofTrackerontheEastError: '',\r\n        AltitudeofTrackerontheWestError: '',\r\n        EarlyStartMinutesError: '',\r\n        LateFinishMinutesError: '',\r\n        WindStowAngle: '',\r\n        SnowStowAngle: '',\r\n        NightStowAngle: '',\r\n        EmergencyStowAngle: '',\r\n        CleanStowAngle: '',\r\n        backTracking: '0'\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.editedTrackers.length === 1) {\r\n            this.props.getSPAParameters(this.props.editedTrackers[0].deviceID)\r\n            this.props.getStowAngles(this.props.editedTrackers[0].deviceID)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.SPAParameters !== this.props.SPAParameters) {\r\n            const values = nextProps.SPAParameters.VALUES.split(',')\r\n            this.setState({\r\n                Lattitude: values[0],\r\n                Longitude: values[1],\r\n                Altitude: values[2],\r\n                TrackingLimitEast: values[3],\r\n                TrackingLimitWest: values[4],\r\n                RowWidth: values[5],\r\n                RowPitch: values[6],\r\n                TrackingResolution: values[7],\r\n                AzimuthDeviation: values[8],\r\n                AltitudeofTrackerontheEast: values[9],\r\n                AltitudeofTrackerontheWest: values[10],\r\n                EarlyStartMinutes: values[11],\r\n                LateFinishMinutes: values[12],\r\n                backTracking: values[14]\r\n            })\r\n        }\r\n        if(nextProps.stowAngles !== this.props.stowAngles) {\r\n            const values = nextProps.stowAngles.VALUES.split(',')\r\n            this.setState({\r\n                WindStowAngle: values[0],\r\n                SnowStowAngle: values[1],\r\n                NightStowAngle: values[2],\r\n                EmergencyStowAngle: values[3],\r\n                CleanStowAngle: values[4]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleChangeSPA = (event, p) => {\r\n        const value = Number(event.target.value)\r\n        if(!isNaN(value)) {\r\n            if(p.min && p.max) {\r\n                if(value < p.min || value > p.max) {\r\n                    this.setState({\r\n                        ...this.state,\r\n                        [`${event.target.name}Error`]: `min: ${p.min} max: ${p.max}`\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        ...this.state,\r\n                        [event.target.name]: value,\r\n                        [`${event.target.name}Error`]: ''\r\n                    })\r\n                }\r\n            } else if(p.min) {\r\n                if(value < p.min) {\r\n                    this.setState({\r\n                        ...this.state,\r\n                        [`${event.target.name}Error`]: `min: ${p.min}`\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        ...this.state,\r\n                        [event.target.name]: value,\r\n                        [`${event.target.name}Error`]: ''\r\n                    })\r\n                }\r\n            } else if(p.max) {\r\n                if(value > p.max) {\r\n                    this.setState({\r\n                        ...this.state,\r\n                        [`${event.target.name}Error`]: `max: ${p.max}`\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        ...this.state,\r\n                        [event.target.name]: value,\r\n                        [`${event.target.name}Error`]: ''\r\n                    })\r\n                }\r\n            } else {\r\n                this.setState({\r\n                    ...this.state,\r\n                    [event.target.name]: value,\r\n                    [`${event.target.name}Error`]: ''\r\n                })\r\n            }\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                [`${event.target.name}Error`]: 'Floating point only'\r\n            })\r\n        }\r\n    }\r\n\r\n    handleBlur = (e, p) => {\r\n        if(e.target.value === '') {\r\n            this.setState({\r\n                ...this.state,\r\n                [e.target.name]: this.props.SPAParameters.VALUES.split(',')[p.value],\r\n                [`${e.target.name}Error`]: ''\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                [`${e.target.name}Error`]: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    isFloat = (n) => {\r\n        return n === +n && n !== (n|0);\r\n    }\r\n\r\n    sendSPAParameters = () => {\r\n        const { Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking } = this.state\r\n        this.props.sendSPAParameters(this.props.editedTrackers, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking)\r\n    }\r\n\r\n    sendStowAngles = () => {\r\n        const { WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle } = this.state\r\n        this.props.sendStowAngles(this.props.editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item style={{height: 64, borderBottom: '0.1px solid lightgrey'}}>\r\n                        <Typography variant='h5'>\r\n                            <IconButton aria-label=\"Back\" onClick={this.props.back} >\r\n                                <LeftIcon fontSize=\"large\" />\r\n                            </IconButton>\r\n                            Edit Parameters\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Typography variant='h6' style={{paddingLeft: 'calc(1% + 10px)'}}>\r\n                        SPA Settings\r\n                    </Typography>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                        \r\n                    {\r\n                        [\r\n                            {\r\n                                key: 'Lattitude',\r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 0\r\n                            },\r\n                            {\r\n                                key: 'Longitude', \r\n                                adornment: 'Deg',\r\n                                min: -180,\r\n                                max: +180,\r\n                                value: 1\r\n                            }, \r\n                            { \r\n                                key: 'Altitude',\r\n                                adornment: 'm',\r\n                                value: 2\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - East', \r\n                                adornment: 'Deg',\r\n                                min: -60,\r\n                                max: 0,\r\n                                value: 3\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - West', \r\n                                adornment: 'Deg',\r\n                                min: 0,\r\n                                max: +60,\r\n                                value: 4 \r\n                            }, \r\n                            { \r\n                                key: 'Row Width', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                value: 5\r\n                            }, \r\n                            { \r\n                                key: 'Row Pitch', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                value: 6\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Resolution', \r\n                                adornment: 'Deg',\r\n                                min: +0.50,\r\n                                max: +30.0,\r\n                                value: 7 \r\n                            }, \r\n                            { \r\n                                key: 'Azimuth Deviation', \r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 8  \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the East', \r\n                                adornment: 'm',\r\n                                value: 9 \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the West', \r\n                                adornment: 'm',\r\n                                value: 10\r\n                            }, \r\n                            { \r\n                                key: 'Early Start Minutes', \r\n                                adornment: 'Minutes',\r\n                                value: 11\r\n                            }, \r\n                            { \r\n                                key: 'Late Finish Minutes',\r\n                                adornment: 'Minutes',\r\n                                value: 12\r\n                            }\r\n                        ].map(p => {\r\n                            return <TextField\r\n                                key={p.key}\r\n                                className={classes.field}\r\n                                id={p.key}\r\n                                name={p.key.replace(/ /g, '').replace(/-/g, '')}\r\n                                label={p.key}\r\n                                value={this.state[p.key.replace(/ /g, '').replace(/-/g, '')]}\r\n                                onChange={(e) => this.handleChangeSPA(e, p)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">{p.adornment}</InputAdornment>,\r\n                                  }}\r\n                                error={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`] !== ''}\r\n                                helperText={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`]}\r\n                                onBlur={(e) => this.handleBlur(e, p)}\r\n                            />\r\n                        })\r\n                    }\r\n                        <FormControlLabel disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters} style={{ margin: 10, marginLeft: 'auto' }}\r\n                            control={\r\n                                <Checkbox color='primary' checked={this.state.backTracking === '1'} onClick={() => this.setState({...this.state, backTracking: !this.state.backTracking})}/>\r\n                            }\r\n                            label=\"Enable Backtracking\"\r\n                        />\r\n                        <Button color='primary' disabled variant='contained' style={{ margin: 10 }}>Sync time with Zone Controller</Button>    \r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center', borderBottom: '0.1px solid lightgrey'}}>\r\n                        <Button color='primary' disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters} variant='contained' onClick={() => this.sendSPAParameters()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                    <Typography variant='h6' style={{paddingLeft: 'calc(1% + 10px)'}}>\r\n                        Stow Angle Settings\r\n                    </Typography>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                        \r\n                    {\r\n                        ['Wind Stow Angle', 'Snow Stow Angle', 'Night Stow Angle', 'Emergency Stow Angle', 'Clean Stow Angle'].map(p => {\r\n                            return <TextField\r\n                                key={p}\r\n                                className={classes.field}\r\n                                id={p}\r\n                                name={p.replace(/ /g, '')}\r\n                                label={p}\r\n                                value={this.state[p.replace(/ /g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingStowAngles || this.props.gettingStowAngles}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">Deg</InputAdornment>,\r\n                                  }}\r\n                            />\r\n                        })\r\n                    }\r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center'}}>\r\n                        <Button color='primary' disabled={this.props.sendingStowAngles || this.props.gettingStowAngles} variant='contained' onClick={() => this.sendStowAngles()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { editedTrackers, SPAParameters, stowAngles, sendingSPAParameters, sendingStowAngles, gettingSPAParameters, gettingStowAngles } = state.app\r\n\r\n    return {\r\n        editedTrackers,\r\n        SPAParameters,\r\n        stowAngles,\r\n        sendingSPAParameters,\r\n        sendingStowAngles,\r\n        gettingSPAParameters,\r\n        gettingStowAngles\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendSPAParameters: (editedTrackers, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking) => {\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_SPA_PARAMETERS_REQUEST', t})\r\n            appService.sendSPAParameters(t.deviceID, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_SUCCESS'})\r\n                    dispatch({type: 'GET_SPA_PARAMETERS_REQUEST'})\r\n                    appService.getSPAParameters(t.deviceID)\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_SPA_PARAMETERS_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_SPA_PARAMETERS_FAILURE'})\r\n                        })\r\n\r\n                }, error => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_FAILURE'})\r\n                })\r\n        })\r\n        \r\n    },\r\n    sendStowAngles: (editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle) => {\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_STOW_ANGLES_REQUEST', t})\r\n            appService.sendStowAngles(t.deviceID, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_SUCCESS'})\r\n                    dispatch({type: 'GET_STOW_ANGLES_REQUEST'})\r\n                    appService.getStowAngles(t.deviceID)\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_STOW_ANGLES_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_STOW_ANGLES_FAILURE'})\r\n                        })\r\n                }, error => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_FAILURE'})\r\n                })\r\n        })\r\n    },\r\n    getStowAngles: (DID) => {\r\n        dispatch({type: 'GET_STOW_ANGLES_REQUEST'})\r\n        appService.getStowAngles(DID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_STOW_ANGLES_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'GET_STOW_ANGLES_FAILURE'})\r\n            })\r\n    },\r\n    getSPAParameters: (DID) => {\r\n        dispatch({type: 'GET_SPA_PARAMETERS_REQUEST'})\r\n        appService.getSPAParameters(DID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_SPA_PARAMETERS_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'GET_SPA_PARAMETERS_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedEditRowController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(EditRowController))\r\nexport {connectedEditRowController as EditRowController}","import React, { Fragment } from 'react'\r\nimport LeftIcon from '@material-ui/icons/ArrowBack'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { IconButton, Typography, Grid, Button, Menu, MenuItem } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: 'calc(100% - 48px)'\r\n    },\r\n    second: {\r\n        height: 'calc(100% - 128px)', \r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    }\r\n})\r\n\r\nclass ControlRowController extends React.Component {\r\n    state = {\r\n        typeOfStow: 'Stow'\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.setState({ ...this.state, anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleClose = (key) => {\r\n        this.setState({ typeOfStow: key, anchorEl: null });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        const { anchorEl } = this.state\r\n        return (\r\n            <Fragment>\r\n\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item style={{height: 64}}>\r\n                        <Typography variant='h5'>\r\n                            <IconButton aria-label=\"Back\" onClick={this.props.back} >\r\n                                <LeftIcon fontSize=\"large\" />\r\n                            </IconButton>\r\n                            Control\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item className={classes.second}>\r\n                    \r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center'}}>\r\n                        <Button color='primary' variant='contained' style={{ margin: 10 }}>Run West</Button>\r\n                        <Button color='primary' variant='contained' style={{ margin: 10 }}>Run East</Button>\r\n                        <Button color='primary' variant='contained' style={{ margin: 10 }}>Stop</Button>\r\n                        <Button color='primary' variant='contained' style={{ margin: 10 }}>Reset</Button>\r\n                        <Button color='primary' variant='contained' style={{ marginLeft: 10 }}>{this.state.typeOfStow}</Button>\r\n                        <Button \r\n                            color='primary' \r\n                            variant='contained' \r\n                            aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={this.handleClick}\r\n                            style={{ minWidth: 24, paddingLeft: 0, paddingRight: 0}}\r\n                        >\r\n                            <ExpandMoreIcon />\r\n                        </Button>\r\n                        <Menu\r\n                            id=\"simple-menu\"\r\n                            anchorEl={anchorEl}\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={this.handleClose}\r\n                            >\r\n                            <MenuItem onClick={() => this.handleClose('Wind')}>Wind</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('Snow')}>Snow</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('Night')}>Night</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('Clean')}>Clean</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('Emergency')}>Emergency</MenuItem>\r\n                        </Menu>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ControlRowController);","import React, { Fragment } from 'react'\r\nimport { Grid, Button, Checkbox } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { EditRowController } from './EditRowController';\r\nimport ControlRowController from './ControlRowController'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    buttons: {\r\n        marginBottom: 10,\r\n        marginRight: 10,\r\n        marginTop: 10\r\n    }\r\n});\r\n\r\nclass RowControllerTab extends React.Component {\r\n    state = {\r\n        selectedTrackers: [],\r\n        location: 'home'\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedTrackers.length === this.props.commissioningData.length) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.props.commissioningData]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectRow = (row) => {\r\n        if(this.state.selectedTrackers.indexOf(row) === -1) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.state.selectedTrackers, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.state.selectedTrackers.filter(t => t.macID !== row.macID)]\r\n            })\r\n        }\r\n    }\r\n\r\n    editTracker = () => {\r\n        this.props.setEditedTrackers(this.state.selectedTrackers)\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'edit'\r\n        })\r\n    }\r\n\r\n    controlTracker = () => {\r\n        this.props.setControlledTrackers(this.state.selectedTrackers)\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'control'\r\n        })\r\n    }\r\n\r\n    back = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'home'\r\n        })\r\n    }\r\n\r\n    removeTrackers = () => {\r\n        this.props.removeTrackers(this.state.selectedTrackers.map(s => s.deviceID))\r\n        this.setState({...this.state, selectedTrackers: []})\r\n    }\r\n\r\n    render() {\r\n        const { classes, commissioningData } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    this.state.location === 'edit' ? \r\n                    <EditRowController back={this.back}/> :\r\n                    this.state.location === 'control' ?\r\n                    <ControlRowController back={this.back}/> :\r\n                    <Grid container direction='column' style={{ height: 'calc(100% - 48px)'}}>\r\n                        <Grid item style={{textAlign: 'end'}}>\r\n                            <Button color='primary' variant='contained' disabled={this.state.selectedTrackers.length === 0} className={classes.buttons} onClick={() => this.editTracker()}>Edit</Button>\r\n                            <Button color='primary' variant='contained' disabled={this.state.selectedTrackers.length === 0} className={classes.buttons} onClick={() => this.controlTracker()}>Control</Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    onClick={() => this.selectAll()}\r\n                                    style={{cursor: 'pointer'}}\r\n                                >\r\n                                    {commissioningData !== null && commissioningData.length > 1 && <Checkbox \r\n                                        checked={this.state.selectedTrackers.length === commissioningData.length}\r\n                                        color='primary'\r\n                                    />}\r\n                                        </TableCell>\r\n                                <TableCell >Row #</TableCell>\r\n                                <TableCell >Device ID</TableCell>\r\n                                <TableCell >Mac ID</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {commissioningData && commissioningData.map(row => (\r\n                                <TableRow key={row.macID}\r\n                                    onClick={() => this.selectRow(row)}\r\n                                    style={{cursor: 'pointer'}}\r\n                                >\r\n                                <TableCell>\r\n                                    <Checkbox \r\n                                        checked={this.state.selectedTrackers.indexOf(row) !== -1}\r\n                                        color='primary'\r\n                                    />\r\n                                </TableCell>\r\n                                    <TableCell >{row.rowNumber}</TableCell>\r\n                                    <TableCell >{row.deviceID}</TableCell>\r\n                                    <TableCell >{row.macID}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        </Grid>{commissioningData !== null &&\r\n                        <Grid item style={{textAlign: 'end'}}>\r\n                            <Button variant='contained' color='primary' className={classes.buttons} disabled={this.state.selectedTrackers.length === 0} onClick={() => this.removeTrackers()}>Forget</Button>\r\n                        </Grid>}\r\n                    </Grid>\r\n                    \r\n                }\r\n                \r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData } = state.app\r\n\r\n    return {\r\n        commissioningData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    removeTrackers : (DIDs) => {\r\n        dispatch({type: 'REMOVE_TRACKERS_REQUEST'})\r\n        appService.removeTrackers(DIDs)\r\n            .then(json => {\r\n                dispatch({type: 'REMOVE_TRACKERS_SUCCESS', DIDs})\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n                appService.getCommissioningData()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n                    })\r\n            }, error => {\r\n                dispatch({type: 'REMOVE_TRACKERS_FAILURE'})\r\n            })\r\n    },\r\n    setEditedTrackers: (trackers) => {\r\n        dispatch({type: 'SET_EDITED_TRACKERS', trackers})\r\n    },\r\n    setControlledTrackers: (trackers) => {\r\n        dispatch({type: 'SET_CONTROLLED_TRACKERS', trackers})\r\n    }\r\n})\r\n\r\n\r\nconst connectedRowControllerTab = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RowControllerTab))\r\nexport {connectedRowControllerTab as RowControllerTab}","import React, { Fragment } from 'react'\r\nimport { Grid, Checkbox, TextField, Button } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    textField: {\r\n        marginLeft: 24\r\n    },\r\n    formControl: {\r\n        marginLeft: 24\r\n    }\r\n});\r\n  \r\n\r\nclass ScanTab extends React.Component {\r\n    state = {\r\n        selectedTrackers: [],\r\n        scanSelection: 'PAN ID'\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedTrackers.length === this.props.xbeeResponse.length) {\r\n            this.setState({\r\n                selectedTrackers: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selectedTrackers: [...this.props.xbeeResponse]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectRow = (row) => {\r\n        if(this.state.selectedTrackers.indexOf(row) === -1) {\r\n            this.setState({\r\n                selectedTrackers: [...this.state.selectedTrackers, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selectedTrackers: [...this.state.selectedTrackers.filter(t => t.id !== row.id)]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            scanSelection: e.target.value\r\n        })\r\n    }\r\n\r\n    inputChange = (e) =>{\r\n        this.setState({\r\n            scanParameter: e.target.value\r\n        })\r\n    }\r\n\r\n    scan = () => {\r\n        if(this.state.scanSelection === 'PAN ID') {\r\n            this.props.discover('00000')\r\n        } else {\r\n            this.props.discover(this.state.scanParameter)\r\n        }\r\n    } \r\n\r\n    addTrackers = () => {\r\n        this.props.addTrackers(this.state.selectedTrackers)\r\n    }\r\n\r\n    render() {\r\n        const { classes, xbeeResponse } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column'>\r\n                    <Grid item>\r\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                            <RadioGroup\r\n                                row\r\n                                aria-label=\"Scan\"\r\n                                name=\"scan\"\r\n                                value={this.state.scanSelection}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <FormControlLabel value=\"PAN ID\" control={<Radio color='primary'/>} label=\"PAN ID\" />\r\n                                <FormControlLabel value=\"Device ID\" control={<Radio color='primary'/>} label=\"Device ID\" />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item style={{marginBottom: 24}}>\r\n                    {\r\n                        this.state.scanSelection === 'PAN ID' ?\r\n                        <TextField\r\n                            id=\"scanParameter\"\r\n                            className={classes.textField}\r\n                            value={this.state.scanParameter}\r\n                            onChange={this.inputChange}\r\n                            placeholder='PAN ID'\r\n                            margin=\"none\"\r\n                            variant='outlined'\r\n                        /> :\r\n                        <TextField\r\n                            id=\"scanParameter\"\r\n                            className={classes.textField}\r\n                            value={this.state.scanParameter}\r\n                            onChange={this.inputChange}\r\n                            placeholder='Device ID'\r\n                            margin=\"none\"\r\n                            variant='outlined'\r\n                        />\r\n                    }\r\n                        <Button color='primary' onClick={() => this.scan()} variant='contained' style={{marginLeft: 24, verticalAlign: 'bottom'}}>Scan</Button>\r\n                    </Grid>{xbeeResponse.length !== 0 && xbeeResponse !== undefined &&\r\n                    <Grid item>\r\n                    <Table className={classes.table}>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell\r\n                                onClick={() => this.selectAll()}\r\n                                style={{cursor: 'pointer'}}\r\n                            >\r\n                                {xbeeResponse.length > 1 && xbeeResponse !== undefined && <Checkbox \r\n                                    checked={this.state.selectedTrackers.length === xbeeResponse.length && this.state.selectedTrackers.length !== 0}\r\n                                    color='primary'\r\n                                />}\r\n                                    </TableCell>\r\n                            <TableCell >Row #</TableCell>\r\n                            <TableCell >Device ID</TableCell>\r\n                            <TableCell >Mac ID</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {xbeeResponse.length !== 0 && xbeeResponse !== undefined && xbeeResponse.map(res => {\r\n                            return (\r\n                            <TableRow key={res.DID}\r\n                                onClick={() => this.selectRow(res)}\r\n                                style={{cursor: 'pointer'}}\r\n                            >\r\n                            <TableCell>\r\n                                <Checkbox \r\n                                    checked={this.state.selectedTrackers.indexOf(res) !== -1}\r\n                                    color='primary'\r\n                                />\r\n                            </TableCell>\r\n                                <TableCell >{res.VALUES.split(',')[0]}</TableCell>\r\n                                <TableCell >{res.DID}</TableCell>\r\n                                <TableCell >{res.macID}</TableCell>\r\n                            </TableRow>\r\n                        )})}\r\n                        </TableBody>\r\n                    </Table>\r\n                    </Grid>}{xbeeResponse.length !== 0 && xbeeResponse !== undefined &&\r\n                    <Grid item style={{textAlign: 'end'}}>\r\n                        <Button color='primary' disabled={this.state.selectedTrackers.length === 0} onClick={() => this.addTrackers()} variant='contained' style={{margin: 10}}>Add</Button>\r\n                    </Grid>}\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { xbeeResponse } = state.app\r\n\r\n    return {\r\n        xbeeResponse\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    discover : (did) => {\r\n        dispatch({type: 'DISCOVER_REQUEST'})\r\n        appService.discover(did)\r\n            .then(json => {\r\n                dispatch({type: 'DISCOVER_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'DISCOVER_FAILURE'})\r\n            })\r\n    },\r\n    addTrackers: (devices) => {\r\n        dispatch({type: 'ADD_TRACKERS_REQUEST'})\r\n        appService.addTrackers(devices)\r\n            .then(json => {\r\n                dispatch({type: 'ADD_TRACKERS_SUCCESS', devices})\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n                appService.getCommissioningData()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n                    })\r\n            }, error => {\r\n                dispatch({type: 'ADD_TRACKERS_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedScanTab = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ScanTab))\r\nexport {connectedScanTab as ScanTab}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { RowControllerTab } from './RowControllerTab'\r\nimport { ScanTab } from './ScanTab'\r\nimport { connect } from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  tabsIndicator: {\r\n    backgroundColor: '#54AAB3',\r\n  },\r\n  selected: {\r\n    backgroundColor: '#54AAB3',\r\n    color: '#ffffff',\r\n    fontWeight: 600,\r\n    fontSize: 14\r\n  }\r\n});\r\n\r\nclass RowController extends React.Component {\r\n\r\n  handleChange = (event, value) => {\r\n    this.props.changeTab({ value });\r\n  };\r\n\r\n  render() {\r\n    const { classes, currentTab } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" color='secondary'>\r\n          <Tabs value={currentTab} onChange={this.handleChange} classes={{indicator: classes.tabsIndicator}}>\r\n            <Tab label=\"Paired Rows\" classes={{selected: classes.selected}}/>\r\n            <Tab label=\"Scan\" classes={{selected: classes.selected}}/>\r\n          </Tabs>\r\n        </AppBar>\r\n        {currentTab === 0 && <RowControllerTab />}\r\n        {currentTab === 1 && <ScanTab />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRowController.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentTab } = state.app\r\n\r\n    return {\r\n        currentTab\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changeTab: (value) => {\r\n        dispatch({type: 'CHANGE_TAB', value})\r\n    }\r\n})\r\n\r\n\r\nconst connectedRowController = (connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RowController)))\r\nexport {connectedRowController as RowController}","import React, { Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Grid, TextField, Typography, FormControlLabel, FormControl, Radio, RadioGroup, Button } from '@material-ui/core';\r\nimport { connect } from 'react-redux'\r\nimport { appService } from '../App/app.services';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    [theme.breakpoints.up('md')]: {\r\n        height: '660px'\r\n    }\r\n  },\r\n  grid2: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '90%',\r\n    [theme.breakpoints.up('md')]: {\r\n        width: '30%',\r\n    }\r\n  },\r\n  field: {\r\n    width: '90%',\r\n    [theme.breakpoints.up('md')]: {\r\n        margin: '10px 0 0 0'\r\n    }\r\n  },\r\n  saveButton: {\r\n    margin: '10px 10px 10px 5%',\r\n    alignSelf: 'start',\r\n    [theme.breakpoints.down('sm')]: {\r\n        width: '90%',\r\n        margin: 10,\r\n        alignSelf: 'center'\r\n    }\r\n  }\r\n});\r\n\r\nclass ZoneController extends React.Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        return (\r\n            <Fragment>\r\n                    <Grid item xs={12} container direction='column' justify='center' alignItems='center' className={classes.root}>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Network\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='ssid'\r\n                            label='SSID'\r\n                            value={this.state.ssid}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='password'\r\n                            label='Password'\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='staticIP'\r\n                            label='Static IP'\r\n                            value={this.state.staticIP}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary' className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Heart Beat\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='heartbeatInterval'\r\n                            label='Heart Beat Interval'\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='heartbeatMaxMessages'\r\n                            label='Heart Beat Max Messages'\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Big Query\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='bqKey'\r\n                            label='Big Query key'\r\n                            value={this.state.bqKey}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            PAN ID\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='panID'\r\n                            label='PAN ID'\r\n                            value={this.state.panID}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Wind Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='maxWindSpeed'\r\n                            label='Max Wind Speed'\r\n                            value={this.state.maxWindSpeed}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='meanWindSpeed'\r\n                            label='Mean Wind Speed'\r\n                            value={this.state.meanWindSpeed}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='windSpeedTimer'\r\n                            label='Wind Speed Timer'\r\n                            value={this.state.windSpeedTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Flood Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='maxFloodLevel'\r\n                            label='Max FLood Level'\r\n                            value={this.state.maxFloodLevel}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='floodLevelTimer'\r\n                            label='Flood level Timer'\r\n                            value={this.state.floodLevelTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Snow Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='maxSnowLevel'\r\n                            label='Max Snow Level'\r\n                            value={this.state.maxSnowLevel}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='snowLevelTimer'\r\n                            label='Snow level Timer'\r\n                            value={this.state.snowLevelTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Rain Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='maxRainLevel'\r\n                            label='Max Rain Level'\r\n                            value={this.state.maxRainLevel}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='rainLevelTimer'\r\n                            label='Rain level Timer'\r\n                            value={this.state.rainLevelTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <FormControl component=\"fieldset\" className={classes.field}>\r\n                            <RadioGroup\r\n                                row\r\n                                aria-label=\"Sync\"\r\n                                name=\"sync\"\r\n                                value={this.state.syncTime}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <FormControlLabel value=\"internet\" control={<Radio color='primary'/>} label=\"Sync from internet\" />\r\n                                <FormControlLabel value=\"scada\" control={<Radio color='primary'/>} label=\"Sync from SCADA\" />\r\n                            </RadioGroup>\r\n                            <Button variant='contained' color='primary' style={{marginBottom: 10}}>Sync</Button>\r\n                        </FormControl>\r\n                        </div>\r\n                    </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData } = state.app\r\n\r\n    return {\r\n        commissioningData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setWifiInfo: (ssid, pass, staticIP) => {\r\n        dispatch({type: 'SET_WIFI_INFO'}) \r\n        appService.setWifiInfo(ssid, pass)\r\n    }\r\n})\r\n\r\n\r\nconst connectedZoneController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ZoneController))\r\nexport {connectedZoneController as ZoneController}","import React from 'react'\r\nimport { Grid, Button, Checkbox, TextField, DialogActions, DialogTitle, Dialog, DialogContent } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      height: '100%',\r\n      overflowX: 'auto',\r\n      backgroundColor: 'white'\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    buttons: {\r\n        marginBottom: 10,\r\n        marginRight: 10,\r\n        marginTop: 10\r\n    }\r\n});\r\n  \r\nlet id = 0;\r\nfunction createData(portNum, sensorType, modelNum, samplingFq) {\r\n    id += 1;\r\n    return { id, portNum, sensorType, modelNum, samplingFq };\r\n}\r\n  \r\nconst rows = [\r\n    createData(1, 'Wind Sensor', 'WB345', ' '),\r\n    createData(2, 'Snow Sensor', 'SB345', ' '),\r\n    createData(3, 'Flood Sensor', 'FS234', ' ')\r\n];\r\n\r\n\r\nclass Sensors extends React.Component {\r\n\r\n    state = {\r\n        selectedSensors: [],\r\n        dialog: false,\r\n        which: 'none'\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedSensors.length === rows.length) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...rows]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectSensor = (row) => {\r\n        if(this.state.selectedSensors.indexOf(row) === -1) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...this.state.selectedSensors, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...this.state.selectedSensors.filter(t => t.id !== row.id)]\r\n            })\r\n        }\r\n    }\r\n\r\n    addSensor = () => {\r\n        this.setState({ dialog: true, which: 'add'})\r\n    }\r\n\r\n    editSensor = () => {\r\n        this.setState({ dialog: true, which: 'edit'})\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ dialog: false, which: 'none' });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n\r\n        return (\r\n            <Grid container direction='column' className={classes.root}>\r\n                <Grid item style={{textAlign: 'end'}}>\r\n                    <Button color='primary' variant='contained' className={classes.buttons} onClick={() => this.addSensor()}>Add New</Button>\r\n                    <Button color='primary' variant='contained' className={classes.buttons} onClick={() => this.editSensor()}>Edit</Button>\r\n                </Grid>\r\n                <Grid item>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell\r\n                            onClick={() => this.selectAll()}\r\n                            style={{cursor: 'pointer'}}\r\n                        >\r\n                            <Checkbox \r\n                                checked={this.state.selectedSensors.length === rows.length}\r\n                                color='primary'\r\n                            />\r\n                                </TableCell>\r\n                        <TableCell >Port #</TableCell>\r\n                        <TableCell >Sensor Type</TableCell>\r\n                        <TableCell >Model #</TableCell>\r\n                        <TableCell >Sampling Frequency</TableCell>\r\n                        <TableCell >Enable</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {rows.map(row => (\r\n                        <TableRow key={row.id}\r\n                            onClick={() => this.selectSensor(row)}\r\n                            style={{cursor: 'pointer'}}\r\n                        >\r\n                        <TableCell>\r\n                            <Checkbox \r\n                                checked={this.state.selectedSensors.indexOf(row) !== -1}\r\n                                color='primary'\r\n                            />\r\n                        </TableCell>\r\n                            <TableCell >{row.portNum}</TableCell>\r\n                            <TableCell >{row.sensorType}</TableCell>\r\n                            <TableCell >{row.modelNum}</TableCell>\r\n                            <TableCell >{row.samplingFq}</TableCell>\r\n                            <TableCell>\r\n                                <Checkbox \r\n                                    checked={this.state.selectedSensors.indexOf(row) !== -1}\r\n                                    color='primary'\r\n                                />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n                </Grid>\r\n                <Dialog\r\n                    open={this.state.dialog}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">{this.state.which === 'add' ? 'Add Sensor' : 'Edit Sensor'}</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            fullWidth\r\n                            id='portNum'\r\n                            label='Port #'\r\n                            value={this.state.portNum}\r\n                            onChange={this.handleChange}\r\n                            margin=\"dense\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id='sensorType'\r\n                            label='Sensor Type'\r\n                            value={this.state.sensorType}\r\n                            onChange={this.handleChange}\r\n                            margin=\"dense\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id='modelNum'\r\n                            label='Model #'\r\n                            value={this.state.modelNum}\r\n                            onChange={this.handleChange}\r\n                            margin=\"dense\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id='samplingFrequency'\r\n                            label='samplingFrequency'\r\n                            value={this.state.samplingFrequency}\r\n                            onChange={this.handleChange}\r\n                            margin=\"dense\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <div style={{display: 'flex', alignItems: 'baseline'}}>\r\n                        <TextField\r\n                            id=\"outlined-full-width\"\r\n                            label=\"Driver File\"\r\n                            helperText=\"Upload Sensor Driver File\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                        <input\r\n                            accept=\"image/*\"\r\n                            style={{ display: 'none'}}\r\n                            id=\"contained-button-file\"\r\n                            multiple\r\n                            type=\"file\"\r\n                        />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\" style={{margin: 5}}>\r\n                                Upload\r\n                            </Button>\r\n                        </label>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        {\r\n                            this.state.which === 'edit' &&\r\n                            <Button variant='contained' onClick={this.handleClose} color=\"primary\">\r\n                                Remove Sensor\r\n                            </Button>\r\n                        } \r\n                        <Button variant='contained' onClick={this.handleClose} color=\"primary\">\r\n                            {this.state.which === 'add' ? 'Add Sensor' : this.state.which === 'edit' ? 'Save' : ''}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Grid>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default withStyles(styles)(Sensors)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst styles1 = theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n  const { classes, className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={[classes[variant], className]}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={[classes.icon, classes.iconVariant]} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          className={classes.close}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nexport const SnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);","import React from 'react';\r\nimport { NavBar } from '../NavBar/NavBar'\r\nimport {Dashboard} from '../Dashboard/Dashboard'\r\nimport { RowController }  from '../RowController/RowController'\r\nimport { ZoneController } from '../ZoneController/ZoneController'\r\nimport Sensors from '../Sensors/Sensors'\r\nimport { About } from '../About/About'\r\nimport { connect } from 'react-redux'\r\nimport { appService } from './app.services';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport { SnackbarContentWrapper } from '../util/SnackbarContentWrapper';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { store } from '../util/store'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%'\r\n    }\r\n})\r\n\r\nconst Initializing = () => <div style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>INITIALIZING...</div>\r\n\r\nclass App extends React.Component {\r\n    queue = [];\r\n\r\n    state = {\r\n        open: false,\r\n        alert: null,\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.props.init()\r\n        this.getTime()\r\n        const io = socketIOClient(`http://${window.location.hostname}:8080`);\r\n        io.on('connect', () => {\r\n            console.log('connected')\r\n        })\r\n        io.on('ui/rover/scan', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/scan', json)\r\n        })\r\n        io.on('ui/rover/spa', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/spa', json)\r\n        })\r\n        io.on('ui/rover/stowangles', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/stowangles', json)\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.alert !== null && (nextProps.alert !== this.props.alert)) {\r\n            this.queue.push(nextProps.alert);\r\n        \r\n            if (this.state.open) {\r\n                this.setState({ open: false });\r\n            } else {\r\n                this.processQueue();\r\n            }    \r\n        }\r\n    }\r\n\r\n    processQueue = () => {\r\n        if (this.queue.length > 0) {\r\n            this.setState({\r\n                alert: this.queue.shift(),\r\n                open: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n        return;\r\n        }\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleExited = () => {\r\n        this.processQueue();\r\n    };\r\n\r\n    \r\n    getTime = (continueInterval = true) => {\r\n        this.props.getTime()\r\n        if(continueInterval) {\r\n            setTimeout(this.getTime, 60000)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return ( \r\n                <div className={classes.root}>\r\n                    <NavBar>\r\n                    {\r\n                        this.props.currentPage === 'Dashboard' ? <Dashboard /> :\r\n                        this.props.currentPage === 'Row Controller' ? <RowController /> :\r\n                        this.props.currentPage === 'Zone Controller' ? <ZoneController /> :\r\n                        this.props.currentPage === 'Sensors' ? <Sensors /> : \r\n                        this.props.currentPage === 'About' ? <About /> : <Initializing />\r\n                    }\r\n                    </NavBar>\r\n                    <Snackbar\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'left',\r\n                        }}\r\n                        open={this.state.open}\r\n                        autoHideDuration={3000}\r\n                        onClose={this.handleClose}\r\n                        onExited={this.handleExited}\r\n                        >\r\n                        <SnackbarContentWrapper\r\n                            onClose={this.handleClose}\r\n                            variant={this.state.alert === null ? 'info' : this.state.alert.type}\r\n                            message={this.state.alert === null ? '' : this.state.alert.message}\r\n                        />\r\n                    </Snackbar>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentPage, alert, timeZone } = state.app\r\n\r\n    return {\r\n        currentPage,\r\n        alert,\r\n        timeZone\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    init: () => {\r\n        dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n        appService.getCommissioningData()\r\n            .then(json => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n            })\r\n        \r\n        dispatch({type: 'GET_TIMEZONE_REQUEST'})\r\n        appService.getTimeZone()\r\n            .then(json => {\r\n                if(json.timeZone === null) {\r\n                    dispatch({type: 'SET_TIMEZONE_REQUEST'})\r\n                    appService.setTimeZone(store.getState().app.timeZone)\r\n                        .then(json => {\r\n                            dispatch({type: 'SET_TIMEZONE_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'SET_TIMEZONE_FAILURE'})\r\n                        })\r\n                }\r\n                dispatch({type: 'GET_TIMEZONE_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_TIMEZONE_FAILURE', error})\r\n            })\r\n    },\r\n    getTime: () => {\r\n        dispatch({type: 'GET_TIME_REQUEST'})\r\n        appService.getTime()\r\n            .then(json => {\r\n                dispatch({type: 'GET_TIME_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_TIME_FAILURE', error})\r\n            })\r\n    },\r\n    clearAlert : () => {\r\n        dispatch({type: 'CLEAR_ALERT'})\r\n    },\r\n    received: (topic, json) => {\r\n        dispatch({type: topic, json})\r\n    }\r\n})\r\n\r\n\r\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(App))\r\nexport {connectedApp as App}","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { store } from './util/store';\r\nimport { App } from './App';\r\nimport './index.css'\r\n\r\n/* const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#54AAB3\",\r\n        contrastText: '#fff'\r\n      }\r\n    },\r\n    overrides: {\r\n      MuiIconButton: {\r\n          root: {\r\n            color: 'white'\r\n          },\r\n      }\r\n    } \r\n  }); */\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#54AAB3',\r\n        dark: '#3c8f98',\r\n        contrastText: '#ffffff'\r\n      },\r\n      secondary: {\r\n        main: '#ffffff',\r\n        contrastText: '#000000'\r\n      }\r\n    }/* ,\r\n    overrides: {\r\n      MuiListItem: {\r\n        root: {\r\n          backgroundColor: '#ffffff',\r\n          '&$selected': {\r\n            backgroundColor: '#54AAB3',\r\n            color: '#ffffff'\r\n          },\r\n          '&$selected:hover': {\r\n            backgroundColor: '#3c8f98',\r\n            color: '#ffffff'\r\n          }\r\n        },\r\n      },\r\n    } */\r\n  });\r\n\r\nrender(\r\n    <MuiThemeProvider theme={theme}>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </MuiThemeProvider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}