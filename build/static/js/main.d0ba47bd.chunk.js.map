{"version":3,"sources":["App/app.reducer.js","util/rootReducer.js","util/store.js","NavBar/NavBar.js","Dashboard/TrackerList.js","App/app.services.js","Dashboard/TrackerDetails.js","Dashboard/Dashboard.js","RowController/SPAParameters.js","RowController/StowAngles.js","RowController/EditRowController.js","RowController/_EditRowController.js","RowController/ControlRowController.js","RowController/RowControllerTab.js","RowController/ScanTab.js","RowController/RowController.js","ZoneController/ZoneController.js","Sensors/Sensors.js","util/SnackbarContentWrapper.js","App/App.jsx","index.js"],"names":["initialState","currentPage","currentTab","currentEditTab","timeZone","Intl","DateTimeFormat","resolvedOptions","alert","time","Date","now","commissioningData","fetchingCommissioningData","currentTracker","currentTrackerInfo","xbeeResponse","controlledTrackers","editedTrackers","SPAParameters","stowAngles","sendingSPAParameters","sendingStowAngles","gettingSPAParameters","gettingStowAngles","addingTrackers","sensors","responseQueue","listen","windSense","wifiList","difference","a1","a2","result","i","length","indexOf","push","rootReducer","combineReducers","app","state","action","type","Object","objectSpread","json","Result","reading","trackerID","concat","toConsumableArray","message","page","commandQueue","value","staticData","a","filter","r","DID","deviceID","newXbeeResponse","devices","trackers","newSPAParameters","defineProperty","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ResponsiveDrawer","mobileOpen","handleDrawerToggle","_this","setState","checkTime","_this2","this","_this$props","props","classes","theme","children","drawer","react_default","createElement","className","toolbar","src","height","width","style","marginLeft","marginRight","alt","Divider","List","map","text","index","ListItem","button","key","onClick","changePage","selected","disabled","ListItemText","disableTypography","primary","root","CssBaseline","AppBar","position","color","appBar","Toolbar","IconButton","aria-label","menuButton","Menu_default","Typography","variant","noWrap","Chip","icon","Toys_default","backgroundColor","label","toFixed","AccessTime_default","Number","toLocaleString","getHours","getMinutes","Hidden","mdUp","implementation","Drawer","container","anchor","direction","open","onClose","paper","drawerPaper","smDown","content","React","Component","connectedNavBar","connect","_state$app","dispatch","withStyles","display","breakpoints","up","flexShrink","mixins","flexGrow","padding","spacing","paddingTop","withTheme","TrackerList","react","Grid","Table","TableHead","TableRow","TableCell","TableBody","n","hover","setCurrentTracker","cursor","connectedTrackerList","appService","setWifiInfo","ssid","pass","staticIP","requestOptions","method","mode","body","JSON","stringify","password","fetch","hostName","then","handleResponse","uploadDriver","file","model","data","FormData","append","selectSensor","windSensor","rainSensor","floodSensor","snowSensor","uploadKey","setWindAddress","address","deviceAddress","getWindAddress","caliberate","sensor","sendCommand","CMD","VALUES","sendStow","MODE","getCommissioningData","getCurrentTrackerInfo","triggerDiscovery","hostName2","setPanID","panID","console","log","threshold","maxWindSpeed","maxRainFall","meanWindSpeed","windSpeedTimer","maxFloodLevel","maxSnowFall","heartBeat","enabled","hbinterval","maxMsgs","interval","setTimeZone","getHeartBeat","getThreshold","getPanID","getFrequency","setFrequency","power","status","powerRequestTimePeriod","statusRequestTimePeriod","getTimeZone","getTime","discover","did","addTrackers","removeTrackers","DIDs","sendSPAParameters","Lattitude","Longitude","Altitude","EastLimit","WestLimit","TrackerWidth","Pitch","TrackingAccuracy","AzimuthDeviation","AltitudeTrackeronEast","AltitudeTrackeronWest","StartTimeLead","EndTimeLag","backtracking","sendStowAngles","WindStowAngle","SnowStowAngle","CleanStowAngle","NightStowAngle","EmergencyStowAngle","getSPAParameters","getStowAngles","getSensors","addSensor","port","samplingPeriod","removeSensor","enableSensor","disableSensor","scanWifi","window","location","hostname","response","ok","error","statusText","Promise","reject","NoCurrentTrackerInfo","alignItems","justifyContent","TrackerDetails","timer","componentDidMount","refresh","componentWillReceiveProps","nextProps","c","arguments","undefined","setTimeout","TrackerDetails_NoCurrentTrackerInfo","currentAngle","marginTop","textAlign","overflow","macID","currentMode","timeStamp","toLocaleDateString","toLocaleTimeString","hour12","connectedTrackerDetails","flexWrap","Initializing","flexDirection","margin","Button","scan","Fetching","Dashboard","Dashboard_Fetching","Dashboard_Initializing","item","trackerList","Paper","trackerDetails","connectedDashboard","minHeight","TrackingLimitEast","TrackingLimitWest","RowWidth","RowPitch","TrackingResolution","AltitudeofTrackerontheEast","AltitudeofTrackerontheWest","EarlyStartMinutes","LateFinishMinutes","LattitudeError","LongitudeError","AltitudeError","TrackingLimitEastError","TrackingLimitWestError","RowWidthError","RowPitchError","TrackingResolutionError","AzimuthDeviationError","AltitudeofTrackerontheEastError","AltitudeofTrackerontheWestError","EarlyStartMinutesError","LateFinishMinutesError","backTracking","submit","values","split","handleChange","event","_objectSpread2","target","name","handleBlur","e","p","RegExp","test","_objectSpread4","min","max","_objectSpread5","_objectSpread6","_objectSpread3","_this$state","fieldGrid","adornment","TextField","field","id","replace","onChange","InputLabelProps","shrink","InputProps","endAdornment","InputAdornment","helperText","onBlur","FormControlLabel","control","Checkbox","checked","connectedSPAParameters","t","StowAngles","_objectSpread7","connectedStowAngles","EditRowController","changeTab","header","back","ArrowBack_default","fontSize","disableGutters","rowNumber","chip","request","success","tabs","Tabs","indicator","tabsIndicator","Tab","connectedEditRowController","palette","background","fontWeight","boxShadow","green","red","handleChangeSPA","_objectSpread8","_this$state2","borderBottom","paddingLeft","ControlRowController","typeOfStow","auto","handleClick","anchorEl","currentTarget","handleClose","autoToggle","second","aria-owns","aria-haspopup","minWidth","paddingRight","ExpandMore_default","Menu_Menu","Boolean","MenuItem","labelPlacement","Switch","connectedControlRowController","RowControllerTab","selectedTrackers","selectAll","selectRow","row","editTracker","setEditedTrackers","controlTracker","setControlledTrackers","s","_EditRowController_connectedEditRowController","buttons","table","connectedRowControllerTab","overflowX","marginBottom","ScanTab","scanSelection","inputChange","scanParameter","FormControl","component","formControl","RadioGroup","Radio","textField","placeholder","verticalAlign","res","connectedScanTab","RowController","connectedRowController","ZoneController","xs","justify","grid2","fullWidth","InputLabel","htmlFor","Select","autoWidth","selectWifi","input","OutlinedInput","labelWidth","CircularProgress","w","Refresh_default","saveButton","bqKey","floodLevelTimer","maxSnowLevel","snowLevelTimer","maxRainLevel","rainLevelTimer","syncTime","connectedZoneController","alignSelf","down","Sensors","selectedSensors","dialog","which","driverFile","driverFileName","editSensor","enable","softRemoveSensor","handleSelectedFile","files","Tooltip","title","Dialog","aria-labelledby","DialogTitle","DialogContent","accept","DialogActions","connectedSensors","variantIcon","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","SnackbarContentWrapper","dark","amber","iconVariant","opacity","other","objectWithoutProperties","Icon","SnackbarContent","assign","aria-describedby","close","Close_default","App","queue","init","io","socketIOClient","on","parse","received","processQueue","shift","reason","handleExited","About","App_Initializing","Snackbar","anchorOrigin","vertical","horizontal","onExited","anchorOriginTopCenter","topCenter","connectedApp","getState","clearAlert","topic","top","createMuiTheme","main","contrastText","secondary","render","MuiThemeProvider","es","document","getElementById"],"mappings":"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","file":"static/js/main.d0ba47bd.chunk.js","sourcesContent":["const initialState = {\r\n    currentPage: '',\r\n    currentTab: 0,\r\n    currentEditTab: 0,\r\n    timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n    alert: null,\r\n    time: Date.now(),\r\n    commissioningData: null,\r\n    fetchingCommissioningData: false,\r\n    currentTracker: null,\r\n    currentTrackerInfo: null,\r\n    xbeeResponse: [],\r\n    controlledTrackers: [],\r\n    editedTrackers: [],\r\n    SPAParameters: null,\r\n    stowAngles: null,\r\n    sendingSPAParameters: false,\r\n    sendingStowAngles: false,\r\n    gettingSPAParameters: false,\r\n    gettingStowAngles: false,\r\n    addingTrackers: false,\r\n    sensors: [],\r\n    responseQueue: [],\r\n    listen: false,\r\n    windSense: 0.0,\r\n    wifiList: []\r\n}\r\n\r\nconst difference = (a1, a2) => {\r\n    var result = [];\r\n    for (var i = 0; i < a1.length; i++) {\r\n        if (a2.indexOf(a1[i]) === -1) {\r\n            result.push(a1[i]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function app(state, action) {\r\n    if (typeof state === 'undefined') {\r\n      return initialState\r\n    }\r\n    switch (action.type) {\r\n        case 'SCAN_WIFI_SUCCESS':\r\n        return {\r\n            ...state,\r\n            wifiList: action.json.Result\r\n        }\r\n\r\n        case 'sensorReadings/wind':\r\n        return {\r\n            ...state,\r\n            windSense: action.json.reading\r\n        }\r\n\r\n        case 'time':\r\n        return {\r\n            ...state,\r\n            time: action.json.time\r\n        }\r\n\r\n        case 'SET_CURRENT_TRACKER':\r\n        return {\r\n            ...state,\r\n            currentTracker: action.trackerID\r\n        }\r\n\r\n        case 'SET_RESPONSE_LISTENER':\r\n        return {\r\n            ...state,\r\n            listen: true\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: true,\r\n            responseQueue: []\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_REQUEST':\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: true,\r\n            responseQueue: []\r\n        }\r\n\r\n        case 'ui/rover/response/multiple':\r\n        if(state.listen) {\r\n            if(state.editedTrackers.length === state.responseQueue.length + 1) {\r\n                return {\r\n                    ...state,\r\n                    responseQueue: [...state.responseQueue, action.json],\r\n                    listen: false\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                responseQueue: [...state.responseQueue, action.json]\r\n            }\r\n        } else {\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        \r\n\r\n        case 'GET_SENSORS_SUCCESS':\r\n        return {\r\n            ...state,\r\n            sensors: action.json.Result\r\n        }\r\n\r\n        case 'REMOVE_SENSOR_SUCCESS':\r\n        return {\r\n            ...state,\r\n            alert: {\r\n                type: 'success',\r\n                message: 'Removed Sensor Successfully'\r\n            }\r\n        }\r\n\r\n        case 'ADD_SENSORS_SUCCESS':\r\n        return {\r\n            ...state,\r\n            alert: {\r\n                type: 'success',\r\n                message: 'Added Sensor Successfully'\r\n            }\r\n        }\r\n        \r\n        case 'CHANGE_PAGE':\r\n        return {\r\n            ...state,\r\n            currentPage: action.page,\r\n            responseQueue: [],\r\n            commandQueue: []\r\n        }\r\n\r\n        case 'CHANGE_TAB':\r\n        return {\r\n            ...state,\r\n            currentTab: action.value.value,\r\n            responseQueue: [],\r\n            commandQueue: []\r\n        }\r\n\r\n        \r\n        case 'CHANGE_EDIT_TAB':\r\n        return {\r\n            ...state,\r\n            currentEditTab: action.value.value,\r\n            responseQueue: [],\r\n            commandQueue: []\r\n        }\r\n\r\n        case 'CLEAR_ALERT':\r\n        return {\r\n            ...state,\r\n            alert: null           \r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_REQUEST':\r\n        return {\r\n            ...state,\r\n            fetchingCommissioningData: true\r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_SUCCESS':\r\n        if(action.json.staticData === null || action.json.staticData.length === 0) {\r\n            return {\r\n                ...state,\r\n                fetchingCommissioningData: false,\r\n                currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,\r\n                commissioningData: null,\r\n                alert: {\r\n                    type: 'warning',\r\n                    message: 'Please add trackers'\r\n                }\r\n            }\r\n        } else {\r\n            return {\r\n                ...state,\r\n                fetchingCommissioningData: false,\r\n                currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,\r\n                commissioningData: action.json.staticData,\r\n                currentTracker: action.json.staticData[0].trackerID\r\n            }\r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_FAILURE':\r\n        return {\r\n            ...state,\r\n            fetchingCommissioningData: false,\r\n            currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error loading commissioning data'\r\n            }\r\n        }\r\n\r\n        case 'GET_TIMEZONE_SUCCESS':\r\n        if(action.json.timeZone !== null) {\r\n            return {\r\n                ...state,\r\n                timeZone: action.json.timeZone\r\n            }\r\n        } else {\r\n            return state\r\n        }\r\n\r\n        case 'GET_TIMEZONE_FAILURE':\r\n        return {\r\n            ...state,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting timezone'\r\n            }\r\n        }\r\n\r\n        case 'SCAN':\r\n        return {\r\n            ...state,\r\n            currentPage: 'Row Controller',\r\n            currentTab: 1\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_REQUEST':\r\n        return {\r\n            ...state\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_SUCCESS':\r\n        return {\r\n            ...state,\r\n            currentTrackerInfo: action.json\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_FAILURE':\r\n        return {\r\n            ...state,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting current tracker info'\r\n            }\r\n        }\r\n\r\n        case 'DISCOVER_SUCCESS':\r\n        return {\r\n            ...state,\r\n            xbeeResponse: [],\r\n            alert: {\r\n                type: 'success',\r\n                message: 'Started Scanning'\r\n            }\r\n        }\r\n\r\n        case 'DISCOVER_FAILURE':\r\n        return {\r\n            ...state,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error starting scan'\r\n            }\r\n        }\r\n\r\n        case 'ui/rover/scan':\r\n        let a = null\r\n        if(state.commissioningData === null) {\r\n            a = [...state.xbeeResponse, action.json]\r\n        } else {\r\n            let b = state.commissioningData.filter(r => action.json.DID === r.deviceID)\r\n            if(b.length === 0) {\r\n                a = [...state.xbeeResponse, action.json]\r\n            } else {\r\n                a = [...state.xbeeResponse]\r\n            }\r\n                \r\n        }\r\n        return {\r\n            ...state,\r\n            xbeeResponse: a\r\n        }\r\n\r\n        case 'ADD_TRACKERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            addingTrackers: true\r\n        }\r\n\r\n        case 'ADD_TRACKERS_SUCCESS':\r\n        const newXbeeResponse = difference(state.xbeeResponse, action.devices)\r\n        return {\r\n            ...state,\r\n            xbeeResponse: newXbeeResponse,\r\n            addingTrackers: false,\r\n            alert: {\r\n                type: 'success',\r\n                message: 'Tracker(s) added'\r\n            }\r\n        }\r\n\r\n        case 'ADD_TRACKERS_FAILURE':\r\n        return {\r\n            ...state,\r\n            addingTrackers: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error adding trackers'\r\n            }\r\n        }\r\n\r\n        case 'SET_EDITED_TRACKERS':\r\n        return {\r\n            ...state,\r\n            editedTrackers: action.trackers\r\n        }\r\n\r\n        case 'SET_CONTROLLED_TRACKERS':\r\n        return {\r\n            ...state,\r\n            controlledTrackers: action.trackers\r\n        }\r\n\r\n        case 'ui/rover/spa':\r\n        let DID = action.json.DID\r\n        let newSPAParameters = {...state.SPAParameters, [DID]: action.json}\r\n        return {\r\n            ...state,\r\n            SPAParameters: newSPAParameters,\r\n            gettingSPAParameters: false\r\n        }\r\n\r\n        case 'ui/rover/stowangles':\r\n        return {\r\n            ...state,\r\n            stowAngles: action.json,\r\n            gettingStowAngles: false\r\n        }\r\n\r\n        case 'GET_STOW_ANGLES_REQUEST':\r\n        return {\r\n            ...state,\r\n            gettingStowAngles: true\r\n        }\r\n\r\n        case 'GET_STOW_ANGLES_FAILURE':\r\n        return {\r\n            ...state,\r\n            gettingStowAngles: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting stow angles'\r\n            }\r\n        }\r\n\r\n        case 'GET_SPA_PARAMETERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            gettingSPAParameters: true\r\n        }\r\n\r\n        case 'GET_SPA_PARAMETERS_FAILURE':\r\n        return {\r\n            ...state,\r\n            gettingSPAParameters: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting SPA parameters'\r\n            }\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_FAILURE':\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error setting SPA parameters'\r\n            }\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_SUCCESS':\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: false\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_FAILURE':\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error setting stow angles'\r\n            }\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_SUCCESS':\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: false\r\n        }\r\n\r\n        default:\r\n        return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport { app } from '../App/app.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  app\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n        loggerMiddleware        \r\n    )\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport Time from '@material-ui/icons/AccessTime';\r\nimport Toys from '@material-ui/icons/Toys';\r\nimport { Chip } from '@material-ui/core';\r\n\r\n\r\nconst drawerWidth = 190;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100%'\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('md')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    marginLeft: drawerWidth,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: 20,\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    paddingTop: 88\r\n  },\r\n  selected: {\r\n    backgroundColor: '#54AAB3 !important',\r\n    color: '#ffffff !important'\r\n  }\r\n});\r\n\r\nclass ResponsiveDrawer extends React.Component {\r\n  state = {\r\n    mobileOpen: false,\r\n  };\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n  };\r\n\r\n  \r\n  checkTime = (i) => {\r\n    if (i < 10) {i = \"0\" + i};  // add zero in front of numbers < 10\r\n    return i;\r\n  }\r\n\r\n  render() {\r\n    const { classes, theme, children } = this.props;\r\n\r\n    const drawer = (\r\n      <div>\r\n        <div className={classes.toolbar} >\r\n            <img src='img/voyager-logo-no bg.png' height='60px' width='90%' style={{marginLeft: '2.5%', marginRight: '2.5%'}} alt=''></img>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Dashboard', 'Row Controller', 'Zone Controller', 'Sensors', 'About'].map((text, index) => (\r\n            <ListItem \r\n                button \r\n                key={text}\r\n                onClick={() => this.props.changePage(text)}\r\n                selected={this.props.currentPage === text}\r\n                classes={{selected: classes.selected}}\r\n                disabled={text === 'About'}\r\n            >{/* \r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\r\n              <ListItemText disableTypography primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" color='primary' className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h5\" color=\"inherit\" noWrap>\r\n              Voyager Zone Controller\r\n            </Typography>\r\n            <Chip\r\n              icon={<Toys />}\r\n              style={{marginLeft: 'auto', backgroundColor: 'white'}}\r\n              label={this.props.windSense.toFixed(2)}\r\n            />\r\n            <Chip\r\n              icon={<Time />}\r\n              style={{marginLeft: 10, backgroundColor: 'white'}}\r\n              label={`${this.checkTime(new Date(new Date(Number(this.props.time)).toLocaleString('en-US', {timeZone:  this.props.timeZone})).getHours())} : ${this.checkTime(new Date(new Date(Number(this.props.time)).toLocaleString('en-US', {timeZone:  this.props.timeZone})).getMinutes())}`}\r\n            />\r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav className={classes.drawer}>\r\n          <Hidden mdUp implementation=\"css\">\r\n            <Drawer\r\n              container={this.props.container}\r\n              variant=\"temporary\"\r\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n              open={this.state.mobileOpen}\r\n              onClose={this.handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden smDown implementation=\"css\">\r\n            <Drawer\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n        </nav>\r\n        <main className={classes.content}>\r\n          {children}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\n \r\nfunction mapStateToProps(state) {\r\n    const { currentPage, time, timeZone, windSense } = state.app;\r\n    \r\n    return {\r\n        currentPage,\r\n        time,\r\n        timeZone,\r\n        windSense\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changePage: (page) => {\r\n      dispatch({type: 'CHANGE_PAGE', page})\r\n    }\r\n})\r\n  \r\nconst connectedNavBar = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ResponsiveDrawer));\r\nexport { connectedNavBar as NavBar }","import React, {Fragment} from 'react'\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { connect } from 'react-redux'\r\nimport {withStyles} from '@material-ui/core/styles'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%', width: '100%', padding: 24\r\n    },\r\n    selected: {\r\n        backgroundColor: '#54aab3 !important',\r\n        color: 'white'\r\n    }\r\n})\r\n\r\nclass TrackerList extends React.Component {\r\n\r\n    render() {\r\n        const {classes, commissioningData, currentTracker} = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Typography variant='h5'>\r\n                        Tracker List\r\n                    </Typography>\r\n                    <Table>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell >TrackerID</TableCell>\r\n                            <TableCell >Status</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {commissioningData && commissioningData.map(n => {\r\n                                return (\r\n                                <TableRow\r\n                                    hover\r\n                                    //className={[n.trackerID === currentTracker ? classes.selected : classes.row, classes.tableRow]}\r\n                                    key={n.trackerID}\r\n                                    onClick={() => this.props.setCurrentTracker(n.trackerID)}\r\n                                    style={{cursor: 'pointer'}}\r\n                                    selected={n.trackerID === currentTracker}\r\n                                    classes={{selected: classes.selected}}\r\n                                >\r\n                                    <TableCell>\r\n                                        {n.trackerID}\r\n                                    </TableCell>\r\n                                    <TableCell>Reachable</TableCell>\r\n                                </TableRow>\r\n                                );\r\n                            })}\r\n                            </TableBody>\r\n                        </Table>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData, currentTracker } = state.app\r\n\r\n    return {\r\n        commissioningData,\r\n        currentTracker\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCurrentTracker: (trackerID) => {\r\n        dispatch({type: 'SET_CURRENT_TRACKER', trackerID})\r\n    }\r\n})\r\n\r\n\r\nconst connectedTrackerList = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TrackerList))\r\nexport {connectedTrackerList as TrackerList}","export const appService = {\r\n    setWifiInfo,\r\n    uploadDriver,\r\n    selectSensor,\r\n    uploadKey,\r\n    setWindAddress,\r\n    getWindAddress,\r\n    caliberate,\r\n    sendCommand,\r\n    sendStow,\r\n    getCommissioningData,\r\n    getCurrentTrackerInfo,\r\n    triggerDiscovery,\r\n    setPanID,\r\n    threshold,\r\n    heartBeat,\r\n    setTimeZone,\r\n    getHeartBeat,\r\n    getThreshold,\r\n    getPanID,\r\n    getFrequency,\r\n    setFrequency,\r\n    getTimeZone,\r\n    getTime,\r\n    discover,\r\n    addTrackers,\r\n    removeTrackers,\r\n    sendSPAParameters,\r\n    sendStowAngles,\r\n    getSPAParameters,\r\n    getStowAngles,\r\n    getSensors,\r\n    addSensor,\r\n    removeSensor,\r\n    enableSensor,\r\n    disableSensor,\r\n    scanWifi\r\n};\r\nconst hostName = 'http://159.89.169.50:4000'; \r\n/*const hostName = `http://${window.location.hostname}:5000`;*/\r\n\r\nconst hostName2 = `http://${window.location.hostname}:5001`; \r\n\r\nfunction scanWifi() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        body: null\r\n    }\r\n\r\n    return fetch(`${hostName}/scanWifi`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction disableSensor(type, model) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            type: type, \r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/disable`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction enableSensor(type, model) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            type: type, \r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/enable`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction removeSensor(model, type) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            type: type, \r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/remove`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction addSensor(port, type, model, samplingPeriod) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            port: port, \r\n            type: type, \r\n            samplingPeriod: samplingPeriod,\r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/setParams`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getSensors() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        body: null\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/getParams`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getStowAngles(DID) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: 'QSTO'\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/get`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getSPAParameters(DID) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: \"QSPA\"\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/get`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction sendStowAngles(DID, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: 'HSTO',\r\n            VALUES: `${WindStowAngle}, ${SnowStowAngle}, ${CleanStowAngle}, ${NightStowAngle}, ${EmergencyStowAngle}`\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/set`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction sendSPAParameters(DID, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backtracking) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: \"HSPA\",\r\n            VALUES: `${Lattitude}, ${Longitude}, ${Altitude}, ${EastLimit}, ${WestLimit}, ${TrackerWidth}, ${Pitch}, ${TrackingAccuracy}, ${AzimuthDeviation}, ${AltitudeTrackeronEast}, ${AltitudeTrackeronWest}, ${StartTimeLead}, ${EndTimeLag}, 0, ${backtracking}`\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/set`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction removeTrackers(DIDs) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DIDs: DIDs\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/removePairedDevices`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction addTrackers(devices) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            devices: devices\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/addDiscoveredDevices`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction discover(did) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: did\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/scan`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction handleResponse(response) {\r\n    return response.json().then(json => {\r\n        if (!response.ok) {\r\n            const error = (json && json.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return json;\r\n    });\r\n}\r\n\r\n\r\nfunction setWifiInfo(ssid, pass, staticIP) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"ssid\": ssid,\r\n            \"password\": pass,\r\n            \"staticIP\": staticIP\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/setWifiInfo`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction uploadDriver(file, type, model) {\r\n    var data = new FormData()\r\n    data.append('file', file)\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: data\r\n    };\r\n\r\n    return fetch(`${hostName}/sensors/addDriver?type=${type}&model=${model}`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction uploadKey(file) {\r\n    var data = new FormData()\r\n    data.append('file', file)\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: data\r\n    };\r\n\r\n    return fetch(`${hostName}/loadBigQueryKey`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction selectSensor(windSensor, rainSensor, floodSensor, snowSensor) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"windSensor\": windSensor,\r\n            \"rainSensor\": rainSensor,\r\n            \"floodSensor\": floodSensor,\r\n            \"snowSensor\": snowSensor,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/sensors`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setWindAddress(address) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"deviceAddress\": address,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/windSensorSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getWindAddress() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/windSensorSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction caliberate(sensor) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"sensor\": sensor,\r\n        })\r\n    };\r\n\r\n\r\n    return fetch(`${hostName}/calibrateSensor`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n//control\r\n\r\nfunction sendCommand(deviceID, value) {\r\n\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"DID\": deviceID,\r\n            \"CMD\": \"HMNM\",\r\n            \"VALUES\": value\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/rover/control`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction sendStow(deviceID, mode) {\r\n\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"DID\": deviceID,\r\n            \"CMD\": \"HMOD\",\r\n            \"MODE\": mode\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/rover/control`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n//dashboard\r\n\r\n\r\nfunction getCommissioningData() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/getCommissioningData`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getCurrentTrackerInfo(trackerID) {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/getCurrentTrackerInfo?id=${trackerID}`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction triggerDiscovery() {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"CMD\": \"HINF\",\r\n            \"DID\": \"00000\",\r\n        })\r\n    };\r\n\r\n    return fetch(`http://${hostName2}/sendCommand`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\n//settings\r\n\r\nfunction setPanID(panID) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"panID\": panID\r\n        })\r\n    };\r\n\r\n    console.log(panID);\r\n\r\n    return fetch(`http://${hostName2}/settings/xbeePanID `, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction threshold(maxWindSpeed, maxRainFall, meanWindSpeed, windSpeedTimer, maxFloodLevel, maxSnowFall) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"maxWindSpeed\": maxWindSpeed,\r\n            \"maxRainFall\": maxRainFall,\r\n            \"meanWindSpeed\": meanWindSpeed,\r\n            \"windSpeedTimer\": windSpeedTimer,\r\n            \"maxFloodLevel\": maxFloodLevel,\r\n            \"maxSnowFall\": maxSnowFall,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/threshold`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setFrequency(power, status) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"powerRequestTimePeriod\": power,\r\n            \"statusRequestTimePeriod\": status,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/requestFrequency`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\n\r\nfunction heartBeat(enabled, hbinterval, maxMsgs) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"enabled\": enabled,\r\n            \"interval\": hbinterval,\r\n            \"maxMsgs\": maxMsgs,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/heartBeatSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setTimeZone(time) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"timeZone\": time,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/timeZone`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getTimeZone() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/timeZone`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getTime() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/time`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getThreshold() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/threshold`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getFrequency() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/requestFrequency`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getHeartBeat() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/heartBeatSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getPanID() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`http://${hostName2}/gettings/xbeePanID`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n","import React from 'react'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { connect } from 'react-redux'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%', width: '100%', padding: 24, flexWrap: 'nowrap'\r\n    }\r\n})\r\n\r\nconst NoCurrentTrackerInfo = () =>\r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            No Info Found For Selected Tracker.\r\n    </div>\r\n\r\nclass TrackerDetails extends React.Component {\r\n\r\n    timer = null\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.refresh()\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.currentTracker !== this.props.currentTracker) {\r\n            this.props.getCurrentTrackerInfo(nextProps.currentTracker)\r\n        }\r\n    }\r\n\r\n    refresh = (c = true) => {\r\n        this.props.getCurrentTrackerInfo(this.props.currentTracker)\r\n\r\n        if(c) {\r\n            this.timer = setTimeout(this.refresh, 30000)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes, currentTrackerInfo } = this.props\r\n\r\n        return (currentTrackerInfo === null ? <NoCurrentTrackerInfo /> :\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Typography variant='h5' style={{height: '48px'}}>\r\n                        Tracker Details\r\n                    </Typography>\r\n                    <div \r\n                        className={currentTrackerInfo.currentAngle !== '--' && (currentTrackerInfo.currentAngle > 58 ? 'angle60' :\r\n                        currentTrackerInfo.currentAngle > 56 ? 'angle58' :\r\n                        currentTrackerInfo.currentAngle > 54 ? 'angle56' :\r\n                        currentTrackerInfo.currentAngle > 52 ? 'angle54' :\r\n                        currentTrackerInfo.currentAngle > 50 ? 'angle52' :\r\n                        currentTrackerInfo.currentAngle > 48 ? 'angle50' :\r\n                        currentTrackerInfo.currentAngle > 46 ? 'angle48' :\r\n                        currentTrackerInfo.currentAngle > 44 ? 'angle46' :\r\n                        currentTrackerInfo.currentAngle > 42 ? 'angle44' :\r\n                        currentTrackerInfo.currentAngle > 40 ? 'angle42' :\r\n                        currentTrackerInfo.currentAngle > 38 ? 'angle40' :\r\n                        currentTrackerInfo.currentAngle > 36 ? 'angle38' :\r\n                        currentTrackerInfo.currentAngle > 34 ? 'angle36' :\r\n                        currentTrackerInfo.currentAngle > 32 ? 'angle34' :\r\n                        currentTrackerInfo.currentAngle > 30 ? 'angle32' :\r\n                        currentTrackerInfo.currentAngle > 28 ? 'angle30' :\r\n                        currentTrackerInfo.currentAngle > 26 ? 'angle28' :\r\n                        currentTrackerInfo.currentAngle > 24 ? 'angle26' :\r\n                        currentTrackerInfo.currentAngle > 22 ? 'angle24' :\r\n                        currentTrackerInfo.currentAngle > 20 ? 'angle22' :\r\n                        currentTrackerInfo.currentAngle > 18 ? 'angle20' :\r\n                        currentTrackerInfo.currentAngle > 16 ? 'angle18' :\r\n                        currentTrackerInfo.currentAngle > 14 ? 'angle16' :\r\n                        currentTrackerInfo.currentAngle > 12 ? 'angle14' :\r\n                        currentTrackerInfo.currentAngle > 10 ? 'angle12' :\r\n                        currentTrackerInfo.currentAngle > 8 ? 'angle10' :\r\n                        currentTrackerInfo.currentAngle > 6 ? 'angle8' :\r\n                        currentTrackerInfo.currentAngle > 4 ? 'angle6' :\r\n                        currentTrackerInfo.currentAngle > 2 ? 'angle4' :\r\n                        currentTrackerInfo.currentAngle > 0 ? 'angle2' :\r\n                        currentTrackerInfo.currentAngle > -2 ? 'angle0' :\r\n                        currentTrackerInfo.currentAngle > -4 ? 'angle_2' :\r\n                        currentTrackerInfo.currentAngle > -6 ? 'angle_4' :\r\n                        currentTrackerInfo.currentAngle > -8 ? 'angle_6' :\r\n                        currentTrackerInfo.currentAngle > -10 ? 'angle_8' :\r\n                        currentTrackerInfo.currentAngle > -12 ? 'angle_10' :\r\n                        currentTrackerInfo.currentAngle > -14 ? 'angle_12' :\r\n                        currentTrackerInfo.currentAngle > -16 ? 'angle_14' :\r\n                        currentTrackerInfo.currentAngle > -18 ? 'angle_16' :\r\n                        currentTrackerInfo.currentAngle > -20 ? 'angle_18' :\r\n                        currentTrackerInfo.currentAngle > -22 ? 'angle_20' :\r\n                        currentTrackerInfo.currentAngle > -24 ? 'angle_22' :\r\n                        currentTrackerInfo.currentAngle > -26 ? 'angle_24' :\r\n                        currentTrackerInfo.currentAngle > -28 ? 'angle_26' :\r\n                        currentTrackerInfo.currentAngle > -30 ? 'angle_28' :\r\n                        currentTrackerInfo.currentAngle > -32 ? 'angle_30' :\r\n                        currentTrackerInfo.currentAngle > -34 ? 'angle_32' :\r\n                        currentTrackerInfo.currentAngle > -36 ? 'angle_34' :\r\n                        currentTrackerInfo.currentAngle > -38 ? 'angle_36' :\r\n                        currentTrackerInfo.currentAngle > -40 ? 'angle_38' :\r\n                        currentTrackerInfo.currentAngle > -42 ? 'angle_40' :\r\n                        currentTrackerInfo.currentAngle > -44 ? 'angle_42' :\r\n                        currentTrackerInfo.currentAngle > -46 ? 'angle_44' :\r\n                        currentTrackerInfo.currentAngle > -48 ? 'angle_46' :\r\n                        currentTrackerInfo.currentAngle > -50 ? 'angle_48' :\r\n                        currentTrackerInfo.currentAngle > -52 ? 'angle_50' :\r\n                        currentTrackerInfo.currentAngle > -54 ? 'angle_52' :\r\n                        currentTrackerInfo.currentAngle > -56 ? 'angle_54' :\r\n                        currentTrackerInfo.currentAngle > -58 ? 'angle_56' :\r\n                        currentTrackerInfo.currentAngle > -60 ? 'angle_58' :\r\n                        'angle_60')} \r\n                        style={{width: '100%', height: '150px', marginTop: 5}}>\r\n                            {currentTrackerInfo.currentAngle === '--' && <div \r\n                                style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n                                    No Current Angle Data Found.\r\n                            </div>}\r\n                        </div>\r\n                    {currentTrackerInfo.currentAngle !== '--' && <Typography variant='h5' style={{textAlign: 'center', height: 48, marginTop: 5}}>\r\n                        Angle = {currentTrackerInfo.currentAngle}\r\n                    </Typography>}\r\n                    <div style={{height: 'calc(100% - 246px)', width: '100%', overflow: 'auto'}}>\r\n                    <Table padding='none'>\r\n                        <TableBody>\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Tracker ID\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.trackerID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Device ID\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.deviceID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Mac ID \r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.macID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Current Mode\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.currentMode}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                    Current Angle\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.currentAngle}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                    Date and Time\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{new Date(currentTrackerInfo.timeStamp).toLocaleDateString('en-US', {timeZone: this.props.timeZone})} -- {new Date(currentTrackerInfo.timeStamp).toLocaleTimeString('en-US', {timeZone:  this.props.timeZone, hour12: false})}</TableCell>\r\n                        </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                    </div>\r\n                </Grid>\r\n        )\r\n    }\r\n} \r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentTrackerInfo, timeZone, currentTracker } = state.app\r\n\r\n    return {\r\n        currentTrackerInfo,\r\n        timeZone,\r\n        currentTracker\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getCurrentTrackerInfo : (trackerID) => {\r\n        dispatch({type: 'GET_CURRENT_TRACKER_INFO_REQUEST'})\r\n        appService.getCurrentTrackerInfo(trackerID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_CURRENT_TRACKER_INFO_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_CURRENT_TRACKER_INFO_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedTrackerDetails = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TrackerDetails))\r\nexport {connectedTrackerDetails as TrackerDetails}","import React from 'react'\r\nimport { Grid, Paper, Button } from '@material-ui/core';\r\nimport { TrackerList } from './TrackerList'\r\nimport { TrackerDetails } from './TrackerDetails';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexWrap: 'wrap',\r\n        [theme.breakpoints.up('md')]: {\r\n            height: '100%',\r\n        }\r\n    },\r\n    trackerList: {\r\n        width: '100%',\r\n        padding: 10,\r\n        [theme.breakpoints.up('md')]: {\r\n            minHeight: '100%', width: '50%'\r\n        }\r\n    },\r\n    trackerDetails: {\r\n        width: '100%',\r\n        padding: 10,\r\n        [theme.breakpoints.up('md')]: {\r\n            minHeight: '100%', width: '50%'\r\n        }\r\n    }\r\n})\r\n\r\nconst Initializing = (props) => \r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            <p style={{margin: 10}}>No static data found.  </p>\r\n            <Button variant='contained' style={{margin: 10}} color='primary' onClick={() => props.scan()}>Add trackers</Button>\r\n            <Button variant='contained' style={{margin: 10}} color='primary' onClick={() => props.getCommissioningData()}>Refresh static data</Button>\r\n    </div>\r\n\r\n\r\nconst Fetching = () => \r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            FETCHING...\r\n    </div>\r\n\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    state = {\r\n    }\r\n\r\n    getCommissioningData = () => {\r\n        this.props.getCommissioningData()\r\n    }\r\n\r\n    scan = () => {\r\n        this.props.scan()\r\n    }\r\n\r\n    render() {\r\n        const { classes, commissioningData, fetchingCommissioningData } = this.props\r\n        return ( fetchingCommissioningData ? <Fetching /> : commissioningData === null ? <Initializing scan={() => this.scan()} getCommissioningData={() => this.getCommissioningData()}/> :\r\n            <Grid container direction=\"column\" className={classes.root}>\r\n                <Grid item className={classes.trackerList}>\r\n                    <Paper style={{height: '100%'}}>\r\n                        <TrackerList />\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item className={classes.trackerDetails}>\r\n                    <Paper style={{height: '100%'}}>\r\n                        <TrackerDetails />\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData, fetchingCommissioningData } = state.app\r\n\r\n    return {\r\n        commissioningData,\r\n        fetchingCommissioningData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    scan : () => {\r\n        dispatch({type: 'SCAN'})\r\n    },\r\n    getCommissioningData: () => {\r\n        dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n        appService.getCommissioningData()\r\n            .then(json => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedDashboard = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Dashboard))\r\nexport {connectedDashboard as Dashboard}","import React, { Fragment } from 'react'\r\nimport { Grid, Button, TextField, FormControlLabel, Checkbox, InputAdornment } from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    fieldGrid: {\r\n        display: 'flex', \r\n        flexDirection: 'row', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    },\r\n    field: {\r\n        width: '45%',\r\n        margin: '10px 2.5% 0px 2.5%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '31.33%',\r\n            margin: '10px 1% 0px 1%'\r\n        }\r\n    }\r\n})\r\n\r\nclass SPAParameters extends React.Component {\r\n    state = {\r\n        Lattitude: '',\r\n        Longitude: '',\r\n        Altitude: '',\r\n        TrackingLimitEast: '',\r\n        TrackingLimitWest: '',\r\n        RowWidth: '',\r\n        RowPitch: '',\r\n        TrackingResolution: '',\r\n        AzimuthDeviation: '',\r\n        AltitudeofTrackerontheEast: '',\r\n        AltitudeofTrackerontheWest: '',\r\n        EarlyStartMinutes: '',\r\n        LateFinishMinutes: '',\r\n        LattitudeError: '',\r\n        LongitudeError: '',\r\n        AltitudeError: '',\r\n        TrackingLimitEastError: '',\r\n        TrackingLimitWestError: '',\r\n        RowWidthError: '',\r\n        RowPitchError: '',\r\n        TrackingResolutionError: '',\r\n        AzimuthDeviationError: '',\r\n        AltitudeofTrackerontheEastError: '',\r\n        AltitudeofTrackerontheWestError: '',\r\n        EarlyStartMinutesError: '',\r\n        LateFinishMinutesError: '',\r\n        backTracking: '0',\r\n        submit: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.editedTrackers.length ===  1) {\r\n            this.props.getSPAParameters(this.props.editedTrackers[0].deviceID)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.SPAParameters !== this.props.SPAParameters) {\r\n            const values = nextProps.SPAParameters.VALUES.split(',')\r\n            this.setState({\r\n                Lattitude: values[0],\r\n                Longitude: values[1],\r\n                Altitude: values[2],\r\n                TrackingLimitEast: values[3],\r\n                TrackingLimitWest: values[4],\r\n                RowWidth: values[5],\r\n                RowPitch: values[6],\r\n                TrackingResolution: values[7],\r\n                AzimuthDeviation: values[8],\r\n                AltitudeofTrackerontheEast: values[9],\r\n                AltitudeofTrackerontheWest: values[10],\r\n                EarlyStartMinutes: values[11],\r\n                LateFinishMinutes: values[12],\r\n                backTracking: values[14]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleBlur = (e, p) => {\r\n            const regex = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+$\")\r\n            const regexTest = regex.test(e.target.value)\r\n            if(!regexTest) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    [`${e.target.name}Error`]: `Please enter a number.`,\r\n                    submit: false\r\n                })\r\n            } else {\r\n                const value = Number(e.target.value)\r\n                if(p.min !== null && p.max !== null) {\r\n                    if(value < p.min || value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min} max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.min !== null) {\r\n                    if(value < p.min) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.max != null) {\r\n                    if(value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \r\n    }\r\n\r\n    sendSPAParameters = () => {\r\n        const { Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking } = this.state\r\n        this.props.sendSPAParameters(this.props.editedTrackers, Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                    {\r\n                        [\r\n                            {\r\n                                key: 'Lattitude',\r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 0\r\n                            },\r\n                            {\r\n                                key: 'Longitude', \r\n                                adornment: 'Deg',\r\n                                min: -180,\r\n                                max: +180,\r\n                                value: 1\r\n                            }, \r\n                            { \r\n                                key: 'Altitude',\r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 2\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - East', \r\n                                adornment: 'Deg',\r\n                                min: -60,\r\n                                max: 0,\r\n                                value: 3\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - West', \r\n                                adornment: 'Deg',\r\n                                min: 0,\r\n                                max: +60,\r\n                                value: 4 \r\n                            }, \r\n                            { \r\n                                key: 'Row Width', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 5\r\n                            }, \r\n                            { \r\n                                key: 'Row Pitch', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 6\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Resolution', \r\n                                adornment: 'Deg',\r\n                                min: +0.50,\r\n                                max: +30.0,\r\n                                value: 7 \r\n                            }, \r\n                            { \r\n                                key: 'Azimuth Deviation', \r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 8  \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the East', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 9 \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the West', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 10\r\n                            }, \r\n                            { \r\n                                key: 'Early Start Minutes', \r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 11\r\n                            }, \r\n                            { \r\n                                key: 'Late Finish Minutes',\r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 12\r\n                            }\r\n                        ].map(p => {\r\n                            return <TextField\r\n                                key={p.key}\r\n                                className={classes.field}\r\n                                id={p.key}\r\n                                name={p.key.replace(/ /g, '').replace(/-/g, '')}\r\n                                label={p.key}\r\n                                value={this.state[p.key.replace(/ /g, '').replace(/-/g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">{p.adornment}</InputAdornment>,\r\n                                  }}\r\n                                error={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`] !== ''}\r\n                                helperText={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`]}\r\n                                onBlur={(e) => this.handleBlur(e, p)}\r\n                            />\r\n                        })\r\n                    }\r\n                        <FormControlLabel disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters} className={classes.field}\r\n                            control={\r\n                                <Checkbox color='primary' checked={this.state.backTracking === '1'} onClick={() => this.setState({...this.state, backTracking: this.state.backTracking === '0' ? '1' : '0'})}/>\r\n                            }\r\n                            label=\"Enable Backtracking\"\r\n                        />\r\n                        <Button color='primary' disabled variant='contained' className={classes.field}>Sync time with Zone Controller</Button>    \r\n                    </Grid>\r\n                    <Grid item style={{textAlign: 'center'}}>\r\n                        <Button color='primary' disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters || !this.state.submit} variant='contained' onClick={() => this.sendSPAParameters()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { editedTrackers, sendingSPAParameters } = state.app\r\n\r\n    return {\r\n        editedTrackers,\r\n        sendingSPAParameters,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendSPAParameters: (editedTrackers, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking) => {\r\n        dispatch({type: 'SET_RESPONSE_LISTENER'})\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_SPA_PARAMETERS_REQUEST', t})\r\n            appService.sendSPAParameters(t.deviceID, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_SUCCESS'})\r\n                }, error => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_FAILURE'})\r\n                })\r\n        })\r\n        \r\n    }\r\n})\r\n\r\n\r\nconst connectedSPAParameters = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SPAParameters))\r\nexport {connectedSPAParameters as SPAParameters}","import React, { Fragment } from 'react'\r\nimport { Grid, Button, TextField, InputAdornment } from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    fieldGrid: {\r\n        display: 'flex', \r\n        flexDirection: 'row', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    },\r\n    field: {\r\n        width: '45%',\r\n        margin: '10px 2.5% 0px 2.5%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '31.33%',\r\n            margin: '10px 1% 0px 1%'\r\n        }\r\n    }\r\n})\r\n\r\nclass StowAngles extends React.Component {\r\n    state = {\r\n        WindStowAngle: '',\r\n        SnowStowAngle: '',\r\n        NightStowAngle: '',\r\n        EmergencyStowAngle: '',\r\n        CleanStowAngle: '',\r\n        submit: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.editedTrackers.length === 1) {\r\n            this.props.getStowAngles(this.props.editedTrackers[0].deviceID)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.stowAngles !== this.props.stowAngles) {\r\n            const values = nextProps.stowAngles.VALUES.split(',')\r\n            this.setState({\r\n                WindStowAngle: values[0],\r\n                SnowStowAngle: values[1],\r\n                NightStowAngle: values[2],\r\n                EmergencyStowAngle: values[3],\r\n                CleanStowAngle: values[4]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleBlur = (e, p) => {\r\n        if(e.target.value === '') {\r\n            this.setState({\r\n                ...this.state,\r\n                [e.target.name]: this.props.SPAParameters.VALUES.split(',')[p.value],\r\n                [`${e.target.name}Error`]: '',\r\n                submit: false\r\n            })\r\n        } else {\r\n            const regex = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+$\")\r\n            const regexTest = regex.test(e.target.value)\r\n            if(!regexTest) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    [`${e.target.name}Error`]: `Please enter a number.`,\r\n                    submit: false\r\n                })\r\n            } else {\r\n                const value = Number(e.target.value)\r\n                if(p.min !== null && p.max !== null) {\r\n                    if(value < p.min || value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min} max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.min !== null) {\r\n                    if(value < p.min) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.max != null) {\r\n                    if(value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    sendStowAngles = () => {\r\n        const { WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle } = this.state\r\n        this.props.sendStowAngles(this.props.editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                    {\r\n                        ['Wind Stow Angle', 'Snow Stow Angle', 'Night Stow Angle', 'Emergency Stow Angle', 'Clean Stow Angle'].map(p => {\r\n                            return <TextField\r\n                                key={p}\r\n                                className={classes.field}\r\n                                id={p}\r\n                                name={p.replace(/ /g, '')}\r\n                                label={p}\r\n                                value={this.state[p.replace(/ /g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingStowAngles || this.props.gettingStowAngles}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">Deg</InputAdornment>,\r\n                                  }}\r\n                            />\r\n                        })\r\n                    }\r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center'}}>\r\n                        <Button color='primary' disabled={this.props.sendingStowAngles || this.props.gettingStowAngles} variant='contained' onClick={() => this.sendStowAngles()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { editedTrackers, stowAngles, sendingStowAngles, gettingStowAngles } = state.app\r\n\r\n    return {\r\n        editedTrackers,\r\n        stowAngles,\r\n        sendingStowAngles,\r\n        gettingStowAngles\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendStowAngles: (editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle) => {\r\n        dispatch({type: 'SET_RESPONSE_LISTENER'})\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_STOW_ANGLES_REQUEST', t})\r\n            appService.sendStowAngles(t.deviceID, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_SUCCESS'})\r\n                }, error => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_FAILURE'})\r\n                })\r\n        })\r\n    }\r\n})\r\n\r\n\r\nconst connectedStowAngles = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(StowAngles))\r\nexport {connectedStowAngles as StowAngles}","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { connect } from 'react-redux'\r\nimport { SPAParameters } from './SPAParameters';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { StowAngles } from './StowAngles';\r\nimport LeftIcon from '@material-ui/icons/ArrowBack'\r\nimport { Grid, Typography, Chip, Toolbar } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      margin: 10,\r\n      display: 'flex',\r\n      flexDirection: 'column'\r\n    },\r\n    body: {\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    tabsIndicator: {\r\n      backgroundColor: '#54AAB3',\r\n    },\r\n    selected: {\r\n      backgroundColor: '#54AAB3',\r\n      color: '#ffffff',\r\n      fontWeight: 600,\r\n      fontSize: 14\r\n    },\r\n    editedTrackers: {\r\n        width: '25%',\r\n        margin: 10,\r\n    },\r\n    tabs: {\r\n        width: '75%',\r\n        padding: 10,\r\n        boxShadow: '-1px 0px 0px 0px rgba(0,0,0,0.5)'\r\n    },\r\n    chip: {\r\n        margin: 10\r\n    },\r\n    green: {\r\n        backgroundColor: 'green'\r\n    },\r\n    red: {\r\n        backgroundColor: 'red'\r\n    }\r\n});\r\n\r\nclass EditRowController extends React.Component {\r\n    handleChange = (event, value) => {\r\n        this.props.changeTab({ value });\r\n    };\r\n    \r\n    render() {console.log(this.props)\r\n        const { classes, currentEditTab, editedTrackers, responseQueue } = this.props;\r\n    \r\n        return (\r\n        <div className={classes.root}>\r\n            <div className={classes.header}>\r\n            <Grid item>\r\n                <Typography variant='h5'>\r\n                    <IconButton aria-label=\"Back\" onClick={this.props.back} >\r\n                        <LeftIcon fontSize=\"large\" />\r\n                    </IconButton>\r\n                    Edit Parameters\r\n                </Typography>\r\n            </Grid>\r\n            </div>\r\n            <div className={classes.body}>\r\n            <div className={classes.editedTrackers}>\r\n            \r\n            <AppBar position=\"static\" color='secondary'>\r\n                <Toolbar style={{minHeight: 48}} disableGutters>\r\n                <Typography variant=\"subtitle1\" style={{margin: 'auto'}}>\r\n                    Selected Trackers\r\n                </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {\r\n                editedTrackers.map(t => (\r\n                <Chip key={t.deviceID} label={`Row#: ${t.rowNumber}`} className={classes.chip} style={responseQueue.filter(r => r.request.DID === t.deviceID)[0] ? responseQueue.filter(r => r.request.DID === t.deviceID)[0].success ? {backgroundColor: 'green'} : {backgroundColor: 'red'} : {}}/>\r\n            ))}\r\n            </div>\r\n            <div className={classes.tabs}>\r\n            <AppBar position=\"static\" color='secondary'>\r\n                <Tabs value={currentEditTab} onChange={this.handleChange} classes={{indicator: classes.tabsIndicator}}>\r\n                    <Tab label=\"SPA Parameters\" classes={{selected: classes.selected}}/>\r\n                    <Tab label=\"Stow Angles\" classes={{selected: classes.selected}}/>\r\n                </Tabs>\r\n            </AppBar>\r\n            {currentEditTab === 0 && <SPAParameters />}\r\n            {currentEditTab === 1 && <StowAngles />}\r\n            </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentEditTab, editedTrackers, responseQueue } = state.app\r\n\r\n    return {\r\n        currentEditTab,\r\n        editedTrackers,\r\n        responseQueue       \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changeTab: (value) => {\r\n        dispatch({type: 'CHANGE_EDIT_TAB', value})\r\n    }\r\n})\r\n\r\n\r\nconst connectedEditRowController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(EditRowController))\r\nexport {connectedEditRowController as EditRowController}","import React, { Fragment } from 'react'\r\nimport LeftIcon from '@material-ui/icons/ArrowBack'\r\nimport { IconButton, Typography, Grid, Button, TextField, FormControlLabel, Checkbox, InputAdornment } from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    fieldGrid: {\r\n        display: 'flex', \r\n        flexDirection: 'row', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    },\r\n    field: {\r\n        width: '45%',\r\n        margin: '10px 2.5% 0px 2.5%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '23%',\r\n            margin: '10px 1% 0px 1%'\r\n        }\r\n    }\r\n})\r\n\r\nclass EditRowController extends React.Component {\r\n    state = {\r\n        Lattitude: '',\r\n        Longitude: '',\r\n        Altitude: '',\r\n        TrackingLimitEast: '',\r\n        TrackingLimitWest: '',\r\n        RowWidth: '',\r\n        RowPitch: '',\r\n        TrackingResolution: '',\r\n        AzimuthDeviation: '',\r\n        AltitudeofTrackerontheEast: '',\r\n        AltitudeofTrackerontheWest: '',\r\n        EarlyStartMinutes: '',\r\n        LateFinishMinutes: '',\r\n        LattitudeError: '',\r\n        LongitudeError: '',\r\n        AltitudeError: '',\r\n        TrackingLimitEastError: '',\r\n        TrackingLimitWestError: '',\r\n        RowWidthError: '',\r\n        RowPitchError: '',\r\n        TrackingResolutionError: '',\r\n        AzimuthDeviationError: '',\r\n        AltitudeofTrackerontheEastError: '',\r\n        AltitudeofTrackerontheWestError: '',\r\n        EarlyStartMinutesError: '',\r\n        LateFinishMinutesError: '',\r\n        WindStowAngle: '',\r\n        SnowStowAngle: '',\r\n        NightStowAngle: '',\r\n        EmergencyStowAngle: '',\r\n        CleanStowAngle: '',\r\n        backTracking: '0',\r\n        submit: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.editedTrackers.length === 1) {\r\n            this.props.getSPAParameters(this.props.editedTrackers[0].deviceID)\r\n            this.props.getStowAngles(this.props.editedTrackers[0].deviceID)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.SPAParameters !== this.props.SPAParameters) {\r\n            if(nextProps.SPAParameters[this.props.editedTrackers[0].deviceID]) {\r\n                const values = nextProps.SPAParameters[this.props.editedTrackers[0].deviceID].VALUES.split(',')\r\n                this.setState({\r\n                    Lattitude: values[0],\r\n                    Longitude: values[1],\r\n                    Altitude: values[2],\r\n                    TrackingLimitEast: values[3],\r\n                    TrackingLimitWest: values[4],\r\n                    RowWidth: values[5],\r\n                    RowPitch: values[6],\r\n                    TrackingResolution: values[7],\r\n                    AzimuthDeviation: values[8],\r\n                    AltitudeofTrackerontheEast: values[9],\r\n                    AltitudeofTrackerontheWest: values[10],\r\n                    EarlyStartMinutes: values[11],\r\n                    LateFinishMinutes: values[12],\r\n                    backTracking: values[14]\r\n                })\r\n            }\r\n        }\r\n        if(nextProps.stowAngles !== this.props.stowAngles) {\r\n            const values = nextProps.stowAngles.VALUES.split(',')\r\n            this.setState({\r\n                WindStowAngle: values[0],\r\n                SnowStowAngle: values[1],\r\n                NightStowAngle: values[2],\r\n                EmergencyStowAngle: values[3],\r\n                CleanStowAngle: values[4]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleChangeSPA = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleBlur = (e, p) => {\r\n        if(e.target.value === '') {\r\n            this.setState({\r\n                ...this.state,\r\n                [e.target.name]: this.props.SPAParameters.VALUES.split(',')[p.value],\r\n                [`${e.target.name}Error`]: '',\r\n                submit: false\r\n            })\r\n        } else {\r\n            const regex = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+$\")\r\n            const regexTest = regex.test(e.target.value)\r\n            if(!regexTest) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    [`${e.target.name}Error`]: `Please enter a number.`,\r\n                    submit: false\r\n                })\r\n            } else {\r\n                const value = Number(e.target.value)\r\n                if(p.min !== null && p.max !== null) {\r\n                    if(value < p.min || value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min} max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.min !== null) {\r\n                    if(value < p.min) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.max != null) {\r\n                    if(value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    sendSPAParameters = () => {\r\n        const { Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking } = this.state\r\n        this.props.sendSPAParameters(this.props.editedTrackers, Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking)\r\n    }\r\n\r\n    sendStowAngles = () => {\r\n        const { WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle } = this.state\r\n        this.props.sendStowAngles(this.props.editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item style={{height: 64, borderBottom: '0.1px solid lightgrey'}}>\r\n                        <Typography variant='h5'>\r\n                            <IconButton aria-label=\"Back\" onClick={this.props.back} >\r\n                                <LeftIcon fontSize=\"large\" />\r\n                            </IconButton>\r\n                            Edit Parameters\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Typography variant='h6' style={{paddingLeft: 'calc(1% + 10px)'}}>\r\n                        SPA Settings\r\n                    </Typography>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                        \r\n                    {\r\n                        [\r\n                            {\r\n                                key: 'Lattitude',\r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 0\r\n                            },\r\n                            {\r\n                                key: 'Longitude', \r\n                                adornment: 'Deg',\r\n                                min: -180,\r\n                                max: +180,\r\n                                value: 1\r\n                            }, \r\n                            { \r\n                                key: 'Altitude',\r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 2\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - East', \r\n                                adornment: 'Deg',\r\n                                min: -60,\r\n                                max: 0,\r\n                                value: 3\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - West', \r\n                                adornment: 'Deg',\r\n                                min: 0,\r\n                                max: +60,\r\n                                value: 4 \r\n                            }, \r\n                            { \r\n                                key: 'Row Width', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 5\r\n                            }, \r\n                            { \r\n                                key: 'Row Pitch', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 6\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Resolution', \r\n                                adornment: 'Deg',\r\n                                min: +0.50,\r\n                                max: +30.0,\r\n                                value: 7 \r\n                            }, \r\n                            { \r\n                                key: 'Azimuth Deviation', \r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 8  \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the East', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 9 \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the West', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 10\r\n                            }, \r\n                            { \r\n                                key: 'Early Start Minutes', \r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 11\r\n                            }, \r\n                            { \r\n                                key: 'Late Finish Minutes',\r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 12\r\n                            }\r\n                        ].map(p => {\r\n                            return <TextField\r\n                                key={p.key}\r\n                                className={classes.field}\r\n                                id={p.key}\r\n                                name={p.key.replace(/ /g, '').replace(/-/g, '')}\r\n                                label={p.key}\r\n                                value={this.state[p.key.replace(/ /g, '').replace(/-/g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">{p.adornment}</InputAdornment>,\r\n                                  }}\r\n                                error={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`] !== ''}\r\n                                helperText={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`]}\r\n                                onBlur={(e) => this.handleBlur(e, p)}\r\n                            />\r\n                        })\r\n                    }\r\n                        <FormControlLabel disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters} style={{ margin: 10, marginLeft: 'auto' }}\r\n                            control={\r\n                                <Checkbox color='primary' checked={this.state.backTracking === '1'} onClick={() => this.setState({...this.state, backTracking: this.state.backTracking === '0' ? '1' : '0'})}/>\r\n                            }\r\n                            label=\"Enable Backtracking\"\r\n                        />\r\n                        <Button color='primary' disabled variant='contained' style={{ margin: 10 }}>Sync time with Zone Controller</Button>    \r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center', borderBottom: '0.1px solid lightgrey'}}>\r\n                        <Button color='primary' disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters || !this.state.submit} variant='contained' onClick={() => this.sendSPAParameters()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                    <Typography variant='h6' style={{paddingLeft: 'calc(1% + 10px)'}}>\r\n                        Stow Angle Settings\r\n                    </Typography>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                        \r\n                    {\r\n                        ['Wind Stow Angle', 'Snow Stow Angle', 'Night Stow Angle', 'Emergency Stow Angle', 'Clean Stow Angle'].map(p => {\r\n                            return <TextField\r\n                                key={p}\r\n                                className={classes.field}\r\n                                id={p}\r\n                                name={p.replace(/ /g, '')}\r\n                                label={p}\r\n                                value={this.state[p.replace(/ /g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingStowAngles || this.props.gettingStowAngles}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">Deg</InputAdornment>,\r\n                                  }}\r\n                            />\r\n                        })\r\n                    }\r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center'}}>\r\n                        <Button color='primary' disabled={this.props.sendingStowAngles || this.props.gettingStowAngles} variant='contained' onClick={() => this.sendStowAngles()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { editedTrackers, SPAParameters, stowAngles, sendingSPAParameters, sendingStowAngles, gettingSPAParameters, gettingStowAngles } = state.app\r\n\r\n    return {\r\n        editedTrackers,\r\n        SPAParameters,\r\n        stowAngles,\r\n        sendingSPAParameters,\r\n        sendingStowAngles,\r\n        gettingSPAParameters,\r\n        gettingStowAngles\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendSPAParameters: (editedTrackers, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking) => {\r\n        const values = `${Lattitude}, ${Longitude}, ${Altitude}, ${EastLimit}, ${WestLimit}, ${TrackerWidth}, ${Pitch}, ${TrackingAccuracy}, ${AzimuthDeviation}, ${AltitudeTrackeronEast}, ${AltitudeTrackeronWest}, ${StartTimeLead}, ${EndTimeLag}, 0, ${backTracking}`\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_SPA_PARAMETERS_REQUEST', t, values})\r\n            appService.sendSPAParameters(t.deviceID, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_SUCCESS'})\r\n                    dispatch({type: 'GET_SPA_PARAMETERS_REQUEST'})\r\n                    appService.getSPAParameters(t.deviceID)\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_SPA_PARAMETERS_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_SPA_PARAMETERS_FAILURE'})\r\n                        })\r\n\r\n                }, error => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_FAILURE'})\r\n                })\r\n        })\r\n        \r\n    },\r\n    sendStowAngles: (editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle) => {\r\n        const values = `${WindStowAngle}, ${SnowStowAngle}, ${CleanStowAngle}, ${NightStowAngle}, ${EmergencyStowAngle}`\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_STOW_ANGLES_REQUEST', t, values})\r\n            appService.sendStowAngles(t.deviceID, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_SUCCESS'})\r\n                    dispatch({type: 'GET_STOW_ANGLES_REQUEST'})\r\n                    appService.getStowAngles(t.deviceID)\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_STOW_ANGLES_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_STOW_ANGLES_FAILURE'})\r\n                        })\r\n                }, error => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_FAILURE'})\r\n                })\r\n        })\r\n    },\r\n    getStowAngles: (DID) => {\r\n        dispatch({type: 'GET_STOW_ANGLES_REQUEST'})\r\n        appService.getStowAngles(DID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_STOW_ANGLES_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'GET_STOW_ANGLES_FAILURE'})\r\n            })\r\n    },\r\n    getSPAParameters: (DID) => {\r\n        dispatch({type: 'GET_SPA_PARAMETERS_REQUEST'})\r\n        appService.getSPAParameters(DID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_SPA_PARAMETERS_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'GET_SPA_PARAMETERS_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedEditRowController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(EditRowController))\r\nexport {connectedEditRowController as EditRowController1}","import React, { Fragment } from 'react'\r\nimport LeftIcon from '@material-ui/icons/ArrowBack'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { IconButton, Typography, Grid, Button, Menu, MenuItem, FormControlLabel, Switch } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: 'calc(100% - 48px)'\r\n    },\r\n    second: {\r\n        height: 'calc(100% - 128px)', \r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    }\r\n})\r\n\r\nclass ControlRowController extends React.Component {\r\n    state = {\r\n        typeOfStow: 'STOW',\r\n        auto: false\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.setState({ ...this.state, anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleClose = (key) => {\r\n        this.setState({ typeOfStow: key, anchorEl: null });\r\n    };\r\n\r\n    autoToggle = () => {\r\n        if(this.state.auto) {\r\n            this.props.controlledTrackers.map(t => this.props.sendStow(t.deviceID, 'AUTO'))\r\n            this.setState({...this.state, auto: !this.state.auto})\r\n        } else {\r\n            this.props.controlledTrackers.map(t => this.props.sendStow(t.deviceID, 'MANUAL'))\r\n            this.setState({...this.state, auto: !this.state.auto})\r\n        }\r\n    } \r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        const { anchorEl } = this.state\r\n        return (\r\n            <Fragment>\r\n\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item style={{height: 64}}>\r\n                        <Typography variant='h5'>\r\n                            <IconButton aria-label=\"Back\" onClick={this.props.back} >\r\n                                <LeftIcon fontSize=\"large\" />\r\n                            </IconButton>\r\n                            Control\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item className={classes.second}>\r\n                    \r\n                    </Grid>\r\n                    <Grid item style={{textAlign: 'center'}}>\r\n                        <Button color='primary' variant='contained' onClick={() => this.props.controlledTrackers.map(t => this.props.sendCommand(t.deviceID, 'NEGATIVE'))} style={{ margin: 10 }}>Run West</Button>\r\n                        <Button color='primary' variant='contained' onClick={() => this.props.controlledTrackers.map(t => this.props.sendCommand(t.deviceID, 'POSITIVE'))} style={{ margin: 10 }}>Run East</Button>\r\n                        <Button color='primary' variant='contained' onClick={() => this.props.controlledTrackers.map(t => this.props.sendCommand(t.deviceID, 'STOP'))} style={{ margin: 10 }}>Stop</Button>\r\n                        <Button color='primary' disabled={this.state.typeOfStow === 'STOW'} onClick={() => this.props.controlledTrackers.map(t => this.props.sendStow(t.deviceID, this.state.typeOfStow))} variant='contained' style={{ marginLeft: 10 }}>{this.state.typeOfStow}</Button>\r\n                        <Button \r\n                            color='primary' \r\n                            variant='contained' \r\n                            aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={this.handleClick}\r\n                            style={{ minWidth: 24, paddingLeft: 0, paddingRight: 0}}\r\n                        >\r\n                            <ExpandMoreIcon />\r\n                        </Button>\r\n                        <Menu\r\n                            id=\"simple-menu\"\r\n                            anchorEl={anchorEl}\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={this.handleClose}\r\n                            >\r\n                            <MenuItem onClick={() => this.handleClose('WIND')}>WIND</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('SNOW')}>SNOW</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('NIGHT')}>NIGHT</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('CLEAN')}>CLEAN</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('EMERGENCY')}>EMERGENCY</MenuItem>\r\n                        </Menu>\r\n                        <FormControlLabel style={{ margin: 10 }} labelPlacement=\"top\"\r\n                            control={\r\n                                <Switch color='primary' checked={this.state.auto} onClick={() => this.autoToggle()} />\r\n                            }\r\n                            label=\"Enable Auto Mode\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { controlledTrackers } = state.app\r\n\r\n    return {\r\n        controlledTrackers,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendCommand: (DID, value) => {\r\n        dispatch({type: 'SEND_COMMAND_REQUEST'})\r\n        appService.sendCommand(DID, value)\r\n            .then(json => {\r\n                dispatch({type: 'SEND_COMMAND_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'SEND_COMMAND_FAILURE'})\r\n            })\r\n    },\r\n    sendStow: (DID, mode) => {\r\n        dispatch({type: 'SEND_STOW_REQUEST'})\r\n        appService.sendStow(DID, mode)\r\n            .then(json => {\r\n                dispatch({type: 'SEND_STOW_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'SEND_STOW_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedControlRowController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ControlRowController))\r\nexport {connectedControlRowController as ControlRowController}","import React, { Fragment } from 'react'\r\nimport { Grid, Button, Checkbox } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { EditRowController } from './EditRowController';\r\nimport { EditRowController1 } from './_EditRowController'\r\nimport { ControlRowController } from './ControlRowController'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    buttons: {\r\n        marginBottom: 10,\r\n        marginRight: 10,\r\n        marginTop: 10\r\n    }\r\n});\r\n\r\nclass RowControllerTab extends React.Component {\r\n    state = {\r\n        selectedTrackers: [],\r\n        location: 'home'\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedTrackers.length === this.props.commissioningData.length) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.props.commissioningData]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectRow = (row) => {\r\n        if(this.state.selectedTrackers.indexOf(row) === -1) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.state.selectedTrackers, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.state.selectedTrackers.filter(t => t.macID !== row.macID)]\r\n            })\r\n        }\r\n    }\r\n\r\n    editTracker = () => {\r\n        this.props.setEditedTrackers(this.state.selectedTrackers)\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'edit'\r\n        })\r\n    }\r\n\r\n    controlTracker = () => {\r\n        this.props.setControlledTrackers(this.state.selectedTrackers)\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'control'\r\n        })\r\n    }\r\n\r\n    back = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'home'\r\n        })\r\n    }\r\n\r\n    removeTrackers = () => {\r\n        this.props.removeTrackers(this.state.selectedTrackers.map(s => s.deviceID))\r\n        this.setState({...this.state, selectedTrackers: []})\r\n    }\r\n\r\n    render() {\r\n        const { classes, commissioningData } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    this.state.location === 'edit' ? \r\n                        this.state.selectedTrackers.length > 1 ?\r\n                        <EditRowController back={this.back}/> : <EditRowController1 back={this.back}/> :\r\n                    this.state.location === 'control' ?\r\n                    <ControlRowController back={this.back}/> :\r\n                    <Grid container direction='column' style={{ height: 'calc(100% - 48px)'}}>\r\n                        <Grid item style={{textAlign: 'end'}}>\r\n                            <Button color='primary' variant='contained' disabled={this.state.selectedTrackers.length === 0} className={classes.buttons} onClick={() => this.editTracker()}>Edit</Button>\r\n                            <Button color='primary' variant='contained' disabled={this.state.selectedTrackers.length === 0} className={classes.buttons} onClick={() => this.controlTracker()}>Control</Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    onClick={() => this.selectAll()}\r\n                                    style={{cursor: 'pointer'}}\r\n                                >\r\n                                    {commissioningData !== null && commissioningData.length > 1 && <Checkbox \r\n                                        checked={this.state.selectedTrackers.length === commissioningData.length}\r\n                                        color='primary'\r\n                                    />}\r\n                                        </TableCell>\r\n                                <TableCell >Row #</TableCell>\r\n                                <TableCell >Device ID</TableCell>\r\n                                <TableCell >Mac ID</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {commissioningData && commissioningData.map(row => (\r\n                                <TableRow key={row.macID}\r\n                                    onClick={() => this.selectRow(row)}\r\n                                    style={{cursor: 'pointer'}}\r\n                                >\r\n                                <TableCell>\r\n                                    <Checkbox \r\n                                        checked={this.state.selectedTrackers.indexOf(row) !== -1}\r\n                                        color='primary'\r\n                                    />\r\n                                </TableCell>\r\n                                    <TableCell >{row.rowNumber}</TableCell>\r\n                                    <TableCell >{row.deviceID}</TableCell>\r\n                                    <TableCell >{row.macID}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        </Grid>{commissioningData !== null &&\r\n                        <Grid item style={{textAlign: 'end'}}>\r\n                            <Button variant='contained' color='primary' className={classes.buttons} disabled={this.state.selectedTrackers.length === 0} onClick={() => this.removeTrackers()}>Forget</Button>\r\n                        </Grid>}\r\n                    </Grid>\r\n                    \r\n                }\r\n                \r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData } = state.app\r\n\r\n    return {\r\n        commissioningData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    removeTrackers : (DIDs) => {\r\n        dispatch({type: 'REMOVE_TRACKERS_REQUEST'})\r\n        appService.removeTrackers(DIDs)\r\n            .then(json => {\r\n                dispatch({type: 'REMOVE_TRACKERS_SUCCESS', DIDs})\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n                appService.getCommissioningData()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n                    })\r\n            }, error => {\r\n                dispatch({type: 'REMOVE_TRACKERS_FAILURE'})\r\n            })\r\n    },\r\n    setEditedTrackers: (trackers) => {\r\n        dispatch({type: 'SET_EDITED_TRACKERS', trackers})\r\n    },\r\n    setControlledTrackers: (trackers) => {\r\n        dispatch({type: 'SET_CONTROLLED_TRACKERS', trackers})\r\n    }\r\n})\r\n\r\n\r\nconst connectedRowControllerTab = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RowControllerTab))\r\nexport {connectedRowControllerTab as RowControllerTab}","import React, { Fragment } from 'react'\r\nimport { Grid, Checkbox, TextField, Button } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    textField: {\r\n        marginLeft: 24\r\n    },\r\n    formControl: {\r\n        marginLeft: 24\r\n    }\r\n});\r\n  \r\n\r\nclass ScanTab extends React.Component {\r\n    state = {\r\n        selectedTrackers: [],\r\n        scanSelection: 'PAN ID'\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedTrackers.length === this.props.xbeeResponse.length) {\r\n            this.setState({\r\n                selectedTrackers: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selectedTrackers: [...this.props.xbeeResponse]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectRow = (row) => {\r\n        if(this.state.selectedTrackers.indexOf(row) === -1) {\r\n            this.setState({\r\n                selectedTrackers: [...this.state.selectedTrackers, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selectedTrackers: [...this.state.selectedTrackers.filter(t => t.id !== row.id)]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            scanSelection: e.target.value\r\n        })\r\n    }\r\n\r\n    inputChange = (e) =>{\r\n        this.setState({\r\n            scanParameter: e.target.value\r\n        })\r\n    }\r\n\r\n    scan = () => {\r\n        if(this.state.scanSelection === 'PAN ID') {\r\n            this.props.discover('00000')\r\n        } else {\r\n            this.props.discover(this.state.scanParameter)\r\n        }\r\n    } \r\n\r\n    addTrackers = () => {\r\n        this.props.addTrackers(this.state.selectedTrackers)\r\n    }\r\n\r\n    render() {\r\n        const { classes, xbeeResponse } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column'>\r\n                    <Grid item>\r\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                            <RadioGroup\r\n                                row\r\n                                aria-label=\"Scan\"\r\n                                name=\"scan\"\r\n                                value={this.state.scanSelection}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <FormControlLabel value=\"PAN ID\" control={<Radio color='primary'/>} label=\"PAN ID\" />\r\n                                <FormControlLabel value=\"Device ID\" control={<Radio color='primary'/>} label=\"Device ID\" />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item style={{marginBottom: 24}}>\r\n                    {\r\n                        this.state.scanSelection === 'PAN ID' ?\r\n                        <TextField\r\n                            id=\"scanParameter\"\r\n                            className={classes.textField}\r\n                            value={this.state.scanParameter}\r\n                            onChange={this.inputChange}\r\n                            placeholder='PAN ID'\r\n                            margin=\"none\"\r\n                            variant='outlined'\r\n                        /> :\r\n                        <TextField\r\n                            id=\"scanParameter\"\r\n                            className={classes.textField}\r\n                            value={this.state.scanParameter}\r\n                            onChange={this.inputChange}\r\n                            placeholder='Device ID'\r\n                            margin=\"none\"\r\n                            variant='outlined'\r\n                        />\r\n                    }\r\n                        <Button color='primary' onClick={() => this.scan()} variant='contained' style={{marginLeft: 24, verticalAlign: 'bottom'}}>Scan</Button>\r\n                    </Grid>{xbeeResponse.length !== 0 && xbeeResponse !== undefined &&\r\n                    <Grid item>\r\n                    <Table className={classes.table}>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell\r\n                                onClick={() => this.selectAll()}\r\n                                style={{cursor: 'pointer'}}\r\n                            >\r\n                                {xbeeResponse.length > 1 && xbeeResponse !== undefined && <Checkbox \r\n                                    checked={this.state.selectedTrackers.length === xbeeResponse.length && this.state.selectedTrackers.length !== 0}\r\n                                    color='primary'\r\n                                />}\r\n                                    </TableCell>\r\n                            <TableCell >Row #</TableCell>\r\n                            <TableCell >Device ID</TableCell>\r\n                            <TableCell >Mac ID</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {xbeeResponse.length !== 0 && xbeeResponse !== undefined && xbeeResponse.map(res => {\r\n                            return (\r\n                            <TableRow key={res.DID}\r\n                                onClick={() => this.selectRow(res)}\r\n                                style={{cursor: 'pointer'}}\r\n                            >\r\n                            <TableCell>\r\n                                <Checkbox \r\n                                    checked={this.state.selectedTrackers.indexOf(res) !== -1}\r\n                                    color='primary'\r\n                                />\r\n                            </TableCell>\r\n                                <TableCell >{res.VALUES.split(',')[0]}</TableCell>\r\n                                <TableCell >{res.DID}</TableCell>\r\n                                <TableCell >{res.macID}</TableCell>\r\n                            </TableRow>\r\n                        )})}\r\n                        </TableBody>\r\n                    </Table>\r\n                    </Grid>}{xbeeResponse.length !== 0 && xbeeResponse !== undefined &&\r\n                    <Grid item style={{textAlign: 'end'}}>\r\n                        <Button color='primary' disabled={this.state.selectedTrackers.length === 0} onClick={() => this.addTrackers()} variant='contained' style={{margin: 10}}>Add</Button>\r\n                    </Grid>}\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { xbeeResponse } = state.app\r\n\r\n    return {\r\n        xbeeResponse\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    discover : (did) => {\r\n        dispatch({type: 'DISCOVER_REQUEST'})\r\n        appService.discover(did)\r\n            .then(json => {\r\n                dispatch({type: 'DISCOVER_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'DISCOVER_FAILURE'})\r\n            })\r\n    },\r\n    addTrackers: (devices) => {\r\n        dispatch({type: 'ADD_TRACKERS_REQUEST'})\r\n        appService.addTrackers(devices)\r\n            .then(json => {\r\n                dispatch({type: 'ADD_TRACKERS_SUCCESS', devices})\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n                appService.getCommissioningData()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n                    })\r\n            }, error => {\r\n                dispatch({type: 'ADD_TRACKERS_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedScanTab = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ScanTab))\r\nexport {connectedScanTab as ScanTab}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { RowControllerTab } from './RowControllerTab'\r\nimport { ScanTab } from './ScanTab'\r\nimport { connect } from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  tabsIndicator: {\r\n    backgroundColor: '#54AAB3',\r\n  },\r\n  selected: {\r\n    backgroundColor: '#54AAB3',\r\n    color: '#ffffff',\r\n    fontWeight: 600,\r\n    fontSize: 14\r\n  }\r\n});\r\n\r\nclass RowController extends React.Component {\r\n\r\n  handleChange = (event, value) => {\r\n    this.props.changeTab({ value });\r\n  };\r\n\r\n  render() {\r\n    const { classes, currentTab } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" color='secondary'>\r\n          <Tabs value={currentTab} onChange={this.handleChange} classes={{indicator: classes.tabsIndicator}}>\r\n            <Tab label=\"Paired Rows\" classes={{selected: classes.selected}}/>\r\n            <Tab label=\"Scan\" classes={{selected: classes.selected}}/>\r\n          </Tabs>\r\n        </AppBar>\r\n        {currentTab === 0 && <RowControllerTab />}\r\n        {currentTab === 1 && <ScanTab />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRowController.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentTab } = state.app\r\n\r\n    return {\r\n        currentTab\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changeTab: (value) => {\r\n        dispatch({type: 'CHANGE_TAB', value})\r\n    }\r\n})\r\n\r\n\r\nconst connectedRowController = (connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RowController)))\r\nexport {connectedRowController as RowController}","import React, { Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Grid, TextField, Typography, IconButton, FormControlLabel, FormControl, Radio, RadioGroup, Button, MenuItem, OutlinedInput, Select, InputLabel, CircularProgress } from '@material-ui/core';\r\nimport { connect } from 'react-redux'\r\nimport { appService } from '../App/app.services';\r\nimport Refresh from '@material-ui/icons/Refresh'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    minWidth: 300,\r\n    backgroundColor: theme.palette.background.paper,\r\n    [theme.breakpoints.up('md')]: {\r\n        height: '660px'\r\n    }\r\n  },\r\n  grid2: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '90%',\r\n    [theme.breakpoints.up('md')]: {\r\n        width: '30%',\r\n    }\r\n  },\r\n  field: {\r\n    flexDirection: 'row',\r\n    [theme.breakpoints.up('md')]: {\r\n        margin: '10px 0 0 0'\r\n    }\r\n  },\r\n  saveButton: {\r\n    margin: '10px 10px 10px 5%',\r\n    alignSelf: 'start',\r\n    [theme.breakpoints.down('sm')]: {\r\n        width: '90%',\r\n        margin: 10,\r\n        alignSelf: 'center'\r\n    }\r\n  },\r\n  button: {\r\n      width: '10%'\r\n  },\r\n  selectWifi: {\r\n      width: '90%'\r\n  }\r\n});\r\n\r\nclass ZoneController extends React.Component {\r\n\r\n    state = {\r\n        ssid: '',\r\n        password: '',\r\n        staticIP: ''\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.scanWifi()\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    setWifiInfo = () => {\r\n        this.props.setWifiInfo(this.state.ssid, this.props.password, this.state.staticIP)\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes, wifiList } = this.props\r\n        return (\r\n            <Fragment>\r\n                    <Grid item xs={12} container direction='column' justify='center' alignItems='center' className={classes.root}>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Network\r\n                        </Typography>\r\n                        <FormControl variant=\"outlined\" className={classes.field} fullWidth>\r\n                            <InputLabel htmlFor=\"ssid\">\r\n                                SSID\r\n                            </InputLabel>\r\n                            <Select\r\n                                value={this.state.ssid}\r\n                                onChange={this.handleChange}\r\n                                autoWidth\r\n                                className={classes.selectWifi}\r\n                                input={<OutlinedInput labelWidth={50} name=\"ssid\" id=\"ssid\" />}\r\n                            >\r\n                                {\r\n                                    wifiList.length === 0 ? <MenuItem value={'none'}> <CircularProgress /></MenuItem> : wifiList.map(w => <MenuItem key={w} value={w}>{w}</MenuItem>)\r\n                                }\r\n                                \r\n                            </Select>\r\n                            <IconButton className={classes.button} onClick={() => this.props.scanWifi()} aria-label=\"Refresh Wifi list\">\r\n                                <Refresh />\r\n                            </IconButton>\r\n                        </FormControl>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            name='password'\r\n                            label='Password'\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            name='staticIP'\r\n                            label='Static IP'\r\n                            value={this.state.staticIP}\r\n                            onChange={this.handleChange}\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary' onClick={() => this.setWifiInfo()} className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Heart Beat\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='heartbeatInterval'\r\n                            label='Heart Beat Interval'\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='heartbeatMaxMessages'\r\n                            label='Heart Beat Max Messages'\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Big Query\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='bqKey'\r\n                            label='Big Query key'\r\n                            value={this.state.bqKey}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            PAN ID\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='panID'\r\n                            label='PAN ID'\r\n                            value={this.state.panID}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Wind Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='maxWindSpeed'\r\n                            label='Max Wind Speed'\r\n                            value={this.state.maxWindSpeed}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='meanWindSpeed'\r\n                            label='Mean Wind Speed'\r\n                            value={this.state.meanWindSpeed}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='windSpeedTimer'\r\n                            label='Wind Speed Timer'\r\n                            value={this.state.windSpeedTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Flood Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='maxFloodLevel'\r\n                            label='Max FLood Level'\r\n                            value={this.state.maxFloodLevel}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='floodLevelTimer'\r\n                            label='Flood level Timer'\r\n                            value={this.state.floodLevelTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Snow Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='maxSnowLevel'\r\n                            label='Max Snow Level'\r\n                            value={this.state.maxSnowLevel}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='snowLevelTimer'\r\n                            label='Snow level Timer'\r\n                            value={this.state.snowLevelTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Rain Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='maxRainLevel'\r\n                            label='Max Rain Level'\r\n                            value={this.state.maxRainLevel}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='rainLevelTimer'\r\n                            label='Rain level Timer'\r\n                            value={this.state.rainLevelTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <FormControl component=\"fieldset\" className={classes.field}>\r\n                            <RadioGroup\r\n                                row\r\n                                aria-label=\"Sync\"\r\n                                name=\"sync\"\r\n                                value={this.state.syncTime}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <FormControlLabel value=\"internet\" control={<Radio color='primary'/>} label=\"Sync from internet\" />\r\n                                <FormControlLabel value=\"scada\" control={<Radio color='primary'/>} label=\"Sync from SCADA\" />\r\n                            </RadioGroup>\r\n                            <Button variant='contained' color='primary' style={{marginBottom: 10}}>Sync</Button>\r\n                        </FormControl>\r\n                        </div>\r\n                    </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { wifiList } = state.app\r\n\r\n    return {\r\n        wifiList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setWifiInfo: (ssid, pass, staticIP) => {\r\n        dispatch({type: 'SET_WIFI_INFO_REQUEST'}) \r\n        appService.setWifiInfo(ssid, pass, staticIP)\r\n            .then(json => {\r\n                dispatch({type: 'SET_WIFI_INFO_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'SET_WIFI_INFO_FAILURE'})\r\n            })\r\n    },\r\n    scanWifi: () => {\r\n        dispatch({type: 'SCAN_WIFI_REQUEST'})\r\n        appService.scanWifi()\r\n            .then(json => {\r\n                dispatch({type: 'SCAN_WIFI_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'SCAN_WIFI_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedZoneController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ZoneController))\r\nexport {connectedZoneController as ZoneController}","import React from 'react'\r\nimport { Grid, Button, Checkbox, TextField, DialogActions, DialogTitle, Dialog, DialogContent, MenuItem, OutlinedInput, InputLabel, FormControl, Select, Tooltip, Switch } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      height: '100%',\r\n      overflowX: 'auto',\r\n      backgroundColor: 'white'\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    buttons: {\r\n        marginBottom: 10,\r\n        marginRight: 10,\r\n        marginTop: 10\r\n    }\r\n});\r\n  \r\n\r\nclass Sensors extends React.Component {\r\n\r\n    state = {\r\n        selectedSensors: [],\r\n        dialog: false,\r\n        which: 'none',\r\n        port: '',\r\n        type: '',\r\n        model: '',\r\n        samplingPeriod: '',\r\n        driverFile: '',\r\n        driverFileName: '',\r\n        enabled: []\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.getSensors()\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.sensors !== this.props.sensors && nextProps.sensors !== undefined) {\r\n            this.setState({...this.state, enabled: [...nextProps.sensors.filter(s => s.enabled === true)]})\r\n        }\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedSensors.length === this.props.sensors.length) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...this.props.sensors]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectSensor = (row) => {\r\n        if(this.state.selectedSensors.filter(t => t.model === row.model && t.type === row.type).length === 0) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...this.state.selectedSensors, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...this.state.selectedSensors.filter(t => t.model !== row.model)]\r\n            })\r\n        }\r\n    }\r\n\r\n    addSensor = () => {\r\n        this.setState({ ...this.state, dialog: true, which: 'add'})\r\n    }\r\n\r\n    editSensor = () => {\r\n        this.setState({ ...this.state, dialog: true, which: 'edit', port: this.state.selectedSensors[0].port, type: this.state.selectedSensors[0].type, model: this.state.selectedSensors[0].model, samplingPeriod: this.state.selectedSensors[0].samplingPeriod})\r\n    }\r\n\r\n    removeSensor = () => {\r\n        this.props.removeSensor(this.state.selectedSensors)\r\n    }\r\n\r\n    enable = (row) => {\r\n        if(this.state.enabled.filter(t => t.model === row.model && t.type === row.type).length === 0) {\r\n            this.props.enableSensor(row.type, row.model)\r\n            this.setState({...this.state, enabled: [...this.state.enabled, row]})\r\n        } else {\r\n            this.props.disableSensor(row.type, row.model)\r\n            this.setState({...this.state, enabled: this.state.enabled.filter(e => e !== row)})\r\n        }\r\n        \r\n    }\r\n\r\n    handleClose = () => {\r\n        if(this.state.which === 'edit') {\r\n            this.props.softRemoveSensor(this.state.selectedSensors)\r\n            this.props.addSensor(this.state.port, this.state.type, this.state.model, this.state.samplingPeriod)\r\n            this.props.uploadDriver(this.state.driverFile, this.state.type, this.state.model)   \r\n        } else {\r\n            this.props.addSensor(this.state.port, this.state.type, this.state.model, this.state.samplingPeriod)\r\n            this.props.uploadDriver(this.state.driverFile, this.state.type, this.state.model)\r\n        }\r\n            \r\n        \r\n        this.setState({ ...this.state, dialog: false, which: 'none' });\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ ...this.state, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    \r\n    handleSelectedFile = e => {\r\n        this.setState({\r\n            ...this.state,\r\n            driverFile: e.target.files[0],\r\n            driverFileName: e.target.files[0].name\r\n        })\r\n    }\r\n\r\n    render() {console.log(this.state)\r\n        const { classes, sensors } = this.props\r\n\r\n        return (\r\n            <Grid container direction='column' className={classes.root}>\r\n                <Grid item style={{textAlign: 'end'}}>\r\n                    <Button color='primary' variant='contained' className={classes.buttons} onClick={() => this.addSensor()}>Add New</Button>\r\n                    {this.state.selectedSensors.length > 1 ?\r\n                        <Tooltip title='Cannot edit multiple sensors at once. Please choose a single sensor to edit.'>\r\n                            <span><Button color='primary' variant='contained' className={classes.buttons} disabled>Edit</Button></span>\r\n                        </Tooltip> :\r\n                        <Button color='primary' variant='contained' disabled={this.state.selectedSensors.length !== 1} className={classes.buttons} onClick={() => this.editSensor()}>Edit</Button>\r\n                    }\r\n                </Grid>\r\n                <Grid item>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell\r\n                            onClick={() => this.selectAll()}\r\n                            style={{cursor: 'pointer'}}\r\n                        >{sensors && sensors.length > 1 && \r\n                            <Checkbox \r\n                                checked={this.state.selectedSensors.length === this.props.sensors.length}\r\n                                color='primary'\r\n                            />}\r\n                                </TableCell>\r\n                        <TableCell >Port #</TableCell>\r\n                        <TableCell >Sensor Type</TableCell>\r\n                        <TableCell >Model #</TableCell>\r\n                        <TableCell >Sampling Period</TableCell>\r\n                        <TableCell >Enabled</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {sensors && sensors.map(row => (\r\n                        <TableRow key={row.port+row.type+row.model}\r\n                            style={{cursor: 'pointer'}}\r\n                        >\r\n                            <TableCell>\r\n                                <Checkbox \r\n                                    onClick={() => this.selectSensor(row)}\r\n                                    checked={this.state.selectedSensors.filter(t => t.model === row.model && t.type === row.type).length !== 0}\r\n                                    color='primary'\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell >{row.port}</TableCell>\r\n                            <TableCell >{row.type}</TableCell>\r\n                            <TableCell >{row.model}</TableCell>\r\n                            <TableCell >{row.samplingPeriod}</TableCell>\r\n                            <TableCell>\r\n                                {/* <Checkbox \r\n                                    checked={this.state.enabled.filter(t => t.model === row.model && t.type === row.type).length !== 0}\r\n                                    onClick={() => this.enable(row)}\r\n                                    color='primary'\r\n                                /> */}\r\n                                <Switch color='primary' checked={this.state.enabled.filter(t => t.model === row.model && t.type === row.type).length !== 0} onClick={() => this.enable(row)} />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>{sensors && sensors.length > 0 &&\r\n                <Grid item style={{textAlign: 'end'}}>\r\n                    <Button color='primary' variant='contained' disabled={this.state.selectedSensors.length === 0} className={classes.buttons} onClick={() => this.removeSensor()}>Remove</Button>\r\n                </Grid>}\r\n                </Grid>\r\n                <Dialog\r\n                    open={this.state.dialog}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">{this.state.which === 'add' ? 'Add Sensor' : 'Edit Sensor'}</DialogTitle>\r\n                    <DialogContent>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl} fullWidth margin='dense'>\r\n                            <InputLabel htmlFor=\"port\">\r\n                                Port #\r\n                            </InputLabel>\r\n                            <Select\r\n                                value={this.state.port}\r\n                                onChange={this.handleChange}\r\n                                autoWidth\r\n                                input={<OutlinedInput labelWidth={50} name=\"port\" id=\"port\" />}\r\n                            >\r\n                                <MenuItem value={'ADC48CH0'}>ADC48CH0 (Address: 0x48; Channel: 0)</MenuItem>\r\n                                <MenuItem value={'ADC48CH1'}>ADC48CH1 (Address: 0x48; Channel: 1)</MenuItem>\r\n                                <MenuItem value={'ADC48CH2'}>ADC48CH2 (Address: 0x48; Channel: 2)</MenuItem>\r\n                                <MenuItem value={'ADC48CH3'}>ADC48CH3 (Address: 0x48; Channel: 3)</MenuItem>\r\n                                <MenuItem value={'ADC49CH0'}>ADC49CH0 (Address: 0x49; Channel: 0)</MenuItem>\r\n                                <MenuItem value={'ADC49CH1'}>ADC49CH1 (Address: 0x49; Channel: 1)</MenuItem>\r\n                                <MenuItem value={'ADC49CH2'}>ADC49CH2 (Address: 0x49; Channel: 2)</MenuItem>\r\n                                <MenuItem value={'ADC49CH3'}>ADC49CH3 (Address: 0x49; Channel: 3)</MenuItem>\r\n                                <MenuItem value={'Modbus RTU'}>Modbus RTU</MenuItem>\r\n                                <MenuItem value={'GPIO11'}>GPIO11 (Pin 11)</MenuItem>\r\n                                <MenuItem value={'GPIO13'}>GPIO13 (Pin 13)</MenuItem>\r\n                                <MenuItem value={'GPIO15'}>GPIO15 (Pin 15)</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl} fullWidth margin='dense'>\r\n                            <InputLabel htmlFor=\"type\">\r\n                                Sensor Type\r\n                            </InputLabel>\r\n                            <Select\r\n                                value={this.state.type}\r\n                                onChange={this.handleChange}\r\n                                autoWidth\r\n                                input={<OutlinedInput labelWidth={100} name=\"type\" id=\"type\" />}\r\n                            >\r\n                                <MenuItem value={'wind'}>Wind Sensor</MenuItem>\r\n                                <MenuItem value={'snow'}>Snow Sensor</MenuItem>\r\n                                <MenuItem value={'flood'}>Flood Sensor</MenuItem>\r\n                                <MenuItem value={'rain'}>Rain Sensor</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField\r\n                            fullWidth\r\n                            id='model'\r\n                            name='model'\r\n                            label='Model #'\r\n                            value={this.state.model}\r\n                            onChange={this.handleChange}\r\n                            margin=\"dense\"\r\n                            variant='outlined'\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id='samplingPeriod'\r\n                            name='samplingPeriod'\r\n                            label='samplingPeriod'\r\n                            value={this.state.samplingPeriod}\r\n                            onChange={this.handleChange}\r\n                            margin=\"dense\"\r\n                            variant='outlined'\r\n                        />\r\n                        <div style={{display: 'flex', alignItems: 'baseline'}}>\r\n                        <TextField\r\n                            id=\"driverFile\"\r\n                            label=\"Driver File\"\r\n                            helperText=\"Upload Sensor Driver File\"\r\n                            name='driverFile'\r\n                            value={this.state.driverFileName}\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        />\r\n                        <input\r\n                            accept=\"*\"\r\n                            style={{ display: 'none'}}\r\n                            id=\"contained-button-file\"\r\n                            type=\"file\"\r\n                            onChange={this.handleSelectedFile}\r\n                        />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\" style={{margin: 5}}>\r\n                                Browse\r\n                            </Button>\r\n                        </label>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant='contained' onClick={this.handleClose} color=\"primary\">\r\n                            {this.state.which === 'add' ? 'Add Sensor' : 'Save'}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Grid>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { sensors } = state.app\r\n\r\n    return {\r\n        sensors,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getSensors: () => {\r\n        dispatch({type: 'GET_SENSORS_REQUEST'})\r\n        appService.getSensors()\r\n            .then(json => {\r\n                dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_SENSORS_FAILURE'})\r\n            })        \r\n    },\r\n    addSensor: (port, type, model, samplingPeriod) => {\r\n        dispatch({type: 'ADD_SENSOR_REQUEST'})\r\n        appService.addSensor(port, type, model, samplingPeriod)\r\n            .then(json => {\r\n                dispatch({type: 'ADD_SENSORS_SUCCESS'})\r\n                dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                appService.getSensors()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                    }) \r\n            }, error => {\r\n                dispatch({type: 'ADD_SENSORS_FAILURE'})\r\n            })\r\n    },\r\n    removeSensor: (selectedSensors) => {\r\n        selectedSensors.map(s => {\r\n            dispatch({type: 'REMOVE_SENSOR_REQUEST'})\r\n            appService.removeSensor(s.model, s.type)\r\n                .then(json => {\r\n                    dispatch({type: 'REMOVE_SENSOR_SUCCESS'})\r\n                    dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                    appService.getSensors()\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                        })\r\n                }, error => {\r\n                    dispatch({type: 'REMOVE_SENSOR_FAILURE'})\r\n                })\r\n        })\r\n        \r\n    },\r\n    softRemoveSensor: (selectedSensors) => {\r\n        selectedSensors.map(s => {\r\n            dispatch({type: 'REMOVE_SENSOR_REQUEST'})\r\n            appService.removeSensor(s.model, s.type)\r\n                .then(json => {\r\n                    dispatch({type: 'REMOVE_SENSOR_SUCCESS'})\r\n                }, error => {\r\n                    dispatch({type: 'REMOVE_SENSOR_FAILURE'})\r\n                })\r\n        })\r\n    },\r\n    enableSensor: (type, model) => {\r\n        dispatch({type: 'ENABLE_SENSOR_REQUEST'})\r\n        appService.enableSensor(type, model)\r\n            .then(json => {\r\n                dispatch({type: 'ENABLE_SENSOR_SUCCESS'})\r\n                dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                appService.getSensors()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                    }) \r\n            }, error => {\r\n                dispatch({type: 'ENABLE_SENSOR_FAILURE'})\r\n            })\r\n    },\r\n    disableSensor: (type, model) => {\r\n        dispatch({type: 'DISABLE_SENSOR_REQUEST'})\r\n        appService.disableSensor(type, model)\r\n            .then(json => {\r\n                dispatch({type: 'DISABLE_SENSOR_SUCCESS'})\r\n                dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                appService.getSensors()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                    }) \r\n            }, error => {\r\n                dispatch({type: 'DISABLE_SENSOR_FAILURE'})\r\n            })\r\n    },\r\n    uploadDriver: (file, type, model) => {\r\n        dispatch({type: 'UPLOAD_DRIVER_FILE_REQUEST'})\r\n        appService.uploadDriver(file, type, model)\r\n            .then(json => {\r\n                dispatch({type: 'UPLOAD_DRIVER_FILE_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'UPLOAD_DRIVER_FILE_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedSensors = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Sensors))\r\nexport {connectedSensors as Sensors}","import React from 'react';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst styles1 = theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n  const { classes, className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={[classes[variant], className]}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={[classes.icon, classes.iconVariant]} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          className={classes.close}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nexport const SnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);","import React from 'react';\r\nimport { NavBar } from '../NavBar/NavBar'\r\nimport {Dashboard} from '../Dashboard/Dashboard'\r\nimport { RowController }  from '../RowController/RowController'\r\nimport { ZoneController } from '../ZoneController/ZoneController'\r\nimport { Sensors } from '../Sensors/Sensors'\r\nimport { About } from '../About/About'\r\nimport { connect } from 'react-redux'\r\nimport { appService } from './app.services';\r\nimport { Snackbar, DialogActions, DialogTitle, Dialog, DialogContent, Button, DialogContentText, Slide } from '@material-ui/core';\r\nimport { SnackbarContentWrapper } from '../util/SnackbarContentWrapper';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { store } from '../util/store'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%'\r\n    },\r\n    topCenter: {\r\n        top: 75\r\n    }\r\n})\r\n\r\nconst Initializing = () => <div style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>INITIALIZING...</div>\r\n\r\nclass App extends React.Component {\r\n    queue = [];\r\n    timer = null\r\n\r\n    state = {\r\n        open: false,\r\n        alert: null,\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.props.init()\r\n        const io = socketIOClient(`http://${window.location.hostname}:8080`);\r\n        io.on('connect', () => {\r\n            console.log('connected')\r\n        })\r\n        io.on('ui/rover/scan', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/scan', json)\r\n        })\r\n        io.on('ui/rover/spa', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/spa', json)\r\n        })\r\n        io.on('ui/rover/stowangles', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/stowangles', json)\r\n        })\r\n        io.on('ui/rover/response/multiple', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/response/multiple', json)\r\n        })\r\n        io.on('time', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('time', json)\r\n        })\r\n        io.on('sensorReadings/wind', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('sensorReadings/wind', json)\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.alert !== null && (nextProps.alert !== this.props.alert)) {\r\n            this.queue.push(nextProps.alert);\r\n        \r\n            if (this.state.open) {\r\n                this.setState({ open: false });\r\n            } else {\r\n                this.processQueue();\r\n            }    \r\n        }\r\n    }\r\n\r\n    processQueue = () => {\r\n        if (this.queue.length > 0) {\r\n            this.setState({\r\n                alert: this.queue.shift(),\r\n                open: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n        return;\r\n        }\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleExited = () => {\r\n        this.processQueue();\r\n    };\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return ( \r\n                <div className={classes.root}>\r\n                    <NavBar>\r\n                    {\r\n                        this.props.currentPage === 'Dashboard' ? <Dashboard /> :\r\n                        this.props.currentPage === 'Row Controller' ? <RowController /> :\r\n                        this.props.currentPage === 'Zone Controller' ? <ZoneController /> :\r\n                        this.props.currentPage === 'Sensors' ? <Sensors /> : \r\n                        this.props.currentPage === 'About' ? <About /> : <Initializing />\r\n                    }\r\n                    </NavBar>\r\n                    <Snackbar\r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'center',\r\n                        }}\r\n                        open={this.state.open}\r\n                        //autoHideDuration={3000}\r\n                        onClose={this.handleClose}\r\n                        onExited={this.handleExited}\r\n                        classes={{anchorOriginTopCenter: classes.topCenter}}\r\n                    >\r\n                        <SnackbarContentWrapper\r\n                            onClose={this.handleClose}\r\n                            variant={this.state.alert === null ? 'info' : this.state.alert.type}\r\n                            message={this.state.alert === null ? '' : this.state.alert.message}\r\n                        />\r\n                    </Snackbar>\r\n                    {/* <Dialog\r\n                        open={this.state.open}\r\n                        onClose={this.handleClose}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                        style={{ minWidth: 300 }}\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\" style={{color:'white', background: this.state.alert !== null ? this.state.alert.type==='success' ? 'green' : this.state.alert.type === 'warning' ? 'orange' : 'red' : 'blue'}}>{this.state.alert === null ? 'info' : this.state.alert.type}</DialogTitle>\r\n                        <DialogContent style={{color:'white', background: this.state.alert !== null ? this.state.alert.type==='success' ? 'green' : this.state.alert.type === 'warning' ? 'orange' : 'red' : 'blue'}}>\r\n                        <DialogContentText id=\"alert-dialog-description\" style={{color:'white'}}>\r\n                            {this.state.alert === null ? '' : this.state.alert.message}\r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions style={{color:'white', background: this.state.alert !== null ? this.state.alert.type==='success' ? 'green' : this.state.alert.type === 'warning' ? 'orange' : 'red' : 'blue'}}>\r\n                        <Button onClick={this.handleClose} color=\"primary\" variant='contained'>\r\n                            Close\r\n                        </Button>\r\n                        </DialogActions>\r\n                    </Dialog> */}\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentPage, alert, timeZone } = state.app\r\n\r\n    return {\r\n        currentPage,\r\n        alert,\r\n        timeZone\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    init: () => {\r\n        dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n        appService.getCommissioningData()\r\n            .then(json => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n            })\r\n        \r\n        dispatch({type: 'GET_TIMEZONE_REQUEST'})\r\n        appService.getTimeZone()\r\n            .then(json => {\r\n                if(json.timeZone === null) {\r\n                    dispatch({type: 'SET_TIMEZONE_REQUEST'})\r\n                    appService.setTimeZone(store.getState().app.timeZone)\r\n                        .then(json => {\r\n                            dispatch({type: 'SET_TIMEZONE_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'SET_TIMEZONE_FAILURE'})\r\n                        })\r\n                }\r\n                dispatch({type: 'GET_TIMEZONE_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_TIMEZONE_FAILURE', error})\r\n            })\r\n    },\r\n    getTime: () => {\r\n        dispatch({type: 'GET_TIME_REQUEST'})\r\n        appService.getTime()\r\n            .then(json => {\r\n                dispatch({type: 'GET_TIME_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_TIME_FAILURE', error})\r\n            })\r\n    },\r\n    clearAlert : () => {\r\n        dispatch({type: 'CLEAR_ALERT'})\r\n    },\r\n    received: (topic, json) => {\r\n        dispatch({type: topic, json})\r\n    }\r\n})\r\n\r\n\r\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(App))\r\nexport {connectedApp as App}","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { store } from './util/store';\r\nimport { App } from './App';\r\nimport './index.css'\r\n\r\n/* const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#54AAB3\",\r\n        contrastText: '#fff'\r\n      }\r\n    },\r\n    overrides: {\r\n      MuiIconButton: {\r\n          root: {\r\n            color: 'white'\r\n          },\r\n      }\r\n    } \r\n  }); */\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#54AAB3',\r\n        dark: '#3c8f98',\r\n        contrastText: '#ffffff'\r\n      },\r\n      secondary: {\r\n        main: '#ffffff',\r\n        contrastText: '#000000'\r\n      }\r\n    }/* ,\r\n    overrides: {\r\n      MuiListItem: {\r\n        root: {\r\n          backgroundColor: '#ffffff',\r\n          '&$selected': {\r\n            backgroundColor: '#54AAB3',\r\n            color: '#ffffff'\r\n          },\r\n          '&$selected:hover': {\r\n            backgroundColor: '#3c8f98',\r\n            color: '#ffffff'\r\n          }\r\n        },\r\n      },\r\n    } */\r\n  });\r\n\r\nrender(\r\n    <MuiThemeProvider theme={theme}>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </MuiThemeProvider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}