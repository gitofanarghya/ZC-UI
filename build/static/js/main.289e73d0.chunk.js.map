{"version":3,"sources":["App/app.reducer.js","util/rootReducer.js","util/store.js","NavBar/NavBar.js","Dashboard/TrackerList.js","App/app.services.js","Dashboard/TrackerDetails.js","Dashboard/Dashboard.js","RowController/SPAParameters.js","RowController/StowAngles.js","RowController/EditRowController.js","RowController/_EditRowController.js","RowController/ControlRowController.js","RowController/RowControllerTab.js","RowController/ScanTab.js","RowController/RowController.js","ZoneController/ZoneController.js","Sensors/Sensors.js","util/SnackbarContentWrapper.js","App/App.jsx","index.js"],"names":["initialState","currentPage","currentTab","currentEditTab","timeZone","Intl","DateTimeFormat","resolvedOptions","alert","time","Date","now","commissioningData","fetchingCommissioningData","currentTracker","currentTrackerInfo","xbeeResponse","controlledTrackers","editedTrackers","SPAParameters","stowAngles","sendingSPAParameters","sendingStowAngles","gettingSPAParameters","gettingStowAngles","addingTrackers","sensors","responseQueue","listen","windSense","speed","direction","wifiList","sensorEvents","wind","roverStatus","difference","a1","a2","result","i","length","indexOf","push","rootReducer","combineReducers","app","state","action","type","Object","objectSpread","defineProperty","json","DID","Result","trackerID","concat","toConsumableArray","temp","map","s","enabled","page","commandQueue","value","staticData","newRoverStatus","r","deviceID","a","filter","newXbeeResponse","devices","trackers","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ResponsiveDrawer","mobileOpen","handleDrawerToggle","_this","setState","checkTime","_this2","this","_this$props","props","classes","theme","children","drawer","react_default","createElement","className","toolbar","src","height","width","style","marginLeft","marginRight","alt","Divider","List","text","index","ListItem","button","key","onClick","changePage","selected","disabled","ListItemText","disableTypography","primary","root","CssBaseline","AppBar","position","color","appBar","Toolbar","IconButton","aria-label","menuButton","Menu_default","Typography","variant","noWrap","Chip","icon","version","id","xmlns","viewBox","d","backgroundColor","label","toFixed","iconSVG","Toys_default","AccessTime_default","Number","toLocaleString","getHours","getMinutes","Hidden","mdUp","implementation","Drawer","container","anchor","open","onClose","paper","drawerPaper","smDown","content","React","Component","connectedNavBar","connect","_state$app","dispatch","withStyles","display","breakpoints","up","flexShrink","mixins","flexGrow","padding","spacing","paddingTop","fill","stroke","withTheme","TrackerList","react","Grid","Table","TableHead","TableRow","TableCell","TableBody","n","hover","setCurrentTracker","cursor","connectedTrackerList","appService","setWifiInfo","ssid","pass","staticIP","requestOptions","method","mode","body","JSON","stringify","password","fetch","hostName","then","handleResponse","uploadDriver","file","model","data","FormData","append","selectSensor","windSensor","rainSensor","floodSensor","snowSensor","uploadKey","setWindAddress","address","deviceAddress","getWindAddress","caliberate","sensor","sendCommand","CMD","VALUES","sendStow","MODE","getCommissioningData","getCurrentTrackerInfo","triggerDiscovery","hostName2","setPanID","panID","console","log","threshold","maxWindSpeed","maxRainFall","meanWindSpeed","windSpeedTimer","maxFloodLevel","maxSnowFall","heartBeat","hbinterval","maxMsgs","interval","setTimeZone","getHeartBeat","getThreshold","getPanID","getFrequency","setFrequency","power","status","powerRequestTimePeriod","statusRequestTimePeriod","getTimeZone","getTime","discover","did","addTrackers","removeTrackers","DIDs","sendSPAParameters","Lattitude","Longitude","Altitude","EastLimit","WestLimit","TrackerWidth","Pitch","TrackingAccuracy","AzimuthDeviation","AltitudeTrackeronEast","AltitudeTrackeronWest","StartTimeLead","EndTimeLag","backtracking","sendStowAngles","WindStowAngle","SnowStowAngle","CleanStowAngle","NightStowAngle","EmergencyStowAngle","getSPAParameters","getStowAngles","getSensors","addSensor","port","samplingPeriod","removeSensor","enableSensor","disableSensor","scanWifi","window","location","hostname","response","ok","error","message","statusText","Promise","reject","NoCurrentTrackerInfo","alignItems","justifyContent","TrackerDetails","timer","componentDidMount","refresh","componentWillReceiveProps","nextProps","c","arguments","undefined","setTimeout","TrackerDetails_NoCurrentTrackerInfo","currentAngle","marginTop","textAlign","overflow","macID","currentMode","timeStamp","toLocaleDateString","toLocaleTimeString","hour12","connectedTrackerDetails","flexWrap","Initializing","flexDirection","margin","Button","scan","Fetching","Dashboard","Dashboard_Fetching","Dashboard_Initializing","item","trackerList","Paper","trackerDetails","connectedDashboard","minHeight","TrackingLimitEast","TrackingLimitWest","RowWidth","RowPitch","TrackingResolution","AltitudeofTrackerontheEast","AltitudeofTrackerontheWest","EarlyStartMinutes","LateFinishMinutes","LattitudeError","LongitudeError","AltitudeError","TrackingLimitEastError","TrackingLimitWestError","RowWidthError","RowPitchError","TrackingResolutionError","AzimuthDeviationError","AltitudeofTrackerontheEastError","AltitudeofTrackerontheWestError","EarlyStartMinutesError","LateFinishMinutesError","backTracking","submit","values","split","handleChange","event","_objectSpread2","target","name","handleBlur","e","p","RegExp","test","_objectSpread4","min","max","_objectSpread5","_objectSpread6","_objectSpread3","_this$state","fieldGrid","adornment","TextField","field","replace","onChange","InputLabelProps","shrink","InputProps","endAdornment","InputAdornment","helperText","onBlur","FormControlLabel","control","Checkbox","checked","connectedSPAParameters","t","StowAngles","_objectSpread7","connectedStowAngles","EditRowController","changeTab","header","back","ArrowBack_default","fontSize","disableGutters","rowNumber","chip","request","success","tabs","Tabs","indicator","tabsIndicator","Tab","connectedEditRowController","palette","background","fontWeight","boxShadow","green","red","handleChangeSPA","_objectSpread8","_this$state2","borderBottom","paddingLeft","ControlRowController","typeOfStow","auto","handleClick","anchorEl","currentTarget","handleClose","autoToggle","second","aria-owns","aria-haspopup","minWidth","paddingRight","ExpandMore_default","Menu_Menu","Boolean","MenuItem","labelPlacement","Switch","connectedControlRowController","RowControllerTab","selectedTrackers","selectAll","selectRow","row","editTracker","setEditedTrackers","controlTracker","setControlledTrackers","_EditRowController_connectedEditRowController","buttons","table","connectedRowControllerTab","overflowX","marginBottom","ScanTab","scanSelection","inputChange","scanParameter","FormControl","component","formControl","RadioGroup","Radio","textField","placeholder","verticalAlign","res","connectedScanTab","RowController","connectedRowController","ZoneController","xs","justify","grid2","fullWidth","InputLabel","htmlFor","Select","autoWidth","selectWifi","input","OutlinedInput","labelWidth","CircularProgress","w","Refresh_default","saveButton","bqKey","floodLevelTimer","maxSnowLevel","snowLevelTimer","maxRainLevel","rainLevelTimer","syncTime","connectedZoneController","alignSelf","down","Sensors","selectedSensors","dialog","which","driverFile","driverFileName","editSensor","enable","softRemoveSensor","handleSelectedFile","files","Tooltip","title","Dialog","aria-labelledby","DialogTitle","DialogContent","accept","DialogActions","connectedSensors","variantIcon","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","SnackbarContentWrapper","dark","amber","iconVariant","opacity","other","objectWithoutProperties","Icon","SnackbarContent","assign","aria-describedby","close","Close_default","App","queue","init","io","socketIOClient","on","parse","received","processQueue","shift","reason","handleExited","About","App_Initializing","Snackbar","anchorOrigin","vertical","horizontal","onExited","anchorOriginTopCenter","topCenter","connectedApp","getState","clearAlert","topic","top","createMuiTheme","main","contrastText","secondary","render","MuiThemeProvider","es","document","getElementById"],"mappings":"2SAAMA,EAAe,CACjBC,YAAa,GACbC,WAAY,EACZC,eAAgB,EAChBC,SAAUC,KAAKC,iBAAiBC,kBAAkBH,SAClDI,MAAO,KACPC,KAAMC,KAAKC,MACXC,kBAAmB,KACnBC,2BAA2B,EAC3BC,eAAgB,KAChBC,mBAAoB,KACpBC,aAAc,GACdC,mBAAoB,GACpBC,eAAgB,GAChBC,cAAe,KACfC,WAAY,KACZC,sBAAsB,EACtBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,gBAAgB,EAChBC,QAAS,GACTC,cAAe,GACfC,QAAQ,EACRC,UAAW,CACPC,MAAO,KACPC,UAAW,MAEfC,SAAU,GACVC,aAAc,CACVC,MAAM,GAEVC,YAAa,IAGXC,EAAa,SAACC,EAAIC,GAEpB,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAIH,EAAGI,OAAQD,KACA,IAAvBF,EAAGI,QAAQL,EAAGG,KACdD,EAAOI,KAAKN,EAAGG,IAGvB,OAAOD,GCtCX,IAIeK,EAJKC,YAAgB,CAClCC,IDwCK,SAAaC,EAAOC,GACvB,GAAqB,qBAAVD,EACT,OAAO/C,EAET,OAAQgD,EAAOC,MACX,IAAK,oBACL,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIZ,YAAYe,OAAAC,EAAA,EAAAD,CAAA,GAAKH,EAAMZ,YAAZe,OAAAE,EAAA,EAAAF,CAAA,GAA0BF,EAAOK,KAAKC,IAAMN,EAAOK,KAAKN,UAGvE,IAAK,oBACL,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIf,SAAUgB,EAAOK,KAAKE,SAG1B,IAAK,sBACL,OAAOL,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIlB,UAAWmB,EAAOK,OAGtB,IAAK,OACL,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEItC,KAAMuC,EAAOK,KAAK5C,OAGtB,IAAK,sBACL,OAAOyC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIjC,eAAgBkC,EAAOQ,YAG3B,IAAK,wBACL,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEInB,QAAQ,IAGZ,IAAK,8BACL,OAAOsB,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEI1B,sBAAsB,EACtBM,cAAe,KAGnB,IAAK,2BACL,OAAOuB,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIzB,mBAAmB,EACnBK,cAAe,KAGnB,IAAK,6BACL,OAAGoB,EAAMnB,OACFmB,EAAM7B,eAAeuB,SAAWM,EAAMpB,cAAcc,OAAS,EACrDS,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIpB,cAAa,GAAA8B,OAAAP,OAAAQ,EAAA,EAAAR,CAAMH,EAAMpB,eAAZ,CAA2BqB,EAAOK,OAC/CzB,QAAQ,IAGTsB,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIpB,cAAa,GAAA8B,OAAAP,OAAAQ,EAAA,EAAAR,CAAMH,EAAMpB,eAAZ,CAA2BqB,EAAOK,SAG5CH,OAAAC,EAAA,EAAAD,CAAA,GACAH,GAKX,IAAK,sBACL,IAAIY,EAAO,GAIX,OAHAX,EAAOK,KAAKE,OAAOK,IAAI,SAAAC,GACnBF,EAAKE,EAAEZ,MAAQY,EAAEC,UAEdZ,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIrB,QAASsB,EAAOK,KAAKE,OACrBtB,aAAaiB,OAAAC,EAAA,EAAAD,CAAA,GAAKH,EAAMd,aAAiB0B,KAG7C,IAAK,wBAEL,OADQnD,MAAM,+BACP0C,OAAAC,EAAA,EAAAD,CAAA,GACAH,GAOP,IAAK,sBAEL,OADAvC,MAAM,6BACC0C,OAAAC,EAAA,EAAAD,CAAA,GACAH,GAOP,IAAK,cACL,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEI9C,YAAa+C,EAAOe,KACpBpC,cAAe,GACfqC,aAAc,KAGlB,IAAK,aACL,OAAOd,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEI7C,WAAY8C,EAAOiB,MAAMA,MACzBtC,cAAe,GACfqC,aAAc,KAIlB,IAAK,kBACL,OAAOd,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEI5C,eAAgB6C,EAAOiB,MAAMA,MAC7BtC,cAAe,GACfqC,aAAc,KAGlB,IAAK,cACL,OAAOd,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIvC,MAAO,OAGX,IAAK,iCACL,OAAO0C,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIlC,2BAA2B,IAG/B,IAAK,iCACL,GAA8B,OAA3BmC,EAAOK,KAAKa,YAAyD,IAAlClB,EAAOK,KAAKa,WAAWzB,OACzD,OAAOS,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIlC,2BAA2B,EAC3BZ,YAAmC,KAAtB8C,EAAM9C,YAAqB,YAAc8C,EAAM9C,YAC5DW,kBAAmB,OAGvB,IAAIuD,EAAcjB,OAAAC,EAAA,EAAAD,CAAA,GAAOH,EAAMZ,aAI/B,OAHAa,EAAOK,KAAKa,WAAWN,IAAI,SAAAQ,GACvBD,EAAeC,EAAEC,UAAY,WAE1BnB,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIlC,2BAA2B,EAC3BZ,YAAmC,KAAtB8C,EAAM9C,YAAqB,YAAc8C,EAAM9C,YAC5DW,kBAAmBoC,EAAOK,KAAKa,WAC/BpD,eAAgBkC,EAAOK,KAAKa,WAAW,GAAGV,UAC1CrB,YAAagC,IAIrB,IAAK,iCAEL,OADA3D,MAAM,oCACC0C,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIlC,2BAA2B,EAC3BZ,YAAmC,KAAtB8C,EAAM9C,YAAqB,YAAc8C,EAAM9C,cAOhE,IAAK,uBACL,OAA4B,OAAzB+C,EAAOK,KAAKjD,SACJ8C,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEI3C,SAAU4C,EAAOK,KAAKjD,WAGnB2C,EAGX,IAAK,uBAEL,OADAvC,MAAM,0BACC0C,OAAAC,EAAA,EAAAD,CAAA,GACAH,GAOP,IAAK,OACL,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEI9C,YAAa,iBACbC,WAAY,IAGhB,IAAK,mCACL,OAAOgD,OAAAC,EAAA,EAAAD,CAAA,GACAH,GAGP,IAAK,mCACL,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIhC,mBAAoBiC,EAAOK,OAG/B,IAAK,mCAEL,OADA7C,MAAM,sCACC0C,OAAAC,EAAA,EAAAD,CAAA,GACAH,GAOP,IAAK,mBAEL,OADAvC,MAAM,oBACC0C,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEI/B,aAAc,KAOlB,IAAK,mBAEL,OADAR,MAAM,uBACC0C,OAAAC,EAAA,EAAAD,CAAA,GACAH,GAOP,IAAK,gBACL,IAAIuB,EAAI,KAYR,OAVIA,EAD2B,OAA5BvB,EAAMnC,kBACJ,GAAA6C,OAAAP,OAAAQ,EAAA,EAAAR,CAAOH,EAAM/B,cAAb,CAA2BgC,EAAOK,OAGnB,IADRN,EAAMnC,kBAAkB2D,OAAO,SAAAH,GAAC,OAAIpB,EAAOK,KAAKC,MAAQc,EAAEC,WAC7D5B,OACA,GAAAgB,OAAAP,OAAAQ,EAAA,EAAAR,CAAOH,EAAM/B,cAAb,CAA2BgC,EAAOK,OAElCH,OAAAQ,EAAA,EAAAR,CAAOH,EAAM/B,cAIfkC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEI/B,aAAcsD,IAGlB,IAAK,uBACL,OAAOpB,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEItB,gBAAgB,IAGpB,IAAK,uBACLjB,MAAM,oBACN,IAAMgE,EAAkBpC,EAAWW,EAAM/B,aAAcgC,EAAOyB,SAC9D,OAAOvB,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEI/B,aAAcwD,EACd/C,gBAAgB,IAOpB,IAAK,uBAEL,OADAjB,MAAM,yBACC0C,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEItB,gBAAgB,IAOpB,IAAK,sBACL,OAAOyB,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEI7B,eAAgB8B,EAAO0B,WAG3B,IAAK,0BACL,OAAOxB,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEI9B,mBAAoB+B,EAAO0B,WAG/B,IAAK,eACL,OAAOxB,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEI5B,cAAc+B,OAAAC,EAAA,EAAAD,CAAA,GAAKH,EAAM5B,cAAZ+B,OAAAE,EAAA,EAAAF,CAAA,GAA4BF,EAAOK,KAAKC,IAAMN,EAAOK,OAClE9B,sBAAsB,IAG1B,IAAK,sBACL,OAAO2B,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEI3B,WAAW8B,OAAAC,EAAA,EAAAD,CAAA,GAAKH,EAAM3B,WAAZ8B,OAAAE,EAAA,EAAAF,CAAA,GAAyBF,EAAOK,KAAKC,IAAMN,EAAOK,OAC5D7B,mBAAmB,IAGvB,IAAK,0BACL,OAAO0B,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIvB,mBAAmB,IAGvB,IAAK,0BAEL,OADAhB,MAAM,6BACC0C,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIvB,mBAAmB,IAOvB,IAAK,6BACL,OAAO0B,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIxB,sBAAsB,IAG1B,IAAK,6BAEL,OADAf,MAAM,gCACC0C,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIxB,sBAAsB,IAO1B,IAAK,8BAEL,OADAf,MAAM,gCACC0C,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEI1B,sBAAsB,IAO1B,IAAK,8BACL,OAAO6B,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEI1B,sBAAsB,IAG1B,IAAK,2BAEL,OADAb,MAAM,6BACC0C,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIzB,mBAAmB,IAOvB,IAAK,2BACL,OAAO4B,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIzB,mBAAmB,IAGvB,QACA,OAAOyB,ME9aT4B,EAAmBC,yBAEZC,EAAQC,YACjBlC,EACAmC,YACIC,IACAL,oNCwDFM,6MACJlC,MAAQ,CACNmC,YAAY,KAGdC,mBAAqB,WACnBC,EAAKC,SAAS,SAAAtC,GAAK,MAAK,CAAEmC,YAAanC,EAAMmC,iBAI/CI,UAAY,SAAC9C,GAEX,OADIA,EAAI,KAAKA,EAAI,IAAMA,GAChBA,2EAGA,IAAA+C,EAAAC,KAAAC,EAC8BD,KAAKE,MAAlCC,EADDF,EACCE,QAASC,EADVH,EACUG,MAAOC,EADjBJ,EACiBI,SAElBC,EACJC,EAAAzB,EAAA0B,cAAA,WACED,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWN,EAAQO,SACpBH,EAAAzB,EAAA0B,cAAA,OAAKG,IAAI,6BAA6BC,OAAO,OAAOC,MAAM,MAAMC,MAAO,CAACC,WAAY,OAAQC,YAAa,QAASC,IAAI,MAE1HV,EAAAzB,EAAA0B,cAACU,EAAA,EAAD,MACAX,EAAAzB,EAAA0B,cAACW,EAAA,EAAD,KACG,CAAC,YAAa,iBAAkB,kBAAmB,UAAW,SAAS/C,IAAI,SAACgD,EAAMC,GAAP,OAC1Ed,EAAAzB,EAAA0B,cAACc,EAAA,EAAD,CACIC,QAAM,EACNC,IAAKJ,EACLK,QAAS,kBAAM1B,EAAKG,MAAMwB,WAAWN,IACrCO,SAAU5B,EAAKG,MAAMzF,cAAgB2G,EACrCjB,QAAS,CAACwB,SAAUxB,EAAQwB,UAC5BC,SAAmB,UAATR,GAGZb,EAAAzB,EAAA0B,cAACqB,EAAA,EAAD,CAAcC,mBAAiB,EAACC,QAASX,QAI/Cb,EAAAzB,EAAA0B,cAACU,EAAA,EAAD,OAIJ,OACEX,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWN,EAAQ6B,MACtBzB,EAAAzB,EAAA0B,cAACyB,EAAA,EAAD,MACA1B,EAAAzB,EAAA0B,cAAC0B,EAAA,EAAD,CAAQC,SAAS,QAAQC,MAAM,UAAU3B,UAAWN,EAAQkC,QAC1D9B,EAAAzB,EAAA0B,cAAC8B,EAAA,EAAD,KACE/B,EAAAzB,EAAA0B,cAAC+B,EAAA,EAAD,CACEH,MAAM,UACNI,aAAW,cACXf,QAASzB,KAAKL,mBACdc,UAAWN,EAAQsC,YAEnBlC,EAAAzB,EAAA0B,cAACkC,EAAA5D,EAAD,OAEFyB,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAKR,MAAM,UAAUS,QAAM,GAA/C,2BAGAtC,EAAAzB,EAAA0B,cAACsC,EAAA,EAAD,CACEC,KAAMxC,EAAAzB,EAAA0B,cAAA,OAAKwC,QAAQ,MAAMC,GAAG,UAAUC,MAAM,6BAA6BrC,MAAM,MAAMD,OAAO,MAAMuC,QAAQ,uBAAsB5C,EAAAzB,EAAA0B,cAAA,SAAGD,EAAAzB,EAAA0B,cAAA,SAAGD,EAAAzB,EAAA0B,cAAA,SAAGD,EAAAzB,EAAA0B,cAAA,QAAM4C,EAAE,2wNAA0wN7C,EAAAzB,EAAA0B,cAAA,QAAM4C,EAAE,gLAA+K7C,EAAAzB,EAAA0B,cAAA,QAAM4C,EAAE,iLAAgL7C,EAAAzB,EAAA0B,cAAA,QAAM4C,EAAE,kLAAiL7C,EAAAzB,EAAA0B,cAAA,QAAM4C,EAAE,4KAA2K7C,EAAAzB,EAAA0B,cAAA,QAAM4C,EAAE,mLAAkL7C,EAAAzB,EAAA0B,cAAA,QAAM4C,EAAE,4KAA2K7C,EAAAzB,EAAA0B,cAAA,QAAM4C,EAAE,gLAA+K7C,EAAAzB,EAAA0B,cAAA,QAAM4C,EAAE,2LAA0L7C,EAAAzB,EAAA0B,cAAA,QAAM4C,EAAE,kLAAiL7C,EAAAzB,EAAA0B,cAAA,QAAM4C,EAAE,8KAA6K7C,EAAAzB,EAAA0B,cAAA,QAAM4C,EAAE,uTAA+T7C,EAAAzB,EAAA0B,cAAA,UAAOD,EAAAzB,EAAA0B,cAAA,UAAOD,EAAAzB,EAAA0B,cAAA,UAAOD,EAAAzB,EAAA0B,cAAA,UAAOD,EAAAzB,EAAA0B,cAAA,UAAOD,EAAAzB,EAAA0B,cAAA,UAAOD,EAAAzB,EAAA0B,cAAA,UAAOD,EAAAzB,EAAA0B,cAAA,UAAOD,EAAAzB,EAAA0B,cAAA,UAAOD,EAAAzB,EAAA0B,cAAA,UAAOD,EAAAzB,EAAA0B,cAAA,UAAOD,EAAAzB,EAAA0B,cAAA,UAAOD,EAAAzB,EAAA0B,cAAA,UAAOD,EAAAzB,EAAA0B,cAAA,UAAOD,EAAAzB,EAAA0B,cAAA,WACnnSM,MAAOd,KAAKE,MAAMzD,aAAaC,KAAO,CAACqE,WAAY,OAAQsC,gBAAiB,SAAW,CAACtC,WAAY,OAAQsC,gBAAiB,UAAWjB,MAAO,SAC/IkB,MAA0C,OAAnCtD,KAAKE,MAAM7D,UAAUE,UAAqByD,KAAKE,MAAM7D,UAAUE,UAAUgH,QAAQ,GAAK,UAC7FpD,QAASH,KAAKE,MAAMzD,aAAaC,KAAO,GAAK,CAACqG,KAAM5C,EAAQqD,WAE9DjD,EAAAzB,EAAA0B,cAACsC,EAAA,EAAD,CACEC,KAAMxC,EAAAzB,EAAA0B,cAACiD,EAAA3E,EAAD,MACNgC,MAAOd,KAAKE,MAAMzD,aAAaC,KAAO,CAACqE,WAAY,GAAIsC,gBAAiB,SAAW,CAACtC,WAAY,GAAIsC,gBAAiB,UAAWjB,MAAO,SACvIkB,MAAsC,OAA/BtD,KAAKE,MAAM7D,UAAUC,MAAiB0D,KAAKE,MAAM7D,UAAUC,MAAMiH,QAAQ,GAAK,UACrFpD,QAASH,KAAKE,MAAMzD,aAAaC,KAAO,GAAK,CAACqG,KAAM5C,EAAQ4C,QAE9DxC,EAAAzB,EAAA0B,cAACsC,EAAA,EAAD,CACEC,KAAMxC,EAAAzB,EAAA0B,cAACkD,EAAA5E,EAAD,MACNgC,MAAO,CAACC,WAAY,GAAIsC,gBAAiB,SACzCC,MAAK,GAAArF,OAAK+B,KAAKF,UAAU,IAAI5E,KAAK,IAAIA,KAAKyI,OAAO3D,KAAKE,MAAMjF,OAAO2I,eAAe,QAAS,CAAChJ,SAAWoF,KAAKE,MAAMtF,YAAYiJ,YAA1H,OAAA5F,OAA2I+B,KAAKF,UAAU,IAAI5E,KAAK,IAAIA,KAAKyI,OAAO3D,KAAKE,MAAMjF,OAAO2I,eAAe,QAAS,CAAChJ,SAAWoF,KAAKE,MAAMtF,YAAYkJ,mBAI3QvD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWN,EAAQG,QACtBC,EAAAzB,EAAA0B,cAACuD,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OAC1B1D,EAAAzB,EAAA0B,cAAC0D,EAAA,EAAD,CACEC,UAAWnE,KAAKE,MAAMiE,UACtBvB,QAAQ,YACRwB,OAA4B,QAApBhE,EAAM7D,UAAsB,QAAU,OAC9C8H,KAAMrE,KAAKzC,MAAMmC,WACjB4E,QAAStE,KAAKL,mBACdQ,QAAS,CACPoE,MAAOpE,EAAQqE,cAGhBlE,IAGLC,EAAAzB,EAAA0B,cAACuD,EAAA,EAAD,CAAQU,QAAM,EAACR,eAAe,OAC5B1D,EAAAzB,EAAA0B,cAAC0D,EAAA,EAAD,CACE/D,QAAS,CACPoE,MAAOpE,EAAQqE,aAEjB5B,QAAQ,YACRyB,MAAI,GAEH/D,KAIPC,EAAAzB,EAAA0B,cAAA,QAAMC,UAAWN,EAAQuE,SACtBrE,WA1GoBsE,IAAMC,WAmIrC,IAMMC,EAAkBC,YAlBxB,SAAyBvH,GAAO,IAAAwH,EACqCxH,EAAMD,IAEvE,MAAO,CACH7C,YAJwBsK,EACpBtK,YAIJQ,KALwB8J,EACP9J,KAKjBL,SANwBmK,EACDnK,SAMvByB,UAPwB0I,EACS1I,UAOjCI,aARwBsI,EACoBtI,eAWzB,SAACuI,GAAD,MAAe,CACtCtD,WAAY,SAACnD,GACXyG,EAAS,CAACvH,KAAM,cAAec,YAIbuG,CAA6CG,YAtLtD,SAAA7E,GAAK,MAAK,CACvB4B,KAAM,CACJkD,QAAS,OACTtE,OAAQ,QAEVN,OAAO5C,OAAAE,EAAA,EAAAF,CAAA,GACJ0C,EAAM+E,YAAYC,GAAG,MAAQ,CAC5BvE,MATc,IAUdwE,WAAY,IAGhBhD,OAAO3E,OAAAE,EAAA,EAAAF,CAAA,CACLqD,WAdgB,KAefX,EAAM+E,YAAYC,GAAG,MAAQ,CAC5BvE,MAAK,eAAA5C,OAhBS,IAgBT,SAGTwE,WAAW/E,OAAAE,EAAA,EAAAF,CAAA,CACTsD,YAAa,IACZZ,EAAM+E,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,SAGbxE,QAASN,EAAMkF,OAAO5E,QACtB8D,YAAa,CACX3D,MA3BgB,KA6BlB6D,QAAS,CACPa,SAAU,EACVC,QAASpF,EAAMqF,QAAQ,GACvBC,WAAY,IAEd/D,SAAU,CACR0B,gBAAiB,qBACjBjB,MAAO,sBAEToB,QAAS,CACPmC,KAAM,QACNC,OAAQ,SAEV7C,KAAM,CACJX,MAAO,WA6I6E,CAAEyD,WAAW,GAAhCZ,CAAwCxF,4ECzLvGqG,oLAEO,IAAAlG,EAAAI,KAAAC,EAC6DD,KAAKE,MAAhEC,EADFF,EACEE,QAAS/E,EADX6E,EACW7E,kBAAmBE,EAD9B2E,EAC8B3E,eAAgBqB,EAD9CsD,EAC8CtD,YAEnD,OACI4D,EAAAzB,EAAA0B,cAACuF,EAAA,SAAD,KACIxF,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAM7B,WAAS,EAAC5H,UAAU,SAASkE,UAAWN,EAAQ6B,MAClDzB,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,MAApB,gBAGArC,EAAAzB,EAAA0B,cAACyF,EAAA,EAAD,KACI1F,EAAAzB,EAAA0B,cAAC0F,EAAA,EAAD,KACA3F,EAAAzB,EAAA0B,cAAC2F,EAAA,EAAD,KACI5F,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,kBACA7F,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,iBAGJ7F,EAAAzB,EAAA0B,cAAC6F,EAAA,EAAD,KACKjL,GAAqBA,EAAkBgD,IAAI,SAAAkI,GACxC,OACA/F,EAAAzB,EAAA0B,cAAC2F,EAAA,EAAD,CACII,OAAK,EAEL/E,IAAK8E,EAAEtI,UACPyD,QAAS,kBAAM7B,EAAKM,MAAMsG,kBAAkBF,EAAEtI,YAC9C8C,MAAO,CAAC2F,OAAQ,WAChB9E,SAAU2E,EAAEtI,YAAc1C,EAC1B6E,QAAS,CAACwB,SAAUxB,EAAQwB,WAE5BpB,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,CAAWtF,MAAOwF,EAAEtI,YAAc1C,EAAiB,CAAC8G,MAAO,SAAW,IACjEkE,EAAEtI,WAEPuC,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,CAAWtF,MAAOwF,EAAEtI,YAAc1C,EAAiB,CAAC8G,MAAO,SAAW,IACjEzF,EAAY2J,EAAEzH,yBAlC7B8F,IAAMC,WAyDhC,IAOM8B,GAAuB5B,YAjB7B,SAAyBvH,GAAO,IAAAwH,EAC+BxH,EAAMD,IAEjE,MAAO,CACHlC,kBAJwB2J,EACpB3J,kBAIJE,eALwByJ,EACDzJ,eAKvBqB,YANwBoI,EACepI,cASpB,SAACqI,GAAD,MAAe,CACtCwB,kBAAmB,SAACxI,GAChBgH,EAAS,CAACvH,KAAM,sBAAuBO,iBAKlB8G,CAA6CG,YAzE3D,SAAA7E,GAAK,MAAK,CACrB4B,KAAM,CACFpB,OAAQ,OAAQC,MAAO,OAAQ2E,QAAS,IAE5C7D,SAAU,CACN0B,gBAAiB,wBAoEiD4B,CAAmBa,KCnFhFa,GAAa,CACtBC,YAyOJ,SAAqBC,EAAMC,EAAMC,GAC7B,IAAMC,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBR,KAAQA,EACRS,SAAYR,EACZC,SAAYA,KAIpB,OAAOQ,MAAK,GAAAtJ,OAAIuJ,GAAJ,gBAA4BR,GACnCS,KAAKC,KApPVC,aAuPJ,SAAsBC,EAAMnK,EAAMoK,GAC9B,IAAIC,EAAO,IAAIC,SACfD,EAAKE,OAAO,OAAQJ,GACpB,IAAMZ,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMW,GAGV,OAAOP,MAAK,GAAAtJ,OAAIuJ,GAAJ,4BAAAvJ,OAAuCR,EAAvC,WAAAQ,OAAqD4J,GAASb,GACrES,KAAKC,KAhQVO,aAgRJ,SAAsBC,EAAYC,EAAYC,EAAaC,GACvD,IAAMrB,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBa,WAAcA,EACdC,WAAcA,EACdC,YAAeA,EACfC,WAAcA,KAItB,OAAOd,MAAK,GAAAtJ,OAAIuJ,GAAJ,gBAA4BR,GACnCS,KAAKC,KA5RVY,UAkQJ,SAAmBV,GACf,IAAIE,EAAO,IAAIC,SACfD,EAAKE,OAAO,OAAQJ,GACpB,IAAMZ,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMW,GAGV,OAAOP,MAAK,GAAAtJ,OAAIuJ,GAAJ,oBAAgCR,GACvCS,KAAKC,KA3QVa,eA8RJ,SAAwBC,GACpB,IAAMxB,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBoB,cAAiBD,KAIzB,OAAOjB,MAAK,GAAAtJ,OAAIuJ,GAAJ,2BAAuCR,GAC9CS,KAAKC,KAvSVgB,eA2SJ,WAOI,OAAOnB,MAAK,GAAAtJ,OAAIuJ,GAAJ,2BANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KAlTViB,WAqTJ,SAAoBC,GAChB,IAAM5B,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBuB,OAAUA,KAKlB,OAAOrB,MAAK,GAAAtJ,OAAIuJ,GAAJ,oBAAgCR,GACvCS,KAAKC,KA/TVmB,YAoUJ,SAAqBhK,EAAUJ,GAE3B,IAAMuI,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBvJ,IAAOe,EACPiK,IAAO,OACPC,OAAUtK,KAIlB,OAAO8I,MAAK,GAAAtJ,OAAIuJ,GAAJ,kBAA8BR,GACrCS,KAAKC,KAhVVsB,SAmVJ,SAAkBnK,EAAUqI,GAExB,IAAMF,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBvJ,IAAOe,EACPiK,IAAO,OACPG,KAAQ/B,KAIhB,OAAOK,MAAK,GAAAtJ,OAAIuJ,GAAJ,kBAA8BR,GACrCS,KAAKC,KA/VVwB,qBAoWJ,WAOI,OAAO3B,MAAK,GAAAtJ,OAAIuJ,GAAJ,yBANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KA3WVyB,sBA8WJ,SAA+BnL,GAO3B,OAAOuJ,MAAK,GAAAtJ,OAAIuJ,GAAJ,8BAAAvJ,OAAyCD,GAN9B,CACnBiJ,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KArXV0B,iBAwXJ,WACI,IAAMpC,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjByB,IAAO,OACPhL,IAAO,WAIf,OAAOyJ,MAAK,UAAAtJ,OAAWoL,GAAX,gBAAoCrC,GAC3CS,KAAKC,KAlYV4B,SAwYJ,SAAkBC,GACd,IAAMvC,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBkC,MAASA,KAMjB,OAFAC,QAAQC,IAAIF,GAELhC,MAAK,UAAAtJ,OAAWoL,GAAX,wBAA4CrC,GACnDS,KAAKC,KAnZVgC,UAsZJ,SAAmBC,EAAcC,EAAaC,EAAeC,EAAgBC,EAAeC,GACxF,IAAMhD,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBsC,aAAgBA,EAChBC,YAAeA,EACfC,cAAiBA,EACjBC,eAAkBA,EAClBC,cAAiBA,EACjBC,YAAeA,KAIvB,OAAOzC,MAAK,GAAAtJ,OAAIuJ,GAAJ,kBAA8BR,GACrCS,KAAKC,KApaVuC,UAubJ,SAAmB3L,EAAS4L,EAAYC,GACpC,IAAMnD,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjB/I,QAAWA,EACX8L,SAAYF,EACZC,QAAWA,KAInB,OAAO5C,MAAK,GAAAtJ,OAAIuJ,GAAJ,0BAAsCR,GAC7CS,KAAKC,KAlcV2C,YAqcJ,SAAqBpP,GACjB,IAAM+L,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBzM,SAAYK,KAIpB,OAAOsM,MAAK,GAAAtJ,OAAIuJ,GAAJ,iBAA6BR,GACpCS,KAAKC,KA9cV4C,aA8fJ,WAOI,OAAO/C,MAAK,GAAAtJ,OAAIuJ,GAAJ,0BANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KArgBV6C,aAueJ,WAOI,OAAOhD,MAAK,GAAAtJ,OAAIuJ,GAAJ,kBANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KA9eV8C,SAugBJ,WAOI,OAAOjD,MAAK,UAAAtJ,OAAWoL,GAAX,uBANW,CACnBpC,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KA9gBV+C,aAgfJ,WAOI,OAAOlD,MAAK,GAAAtJ,OAAIuJ,GAAJ,yBANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KAvfVgD,aAiaJ,SAAsBC,EAAOC,GACzB,IAAM5D,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBwD,uBAA0BF,EAC1BG,wBAA2BF,KAInC,OAAOrD,MAAK,GAAAtJ,OAAIuJ,GAAJ,yBAAqCR,GAC5CS,KAAKC,KA3aVqD,YA6cJ,WAOI,OAAOxD,MAAK,GAAAtJ,OAAIuJ,GAAJ,iBANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KApdVsD,QAudJ,WAOI,OAAOzD,MAAK,GAAAtJ,OAAIuJ,GAAJ,aANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KA9dVuD,SAyLJ,SAAkBC,GACd,IAAMlE,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBvJ,IAAKoN,KAIb,OAAO3D,MAAK,GAAAtJ,OAAIuJ,GAAJ,SAAqBR,GAC5BS,KAAKC,KAlMVyD,YA2KJ,SAAqBlM,GACjB,IAAM+H,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBpI,QAASA,KAIjB,OAAOsI,MAAK,GAAAtJ,OAAIuJ,GAAJ,yBAAqCR,GAC5CS,KAAKC,KApLV0D,eA6JJ,SAAwBC,GACpB,IAAMrE,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBgE,KAAMA,KAId,OAAO9D,MAAK,GAAAtJ,OAAIuJ,GAAJ,wBAAoCR,GAC3CS,KAAKC,KAtKV4D,kBA6IJ,SAA2BxN,EAAKyN,EAAWC,EAAWC,EAAUC,EAAWC,EAAWC,EAAcC,EAAOC,EAAkBC,EAAkBC,EAAuBC,EAAuBC,EAAeC,EAAYC,GACpN,IAAMpF,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBvJ,IAAKA,EACLgL,IAAK,OACLC,OAAM,GAAA9K,OAAKsN,EAAL,MAAAtN,OAAmBuN,EAAnB,MAAAvN,OAAiCwN,EAAjC,MAAAxN,OAA8CyN,EAA9C,MAAAzN,OAA4D0N,EAA5D,MAAA1N,OAA0E2N,EAA1E,MAAA3N,OAA2F4N,EAA3F,MAAA5N,OAAqG6N,EAArG,MAAA7N,OAA0H8N,EAA1H,MAAA9N,OAA+I+N,EAA/I,MAAA/N,OAAyKgO,EAAzK,MAAAhO,OAAmMiO,EAAnM,MAAAjO,OAAqNkO,EAArN,SAAAlO,OAAuOmO,MAIrP,OAAO7E,MAAK,GAAAtJ,OAAIuJ,GAAJ,qBAAiCR,GACxCS,KAAKC,KAxJV2E,eA4HJ,SAAwBvO,EAAKwO,EAAeC,EAAeC,EAAgBC,EAAgBC,GACvF,IAAM1F,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBvJ,IAAKA,EACLgL,IAAK,OACLC,OAAM,GAAA9K,OAAKqO,EAAL,MAAArO,OAAuBsO,EAAvB,MAAAtO,OAAyCuO,EAAzC,MAAAvO,OAA4DwO,EAA5D,MAAAxO,OAA+EyO,MAI7F,OAAOnF,MAAK,GAAAtJ,OAAIuJ,GAAJ,qBAAiCR,GACxCS,KAAKC,KAvIViF,iBA6GJ,SAA0B7O,GACtB,IAAMkJ,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBvJ,IAAKA,EACLgL,IAAK,UAIb,OAAOvB,MAAK,GAAAtJ,OAAIuJ,GAAJ,qBAAiCR,GACxCS,KAAKC,KAvHVkF,cA6FJ,SAAuB9O,GACnB,IAAMkJ,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBvJ,IAAKA,EACLgL,IAAK,UAIb,OAAOvB,MAAK,GAAAtJ,OAAIuJ,GAAJ,qBAAiCR,GACxCS,KAAKC,KAvGVmF,WAiFJ,WAOI,OAAOtF,MAAK,GAAAtJ,OAAIuJ,GAAJ,sBANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KAxFVoF,UAgEJ,SAAmBC,EAAMtP,EAAMoK,EAAOmF,GAClC,IAAMhG,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjB0F,KAAMA,EACNtP,KAAMA,EACNuP,eAAgBA,EAChBnF,MAAOA,KAIf,OAAON,MAAK,GAAAtJ,OAAIuJ,GAAJ,sBAAkCR,GACzCS,KAAKC,KA5EVuF,aAiDJ,SAAsBpF,EAAOpK,GACzB,IAAMuJ,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjB5J,KAAMA,EACNoK,MAAOA,KAIf,OAAON,MAAK,GAAAtJ,OAAIuJ,GAAJ,mBAA+BR,GACtCS,KAAKC,KA3DVwF,aAkCJ,SAAsBzP,EAAMoK,GACxB,IAAMb,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjB5J,KAAMA,EACNoK,MAAOA,KAIf,OAAON,MAAK,GAAAtJ,OAAIuJ,GAAJ,mBAA+BR,GACtCS,KAAKC,KA5CVyF,cAmBJ,SAAuB1P,EAAMoK,GACzB,IAAMb,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjB5J,KAAMA,EACNoK,MAAOA,KAIf,OAAON,MAAK,GAAAtJ,OAAIuJ,GAAJ,oBAAgCR,GACvCS,KAAKC,KA7BV0F,SAOJ,WAOI,OAAO7F,MAAK,GAAAtJ,OAAIuJ,GAAJ,aANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,MAbRF,GAAW,4BAGX6B,GAAS,UAAApL,OAAaoP,OAAOC,SAASC,SAA7B,SAsLf,SAAS7F,GAAe8F,GACpB,OAAOA,EAAS3P,OAAO4J,KAAK,SAAA5J,GACxB,IAAK2P,EAASC,GAAI,CACd,IAAMC,EAAS7P,GAAQA,EAAK8P,SAAYH,EAASI,WACjD,OAAOC,QAAQC,OAAOJ,GAE1B,OAAO7P,IC3Nf,IAMMkQ,GAAuB,kBACzBxN,EAAAzB,EAAA0B,cAAA,OACIM,MAAO,CAACF,OAAQ,OAAQC,MAAO,OAAQqE,QAAS,OAAQ8I,WAAY,SAAUC,eAAgB,SAAU5K,gBAAiB,UAAWjB,MAAO,UAD/I,wCAKE8L,8MAEFC,MAAQ,OAER5Q,MAAQ,KAIR6Q,kBAAoB,WAChBxO,EAAKyO,aAGTC,0BAA4B,SAACC,GACtBA,EAAUjT,iBAAmBsE,EAAKM,MAAM5E,gBACvCsE,EAAKM,MAAMiJ,sBAAsBoF,EAAUjT,mBAInD+S,QAAU,WAAc,IAAbG,IAAaC,UAAAxR,OAAA,QAAAyR,IAAAD,UAAA,KAAAA,UAAA,GACpB7O,EAAKM,MAAMiJ,sBAAsBvJ,EAAKM,MAAM5E,gBAEzCkT,IACC5O,EAAKuO,MAAQQ,WAAW/O,EAAKyO,QAAS,+EAIrC,IAAApO,EACmCD,KAAKE,MAArCC,EADHF,EACGE,QAAS5E,EADZ0E,EACY1E,mBAEjB,OAA+B,OAAvBA,EAA8BgF,EAAAzB,EAAA0B,cAACoO,GAAD,MAC9BrO,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAM7B,WAAS,EAAC5H,UAAU,SAASkE,UAAWN,EAAQ6B,MAClDzB,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAK9B,MAAO,CAACF,OAAQ,SAAzC,mBAGAL,EAAAzB,EAAA0B,cAAA,OACIC,UAA+C,OAApClF,EAAmBsT,eAA0BtT,EAAmBsT,aAAe,GAAK,UAC/FtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,GAAK,UACvCtT,EAAmBsT,aAAe,EAAI,UACtCtT,EAAmBsT,aAAe,EAAI,SACtCtT,EAAmBsT,aAAe,EAAI,SACtCtT,EAAmBsT,aAAe,EAAI,SACtCtT,EAAmBsT,aAAe,EAAI,SACtCtT,EAAmBsT,cAAgB,EAAI,SACvCtT,EAAmBsT,cAAgB,EAAI,UACvCtT,EAAmBsT,cAAgB,EAAI,UACvCtT,EAAmBsT,cAAgB,EAAI,UACvCtT,EAAmBsT,cAAgB,GAAK,UACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxCtT,EAAmBsT,cAAgB,GAAK,WACxC,YACA/N,MAAO,CAACD,MAAO,OAAQD,OAAQ,QAASkO,UAAW,IACV,OAApCvT,EAAmBsT,cAAyBtO,EAAAzB,EAAA0B,cAAA,OACzCM,MAAO,CAACF,OAAQ,OAAQC,MAAO,OAAQqE,QAAS,OAAQ8I,WAAY,SAAUC,eAAgB,SAAU5K,gBAAiB,UAAWjB,MAAO,UADlG,iCAKhB,OAApC7G,EAAmBsT,cAAyBtO,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAK9B,MAAO,CAACiO,UAAW,SAAUnO,OAAQ,GAAIkO,UAAW,IAA7E,WAChCvT,EAAmBsT,cAEhCtO,EAAAzB,EAAA0B,cAAA,OAAKM,MAAO,CAACF,OAAQ,qBAAsBC,MAAO,OAAQmO,SAAU,SACpEzO,EAAAzB,EAAA0B,cAACyF,EAAA,EAAD,CAAOT,QAAQ,QACXjF,EAAAzB,EAAA0B,cAAC6F,EAAA,EAAD,KACA9F,EAAAzB,EAAA0B,cAAC2F,EAAA,EAAD,CAAUrF,MAAO,CAAC2F,OAAQ,YACtBlG,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KACI7F,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,SAApB,eAIJrC,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KAAY7K,EAAmByC,YAGnCuC,EAAAzB,EAAA0B,cAAC2F,EAAA,EAAD,CAAUrF,MAAO,CAAC2F,OAAQ,YACtBlG,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KACI7F,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,SAApB,cAIJrC,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KAAY7K,EAAmBsD,WAGnC0B,EAAAzB,EAAA0B,cAAC2F,EAAA,EAAD,CAAUrF,MAAO,CAAC2F,OAAQ,YACtBlG,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KACI7F,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,SAApB,WAIJrC,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KAAY7K,EAAmB0T,QAGnC1O,EAAAzB,EAAA0B,cAAC2F,EAAA,EAAD,CAAUrF,MAAO,CAAC2F,OAAQ,YACtBlG,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KACI7F,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,SAApB,iBAIJrC,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KAAY7K,EAAmB2T,cAGnC3O,EAAAzB,EAAA0B,cAAC2F,EAAA,EAAD,CAAUrF,MAAO,CAAC2F,OAAQ,YACtBlG,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KACI7F,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,SAApB,kBAIJrC,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KAAY7K,EAAmBsT,eAGnCtO,EAAAzB,EAAA0B,cAAC2F,EAAA,EAAD,CAAUrF,MAAO,CAAC2F,OAAQ,YACtBlG,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KACI7F,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,SAApB,kBAIJrC,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KAAY,IAAIlL,KAAKK,EAAmB4T,WAAWC,mBAAmB,QAAS,CAACxU,SAAUoF,KAAKE,MAAMtF,WAArG,OAAqH,IAAIM,KAAKK,EAAmB4T,WAAWE,mBAAmB,QAAS,CAACzU,SAAWoF,KAAKE,MAAMtF,SAAU0U,QAAQ,iBA/JhO3K,IAAMC,WAoLnC,IAaM2K,GAA0BzK,YAvBhC,SAAyBvH,GAAO,IAAAwH,EAC6BxH,EAAMD,IAE/D,MAAO,CACH/B,mBAJwBwJ,EACpBxJ,mBAIJX,SALwBmK,EACAnK,SAKxBU,eANwByJ,EACUzJ,iBASf,SAAC0J,GAAD,MAAe,CACtCmE,sBAAwB,SAACnL,GACrBgH,EAAS,CAACvH,KAAM,qCAChBkJ,GAAWwC,sBAAsBnL,GAC5ByJ,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,mCAAoCI,UACrD,SAAA6P,GACC1I,EAAS,CAACvH,KAAM,0CAMAqH,CAA6CG,YA7M9D,SAAA7E,GAAK,MAAK,CACrB4B,KAAM,CACFpB,OAAQ,OAAQC,MAAO,OAAQ2E,QAAS,GAAIgK,SAAU,YA2MevK,CAAmBiJ,KCxL1FuB,GAAe,SAACvP,GAAD,OACjBK,EAAAzB,EAAA0B,cAAA,OACIM,MAAO,CAACF,OAAQ,OAAQC,MAAO,OAAQqE,QAAS,OAAQwK,cAAe,SAAU1B,WAAY,SAAUC,eAAgB,SAAU5K,gBAAiB,UAAWjB,MAAO,UAChK7B,EAAAzB,EAAA0B,cAAA,KAAGM,MAAO,CAAC6O,OAAQ,KAAnB,2BACApP,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQhN,QAAQ,YAAY9B,MAAO,CAAC6O,OAAQ,IAAKvN,MAAM,UAAUX,QAAS,kBAAMvB,EAAM2P,SAAtF,gBACAtP,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQhN,QAAQ,YAAY9B,MAAO,CAAC6O,OAAQ,IAAKvN,MAAM,UAAUX,QAAS,kBAAMvB,EAAMgJ,yBAAtF,yBAIN4G,GAAW,kBACbvP,EAAAzB,EAAA0B,cAAA,OACIM,MAAO,CAACF,OAAQ,OAAQC,MAAO,OAAQqE,QAAS,OAAQ8I,WAAY,SAAUC,eAAgB,SAAU5K,gBAAiB,UAAWjB,MAAO,UAD/I,gBAOE2N,8MAEFxS,MAAQ,KAGR2L,qBAAuB,WACnBtJ,EAAKM,MAAMgJ,0BAGf2G,KAAO,WACHjQ,EAAKM,MAAM2P,gFAGN,IAAA9P,EAAAC,KAAAC,EAC6DD,KAAKE,MAA/DC,EADHF,EACGE,QAAS/E,EADZ6E,EACY7E,kBACjB,OAFK6E,EAC+B5E,0BACCkF,EAAAzB,EAAA0B,cAACwP,GAAD,MAAqC,OAAtB5U,EAA6BmF,EAAAzB,EAAA0B,cAACyP,GAAD,CAAcJ,KAAM,kBAAM9P,EAAK8P,QAAQ3G,qBAAsB,kBAAMnJ,EAAKmJ,0BACrJ3I,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAM7B,WAAS,EAAC5H,UAAU,SAASkE,UAAWN,EAAQ6B,MAClDzB,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,EAACzP,UAAWN,EAAQgQ,aAC1B5P,EAAAzB,EAAA0B,cAAC4P,EAAA,EAAD,CAAOtP,MAAO,CAACF,OAAQ,SACnBL,EAAAzB,EAAA0B,cAACkG,GAAD,QAGRnG,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,EAACzP,UAAWN,EAAQkQ,gBAC1B9P,EAAAzB,EAAA0B,cAAC4P,EAAA,EAAD,CAAOtP,MAAO,CAACF,OAAQ,SACnBL,EAAAzB,EAAA0B,cAAC+O,GAAD,gBAxBA5K,IAAMC,WAyC9B,IAgBM0L,GAAqBxL,YAzB3B,SAAyBvH,GAAO,IAAAwH,EAC6BxH,EAAMD,IAE/D,MAAO,CACHlC,kBAJwB2J,EACpB3J,kBAIJC,0BALwB0J,EACD1J,4BAQJ,SAAC2J,GAAD,MAAe,CACtC6K,KAAO,WACH7K,EAAS,CAACvH,KAAM,UAEpByL,qBAAsB,WAClBlE,EAAS,CAACvH,KAAM,mCAChBkJ,GAAWuC,uBACNzB,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,iCAAkCI,UACnD,SAAA6P,GACC1I,EAAS,CAACvH,KAAM,iCAAkCiQ,eAMvC5I,CAA6CG,YAjGzD,SAAA7E,GAAK,MAAK,CACrB4B,KAAKtE,OAAAE,EAAA,EAAAF,CAAA,CACD8R,SAAU,QACTpP,EAAM+E,YAAYC,GAAG,MAAQ,CAC1BxE,OAAQ,SAGhBuP,YAAYzS,OAAAE,EAAA,EAAAF,CAAA,CACRmD,MAAO,OACP2E,QAAS,IACRpF,EAAM+E,YAAYC,GAAG,MAAQ,CAC1BmL,UAAW,OAAQ1P,MAAO,QAGlCwP,eAAe3S,OAAAE,EAAA,EAAAF,CAAA,CACXmD,MAAO,OACP2E,QAAS,IACRpF,EAAM+E,YAAYC,GAAG,MAAQ,CAC1BmL,UAAW,OAAQ1P,MAAO,UA+EkCoE,CAAmB8K,iEChFrFpU,8MACF4B,MAAQ,CACJgO,UAAW,GACXC,UAAW,GACXC,SAAU,GACV+E,kBAAmB,GACnBC,kBAAmB,GACnBC,SAAU,GACVC,SAAU,GACVC,mBAAoB,GACpB7E,iBAAkB,GAClB8E,2BAA4B,GAC5BC,2BAA4B,GAC5BC,kBAAmB,GACnBC,kBAAmB,GACnBC,eAAgB,GAChBC,eAAgB,GAChBC,cAAe,GACfC,uBAAwB,GACxBC,uBAAwB,GACxBC,cAAe,GACfC,cAAe,GACfC,wBAAyB,GACzBC,sBAAuB,GACvBC,gCAAiC,GACjCC,gCAAiC,GACjCC,uBAAwB,GACxBC,uBAAwB,GACxBC,aAAc,IACdC,QAAQ,KAGZ3D,kBAAoB,WACyB,IAAtCxO,EAAKM,MAAMxE,eAAeuB,QACzB2C,EAAKM,MAAMyM,iBAAiB/M,EAAKM,MAAMxE,eAAe,GAAGmD,aAIjEyP,0BAA4B,SAACC,GACzB,GAAGA,EAAU5S,gBAAkBiE,EAAKM,MAAMvE,cAAe,CACrD,IAAMqW,EAASzD,EAAU5S,cAAcoN,OAAOkJ,MAAM,KACpDrS,EAAKC,SAAS,CACV0L,UAAWyG,EAAO,GAClBxG,UAAWwG,EAAO,GAClBvG,SAAUuG,EAAO,GACjBxB,kBAAmBwB,EAAO,GAC1BvB,kBAAmBuB,EAAO,GAC1BtB,SAAUsB,EAAO,GACjBrB,SAAUqB,EAAO,GACjBpB,mBAAoBoB,EAAO,GAC3BjG,iBAAkBiG,EAAO,GACzBnB,2BAA4BmB,EAAO,GACnClB,2BAA4BkB,EAAO,IACnCjB,kBAAmBiB,EAAO,IAC1BhB,kBAAmBgB,EAAO,IAC1BF,aAAcE,EAAO,UAKjCE,aAAe,SAAAC,GAAS,IAAAC,EACpBxS,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,OADZ6U,EAAA,GAAA1U,OAAAE,EAAA,EAAAF,CAAA0U,EAEKD,EAAME,OAAOC,KAAOH,EAAME,OAAO5T,OAFtCf,OAAAE,EAAA,EAAAF,CAAA0U,EAAA,GAAAnU,OAGQkU,EAAME,OAAOC,KAHrB,SAGmC,IAHnC5U,OAAAE,EAAA,EAAAF,CAAA0U,EAAA,UAIY,GAJZA,QAQJG,WAAa,SAACC,EAAGC,GAGT,GAFc,IAAIC,OAAO,yBACDC,KAAKH,EAAEH,OAAO5T,OAO/B,CACH,IAEuCmU,EAFjCnU,EAAQkF,OAAO6O,EAAEH,OAAO5T,OAC9B,GAAa,OAAVgU,EAAEI,KAA0B,OAAVJ,EAAEK,KACnB,GAAGrU,EAAQgU,EAAEI,KAAOpU,EAAQgU,EAAEK,IAC1BlT,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,OADZqV,EAAA,GAAAlV,OAAAE,EAAA,EAAAF,CAAAkV,EAAA,GAAA3U,OAEQuU,EAAEH,OAAOC,KAFjB,iBAAArU,OAEuCwU,EAAEI,IAFzC,UAAA5U,OAEqDwU,EAAEK,MAFvDpV,OAAAE,EAAA,EAAAF,CAAAkV,EAAA,UAGY,GAHZA,UAMD,GAAa,OAAVH,EAAEI,IAAc,CACJ,IAAAE,EAAlB,GAAGtU,EAAQgU,EAAEI,IACTjT,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,OADZwV,EAAA,GAAArV,OAAAE,EAAA,EAAAF,CAAAqV,EAAA,GAAA9U,OAEQuU,EAAEH,OAAOC,KAFjB,iBAAArU,OAEuCwU,EAAEI,MAFzCnV,OAAAE,EAAA,EAAAF,CAAAqV,EAAA,UAGY,GAHZA,UAMD,GAAY,MAATN,EAAEK,IAAa,CACH,IAAAE,EAAlB,GAAGvU,EAAQgU,EAAEK,IACTlT,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,OADZyV,EAAA,GAAAtV,OAAAE,EAAA,EAAAF,CAAAsV,EAAA,GAAA/U,OAEQuU,EAAEH,OAAOC,KAFjB,iBAAArU,OAEuCwU,EAAEK,MAFzCpV,OAAAE,EAAA,EAAAF,CAAAsV,EAAA,UAGY,GAHZA,UA1BG,KAAAC,EACXrT,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,OADZ0V,EAAA,GAAAvV,OAAAE,EAAA,EAAAF,CAAAuV,EAAA,GAAAhV,OAEQuU,EAAEH,OAAOC,KAFjB,mCAAA5U,OAAAE,EAAA,EAAAF,CAAAuV,EAAA,UAGY,GAHZA,SAoCZ3H,kBAAoB,WAAM,IAAA4H,EACiOtT,EAAKrC,MAApPgO,EADc2H,EACd3H,UAAWC,EADG0H,EACH1H,UAAWC,EADRyH,EACQzH,SAAU+E,EADlB0C,EACkB1C,kBAAmBC,EADrCyC,EACqCzC,kBAAmBC,EADxDwC,EACwDxC,SAAUC,EADlEuC,EACkEvC,SAAUC,EAD5EsC,EAC4EtC,mBAAoB7E,EADhGmH,EACgGnH,iBAAkB8E,EADlHqC,EACkHrC,2BAA4BC,EAD9IoC,EAC8IpC,2BAA4BC,EAD1KmC,EAC0KnC,kBAAmBC,EAD7LkC,EAC6LlC,kBAAmBc,EADhNoB,EACgNpB,aACtOlS,EAAKM,MAAMoL,kBAAkB1L,EAAKM,MAAMxE,eAAgB6P,EAAWC,EAAWC,EAAU+E,EAAmBC,EAAmBC,EAAUC,EAAUC,EAAoB7E,EAAkB8E,EAA4BC,EAA4BC,EAAmBC,EAAmBc,4EAGjR,IAAA/R,EAAAC,KACEG,EAAWH,KAAKE,MAAhBC,QACP,OACII,EAAAzB,EAAA0B,cAACuF,EAAA,SAAD,KACIxF,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAM7B,WAAS,EAAC5H,UAAU,SAASkE,UAAWN,EAAQ6B,MAClDzB,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,EAACzP,UAAWN,EAAQgT,WAE1B,CACI,CACI3R,IAAK,YACL4R,UAAW,MACXP,KAAM,GACNC,IAAK,GACLrU,MAAO,GAEX,CACI+C,IAAK,YACL4R,UAAW,MACXP,KAAM,IACNC,IAAK,IACLrU,MAAO,GAEX,CACI+C,IAAK,WACL4R,UAAW,IACXP,IAAK,EACLC,IAAK,KACLrU,MAAO,GAEX,CACI+C,IAAK,wBACL4R,UAAW,MACXP,KAAM,GACNC,IAAK,EACLrU,MAAO,GAEX,CACI+C,IAAK,wBACL4R,UAAW,MACXP,IAAK,EACLC,IAAK,GACLrU,MAAO,GAEX,CACI+C,IAAK,YACL4R,UAAW,IACXP,IAAK,EACLC,IAAK,KACLrU,MAAO,GAEX,CACI+C,IAAK,YACL4R,UAAW,IACXP,IAAK,EACLC,IAAK,KACLrU,MAAO,GAEX,CACI+C,IAAK,sBACL4R,UAAW,MACXP,IAAK,GACLC,IAAK,GACLrU,MAAO,GAEX,CACI+C,IAAK,oBACL4R,UAAW,MACXP,KAAM,GACNC,IAAK,GACLrU,MAAO,GAEX,CACI+C,IAAK,kCACL4R,UAAW,IACXP,IAAK,EACLC,IAAK,KACLrU,MAAO,GAEX,CACI+C,IAAK,kCACL4R,UAAW,IACXP,IAAK,EACLC,IAAK,KACLrU,MAAO,IAEX,CACI+C,IAAK,sBACL4R,UAAW,UACXP,IAAK,EACLC,IAAK,KACLrU,MAAO,IAEX,CACI+C,IAAK,sBACL4R,UAAW,UACXP,IAAK,EACLC,IAAK,KACLrU,MAAO,KAEbL,IAAI,SAAAqU,GACF,OAAOlS,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACH7R,IAAKiR,EAAEjR,IACPf,UAAWN,EAAQmT,MACnBrQ,GAAIwP,EAAEjR,IACN8Q,KAAMG,EAAEjR,IAAI+R,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAC5CjQ,MAAOmP,EAAEjR,IACT/C,MAAOsB,EAAKxC,MAAMkV,EAAEjR,IAAI+R,QAAQ,KAAM,IAAIA,QAAQ,KAAM,KACxDC,SAAU,SAAChB,GAAD,OAAOzS,EAAKmS,aAAaM,IACnC7C,OAAO,SACP/M,QAAQ,WACR6Q,gBAAiB,CAAEC,QAAQ,GAC3B9R,SAAU7B,EAAKG,MAAMrE,sBAAwBkE,EAAKG,MAAMnE,qBACxD4X,WAAY,CACRC,aAAcrT,EAAAzB,EAAA0B,cAACqT,GAAA,EAAD,CAAgB1R,SAAS,OAAOsQ,EAAEW,YAEpD1F,MAA2E,KAApE3N,EAAKxC,MAAL,GAAAU,OAAcwU,EAAEjR,IAAI+R,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAApD,UACPO,WAAY/T,EAAKxC,MAAL,GAAAU,OAAcwU,EAAEjR,IAAI+R,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAApD,UACZQ,OAAQ,SAACvB,GAAD,OAAOzS,EAAKwS,WAAWC,EAAGC,QAI1ClS,EAAAzB,EAAA0B,cAACwT,GAAA,EAAD,CAAkBpS,SAAU5B,KAAKE,MAAMrE,sBAAwBmE,KAAKE,MAAMnE,qBAAsB0E,UAAWN,EAAQmT,MAC/GW,QACI1T,EAAAzB,EAAA0B,cAAC0T,GAAA,EAAD,CAAU9R,MAAM,UAAU+R,QAAqC,MAA5BnU,KAAKzC,MAAMuU,aAAsBrQ,QAAS,kBAAM1B,EAAKF,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GAAkBqC,EAAKxC,MAAvB,CAA8BuU,aAA0C,MAA5B/R,EAAKxC,MAAMuU,aAAuB,IAAM,UAE3KxO,MAAM,wBAEV/C,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQxN,MAAM,UAAUR,UAAQ,EAACgB,QAAQ,YAAYnC,UAAWN,EAAQmT,OAAxE,mCAEJ/S,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,EAACpP,MAAO,CAACiO,UAAW,WAC1BxO,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQxN,MAAM,UAAUR,SAAU5B,KAAKE,MAAMrE,sBAAwBmE,KAAKE,MAAMnE,uBAAyBiE,KAAKzC,MAAMwU,OAAQnP,QAAQ,YAAYnB,QAAS,kBAAM1B,EAAKuL,qBAAqBxK,MAAO,CAAE6O,OAAQ,KAA1M,kBApPIhL,IAAMC,WAqQlC,IAiBMwP,GAAyBtP,YA1B/B,SAAyBvH,GAAO,IAAAwH,EACqBxH,EAAMD,IAEvD,MAAO,CACH5B,eAJwBqJ,EACpBrJ,eAIJG,qBALwBkJ,EACJlJ,uBAQD,SAACmJ,GAAD,MAAe,CACtCsG,kBAAmB,SAAC5P,EAAgB6P,EAAWC,EAAWC,EAAUC,EAAWC,EAAWC,EAAcC,EAAOC,EAAkBC,EAAkBC,EAAuBC,EAAuBC,EAAeC,EAAY2F,GACxN9M,EAAS,CAACvH,KAAM,0BAChB/B,EAAe0C,IAAI,SAAAiW,GACfrP,EAAS,CAACvH,KAAM,8BAA+B4W,MAC/C1N,GAAW2E,kBAAkB+I,EAAExV,SAAU0M,EAAWC,EAAWC,EAAUC,EAAWC,EAAWC,EAAcC,EAAOC,EAAkBC,EAAkBC,EAAuBC,EAAuBC,EAAeC,EAAY2F,GAC5NrK,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,iCACjB,SAAAiQ,GACC1I,EAAS,CAACvH,KAAM,uCAQLqH,CAA6CG,YAzS7D,SAAA7E,GAAK,MAAK,CACrB4B,KAAM,GACNmR,UAAW,CACPjO,QAAS,OACTwK,cAAe,MACfF,SAAU,OACVhK,QAAS,GACTwJ,SAAU,QAEdsE,MAAM5V,OAAAE,EAAA,EAAAF,CAAA,CACFmD,MAAO,MACP8O,OAAQ,sBACPvP,EAAM+E,YAAYC,GAAG,MAAQ,CAC1BvE,MAAO,SACP8O,OAAQ,qBA2RwD1K,CAAmBtJ,KCtRzF2Y,8MACF/W,MAAQ,CACJ+O,cAAe,GACfC,cAAe,GACfE,eAAgB,GAChBC,mBAAoB,GACpBF,eAAgB,GAChBuF,QAAQ,KAGZ3D,kBAAoB,WACwB,IAArCxO,EAAKM,MAAMxE,eAAeuB,QACzB2C,EAAKM,MAAM0M,cAAchN,EAAKM,MAAMxE,eAAe,GAAGmD,aAI9DyP,0BAA4B,SAACC,GACzB,GAAGA,EAAU3S,aAAegE,EAAKM,MAAMtE,WAAY,CAC/C,IAAMoW,EAASzD,EAAU3S,WAAWmN,OAAOkJ,MAAM,KACjDrS,EAAKC,SAAS,CACVyM,cAAe0F,EAAO,GACtBzF,cAAeyF,EAAO,GACtBvF,eAAgBuF,EAAO,GACvBtF,mBAAoBsF,EAAO,GAC3BxF,eAAgBwF,EAAO,SAKnCE,aAAe,SAAAC,GAAS,IAAAC,EACpBxS,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,OADZ6U,EAAA,GAAA1U,OAAAE,EAAA,EAAAF,CAAA0U,EAEKD,EAAME,OAAOC,KAAOH,EAAME,OAAO5T,OAFtCf,OAAAE,EAAA,EAAAF,CAAA0U,EAAA,GAAAnU,OAGQkU,EAAME,OAAOC,KAHrB,SAGmC,IAHnC5U,OAAAE,EAAA,EAAAF,CAAA0U,EAAA,UAIY,GAJZA,QAQJG,WAAa,SAACC,EAAGC,GACa,IAAAQ,EAA1B,GAAsB,KAAnBT,EAAEH,OAAO5T,MACRmB,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,OADZ0V,EAAA,GAAAvV,OAAAE,EAAA,EAAAF,CAAAuV,EAEKT,EAAEH,OAAOC,KAAO1S,EAAKM,MAAMvE,cAAcoN,OAAOkJ,MAAM,KAAKQ,EAAEhU,QAFlEf,OAAAE,EAAA,EAAAF,CAAAuV,EAAA,GAAAhV,OAGQuU,EAAEH,OAAOC,KAHjB,SAG+B,IAH/B5U,OAAAE,EAAA,EAAAF,CAAAuV,EAAA,UAIY,GAJZA,UASA,GAFc,IAAIP,OAAO,yBACDC,KAAKH,EAAEH,OAAO5T,OAO/B,CACH,IAEuCsU,EAFjCtU,EAAQkF,OAAO6O,EAAEH,OAAO5T,OAC9B,GAAa,OAAVgU,EAAEI,KAA0B,OAAVJ,EAAEK,KACnB,GAAGrU,EAAQgU,EAAEI,KAAOpU,EAAQgU,EAAEK,IAC1BlT,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,OADZwV,EAAA,GAAArV,OAAAE,EAAA,EAAAF,CAAAqV,EAAA,GAAA9U,OAEQuU,EAAEH,OAAOC,KAFjB,iBAAArU,OAEuCwU,EAAEI,IAFzC,UAAA5U,OAEqDwU,EAAEK,MAFvDpV,OAAAE,EAAA,EAAAF,CAAAqV,EAAA,UAGY,GAHZA,UAMD,GAAa,OAAVN,EAAEI,IAAc,CACJ,IAAAG,EAAlB,GAAGvU,EAAQgU,EAAEI,IACTjT,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,OADZyV,EAAA,GAAAtV,OAAAE,EAAA,EAAAF,CAAAsV,EAAA,GAAA/U,OAEQuU,EAAEH,OAAOC,KAFjB,iBAAArU,OAEuCwU,EAAEI,MAFzCnV,OAAAE,EAAA,EAAAF,CAAAsV,EAAA,UAGY,GAHZA,UAMD,GAAY,MAATP,EAAEK,IAAa,CACH,IAAAyB,EAAlB,GAAG9V,EAAQgU,EAAEK,IACTlT,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,OADZgX,EAAA,GAAA7W,OAAAE,EAAA,EAAAF,CAAA6W,EAAA,GAAAtW,OAEQuU,EAAEH,OAAOC,KAFjB,iBAAArU,OAEuCwU,EAAEK,MAFzCpV,OAAAE,EAAA,EAAAF,CAAA6W,EAAA,UAGY,GAHZA,UA1BG,KAAA3B,EACXhT,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,OADZqV,EAAA,GAAAlV,OAAAE,EAAA,EAAAF,CAAAkV,EAAA,GAAA3U,OAEQuU,EAAEH,OAAOC,KAFjB,mCAAA5U,OAAAE,EAAA,EAAAF,CAAAkV,EAAA,UAGY,GAHZA,SAqCZvG,eAAiB,WAAM,IAAA6G,EAC0EtT,EAAKrC,MAA1F+O,EADW4G,EACX5G,cAAeC,EADJ2G,EACI3G,cAAeC,EADnB0G,EACmB1G,eAAgBC,EADnCyG,EACmCzG,eAAgBC,EADnDwG,EACmDxG,mBACtE9M,EAAKM,MAAMmM,eAAezM,EAAKM,MAAMxE,eAAgB4Q,EAAeC,EAAeC,EAAgBC,EAAgBC,4EAG9G,IAAA3M,EAAAC,KACEG,EAAWH,KAAKE,MAAhBC,QACP,OACII,EAAAzB,EAAA0B,cAACuF,EAAA,SAAD,KACIxF,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAM7B,WAAS,EAAC5H,UAAU,SAASkE,UAAWN,EAAQ6B,MAClDzB,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,EAACzP,UAAWN,EAAQgT,WAE1B,CAAC,kBAAmB,kBAAmB,mBAAoB,uBAAwB,oBAAoB/U,IAAI,SAAAqU,GACvG,OAAOlS,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACH7R,IAAKiR,EACLhS,UAAWN,EAAQmT,MACnBrQ,GAAIwP,EACJH,KAAMG,EAAEc,QAAQ,KAAM,IACtBjQ,MAAOmP,EACPhU,MAAOsB,EAAKxC,MAAMkV,EAAEc,QAAQ,KAAM,KAClCC,SAAU,SAAChB,GAAD,OAAOzS,EAAKmS,aAAaM,IACnC7C,OAAO,SACP/M,QAAQ,WACR6Q,gBAAiB,CAAEC,QAAQ,GAC3B9R,SAAU7B,EAAKG,MAAMpE,mBAAqBiE,EAAKG,MAAMlE,kBACrD2X,WAAY,CACRC,aAAcrT,EAAAzB,EAAA0B,cAACqT,GAAA,EAAD,CAAgB1R,SAAS,OAAzB,aAM9B5B,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,EAACpP,MAAO,CAACF,OAAQ,GAAImO,UAAW,WACtCxO,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQxN,MAAM,UAAUR,SAAU5B,KAAKE,MAAMpE,mBAAqBkE,KAAKE,MAAMlE,kBAAmB4G,QAAQ,YAAYnB,QAAS,kBAAM1B,EAAKsM,kBAAkBvL,MAAO,CAAE6O,OAAQ,KAA3K,kBAxHChL,IAAMC,WA2I/B,IAgBM4P,GAAsB1P,YA3B5B,SAAyBvH,GAAO,IAAAwH,EACiDxH,EAAMD,IAEnF,MAAO,CACH5B,eAJwBqJ,EACpBrJ,eAIJE,WALwBmJ,EACJnJ,WAKpBE,kBANwBiJ,EACQjJ,kBAMhCE,kBAPwB+I,EAC2B/I,oBAUhC,SAACgJ,GAAD,MAAe,CACtCqH,eAAgB,SAAC3Q,EAAgB4Q,EAAeC,EAAeC,EAAgBC,EAAgBC,GAC3F1H,EAAS,CAACvH,KAAM,0BAChB/B,EAAe0C,IAAI,SAAAiW,GACfrP,EAAS,CAACvH,KAAM,2BAA4B4W,MAC5C1N,GAAW0F,eAAegI,EAAExV,SAAUyN,EAAeC,EAAeC,EAAgBC,EAAgBC,GAC/FjF,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,8BACjB,SAAAiQ,GACC1I,EAAS,CAACvH,KAAM,oCAORqH,CAA6CG,YA9K1D,SAAA7E,GAAK,MAAK,CACrB4B,KAAM,GACNmR,UAAW,CACPjO,QAAS,OACTwK,cAAe,MACfF,SAAU,OACVhK,QAAS,GACTwJ,SAAU,QAEdsE,MAAM5V,OAAAE,EAAA,EAAAF,CAAA,CACFmD,MAAO,MACP8O,OAAQ,sBACPvP,EAAM+E,YAAYC,GAAG,MAAQ,CAC1BvE,MAAO,SACP8O,OAAQ,qBAgKqD1K,CAAmBqP,yBChItFG,8MACFvC,aAAe,SAACC,EAAO1T,GACnBmB,EAAKM,MAAMwU,UAAU,CAAEjW,mFAGjB+K,QAAQC,IAAIzJ,KAAKE,OAAlB,IAAAD,EAC8DD,KAAKE,MAAhEC,EADHF,EACGE,QAASxF,EADZsF,EACYtF,eAAgBe,EAD5BuE,EAC4BvE,eAAgBS,EAD5C8D,EAC4C9D,cAEjD,OACAoE,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWN,EAAQ6B,MACpBzB,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWN,EAAQwU,QACxBpU,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,GACN3P,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,MAChBrC,EAAAzB,EAAA0B,cAAC+B,EAAA,EAAD,CAAYC,aAAW,OAAOf,QAASzB,KAAKE,MAAM0U,MAC9CrU,EAAAzB,EAAA0B,cAACqU,GAAA/V,EAAD,CAAUgW,SAAS,WAF3B,qBAQJvU,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWN,EAAQgH,MACxB5G,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWN,EAAQzE,gBAExB6E,EAAAzB,EAAA0B,cAAC0B,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,aAC5B7B,EAAAzB,EAAA0B,cAAC8B,EAAA,EAAD,CAASxB,MAAO,CAACyP,UAAW,IAAKwE,gBAAc,GAC/CxU,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,YAAY9B,MAAO,CAAC6O,OAAQ,SAAhD,uBAMAjU,EAAe0C,IAAI,SAAAiW,GAAC,OACpB9T,EAAAzB,EAAA0B,cAACsC,EAAA,EAAD,CAAMtB,IAAK6S,EAAExV,SAAUyE,MAAK,SAAArF,OAAWoW,EAAEW,WAAavU,UAAWN,EAAQ8U,KAAMnU,MAAO3E,EAAc4C,OAAO,SAAAH,GAAC,OAAIA,EAAEsW,QAAQpX,MAAQuW,EAAExV,WAAU,GAAK1C,EAAc4C,OAAO,SAAAH,GAAC,OAAIA,EAAEsW,QAAQpX,MAAQuW,EAAExV,WAAU,GAAGsW,QAAU,CAAC9R,gBAAiB,SAAW,CAACA,gBAAiB,OAAS,QAGpR9C,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWN,EAAQiV,MACxB7U,EAAAzB,EAAA0B,cAAC0B,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,aAC5B7B,EAAAzB,EAAA0B,cAAC6U,GAAA,EAAD,CAAM5W,MAAO9D,EAAgB6Y,SAAUxT,KAAKkS,aAAc/R,QAAS,CAACmV,UAAWnV,EAAQoV,gBACnFhV,EAAAzB,EAAA0B,cAACgV,GAAA,EAAD,CAAKlS,MAAM,iBAAiBnD,QAAS,CAACwB,SAAUxB,EAAQwB,YACxDpB,EAAAzB,EAAA0B,cAACgV,GAAA,EAAD,CAAKlS,MAAM,cAAcnD,QAAS,CAACwB,SAAUxB,EAAQwB,cAGzC,IAAnBhH,GAAwB4F,EAAAzB,EAAA0B,cAAC4T,GAAD,MACL,IAAnBzZ,GAAwB4F,EAAAzB,EAAA0B,cAACgU,GAAD,gBA3CL7P,IAAMC,WA6DtC,IAOM6Q,GAA6B3Q,YAjBnC,SAAyBvH,GAAO,IAAAwH,EAC8BxH,EAAMD,IAEhE,MAAO,CACH3C,eAJwBoK,EACpBpK,eAIJe,eALwBqJ,EACJrJ,eAKpBS,cANwB4I,EACY5I,gBASjB,SAAC6I,GAAD,MAAe,CACtC0P,UAAW,SAACjW,GACRuG,EAAS,CAACvH,KAAM,kBAAmBgB,aAKRqG,CAA6CG,YA5GjE,SAAA7E,GAAK,MAAK,CACrB4B,KAAM,CACJqB,gBAAiBjD,EAAMsV,QAAQC,WAAWpR,MAC1CoL,OAAQ,GACRzK,QAAS,OACTwK,cAAe,UAEjBvI,KAAM,CACFjC,QAAS,OACTwK,cAAe,OAEnB6F,cAAe,CACblS,gBAAiB,WAEnB1B,SAAU,CACR0B,gBAAiB,UACjBjB,MAAO,UACPwT,WAAY,IACZd,SAAU,IAEZpZ,eAAgB,CACZmF,MAAO,MACP8O,OAAQ,IAEZyF,KAAM,CACFvU,MAAO,MACP2E,QAAS,GACTqQ,UAAW,oCAEfZ,KAAM,CACFtF,OAAQ,IAEZmG,MAAO,CACHzS,gBAAiB,SAErB0S,IAAK,CACD1S,gBAAiB,SAwEuD4B,CAAmBwP,KC9F7FA,8MACFlX,MAAQ,CACJgO,UAAW,GACXC,UAAW,GACXC,SAAU,GACV+E,kBAAmB,GACnBC,kBAAmB,GACnBC,SAAU,GACVC,SAAU,GACVC,mBAAoB,GACpB7E,iBAAkB,GAClB8E,2BAA4B,GAC5BC,2BAA4B,GAC5BC,kBAAmB,GACnBC,kBAAmB,GACnBC,eAAgB,GAChBC,eAAgB,GAChBC,cAAe,GACfC,uBAAwB,GACxBC,uBAAwB,GACxBC,cAAe,GACfC,cAAe,GACfC,wBAAyB,GACzBC,sBAAuB,GACvBC,gCAAiC,GACjCC,gCAAiC,GACjCC,uBAAwB,GACxBC,uBAAwB,GACxBvF,cAAe,GACfC,cAAe,GACfE,eAAgB,GAChBC,mBAAoB,GACpBF,eAAgB,GAChBsF,aAAc,IACdC,QAAQ,KAGZ3D,kBAAoB,WACwB,IAArCxO,EAAKM,MAAMxE,eAAeuB,SACzB2C,EAAKM,MAAMyM,iBAAiB/M,EAAKM,MAAMxE,eAAe,GAAGmD,UACzDe,EAAKM,MAAM0M,cAAchN,EAAKM,MAAMxE,eAAe,GAAGmD,cAI9DyP,0BAA4B,SAACC,GACzB,GAAGA,EAAU5S,gBAAkBiE,EAAKM,MAAMvE,eACnC4S,EAAU5S,cAAciE,EAAKM,MAAMxE,eAAe,GAAGmD,UAAW,CAC/D,IAAMmT,EAASzD,EAAU5S,cAAciE,EAAKM,MAAMxE,eAAe,GAAGmD,UAAUkK,OAAOkJ,MAAM,KAC3FrS,EAAKC,SAAS,CACV0L,UAAWyG,EAAO,GAClBxG,UAAWwG,EAAO,GAClBvG,SAAUuG,EAAO,GACjBxB,kBAAmBwB,EAAO,GAC1BvB,kBAAmBuB,EAAO,GAC1BtB,SAAUsB,EAAO,GACjBrB,SAAUqB,EAAO,GACjBpB,mBAAoBoB,EAAO,GAC3BjG,iBAAkBiG,EAAO,GACzBnB,2BAA4BmB,EAAO,GACnClB,2BAA4BkB,EAAO,IACnCjB,kBAAmBiB,EAAO,IAC1BhB,kBAAmBgB,EAAO,IAC1BF,aAAcE,EAAO,MAIjC,GAAGzD,EAAU3S,aAAegE,EAAKM,MAAMtE,YAChC2S,EAAU3S,WAAWgE,EAAKM,MAAMxE,eAAe,GAAGmD,UAAW,CAC5D,IAAMmT,EAASzD,EAAU3S,WAAWgE,EAAKM,MAAMxE,eAAe,GAAGmD,UAAUkK,OAAOkJ,MAAM,KACxFrS,EAAKC,SAAS,CACVyM,cAAe0F,EAAO,GACtBzF,cAAeyF,EAAO,GACtBvF,eAAgBuF,EAAO,GACvBtF,mBAAoBsF,EAAO,GAC3BxF,eAAgBwF,EAAO,SAMvCE,aAAe,SAAAC,GAAS,IAAAC,EACpBxS,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,OADZ6U,EAAA,GAAA1U,OAAAE,EAAA,EAAAF,CAAA0U,EAEKD,EAAME,OAAOC,KAAOH,EAAME,OAAO5T,OAFtCf,OAAAE,EAAA,EAAAF,CAAA0U,EAAA,GAAAnU,OAGQkU,EAAME,OAAOC,KAHrB,SAGmC,IAHnC5U,OAAAE,EAAA,EAAAF,CAAA0U,EAAA,UAIY,GAJZA,QAQJ4D,gBAAkB,SAAC7D,GAAU,IAAAc,EACzBrT,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,OADZ0V,EAAA,GAAAvV,OAAAE,EAAA,EAAAF,CAAAuV,EAEKd,EAAME,OAAOC,KAAOH,EAAME,OAAO5T,OAFtCf,OAAAE,EAAA,EAAAF,CAAAuV,EAAA,GAAAhV,OAGQkU,EAAME,OAAOC,KAHrB,SAGmC,IAHnC5U,OAAAE,EAAA,EAAAF,CAAAuV,EAAA,UAIY,GAJZA,QAQJV,WAAa,SAACC,EAAGC,GACa,IAAAG,EAA1B,GAAsB,KAAnBJ,EAAEH,OAAO5T,MACRmB,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,OADZqV,EAAA,GAAAlV,OAAAE,EAAA,EAAAF,CAAAkV,EAEKJ,EAAEH,OAAOC,KAAO1S,EAAKM,MAAMvE,cAAcoN,OAAOkJ,MAAM,KAAKQ,EAAEhU,QAFlEf,OAAAE,EAAA,EAAAF,CAAAkV,EAAA,GAAA3U,OAGQuU,EAAEH,OAAOC,KAHjB,SAG+B,IAH/B5U,OAAAE,EAAA,EAAAF,CAAAkV,EAAA,UAIY,GAJZA,UASA,GAFc,IAAIF,OAAO,yBACDC,KAAKH,EAAEH,OAAO5T,OAO/B,CACH,IAEuCuU,EAFjCvU,EAAQkF,OAAO6O,EAAEH,OAAO5T,OAC9B,GAAa,OAAVgU,EAAEI,KAA0B,OAAVJ,EAAEK,KACnB,GAAGrU,EAAQgU,EAAEI,KAAOpU,EAAQgU,EAAEK,IAC1BlT,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,OADZyV,EAAA,GAAAtV,OAAAE,EAAA,EAAAF,CAAAsV,EAAA,GAAA/U,OAEQuU,EAAEH,OAAOC,KAFjB,iBAAArU,OAEuCwU,EAAEI,IAFzC,UAAA5U,OAEqDwU,EAAEK,MAFvDpV,OAAAE,EAAA,EAAAF,CAAAsV,EAAA,UAGY,GAHZA,UAMD,GAAa,OAAVP,EAAEI,IAAc,CACJ,IAAA0B,EAAlB,GAAG9V,EAAQgU,EAAEI,IACTjT,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,OADZgX,EAAA,GAAA7W,OAAAE,EAAA,EAAAF,CAAA6W,EAAA,GAAAtW,OAEQuU,EAAEH,OAAOC,KAFjB,iBAAArU,OAEuCwU,EAAEI,MAFzCnV,OAAAE,EAAA,EAAAF,CAAA6W,EAAA,UAGY,GAHZA,UAMD,GAAY,MAAT9B,EAAEK,IAAa,CACH,IAAAmD,EAAlB,GAAGxX,EAAQgU,EAAEK,IACTlT,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,OADZ0Y,EAAA,GAAAvY,OAAAE,EAAA,EAAAF,CAAAuY,EAAA,GAAAhY,OAEQuU,EAAEH,OAAOC,KAFjB,iBAAArU,OAEuCwU,EAAEK,MAFzCpV,OAAAE,EAAA,EAAAF,CAAAuY,EAAA,UAGY,GAHZA,UA1BG,KAAAlD,EACXnT,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,OADZwV,EAAA,GAAArV,OAAAE,EAAA,EAAAF,CAAAqV,EAAA,GAAA9U,OAEQuU,EAAEH,OAAOC,KAFjB,mCAAA5U,OAAAE,EAAA,EAAAF,CAAAqV,EAAA,UAGY,GAHZA,SAqCZzH,kBAAoB,WAAM,IAAA4H,EACiOtT,EAAKrC,MAApPgO,EADc2H,EACd3H,UAAWC,EADG0H,EACH1H,UAAWC,EADRyH,EACQzH,SAAU+E,EADlB0C,EACkB1C,kBAAmBC,EADrCyC,EACqCzC,kBAAmBC,EADxDwC,EACwDxC,SAAUC,EADlEuC,EACkEvC,SAAUC,EAD5EsC,EAC4EtC,mBAAoB7E,EADhGmH,EACgGnH,iBAAkB8E,EADlHqC,EACkHrC,2BAA4BC,EAD9IoC,EAC8IpC,2BAA4BC,EAD1KmC,EAC0KnC,kBAAmBC,EAD7LkC,EAC6LlC,kBAAmBc,EADhNoB,EACgNpB,aACtOlS,EAAKM,MAAMoL,kBAAkB1L,EAAKM,MAAMxE,eAAgB6P,EAAWC,EAAWC,EAAU+E,EAAmBC,EAAmBC,EAAUC,EAAUC,EAAoB7E,EAAkB8E,EAA4BC,EAA4BC,EAAmBC,EAAmBc,MAG1RzF,eAAiB,WAAM,IAAA6J,EAC0EtW,EAAKrC,MAA1F+O,EADW4J,EACX5J,cAAeC,EADJ2J,EACI3J,cAAeC,EADnB0J,EACmB1J,eAAgBC,EADnCyJ,EACmCzJ,eAAgBC,EADnDwJ,EACmDxJ,mBACtE9M,EAAKM,MAAMmM,eAAezM,EAAKM,MAAMxE,eAAgB4Q,EAAeC,EAAeC,EAAgBC,EAAgBC,4EAG9G,IAAA3M,EAAAC,KACEG,EAAWH,KAAKE,MAAhBC,QACP,OACII,EAAAzB,EAAA0B,cAACuF,EAAA,SAAD,KACIxF,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAM7B,WAAS,EAAC5H,UAAU,SAASkE,UAAWN,EAAQ6B,MAClDzB,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,EAACpP,MAAO,CAACF,OAAQ,GAAIuV,aAAc,0BACzC5V,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,MAChBrC,EAAAzB,EAAA0B,cAAC+B,EAAA,EAAD,CAAYC,aAAW,OAAOf,QAASzB,KAAKE,MAAM0U,MAC9CrU,EAAAzB,EAAA0B,cAACqU,GAAA/V,EAAD,CAAUgW,SAAS,WAF3B,oBAOJvU,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAK9B,MAAO,CAACsV,YAAa,oBAA9C,gBAGA7V,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,EAACzP,UAAWN,EAAQgT,WAG1B,CACI,CACI3R,IAAK,YACL4R,UAAW,MACXP,KAAM,GACNC,IAAK,GACLrU,MAAO,GAEX,CACI+C,IAAK,YACL4R,UAAW,MACXP,KAAM,IACNC,IAAK,IACLrU,MAAO,GAEX,CACI+C,IAAK,WACL4R,UAAW,IACXP,IAAK,EACLC,IAAK,KACLrU,MAAO,GAEX,CACI+C,IAAK,wBACL4R,UAAW,MACXP,KAAM,GACNC,IAAK,EACLrU,MAAO,GAEX,CACI+C,IAAK,wBACL4R,UAAW,MACXP,IAAK,EACLC,IAAK,GACLrU,MAAO,GAEX,CACI+C,IAAK,YACL4R,UAAW,IACXP,IAAK,EACLC,IAAK,KACLrU,MAAO,GAEX,CACI+C,IAAK,YACL4R,UAAW,IACXP,IAAK,EACLC,IAAK,KACLrU,MAAO,GAEX,CACI+C,IAAK,sBACL4R,UAAW,MACXP,IAAK,GACLC,IAAK,GACLrU,MAAO,GAEX,CACI+C,IAAK,oBACL4R,UAAW,MACXP,KAAM,GACNC,IAAK,GACLrU,MAAO,GAEX,CACI+C,IAAK,kCACL4R,UAAW,IACXP,IAAK,EACLC,IAAK,KACLrU,MAAO,GAEX,CACI+C,IAAK,kCACL4R,UAAW,IACXP,IAAK,EACLC,IAAK,KACLrU,MAAO,IAEX,CACI+C,IAAK,sBACL4R,UAAW,UACXP,IAAK,EACLC,IAAK,KACLrU,MAAO,IAEX,CACI+C,IAAK,sBACL4R,UAAW,UACXP,IAAK,EACLC,IAAK,KACLrU,MAAO,KAEbL,IAAI,SAAAqU,GACF,OAAOlS,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACH7R,IAAKiR,EAAEjR,IACPf,UAAWN,EAAQmT,MACnBrQ,GAAIwP,EAAEjR,IACN8Q,KAAMG,EAAEjR,IAAI+R,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAC5CjQ,MAAOmP,EAAEjR,IACT/C,MAAOsB,EAAKxC,MAAMkV,EAAEjR,IAAI+R,QAAQ,KAAM,IAAIA,QAAQ,KAAM,KACxDC,SAAU,SAAChB,GAAD,OAAOzS,EAAKmS,aAAaM,IACnC7C,OAAO,SACP/M,QAAQ,WACR6Q,gBAAiB,CAAEC,QAAQ,GAC3B9R,SAAU7B,EAAKG,MAAMrE,sBAAwBkE,EAAKG,MAAMnE,qBACxD4X,WAAY,CACRC,aAAcrT,EAAAzB,EAAA0B,cAACqT,GAAA,EAAD,CAAgB1R,SAAS,OAAOsQ,EAAEW,YAEpD1F,MAA2E,KAApE3N,EAAKxC,MAAL,GAAAU,OAAcwU,EAAEjR,IAAI+R,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAApD,UACPO,WAAY/T,EAAKxC,MAAL,GAAAU,OAAcwU,EAAEjR,IAAI+R,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAApD,UACZQ,OAAQ,SAACvB,GAAD,OAAOzS,EAAKwS,WAAWC,EAAGC,QAI1ClS,EAAAzB,EAAA0B,cAACwT,GAAA,EAAD,CAAkBpS,SAAU5B,KAAKE,MAAMrE,sBAAwBmE,KAAKE,MAAMnE,qBAAsB+E,MAAO,CAAE6O,OAAQ,GAAI5O,WAAY,QAC7HkT,QACI1T,EAAAzB,EAAA0B,cAAC0T,GAAA,EAAD,CAAU9R,MAAM,UAAU+R,QAAqC,MAA5BnU,KAAKzC,MAAMuU,aAAsBrQ,QAAS,kBAAM1B,EAAKF,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GAAkBqC,EAAKxC,MAAvB,CAA8BuU,aAA0C,MAA5B/R,EAAKxC,MAAMuU,aAAuB,IAAM,UAE3KxO,MAAM,wBAEV/C,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQxN,MAAM,UAAUR,UAAQ,EAACgB,QAAQ,YAAY9B,MAAO,CAAE6O,OAAQ,KAAtE,mCAEJpP,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,EAACpP,MAAO,CAACF,OAAQ,GAAImO,UAAW,SAAUoH,aAAc,0BAC9D5V,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQxN,MAAM,UAAUR,SAAU5B,KAAKE,MAAMrE,sBAAwBmE,KAAKE,MAAMnE,uBAAyBiE,KAAKzC,MAAMwU,OAAQnP,QAAQ,YAAYnB,QAAS,kBAAM1B,EAAKuL,qBAAqBxK,MAAO,CAAE6O,OAAQ,KAA1M,SAEJpP,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAK9B,MAAO,CAACsV,YAAa,oBAA9C,uBAGA7V,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,EAACzP,UAAWN,EAAQgT,WAG1B,CAAC,kBAAmB,kBAAmB,mBAAoB,uBAAwB,oBAAoB/U,IAAI,SAAAqU,GACvG,OAAOlS,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACH7R,IAAKiR,EACLhS,UAAWN,EAAQmT,MACnBrQ,GAAIwP,EACJH,KAAMG,EAAEc,QAAQ,KAAM,IACtBjQ,MAAOmP,EACPhU,MAAOsB,EAAKxC,MAAMkV,EAAEc,QAAQ,KAAM,KAClCC,SAAU,SAAChB,GAAD,OAAOzS,EAAKmS,aAAaM,IACnC7C,OAAO,SACP/M,QAAQ,WACR6Q,gBAAiB,CAAEC,QAAQ,GAC3B9R,SAAU7B,EAAKG,MAAMpE,mBAAqBiE,EAAKG,MAAMlE,kBACrD2X,WAAY,CACRC,aAAcrT,EAAAzB,EAAA0B,cAACqT,GAAA,EAAD,CAAgB1R,SAAS,OAAzB,aAM9B5B,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,EAACpP,MAAO,CAACF,OAAQ,GAAImO,UAAW,WACtCxO,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQxN,MAAM,UAAUR,SAAU5B,KAAKE,MAAMpE,mBAAqBkE,KAAKE,MAAMlE,kBAAmB4G,QAAQ,YAAYnB,QAAS,kBAAM1B,EAAKsM,kBAAkBvL,MAAO,CAAE6O,OAAQ,KAA3K,kBAxUQhL,IAAMC,WA8VtC,IA8DM6Q,GAA6B3Q,YA5EnC,SAAyBvH,GAAO,IAAAwH,EAC4GxH,EAAMD,IAE9I,MAAO,CACH5B,eAJwBqJ,EACpBrJ,eAIJC,cALwBoJ,EACJpJ,cAKpBC,WANwBmJ,EACWnJ,WAMnCC,qBAPwBkJ,EACuBlJ,qBAO/CC,kBARwBiJ,EAC6CjJ,kBAQrEC,qBATwBgJ,EACgEhJ,qBASxFC,kBAVwB+I,EACsF/I,oBAa3F,SAACgJ,GAAD,MAAe,CACtCsG,kBAAmB,SAAC5P,EAAgB6P,EAAWC,EAAWC,EAAUC,EAAWC,EAAWC,EAAcC,EAAOC,EAAkBC,EAAkBC,EAAuBC,EAAuBC,EAAeC,EAAY2F,GACxN,IAAME,EAAM,GAAA/T,OAAMsN,EAAN,MAAAtN,OAAoBuN,EAApB,MAAAvN,OAAkCwN,EAAlC,MAAAxN,OAA+CyN,EAA/C,MAAAzN,OAA6D0N,EAA7D,MAAA1N,OAA2E2N,EAA3E,MAAA3N,OAA4F4N,EAA5F,MAAA5N,OAAsG6N,EAAtG,MAAA7N,OAA2H8N,EAA3H,MAAA9N,OAAgJ+N,EAAhJ,MAAA/N,OAA0KgO,EAA1K,MAAAhO,OAAoMiO,EAApM,MAAAjO,OAAsNkO,EAAtN,SAAAlO,OAAwO6T,GACpPpW,EAAe0C,IAAI,SAAAiW,GACfrP,EAAS,CAACvH,KAAM,8BAA+B4W,IAAGrC,WAClDrL,GAAW2E,kBAAkB+I,EAAExV,SAAU0M,EAAWC,EAAWC,EAAUC,EAAWC,EAAWC,EAAcC,EAAOC,EAAkBC,EAAkBC,EAAuBC,EAAuBC,EAAeC,EAAY2F,GAC5NrK,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,gCAChBuH,EAAS,CAACvH,KAAM,+BAChBkJ,GAAWgG,iBAAiB0H,EAAExV,UACzB4I,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,gCACjB,SAAAiQ,GACC1I,EAAS,CAACvH,KAAM,kCAGzB,SAAAiQ,GACC1I,EAAS,CAACvH,KAAM,qCAKhC4O,eAAgB,SAAC3Q,EAAgB4Q,EAAeC,EAAeC,EAAgBC,EAAgBC,GAC3F,IAAMsF,EAAM,GAAA/T,OAAMqO,EAAN,MAAArO,OAAwBsO,EAAxB,MAAAtO,OAA0CuO,EAA1C,MAAAvO,OAA6DwO,EAA7D,MAAAxO,OAAgFyO,GAC5FhR,EAAe0C,IAAI,SAAAiW,GACfrP,EAAS,CAACvH,KAAM,2BAA4B4W,IAAGrC,WAC/CrL,GAAW0F,eAAegI,EAAExV,SAAUyN,EAAeC,EAAeC,EAAgBC,EAAgBC,GAC/FjF,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,6BAChBuH,EAAS,CAACvH,KAAM,4BAChBkJ,GAAWiG,cAAcyH,EAAExV,UACtB4I,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,6BACjB,SAAAiQ,GACC1I,EAAS,CAACvH,KAAM,+BAEzB,SAAAiQ,GACC1I,EAAS,CAACvH,KAAM,kCAIhCmP,cAAe,SAAC9O,GACZkH,EAAS,CAACvH,KAAM,4BAChBkJ,GAAWiG,cAAc9O,GACpB2J,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,6BACjB,SAAAiQ,GACC1I,EAAS,CAACvH,KAAM,+BAG5BkP,iBAAkB,SAAC7O,GACfkH,EAAS,CAACvH,KAAM,+BAChBkJ,GAAWgG,iBAAiB7O,GACvB2J,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,gCACjB,SAAAiQ,GACC1I,EAAS,CAACvH,KAAM,oCAMGqH,CAA6CG,YA/ajE,SAAA7E,GAAK,MAAK,CACrB4B,KAAM,GACNmR,UAAW,CACPjO,QAAS,OACTwK,cAAe,MACfF,SAAU,OACVhK,QAAS,GACTwJ,SAAU,QAEdsE,MAAM5V,OAAAE,EAAA,EAAAF,CAAA,CACFmD,MAAO,MACP8O,OAAQ,sBACPvP,EAAM+E,YAAYC,GAAG,MAAQ,CAC1BvE,MAAO,MACP8O,OAAQ,qBAia4D1K,CAAmBwP,wDCha7F4B,8MACF9Y,MAAQ,CACJ+Y,WAAY,OACZC,MAAM,KAGVC,YAAc,SAAArE,GACVvS,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GAAmBkC,EAAKrC,MAAxB,CAA+BkZ,SAAUtE,EAAMuE,oBAGnDC,YAAc,SAACnV,GACX5B,EAAKC,SAAS,CAAEyW,WAAY9U,EAAKiV,SAAU,UAG/CG,WAAa,WACNhX,EAAKrC,MAAMgZ,MACV3W,EAAKM,MAAMzE,mBAAmB2C,IAAI,SAAAiW,GAAC,OAAIzU,EAAKM,MAAM8I,SAASqL,EAAExV,SAAU,UACvEe,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GAAkBkC,EAAKrC,MAAvB,CAA8BgZ,MAAO3W,EAAKrC,MAAMgZ,UAEhD3W,EAAKM,MAAMzE,mBAAmB2C,IAAI,SAAAiW,GAAC,OAAIzU,EAAKM,MAAM8I,SAASqL,EAAExV,SAAU,YACvEe,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GAAkBkC,EAAKrC,MAAvB,CAA8BgZ,MAAO3W,EAAKrC,MAAMgZ,kFAI/C,IAAAxW,EAAAC,KACGG,EAAYH,KAAKE,MAAjBC,QACAsW,EAAazW,KAAKzC,MAAlBkZ,SACR,OACIlW,EAAAzB,EAAA0B,cAACuF,EAAA,SAAD,KAEIxF,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAM7B,WAAS,EAAC5H,UAAU,SAASkE,UAAWN,EAAQ6B,MAClDzB,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,EAACpP,MAAO,CAACF,OAAQ,KACvBL,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,MAChBrC,EAAAzB,EAAA0B,cAAC+B,EAAA,EAAD,CAAYC,aAAW,OAAOf,QAASzB,KAAKE,MAAM0U,MAC9CrU,EAAAzB,EAAA0B,cAACqU,GAAA/V,EAAD,CAAUgW,SAAS,WAF3B,YAOJvU,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,EAACzP,UAAWN,EAAQ0W,SAG9BtW,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,EAACpP,MAAO,CAACiO,UAAW,WAC1BxO,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQxN,MAAM,UAAUQ,QAAQ,YAAYnB,QAAS,kBAAM1B,EAAKG,MAAMzE,mBAAmB2C,IAAI,SAAAiW,GAAC,OAAItU,EAAKG,MAAM2I,YAAYwL,EAAExV,SAAU,eAAciC,MAAO,CAAE6O,OAAQ,KAApK,YACApP,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQxN,MAAM,UAAUQ,QAAQ,YAAYnB,QAAS,kBAAM1B,EAAKG,MAAMzE,mBAAmB2C,IAAI,SAAAiW,GAAC,OAAItU,EAAKG,MAAM2I,YAAYwL,EAAExV,SAAU,eAAciC,MAAO,CAAE6O,OAAQ,KAApK,YACApP,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQxN,MAAM,UAAUQ,QAAQ,YAAYnB,QAAS,kBAAM1B,EAAKG,MAAMzE,mBAAmB2C,IAAI,SAAAiW,GAAC,OAAItU,EAAKG,MAAM2I,YAAYwL,EAAExV,SAAU,WAAUiC,MAAO,CAAE6O,OAAQ,KAAhK,QACApP,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQxN,MAAM,UAAUR,SAAoC,SAA1B5B,KAAKzC,MAAM+Y,WAAuB7U,QAAS,kBAAM1B,EAAKG,MAAMzE,mBAAmB2C,IAAI,SAAAiW,GAAC,OAAItU,EAAKG,MAAM8I,SAASqL,EAAExV,SAAUkB,EAAKxC,MAAM+Y,eAAc1T,QAAQ,YAAY9B,MAAO,CAAEC,WAAY,KAAOf,KAAKzC,MAAM+Y,YAC9O/V,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CACIxN,MAAM,UACNQ,QAAQ,YACRkU,YAAWL,EAAW,mBAAgB/H,EACtCqI,gBAAc,OACdtV,QAASzB,KAAKwW,YACd1V,MAAO,CAAEkW,SAAU,GAAIZ,YAAa,EAAGa,aAAc,IAErD1W,EAAAzB,EAAA0B,cAAC0W,GAAApY,EAAD,OAEJyB,EAAAzB,EAAA0B,cAAC2W,GAAA,EAAD,CACIlU,GAAG,cACHwT,SAAUA,EACVpS,KAAM+S,QAAQX,GACdnS,QAAStE,KAAK2W,aAEdpW,EAAAzB,EAAA0B,cAAC6W,GAAA,EAAD,CAAU5V,QAAS,kBAAM1B,EAAK4W,YAAY,UAA1C,QACApW,EAAAzB,EAAA0B,cAAC6W,GAAA,EAAD,CAAU5V,QAAS,kBAAM1B,EAAK4W,YAAY,UAA1C,QACApW,EAAAzB,EAAA0B,cAAC6W,GAAA,EAAD,CAAU5V,QAAS,kBAAM1B,EAAK4W,YAAY,WAA1C,SACApW,EAAAzB,EAAA0B,cAAC6W,GAAA,EAAD,CAAU5V,QAAS,kBAAM1B,EAAK4W,YAAY,WAA1C,SACApW,EAAAzB,EAAA0B,cAAC6W,GAAA,EAAD,CAAU5V,QAAS,kBAAM1B,EAAK4W,YAAY,eAA1C,cAEJpW,EAAAzB,EAAA0B,cAACwT,GAAA,EAAD,CAAkBlT,MAAO,CAAE6O,OAAQ,IAAM2H,eAAe,MACpDrD,QACI1T,EAAAzB,EAAA0B,cAAC+W,GAAA,EAAD,CAAQnV,MAAM,UAAU+R,QAASnU,KAAKzC,MAAMgZ,KAAM9U,QAAS,kBAAM1B,EAAK6W,gBAE1EtT,MAAM,+BAzECqB,IAAMC,WA2FzC,IAsBM4S,GAAgC1S,YA9BtC,SAAyBvH,GAGrB,MAAO,CACH9B,mBAH2B8B,EAAMD,IAA7B7B,qBAOe,SAACuJ,GAAD,MAAe,CACtC6D,YAAa,SAAC/K,EAAKW,GACfuG,EAAS,CAACvH,KAAM,yBAChBkJ,GAAWkC,YAAY/K,EAAKW,GACvBgJ,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,0BACjB,SAAAiQ,GACC1I,EAAS,CAACvH,KAAM,4BAG5BuL,SAAU,SAAClL,EAAKoJ,GACZlC,EAAS,CAACvH,KAAM,sBAChBkJ,GAAWqC,SAASlL,EAAKoJ,GACpBO,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,uBACjB,SAAAiQ,GACC1I,EAAS,CAACvH,KAAM,2BAMMqH,CAA6CG,YA/HpE,SAAA7E,GAAK,MAAK,CACrB4B,KAAM,CACFpB,OAAQ,qBAEZiW,OAAQ,CACJjW,OAAQ,qBACRsE,QAAS,OACTwK,cAAe,SACfF,SAAU,OACVhK,QAAS,GACTwJ,SAAU,UAqHiE/J,CAAmBoR,KCzGhGoB,8MACFla,MAAQ,CACJma,iBAAkB,GAClBpK,SAAU,UAGdqK,UAAY,WACL/X,EAAKrC,MAAMma,iBAAiBza,SAAW2C,EAAKM,MAAM9E,kBAAkB6B,OACnE2C,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,MADZ,CAEIma,iBAAkB,MAGtB9X,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,MADZ,CAEIma,iBAAiBha,OAAAQ,EAAA,EAAAR,CAAKkC,EAAKM,MAAM9E,yBAK7Cwc,UAAY,SAACC,IACwC,IAA9CjY,EAAKrC,MAAMma,iBAAiBxa,QAAQ2a,GACnCjY,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,MADZ,CAEIma,iBAAgB,GAAAzZ,OAAAP,OAAAQ,EAAA,EAAAR,CAAMkC,EAAKrC,MAAMma,kBAAjB,CAAmCG,OAGvDjY,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,MADZ,CAEIma,iBAAiBha,OAAAQ,EAAA,EAAAR,CAAKkC,EAAKrC,MAAMma,iBAAiB3Y,OAAO,SAAAsV,GAAC,OAAIA,EAAEpF,QAAU4I,EAAI5I,eAK1F6I,YAAc,WACVlY,EAAKM,MAAM6X,kBAAkBnY,EAAKrC,MAAMma,kBACxC9X,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,MADZ,CAEI+P,SAAU,aAIlB0K,eAAiB,WACbpY,EAAKM,MAAM+X,sBAAsBrY,EAAKrC,MAAMma,kBAC5C9X,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,MADZ,CAEI+P,SAAU,gBAIlBsH,KAAO,WACHhV,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,MADZ,CAEI+P,SAAU,aAIlBlC,eAAiB,WACbxL,EAAKM,MAAMkL,eAAexL,EAAKrC,MAAMma,iBAAiBtZ,IAAI,SAAAC,GAAC,OAAIA,EAAEQ,YACjEe,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GAAkBkC,EAAKrC,MAAvB,CAA8Bma,iBAAkB,+EAG3C,IAAA3X,EAAAC,KAAAC,EACkCD,KAAKE,MAApCC,EADHF,EACGE,QAAS/E,EADZ6E,EACY7E,kBAEjB,OACImF,EAAAzB,EAAA0B,cAACuF,EAAA,SAAD,KAEgC,SAAxB/F,KAAKzC,MAAM+P,SACPtN,KAAKzC,MAAMma,iBAAiBza,OAAS,EACrCsD,EAAAzB,EAAA0B,cAACiV,GAAD,CAAmBb,KAAM5U,KAAK4U,OAAUrU,EAAAzB,EAAA0B,cAAC0X,GAAD,CAAoBtD,KAAM5U,KAAK4U,OACnD,YAAxB5U,KAAKzC,MAAM+P,SACX/M,EAAAzB,EAAA0B,cAACgX,GAAD,CAAsB5C,KAAM5U,KAAK4U,OACjCrU,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAM7B,WAAS,EAAC5H,UAAU,SAASuE,MAAO,CAAEF,OAAQ,sBAChDL,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,EAACpP,MAAO,CAACiO,UAAW,QAC1BxO,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQxN,MAAM,UAAUQ,QAAQ,YAAYhB,SAAiD,IAAvC5B,KAAKzC,MAAMma,iBAAiBza,OAAcwD,UAAWN,EAAQgY,QAAS1W,QAAS,kBAAM1B,EAAK+X,gBAAhJ,QACAvX,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQxN,MAAM,UAAUQ,QAAQ,YAAYhB,SAAiD,IAAvC5B,KAAKzC,MAAMma,iBAAiBza,OAAcwD,UAAWN,EAAQgY,QAAS1W,QAAS,kBAAM1B,EAAKiY,mBAAhJ,YAEJzX,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,GACV3P,EAAAzB,EAAA0B,cAACyF,EAAA,EAAD,CAAOxF,UAAWN,EAAQiY,OACtB7X,EAAAzB,EAAA0B,cAAC0F,EAAA,EAAD,KACA3F,EAAAzB,EAAA0B,cAAC2F,EAAA,EAAD,KACI5F,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,CACI3E,QAAS,kBAAM1B,EAAK4X,aACpB7W,MAAO,CAAC2F,OAAQ,YAEO,OAAtBrL,GAA8BA,EAAkB6B,OAAS,GAAKsD,EAAAzB,EAAA0B,cAAC0T,GAAA,EAAD,CAC3DC,QAASnU,KAAKzC,MAAMma,iBAAiBza,SAAW7B,EAAkB6B,OAClEmF,MAAM,aAGd7B,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,cACA7F,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,kBACA7F,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,iBAGJ7F,EAAAzB,EAAA0B,cAAC6F,EAAA,EAAD,KACCjL,GAAqBA,EAAkBgD,IAAI,SAAAyZ,GAAG,OAC3CtX,EAAAzB,EAAA0B,cAAC2F,EAAA,EAAD,CAAU3E,IAAKqW,EAAI5I,MACfxN,QAAS,kBAAM1B,EAAK6X,UAAUC,IAC9B/W,MAAO,CAAC2F,OAAQ,YAEpBlG,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KACI7F,EAAAzB,EAAA0B,cAAC0T,GAAA,EAAD,CACIC,SAAuD,IAA9CpU,EAAKxC,MAAMma,iBAAiBxa,QAAQ2a,GAC7CzV,MAAM,aAGV7B,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KAAayR,EAAI7C,WACjBzU,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KAAayR,EAAIhZ,UACjB0B,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KAAayR,EAAI5I,aAKC,OAAtB7T,GACRmF,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,EAACpP,MAAO,CAACiO,UAAW,QAC1BxO,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQhN,QAAQ,YAAYR,MAAM,UAAU3B,UAAWN,EAAQgY,QAASvW,SAAiD,IAAvC5B,KAAKzC,MAAMma,iBAAiBza,OAAcwE,QAAS,kBAAM1B,EAAKqL,mBAAhJ,oBArHGzG,IAAMC,WA0IrC,IA0BMyT,GAA4BvT,YAlClC,SAAyBvH,GAGrB,MAAO,CACHnC,kBAH0BmC,EAAMD,IAA5BlC,oBAOe,SAAC4J,GAAD,MAAe,CACtCoG,eAAiB,SAACC,GACdrG,EAAS,CAACvH,KAAM,4BAChBkJ,GAAWyE,eAAeC,GACrB5D,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,0BAA2B4N,SAC3CrG,EAAS,CAACvH,KAAM,mCAChBkJ,GAAWuC,uBACNzB,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,iCAAkCI,UACnD,SAAA6P,GACC1I,EAAS,CAACvH,KAAM,iCAAkCiQ,aAE3D,SAAAA,GACC1I,EAAS,CAACvH,KAAM,+BAG5Bsa,kBAAmB,SAAC7Y,GAChB8F,EAAS,CAACvH,KAAM,sBAAuByB,cAE3C+Y,sBAAuB,SAAC/Y,GACpB8F,EAAS,CAACvH,KAAM,0BAA2ByB,gBAKjB4F,CAA6CG,YApLhE,SAAA7E,GAAK,MAAK,CACrB4B,KAAM,CACJnB,MAAO,OACPiO,UAAW1O,EAAMqF,QAAQ,GACzB6S,UAAW,QAEbF,MAAO,CACLpB,SAAU,KAEZmB,QAAS,CACLI,aAAc,GACdvX,YAAa,GACb8N,UAAW,MAwK4D7J,CAAmBwS,mCCjK5Fe,8MACFjb,MAAQ,CACJma,iBAAkB,GAClBe,cAAe,YAGnBd,UAAY,WACL/X,EAAKrC,MAAMma,iBAAiBza,SAAW2C,EAAKM,MAAM1E,aAAayB,OAC9D2C,EAAKC,SAAS,CACV6X,iBAAkB,KAGtB9X,EAAKC,SAAS,CACV6X,iBAAiBha,OAAAQ,EAAA,EAAAR,CAAKkC,EAAKM,MAAM1E,mBAK7Coc,UAAY,SAACC,IACwC,IAA9CjY,EAAKrC,MAAMma,iBAAiBxa,QAAQ2a,GACnCjY,EAAKC,SAAS,CACV6X,iBAAgB,GAAAzZ,OAAAP,OAAAQ,EAAA,EAAAR,CAAMkC,EAAKrC,MAAMma,kBAAjB,CAAmCG,MAGvDjY,EAAKC,SAAS,CACV6X,iBAAiBha,OAAAQ,EAAA,EAAAR,CAAKkC,EAAKrC,MAAMma,iBAAiB3Y,OAAO,SAAAsV,GAAC,OAAIA,EAAEpR,KAAO4U,EAAI5U,WAKvFiP,aAAe,SAACM,GACZ5S,EAAKC,SAAS,CACV4Y,cAAejG,EAAEH,OAAO5T,WAIhCia,YAAc,SAAClG,GACX5S,EAAKC,SAAS,CACV8Y,cAAenG,EAAEH,OAAO5T,WAIhCoR,KAAO,WAC6B,WAA7BjQ,EAAKrC,MAAMkb,cACV7Y,EAAKM,MAAM+K,SAAS,SAEpBrL,EAAKM,MAAM+K,SAASrL,EAAKrC,MAAMob,kBAIvCxN,YAAc,WACVvL,EAAKM,MAAMiL,YAAYvL,EAAKrC,MAAMma,2FAG7B,IAAA3X,EAAAC,KAAAC,EAC6BD,KAAKE,MAA/BC,EADHF,EACGE,QAAS3E,EADZyE,EACYzE,aAEjB,OACI+E,EAAAzB,EAAA0B,cAACuF,EAAA,SAAD,KACIxF,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAM7B,WAAS,EAAC5H,UAAU,UACtBgE,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,GACN3P,EAAAzB,EAAA0B,cAACoY,GAAA,EAAD,CAAaC,UAAU,WAAWpY,UAAWN,EAAQ2Y,aACjDvY,EAAAzB,EAAA0B,cAACuY,GAAA,EAAD,CACIlB,KAAG,EACHrV,aAAW,OACX8P,KAAK,OACL7T,MAAOuB,KAAKzC,MAAMkb,cAClBjF,SAAUxT,KAAKkS,cAEf3R,EAAAzB,EAAA0B,cAACwT,GAAA,EAAD,CAAkBvV,MAAM,SAASwV,QAAS1T,EAAAzB,EAAA0B,cAACwY,GAAA,EAAD,CAAO5W,MAAM,YAAakB,MAAM,WAC1E/C,EAAAzB,EAAA0B,cAACwT,GAAA,EAAD,CAAkBvV,MAAM,YAAYwV,QAAS1T,EAAAzB,EAAA0B,cAACwY,GAAA,EAAD,CAAO5W,MAAM,YAAakB,MAAM,iBAIzF/C,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,EAACpP,MAAO,CAACyX,aAAc,KAEA,WAA7BvY,KAAKzC,MAAMkb,cACXlY,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACIpQ,GAAG,gBACHxC,UAAWN,EAAQ8Y,UACnBxa,MAAOuB,KAAKzC,MAAMob,cAClBnF,SAAUxT,KAAK0Y,YACfQ,YAAY,SACZvJ,OAAO,OACP/M,QAAQ,aAEZrC,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACIpQ,GAAG,gBACHxC,UAAWN,EAAQ8Y,UACnBxa,MAAOuB,KAAKzC,MAAMob,cAClBnF,SAAUxT,KAAK0Y,YACfQ,YAAY,YACZvJ,OAAO,OACP/M,QAAQ,aAGZrC,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQxN,MAAM,UAAUX,QAAS,kBAAM1B,EAAK8P,QAAQjN,QAAQ,YAAY9B,MAAO,CAACC,WAAY,GAAIoY,cAAe,WAA/G,SAC4B,IAAxB3d,EAAayB,aAAiCyR,IAAjBlT,GACrC+E,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,GACV3P,EAAAzB,EAAA0B,cAACyF,EAAA,EAAD,CAAOxF,UAAWN,EAAQiY,OACtB7X,EAAAzB,EAAA0B,cAAC0F,EAAA,EAAD,KACA3F,EAAAzB,EAAA0B,cAAC2F,EAAA,EAAD,KACI5F,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,CACI3E,QAAS,kBAAM1B,EAAK4X,aACpB7W,MAAO,CAAC2F,OAAQ,YAEfjL,EAAayB,OAAS,QAAsByR,IAAjBlT,GAA8B+E,EAAAzB,EAAA0B,cAAC0T,GAAA,EAAD,CACtDC,QAASnU,KAAKzC,MAAMma,iBAAiBza,SAAWzB,EAAayB,QAAiD,IAAvC+C,KAAKzC,MAAMma,iBAAiBza,OACnGmF,MAAM,aAGd7B,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,cACA7F,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,kBACA7F,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,iBAGJ7F,EAAAzB,EAAA0B,cAAC6F,EAAA,EAAD,KACyB,IAAxB7K,EAAayB,aAAiCyR,IAAjBlT,GAA8BA,EAAa4C,IAAI,SAAAgb,GACzE,OACA7Y,EAAAzB,EAAA0B,cAAC2F,EAAA,EAAD,CAAU3E,IAAK4X,EAAItb,IACf2D,QAAS,kBAAM1B,EAAK6X,UAAUwB,IAC9BtY,MAAO,CAAC2F,OAAQ,YAEpBlG,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KACI7F,EAAAzB,EAAA0B,cAAC0T,GAAA,EAAD,CACIC,SAAuD,IAA9CpU,EAAKxC,MAAMma,iBAAiBxa,QAAQkc,GAC7ChX,MAAM,aAGV7B,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KAAagT,EAAIrQ,OAAOkJ,MAAM,KAAK,IACnC1R,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KAAagT,EAAItb,KACjByC,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KAAagT,EAAInK,aAKI,IAAxBzT,EAAayB,aAAiCyR,IAAjBlT,GACtC+E,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,EAACpP,MAAO,CAACiO,UAAW,QAC1BxO,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQxN,MAAM,UAAUR,SAAiD,IAAvC5B,KAAKzC,MAAMma,iBAAiBza,OAAcwE,QAAS,kBAAM1B,EAAKoL,eAAevI,QAAQ,YAAY9B,MAAO,CAAC6O,OAAQ,KAAnJ,iBA1IFhL,IAAMC,WA2J5B,IA6BMyU,GAAmBvU,YArCzB,SAAyBvH,GAGrB,MAAO,CACH/B,aAHqB+B,EAAMD,IAAvB9B,eAOe,SAACwJ,GAAD,MAAe,CACtCiG,SAAW,SAACC,GACRlG,EAAS,CAACvH,KAAM,qBAChBkJ,GAAWsE,SAASC,GACfzD,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,sBACjB,SAAAiQ,GACC1I,EAAS,CAACvH,KAAM,wBAG5B0N,YAAa,SAAClM,GACV+F,EAAS,CAACvH,KAAM,yBAChBkJ,GAAWwE,YAAYlM,GAClBwI,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,uBAAwBwB,YACxC+F,EAAS,CAACvH,KAAM,mCAChBkJ,GAAWuC,uBACNzB,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,iCAAkCI,UACnD,SAAA6P,GACC1I,EAAS,CAACvH,KAAM,iCAAkCiQ,aAE3D,SAAAA,GACC1I,EAAS,CAACvH,KAAM,8BAMPqH,CAA6CG,YA1MvD,SAAA7E,GAAK,MAAK,CACrB4B,KAAM,CACJnB,MAAO,OACPiO,UAAW1O,EAAMqF,QAAQ,GACzB6S,UAAW,QAEbF,MAAO,CACLpB,SAAU,KAEZiC,UAAW,CACPlY,WAAY,IAEhB+X,YAAa,CACT/X,WAAY,MA6LkDkE,CAAmBuT,KC/LnFc,8MAEJpH,aAAe,SAACC,EAAO1T,GACrBmB,EAAKM,MAAMwU,UAAU,CAAEjW,mFAGhB,IAAAwB,EACyBD,KAAKE,MAA7BC,EADDF,EACCE,QAASzF,EADVuF,EACUvF,WAEjB,OACE6F,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWN,EAAQ6B,MACtBzB,EAAAzB,EAAA0B,cAAC0B,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,aAC9B7B,EAAAzB,EAAA0B,cAAC6U,GAAA,EAAD,CAAM5W,MAAO/D,EAAY8Y,SAAUxT,KAAKkS,aAAc/R,QAAS,CAACmV,UAAWnV,EAAQoV,gBACjFhV,EAAAzB,EAAA0B,cAACgV,GAAA,EAAD,CAAKlS,MAAM,cAAcnD,QAAS,CAACwB,SAAUxB,EAAQwB,YACrDpB,EAAAzB,EAAA0B,cAACgV,GAAA,EAAD,CAAKlS,MAAM,OAAOnD,QAAS,CAACwB,SAAUxB,EAAQwB,cAGlC,IAAfjH,GAAoB6F,EAAAzB,EAAA0B,cAAC6X,GAAD,MACL,IAAf3d,GAAoB6F,EAAAzB,EAAA0B,cAAC6Y,GAAD,cAlBD1U,IAAMC,WAqClC,IAOM2U,GAA0BzU,YAfhC,SAAyBvH,GAGrB,MAAO,CACH7C,WAHmB6C,EAAMD,IAArB5C,aAOe,SAACsK,GAAD,MAAe,CACtC0P,UAAW,SAACjW,GACRuG,EAAS,CAACvH,KAAM,aAAcgB,aAKNqG,CAA6CG,YA5D9D,SAAA7E,GAAK,MAAK,CACvB4B,KAAM,CACJqB,gBAAiBjD,EAAMsV,QAAQC,WAAWpR,MAC1CyS,SAAU,KAEZzB,cAAe,CACblS,gBAAiB,WAEnB1B,SAAU,CACR0B,gBAAiB,UACjBjB,MAAO,UACPwT,WAAY,IACZd,SAAU,MAgD+D7P,CAAmBqU,kECtB1FE,8MAEFjc,MAAQ,CACJsJ,KAAM,GACNS,SAAU,GACVP,SAAU,MAGdqH,kBAAoB,WAChBxO,EAAKM,MAAMkN,cAGf8E,aAAe,SAACC,GACZvS,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,MADZG,OAAAE,EAAA,EAAAF,CAAA,GAEKyU,EAAME,OAAOC,KAAOH,EAAME,OAAO5T,YAI1CmI,YAAc,WACVhH,EAAKM,MAAM0G,YAAYhH,EAAKrC,MAAMsJ,KAAMjH,EAAKM,MAAMoH,SAAU1H,EAAKrC,MAAMwJ,mFAInE,IAAAhH,EAAAC,KAAAC,EACyBD,KAAKE,MAA3BC,EADHF,EACGE,QAAS3D,EADZyD,EACYzD,SACjB,OACI+D,EAAAzB,EAAA0B,cAACuF,EAAA,SAAD,KACQxF,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,EAACuJ,GAAI,GAAItV,WAAS,EAAC5H,UAAU,SAASmd,QAAQ,SAAS1L,WAAW,SAASvN,UAAWN,EAAQ6B,MACpGzB,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWN,EAAQwZ,OACxBpZ,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAK9B,MAAO,CAACiO,UAAW,WAA5C,WAGAxO,EAAAzB,EAAA0B,cAACoY,GAAA,EAAD,CAAahW,QAAQ,WAAWnC,UAAWN,EAAQmT,MAAOsG,WAAS,GAC/DrZ,EAAAzB,EAAA0B,cAACqZ,GAAA,EAAD,CAAYC,QAAQ,QAApB,QAGAvZ,EAAAzB,EAAA0B,cAACuZ,GAAA,EAAD,CACItb,MAAOuB,KAAKzC,MAAMsJ,KAClB2M,SAAUxT,KAAKkS,aACf8H,WAAS,EACTvZ,UAAWN,EAAQ8Z,WACnBC,MAAO3Z,EAAAzB,EAAA0B,cAAC2Z,GAAA,EAAD,CAAeC,WAAY,GAAI9H,KAAK,OAAOrP,GAAG,UAG7B,IAApBzG,EAASS,OAAesD,EAAAzB,EAAA0B,cAAC6W,GAAA,EAAD,CAAU5Y,MAAO,QAAjB,IAA0B8B,EAAAzB,EAAA0B,cAAC6Z,GAAA,EAAD,OAAkC7d,EAAS4B,IAAI,SAAAkc,GAAC,OAAI/Z,EAAAzB,EAAA0B,cAAC6W,GAAA,EAAD,CAAU7V,IAAK8Y,EAAG7b,MAAO6b,GAAIA,MAI3I/Z,EAAAzB,EAAA0B,cAAC+B,EAAA,EAAD,CAAY9B,UAAWN,EAAQoB,OAAQE,QAAS,kBAAM1B,EAAKG,MAAMkN,YAAY5K,aAAW,qBACpFjC,EAAAzB,EAAA0B,cAAC+Z,GAAAzb,EAAD,QAGRyB,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACI5S,UAAWN,EAAQmT,MACnBsG,WAAS,EACTtH,KAAK,WACLhP,MAAM,WACN7E,MAAOuB,KAAKzC,MAAM+J,SAClBkM,SAAUxT,KAAKkS,aACftP,QAAQ,WACR6Q,gBAAiB,CAAEC,QAAQ,KAE/BnT,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACI5S,UAAWN,EAAQmT,MACnBsG,WAAS,EACTtH,KAAK,WACLhP,MAAM,YACN7E,MAAOuB,KAAKzC,MAAMwJ,SAClByM,SAAUxT,KAAKkS,aACftP,QAAQ,WACR6Q,gBAAiB,CAAEC,QAAQ,KAE/BnT,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQhN,QAAQ,YAAYR,MAAM,UAAUX,QAAS,kBAAM1B,EAAK6G,eAAenG,UAAWN,EAAQqa,YAAlG,SAEAja,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWN,EAAQwZ,OACxBpZ,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAK9B,MAAO,CAACiO,UAAW,WAA5C,cAGAxO,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACI5S,UAAWN,EAAQmT,MACnBsG,WAAS,EACT3W,GAAG,oBACHK,MAAM,sBACN7E,MAAOuB,KAAKzC,MAAM+J,SAClBkM,SAAUxT,KAAKkS,aACfvC,OAAO,SACP/M,QAAQ,WACR6Q,gBAAiB,CAAEC,QAAQ,KAE/BnT,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACI5S,UAAWN,EAAQmT,MACnBsG,WAAS,EACT3W,GAAG,uBACHK,MAAM,0BACN7E,MAAOuB,KAAKzC,MAAM+J,SAClBkM,SAAUxT,KAAKkS,aACfvC,OAAO,SACP/M,QAAQ,WACR6Q,gBAAiB,CAAEC,QAAQ,KAE/BnT,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQhN,QAAQ,YAAYR,MAAM,UAAS3B,UAAWN,EAAQqa,YAA9D,SAEAja,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWN,EAAQwZ,OACxBpZ,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAK9B,MAAO,CAACiO,UAAW,WAA5C,aAGAxO,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACI5S,UAAWN,EAAQmT,MACnBsG,WAAS,EACT3W,GAAG,QACHK,MAAM,gBACN7E,MAAOuB,KAAKzC,MAAMkd,MAClBjH,SAAUxT,KAAKkS,aACfvC,OAAO,SACP/M,QAAQ,WACR6Q,gBAAiB,CAAEC,QAAQ,KAE/BnT,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQhN,QAAQ,YAAYR,MAAM,UAAS3B,UAAWN,EAAQqa,YAA9D,SAEAja,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWN,EAAQwZ,OACxBpZ,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAK9B,MAAO,CAACiO,UAAW,WAA5C,UAGAxO,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACI5S,UAAWN,EAAQmT,MACnBsG,WAAS,EACT3W,GAAG,QACHK,MAAM,SACN7E,MAAOuB,KAAKzC,MAAMgM,MAClBiK,SAAUxT,KAAKkS,aACfvC,OAAO,SACP/M,QAAQ,WACR6Q,gBAAiB,CAAEC,QAAQ,KAE/BnT,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQhN,QAAQ,YAAYR,MAAM,UAAS3B,UAAWN,EAAQqa,YAA9D,SAEAja,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWN,EAAQwZ,OACxBpZ,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAK9B,MAAO,CAACiO,UAAW,WAA5C,eAGAxO,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACI5S,UAAWN,EAAQmT,MACnBsG,WAAS,EACT3W,GAAG,eACHK,MAAM,iBACN7E,MAAOuB,KAAKzC,MAAMoM,aAClB6J,SAAUxT,KAAKkS,aACfvC,OAAO,SACP/M,QAAQ,WACR6Q,gBAAiB,CAAEC,QAAQ,KAE/BnT,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACI5S,UAAWN,EAAQmT,MACnBsG,WAAS,EACT3W,GAAG,gBACHK,MAAM,kBACN7E,MAAOuB,KAAKzC,MAAMsM,cAClB2J,SAAUxT,KAAKkS,aACfvC,OAAO,SACP/M,QAAQ,WACR6Q,gBAAiB,CAAEC,QAAQ,KAE/BnT,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACI5S,UAAWN,EAAQmT,MACnBsG,WAAS,EACT3W,GAAG,iBACHK,MAAM,mBACN7E,MAAOuB,KAAKzC,MAAMuM,eAClB0J,SAAUxT,KAAKkS,aACfvC,OAAO,SACP/M,QAAQ,WACR6Q,gBAAiB,CAAEC,QAAQ,KAE/BnT,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQhN,QAAQ,YAAYR,MAAM,UAAS3B,UAAWN,EAAQqa,YAA9D,SAEAja,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWN,EAAQwZ,OACxBpZ,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAK9B,MAAO,CAACiO,UAAW,WAA5C,gBAGAxO,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACI5S,UAAWN,EAAQmT,MACnBsG,WAAS,EACT3W,GAAG,gBACHK,MAAM,kBACN7E,MAAOuB,KAAKzC,MAAMwM,cAClByJ,SAAUxT,KAAKkS,aACfvC,OAAO,SACP/M,QAAQ,WACR6Q,gBAAiB,CAAEC,QAAQ,KAE/BnT,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACI5S,UAAWN,EAAQmT,MACnBsG,WAAS,EACT3W,GAAG,kBACHK,MAAM,oBACN7E,MAAOuB,KAAKzC,MAAMmd,gBAClBlH,SAAUxT,KAAKkS,aACfvC,OAAO,SACP/M,QAAQ,WACR6Q,gBAAiB,CAAEC,QAAQ,KAE/BnT,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQhN,QAAQ,YAAYR,MAAM,UAAS3B,UAAWN,EAAQqa,YAA9D,SAEAja,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWN,EAAQwZ,OACxBpZ,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAK9B,MAAO,CAACiO,UAAW,WAA5C,eAGAxO,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACI5S,UAAWN,EAAQmT,MACnBsG,WAAS,EACT3W,GAAG,eACHK,MAAM,iBACN7E,MAAOuB,KAAKzC,MAAMod,aAClBnH,SAAUxT,KAAKkS,aACfvC,OAAO,SACP/M,QAAQ,WACR6Q,gBAAiB,CAAEC,QAAQ,KAE/BnT,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACI5S,UAAWN,EAAQmT,MACnBsG,WAAS,EACT3W,GAAG,iBACHK,MAAM,mBACN7E,MAAOuB,KAAKzC,MAAMqd,eAClBpH,SAAUxT,KAAKkS,aACfvC,OAAO,SACP/M,QAAQ,WACR6Q,gBAAiB,CAAEC,QAAQ,KAE/BnT,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQhN,QAAQ,YAAYR,MAAM,UAAS3B,UAAWN,EAAQqa,YAA9D,SAEAja,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWN,EAAQwZ,OACxBpZ,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAK9B,MAAO,CAACiO,UAAW,WAA5C,eAGAxO,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACI5S,UAAWN,EAAQmT,MACnBsG,WAAS,EACT3W,GAAG,eACHK,MAAM,iBACN7E,MAAOuB,KAAKzC,MAAMsd,aAClBrH,SAAUxT,KAAKkS,aACfvC,OAAO,SACP/M,QAAQ,WACR6Q,gBAAiB,CAAEC,QAAQ,KAE/BnT,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACI5S,UAAWN,EAAQmT,MACnBsG,WAAS,EACT3W,GAAG,iBACHK,MAAM,mBACN7E,MAAOuB,KAAKzC,MAAMud,eAClBtH,SAAUxT,KAAKkS,aACfvC,OAAO,SACP/M,QAAQ,WACR6Q,gBAAiB,CAAEC,QAAQ,KAE/BnT,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQhN,QAAQ,YAAYR,MAAM,UAAS3B,UAAWN,EAAQqa,YAA9D,SAEAja,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWN,EAAQwZ,OACxBpZ,EAAAzB,EAAA0B,cAACoY,GAAA,EAAD,CAAaC,UAAU,WAAWpY,UAAWN,EAAQmT,OACjD/S,EAAAzB,EAAA0B,cAACuY,GAAA,EAAD,CACIlB,KAAG,EACHrV,aAAW,OACX8P,KAAK,OACL7T,MAAOuB,KAAKzC,MAAMwd,SAClBvH,SAAUxT,KAAKkS,cAEf3R,EAAAzB,EAAA0B,cAACwT,GAAA,EAAD,CAAkBvV,MAAM,WAAWwV,QAAS1T,EAAAzB,EAAA0B,cAACwY,GAAA,EAAD,CAAO5W,MAAM,YAAakB,MAAM,uBAC5E/C,EAAAzB,EAAA0B,cAACwT,GAAA,EAAD,CAAkBvV,MAAM,QAAQwV,QAAS1T,EAAAzB,EAAA0B,cAACwY,GAAA,EAAD,CAAO5W,MAAM,YAAakB,MAAM,qBAE7E/C,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQhN,QAAQ,YAAYR,MAAM,UAAUtB,MAAO,CAACyX,aAAc,KAAlE,mBAhRC5T,IAAMC,WAkSnC,IAsBMoW,GAA0BlW,YA9BhC,SAAyBvH,GAGrB,MAAO,CACHf,SAHiBe,EAAMD,IAAnBd,WAOe,SAACwI,GAAD,MAAe,CACtC4B,YAAa,SAACC,EAAMC,EAAMC,GACtB/B,EAAS,CAACvH,KAAM,0BAChBkJ,GAAWC,YAAYC,EAAMC,EAAMC,GAC9BU,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,wBAAyBI,UAC1C,SAAA6P,GACC1I,EAAS,CAACvH,KAAM,6BAG5B2P,SAAU,WACNpI,EAAS,CAACvH,KAAM,sBAChBkJ,GAAWyG,WACN3F,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,oBAAqBI,UACtC,SAAA6P,GACC1I,EAAS,CAACvH,KAAM,2BAMAqH,CAA6CG,YAjW9D,SAAA7E,GAAK,MAAK,CACvB4B,KAAKtE,OAAAE,EAAA,EAAAF,CAAA,CACHsZ,SAAU,IACV3T,gBAAiBjD,EAAMsV,QAAQC,WAAWpR,OACzCnE,EAAM+E,YAAYC,GAAG,MAAQ,CAC1BxE,OAAQ,UAGd+Y,MAAMjc,OAAAE,EAAA,EAAAF,CAAA,CACJwH,QAAS,OACTwK,cAAe,SACfzB,eAAgB,SAChBD,WAAY,SACZnN,MAAO,OACNT,EAAM+E,YAAYC,GAAG,MAAQ,CAC1BvE,MAAO,QAGbyS,MAAM5V,OAAAE,EAAA,EAAAF,CAAA,CACJgS,cAAe,OACdtP,EAAM+E,YAAYC,GAAG,MAAQ,CAC1BuK,OAAQ,eAGd6K,WAAW9c,OAAAE,EAAA,EAAAF,CAAA,CACTiS,OAAQ,oBACRsL,UAAW,SACV7a,EAAM+E,YAAY+V,KAAK,MAAQ,CAC5Bra,MAAO,MACP8O,OAAQ,GACRsL,UAAW,WAGjB1Z,OAAQ,CACJV,MAAO,OAEXoZ,WAAY,CACRpZ,MAAO,SA4TgEoE,CAAmBuU,uDC3U1F2B,8MAEF5d,MAAQ,CACJ6d,gBAAiB,GACjBC,QAAQ,EACRC,MAAO,OACPvO,KAAM,GACNtP,KAAM,GACNoK,MAAO,GACPmF,eAAgB,GAChBuO,WAAY,GACZC,eAAgB,GAChBld,QAAS,MAGb8P,kBAAoB,WAChBxO,EAAKM,MAAM2M,gBAGfyB,0BAA4B,SAACC,GACtBA,EAAUrS,UAAY0D,EAAKM,MAAMhE,cAAiCwS,IAAtBH,EAAUrS,SACrD0D,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GAAkBkC,EAAKrC,MAAvB,CAA8Be,QAAQZ,OAAAQ,EAAA,EAAAR,CAAK6Q,EAAUrS,QAAQ6C,OAAO,SAAAV,GAAC,OAAkB,IAAdA,EAAEC,iBAInFqZ,UAAY,WACL/X,EAAKrC,MAAM6d,gBAAgBne,SAAW2C,EAAKM,MAAMhE,QAAQe,OACxD2C,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,MADZ,CAEI6d,gBAAiB,MAGrBxb,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,MADZ,CAEI6d,gBAAgB1d,OAAAQ,EAAA,EAAAR,CAAKkC,EAAKM,MAAMhE,eAK5C+L,aAAe,SAAC4P,GACuF,IAAhGjY,EAAKrC,MAAM6d,gBAAgBrc,OAAO,SAAAsV,GAAC,OAAIA,EAAExM,QAAUgQ,EAAIhQ,OAASwM,EAAE5W,OAASoa,EAAIpa,OAAMR,OACpF2C,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,MADZ,CAEI6d,gBAAe,GAAAnd,OAAAP,OAAAQ,EAAA,EAAAR,CAAMkC,EAAKrC,MAAM6d,iBAAjB,CAAkCvD,OAGrDjY,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,MADZ,CAEI6d,gBAAgB1d,OAAAQ,EAAA,EAAAR,CAAKkC,EAAKrC,MAAM6d,gBAAgBrc,OAAO,SAAAsV,GAAC,OAAIA,EAAExM,QAAUgQ,EAAIhQ,eAKxFiF,UAAY,WACRlN,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GAAmBkC,EAAKrC,MAAxB,CAA+B8d,QAAQ,EAAMC,MAAO,YAGxDG,WAAa,WACT7b,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GAAmBkC,EAAKrC,MAAxB,CAA+B8d,QAAQ,EAAMC,MAAO,OAAQvO,KAAMnN,EAAKrC,MAAM6d,gBAAgB,GAAGrO,KAAMtP,KAAMmC,EAAKrC,MAAM6d,gBAAgB,GAAG3d,KAAMoK,MAAOjI,EAAKrC,MAAM6d,gBAAgB,GAAGvT,MAAOmF,eAAgBpN,EAAKrC,MAAM6d,gBAAgB,GAAGpO,qBAG9OC,aAAe,WACXrN,EAAKM,MAAM+M,aAAarN,EAAKrC,MAAM6d,oBAGvCM,OAAS,SAAC7D,GACqF,IAAxFjY,EAAKrC,MAAMe,QAAQS,OAAO,SAAAsV,GAAC,OAAIA,EAAExM,QAAUgQ,EAAIhQ,OAASwM,EAAE5W,OAASoa,EAAIpa,OAAMR,QAC5E2C,EAAKM,MAAMgN,aAAa2K,EAAIpa,KAAMoa,EAAIhQ,OACtCjI,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GAAkBkC,EAAKrC,MAAvB,CAA8Be,QAAO,GAAAL,OAAAP,OAAAQ,EAAA,EAAAR,CAAMkC,EAAKrC,MAAMe,SAAjB,CAA0BuZ,SAE/DjY,EAAKM,MAAMiN,cAAc0K,EAAIpa,KAAMoa,EAAIhQ,OACvCjI,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GAAkBkC,EAAKrC,MAAvB,CAA8Be,QAASsB,EAAKrC,MAAMe,QAAQS,OAAO,SAAAyT,GAAC,OAAIA,IAAMqF,WAKpFlB,YAAc,WACc,SAArB/W,EAAKrC,MAAM+d,OACV1b,EAAKM,MAAMyb,iBAAiB/b,EAAKrC,MAAM6d,iBACvCxb,EAAKM,MAAM4M,UAAUlN,EAAKrC,MAAMwP,KAAMnN,EAAKrC,MAAME,KAAMmC,EAAKrC,MAAMsK,MAAOjI,EAAKrC,MAAMyP,gBACpFpN,EAAKM,MAAMyH,aAAa/H,EAAKrC,MAAMge,WAAY3b,EAAKrC,MAAME,KAAMmC,EAAKrC,MAAMsK,SAE3EjI,EAAKM,MAAM4M,UAAUlN,EAAKrC,MAAMwP,KAAMnN,EAAKrC,MAAME,KAAMmC,EAAKrC,MAAMsK,MAAOjI,EAAKrC,MAAMyP,gBACpFpN,EAAKM,MAAMyH,aAAa/H,EAAKrC,MAAMge,WAAY3b,EAAKrC,MAAME,KAAMmC,EAAKrC,MAAMsK,QAI/EjI,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GAAmBkC,EAAKrC,MAAxB,CAA+B8d,QAAQ,EAAOC,MAAO,aAGzDpJ,aAAe,SAACM,GACZ5S,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GAAmBkC,EAAKrC,MAAxBG,OAAAE,EAAA,EAAAF,CAAA,GAAgC8U,EAAEH,OAAOC,KAAOE,EAAEH,OAAO5T,YAI7Dmd,mBAAqB,SAAApJ,GACjB5S,EAAKC,SAALnC,OAAAC,EAAA,EAAAD,CAAA,GACOkC,EAAKrC,MADZ,CAEIge,WAAY/I,EAAEH,OAAOwJ,MAAM,GAC3BL,eAAgBhJ,EAAEH,OAAOwJ,MAAM,GAAGvJ,iFAIjC,IAAAvS,EAAAC,KAACwJ,QAAQC,IAAIzJ,KAAKzC,OAAlB,IAAA0C,EACwBD,KAAKE,MAA1BC,EADHF,EACGE,QAASjE,EADZ+D,EACY/D,QAEjB,OACIqE,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAM7B,WAAS,EAAC5H,UAAU,SAASkE,UAAWN,EAAQ6B,MAClDzB,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,EAACpP,MAAO,CAACiO,UAAW,QAC1BxO,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQxN,MAAM,UAAUQ,QAAQ,YAAYnC,UAAWN,EAAQgY,QAAS1W,QAAS,kBAAM1B,EAAK+M,cAA5F,WACC9M,KAAKzC,MAAM6d,gBAAgBne,OAAS,EACjCsD,EAAAzB,EAAA0B,cAACsb,GAAA,EAAD,CAASC,MAAM,gFACXxb,EAAAzB,EAAA0B,cAAA,YAAMD,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQxN,MAAM,UAAUQ,QAAQ,YAAYnC,UAAWN,EAAQgY,QAASvW,UAAQ,GAAhF,UAEVrB,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQxN,MAAM,UAAUQ,QAAQ,YAAYhB,SAAgD,IAAtC5B,KAAKzC,MAAM6d,gBAAgBne,OAAcwD,UAAWN,EAAQgY,QAAS1W,QAAS,kBAAM1B,EAAK0b,eAA/I,SAGRlb,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,GACV3P,EAAAzB,EAAA0B,cAACyF,EAAA,EAAD,CAAOxF,UAAWN,EAAQiY,OACtB7X,EAAAzB,EAAA0B,cAAC0F,EAAA,EAAD,KACA3F,EAAAzB,EAAA0B,cAAC2F,EAAA,EAAD,KACI5F,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,CACI3E,QAAS,kBAAM1B,EAAK4X,aACpB7W,MAAO,CAAC2F,OAAQ,YAClBvK,GAAWA,EAAQe,OAAS,GAC1BsD,EAAAzB,EAAA0B,cAAC0T,GAAA,EAAD,CACIC,QAASnU,KAAKzC,MAAM6d,gBAAgBne,SAAW+C,KAAKE,MAAMhE,QAAQe,OAClEmF,MAAM,aAGd7B,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,eACA7F,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,oBACA7F,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,gBACA7F,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,wBACA7F,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,kBAGJ7F,EAAAzB,EAAA0B,cAAC6F,EAAA,EAAD,KACCnK,GAAWA,EAAQkC,IAAI,SAAAyZ,GAAG,OACvBtX,EAAAzB,EAAA0B,cAAC2F,EAAA,EAAD,CAAU3E,IAAKqW,EAAI9K,KAAK8K,EAAIpa,KAAKoa,EAAIhQ,MACjC/G,MAAO,CAAC2F,OAAQ,YAEhBlG,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KACI7F,EAAAzB,EAAA0B,cAAC0T,GAAA,EAAD,CACIzS,QAAS,kBAAM1B,EAAKkI,aAAa4P,IACjC1D,QAAyG,IAAhGpU,EAAKxC,MAAM6d,gBAAgBrc,OAAO,SAAAsV,GAAC,OAAIA,EAAExM,QAAUgQ,EAAIhQ,OAASwM,EAAE5W,OAASoa,EAAIpa,OAAMR,OAC9FmF,MAAM,aAGd7B,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KAAayR,EAAI9K,MACjBxM,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KAAayR,EAAIpa,MACjB8C,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KAAayR,EAAIhQ,OACjBtH,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KAAayR,EAAI7K,gBACjBzM,EAAAzB,EAAA0B,cAAC4F,EAAA,EAAD,KAMI7F,EAAAzB,EAAA0B,cAAC+W,GAAA,EAAD,CAAQnV,MAAM,UAAU+R,QAAiG,IAAxFpU,EAAKxC,MAAMe,QAAQS,OAAO,SAAAsV,GAAC,OAAIA,EAAExM,QAAUgQ,EAAIhQ,OAASwM,EAAE5W,OAASoa,EAAIpa,OAAMR,OAAcwE,QAAS,kBAAM1B,EAAK2b,OAAO7D,YAK9J3b,GAAWA,EAAQe,OAAS,GACrCsD,EAAAzB,EAAA0B,cAACwF,EAAA,EAAD,CAAMkK,MAAI,EAACpP,MAAO,CAACiO,UAAW,QAC1BxO,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQxN,MAAM,UAAUQ,QAAQ,YAAYhB,SAAgD,IAAtC5B,KAAKzC,MAAM6d,gBAAgBne,OAAcwD,UAAWN,EAAQgY,QAAS1W,QAAS,kBAAM1B,EAAKkN,iBAA/I,YAGJ1M,EAAAzB,EAAA0B,cAACwb,GAAA,EAAD,CACI3X,KAAMrE,KAAKzC,MAAM8d,OACjB/W,QAAStE,KAAK2W,YACdsF,kBAAgB,qBAEhB1b,EAAAzB,EAAA0B,cAAC0b,GAAA,EAAD,CAAajZ,GAAG,qBAA0C,QAArBjD,KAAKzC,MAAM+d,MAAkB,aAAe,eACjF/a,EAAAzB,EAAA0B,cAAC2b,GAAA,EAAD,KACI5b,EAAAzB,EAAA0B,cAACoY,GAAA,EAAD,CAAahW,QAAQ,WAAWnC,UAAWN,EAAQ2Y,YAAac,WAAS,EAACjK,OAAO,SAC7EpP,EAAAzB,EAAA0B,cAACqZ,GAAA,EAAD,CAAYC,QAAQ,QAApB,UAGAvZ,EAAAzB,EAAA0B,cAACuZ,GAAA,EAAD,CACItb,MAAOuB,KAAKzC,MAAMwP,KAClByG,SAAUxT,KAAKkS,aACf8H,WAAS,EACTE,MAAO3Z,EAAAzB,EAAA0B,cAAC2Z,GAAA,EAAD,CAAeC,WAAY,GAAI9H,KAAK,OAAOrP,GAAG,UAErD1C,EAAAzB,EAAA0B,cAAC6W,GAAA,EAAD,CAAU5Y,MAAO,YAAjB,wCACA8B,EAAAzB,EAAA0B,cAAC6W,GAAA,EAAD,CAAU5Y,MAAO,YAAjB,wCACA8B,EAAAzB,EAAA0B,cAAC6W,GAAA,EAAD,CAAU5Y,MAAO,YAAjB,wCACA8B,EAAAzB,EAAA0B,cAAC6W,GAAA,EAAD,CAAU5Y,MAAO,YAAjB,wCACA8B,EAAAzB,EAAA0B,cAAC6W,GAAA,EAAD,CAAU5Y,MAAO,YAAjB,wCACA8B,EAAAzB,EAAA0B,cAAC6W,GAAA,EAAD,CAAU5Y,MAAO,YAAjB,wCACA8B,EAAAzB,EAAA0B,cAAC6W,GAAA,EAAD,CAAU5Y,MAAO,YAAjB,wCACA8B,EAAAzB,EAAA0B,cAAC6W,GAAA,EAAD,CAAU5Y,MAAO,YAAjB,wCACA8B,EAAAzB,EAAA0B,cAAC6W,GAAA,EAAD,CAAU5Y,MAAO,cAAjB,cACA8B,EAAAzB,EAAA0B,cAAC6W,GAAA,EAAD,CAAU5Y,MAAO,UAAjB,mBACA8B,EAAAzB,EAAA0B,cAAC6W,GAAA,EAAD,CAAU5Y,MAAO,UAAjB,mBACA8B,EAAAzB,EAAA0B,cAAC6W,GAAA,EAAD,CAAU5Y,MAAO,UAAjB,qBAGR8B,EAAAzB,EAAA0B,cAACoY,GAAA,EAAD,CAAahW,QAAQ,WAAWnC,UAAWN,EAAQ2Y,YAAac,WAAS,EAACjK,OAAO,SAC7EpP,EAAAzB,EAAA0B,cAACqZ,GAAA,EAAD,CAAYC,QAAQ,QAApB,eAGAvZ,EAAAzB,EAAA0B,cAACuZ,GAAA,EAAD,CACItb,MAAOuB,KAAKzC,MAAME,KAClB+V,SAAUxT,KAAKkS,aACf8H,WAAS,EACTE,MAAO3Z,EAAAzB,EAAA0B,cAAC2Z,GAAA,EAAD,CAAeC,WAAY,IAAK9H,KAAK,OAAOrP,GAAG,UAEtD1C,EAAAzB,EAAA0B,cAAC6W,GAAA,EAAD,CAAU5Y,MAAO,QAAjB,eACA8B,EAAAzB,EAAA0B,cAAC6W,GAAA,EAAD,CAAU5Y,MAAO,QAAjB,eACA8B,EAAAzB,EAAA0B,cAAC6W,GAAA,EAAD,CAAU5Y,MAAO,SAAjB,gBACA8B,EAAAzB,EAAA0B,cAAC6W,GAAA,EAAD,CAAU5Y,MAAO,QAAjB,iBAGR8B,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACIuG,WAAS,EACT3W,GAAG,QACHqP,KAAK,QACLhP,MAAM,UACN7E,MAAOuB,KAAKzC,MAAMsK,MAClB2L,SAAUxT,KAAKkS,aACfvC,OAAO,QACP/M,QAAQ,aAEZrC,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACIuG,WAAS,EACT3W,GAAG,iBACHqP,KAAK,iBACLhP,MAAM,iBACN7E,MAAOuB,KAAKzC,MAAMyP,eAClBwG,SAAUxT,KAAKkS,aACfvC,OAAO,QACP/M,QAAQ,aAEZrC,EAAAzB,EAAA0B,cAAA,OAAKM,MAAO,CAACoE,QAAS,OAAQ8I,WAAY,aAC1CzN,EAAAzB,EAAA0B,cAAC6S,GAAA,EAAD,CACIpQ,GAAG,aACHK,MAAM,cACNwQ,WAAW,4BACXxB,KAAK,aACL7T,MAAOuB,KAAKzC,MAAMie,eAClB7L,OAAO,QACP/M,QAAQ,WACRgX,WAAS,IAEbrZ,EAAAzB,EAAA0B,cAAA,SACI4b,OAAO,IACPtb,MAAO,CAAEoE,QAAS,QAClBjC,GAAG,wBACHxF,KAAK,OACL+V,SAAUxT,KAAK4b,qBAEnBrb,EAAAzB,EAAA0B,cAAA,SAAOsZ,QAAQ,yBACXvZ,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQhN,QAAQ,YAAYR,MAAM,UAAUyW,UAAU,OAAO/X,MAAO,CAAC6O,OAAQ,IAA7E,aAMRpP,EAAAzB,EAAA0B,cAAC6b,GAAA,EAAD,KACI9b,EAAAzB,EAAA0B,cAACoP,EAAA,EAAD,CAAQhN,QAAQ,YAAYnB,QAASzB,KAAK2W,YAAavU,MAAM,WACnC,QAArBpC,KAAKzC,MAAM+d,MAAkB,aAAe,kBAvQnD3W,IAAMC,WA0R5B,IAoGM0X,GAAmBxX,YA5GzB,SAAyBvH,GAGrB,MAAO,CACHrB,QAHgBqB,EAAMD,IAAlBpB,UAOe,SAAC8I,GAAD,MAAe,CACtC6H,WAAY,WACR7H,EAAS,CAACvH,KAAM,wBAChBkJ,GAAWkG,aACNpF,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,sBAAuBI,UACxC,SAAA6P,GACC1I,EAAS,CAACvH,KAAM,2BAG5BqP,UAAW,SAACC,EAAMtP,EAAMoK,EAAOmF,GAC3BhI,EAAS,CAACvH,KAAM,uBAChBkJ,GAAWmG,UAAUC,EAAMtP,EAAMoK,EAAOmF,GACnCvF,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,wBAChBuH,EAAS,CAACvH,KAAM,wBAChBkJ,GAAWkG,aACNpF,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,sBAAuBI,UACxC,SAAA6P,GACC1I,EAAS,CAACvH,KAAM,2BAEzB,SAAAiQ,GACC1I,EAAS,CAACvH,KAAM,2BAG5BwP,aAAc,SAACmO,GACXA,EAAgBhd,IAAI,SAAAC,GAChB2G,EAAS,CAACvH,KAAM,0BAChBkJ,GAAWsG,aAAa5O,EAAEwJ,MAAOxJ,EAAEZ,MAC9BgK,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,0BAChBuH,EAAS,CAACvH,KAAM,wBAChBkJ,GAAWkG,aACNpF,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,sBAAuBI,UACxC,SAAA6P,GACC1I,EAAS,CAACvH,KAAM,2BAEzB,SAAAiQ,GACC1I,EAAS,CAACvH,KAAM,+BAKhCke,iBAAkB,SAACP,GACfA,EAAgBhd,IAAI,SAAAC,GAChB2G,EAAS,CAACvH,KAAM,0BAChBkJ,GAAWsG,aAAa5O,EAAEwJ,MAAOxJ,EAAEZ,MAC9BgK,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,2BACjB,SAAAiQ,GACC1I,EAAS,CAACvH,KAAM,+BAIhCyP,aAAc,SAACzP,EAAMoK,GACjB7C,EAAS,CAACvH,KAAM,0BAChBkJ,GAAWuG,aAAazP,EAAMoK,GACzBJ,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,0BAChBuH,EAAS,CAACvH,KAAM,wBAChBkJ,GAAWkG,aACNpF,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,sBAAuBI,UACxC,SAAA6P,GACC1I,EAAS,CAACvH,KAAM,2BAEzB,SAAAiQ,GACC1I,EAAS,CAACvH,KAAM,6BAG5B0P,cAAe,SAAC1P,EAAMoK,GAClB7C,EAAS,CAACvH,KAAM,2BAChBkJ,GAAWwG,cAAc1P,EAAMoK,GAC1BJ,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,2BAChBuH,EAAS,CAACvH,KAAM,wBAChBkJ,GAAWkG,aACNpF,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,sBAAuBI,UACxC,SAAA6P,GACC1I,EAAS,CAACvH,KAAM,2BAEzB,SAAAiQ,GACC1I,EAAS,CAACvH,KAAM,8BAG5BkK,aAAc,SAACC,EAAMnK,EAAMoK,GACvB7C,EAAS,CAACvH,KAAM,+BAChBkJ,GAAWgB,aAAaC,EAAMnK,EAAMoK,GAC/BJ,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,gCACjB,SAAAiQ,GACC1I,EAAS,CAACvH,KAAM,oCAMPqH,CAA6CG,YAhZvD,SAAA7E,GAAK,MAAK,CACrB4B,KAAM,CACJnB,MAAO,OACPD,OAAQ,OACR0X,UAAW,OACXjV,gBAAiB,SAEnB+U,MAAO,CACLpB,SAAU,KAEZmB,QAAS,CACLI,aAAc,GACdvX,YAAa,GACb8N,UAAW,MAmYmD7J,CAAmBkW,gMC/YnFoB,GAAc,CAClBpH,QAASqH,KACTC,QAASC,KACThP,MAAOiP,KACPC,KAAMC,MA2DD,IAAMC,GAAyB7X,YAxDtB,SAAA7E,GAAK,MAAK,CACxB+U,QAAS,CACP9R,gBAAiByS,KAAM,MAEzBpI,MAAO,CACLrK,gBAAiBjD,EAAMsV,QAAQhI,MAAMqP,MAEvCH,KAAM,CACJvZ,gBAAiBjD,EAAMsV,QAAQ3T,QAAQgb,MAEzCN,QAAS,CACPpZ,gBAAiB2Z,KAAM,MAEzBja,KAAM,CACJ+R,SAAU,IAEZmI,YAAa,CACXC,QAAS,GACTlc,YAAaZ,EAAMqF,QAAQ,IAE7BkI,QAAS,CACPzI,QAAS,OACT8I,WAAY,YAkCsB/I,CA9BtC,SAA2B/E,GAAO,IACxBC,EAA4DD,EAA5DC,QAASM,EAAmDP,EAAnDO,UAAWkN,EAAwCzN,EAAxCyN,QAASrJ,EAA+BpE,EAA/BoE,QAAS1B,EAAsB1C,EAAtB0C,QAAYua,EAD1Bzf,OAAA0f,GAAA,EAAA1f,CACoCwC,EADpC,uDAE1Bmd,EAAOd,GAAY3Z,GAEzB,OACErC,EAAAzB,EAAA0B,cAAC8c,GAAA,EAAD5f,OAAA6f,OAAA,CACE9c,UAAW,CAACN,EAAQyC,GAAUnC,GAC9B+c,mBAAiB,kBACjB7P,QACEpN,EAAAzB,EAAA0B,cAAA,QAAMyC,GAAG,kBAAkBxC,UAAWN,EAAQwN,SAC5CpN,EAAAzB,EAAA0B,cAAC6c,EAAD,CAAM5c,UAAW,CAACN,EAAQ4C,KAAM5C,EAAQ8c,eACvCtP,GAGLnQ,OAAQ,CACN+C,EAAAzB,EAAA0B,cAAC+B,EAAA,EAAD,CACEf,IAAI,QACJgB,aAAW,QACXJ,MAAM,UACN3B,UAAWN,EAAQsd,MACnBhc,QAAS6C,GAET/D,EAAAzB,EAAA0B,cAACkd,GAAA5e,EAAD,CAAW2B,UAAWN,EAAQ4C,UAG9Boa,2BC9CJ1N,GAAe,kBAAMlP,EAAAzB,EAAA0B,cAAA,OAAKM,MAAO,CAACF,OAAQ,OAAQC,MAAO,OAAQqE,QAAS,OAAQ8I,WAAY,SAAUC,eAAgB,SAAU5K,gBAAiB,UAAWjB,MAAO,UAAhJ,oBAErBub,8MACFC,MAAQ,KACRzP,MAAQ,OAER5Q,MAAQ,CACJ8G,MAAM,EACNrJ,MAAO,QAGXoT,kBAAoB,WAChBxO,EAAKM,MAAM2d,OACX,IAAMC,EAAKC,KAAc,UAAA9f,OAAWoP,OAAOC,SAASC,SAA3B,UACzBuQ,EAAGE,GAAG,UAAW,WACbxU,QAAQC,IAAI,eAEhBqU,EAAGE,GAAG,gBAAiB,SAAAlW,GACnB,IAAMjK,EAAOuJ,KAAK6W,MAAMnW,GACxBlI,EAAKM,MAAMge,SAAS,gBAAiBrgB,KAEzCigB,EAAGE,GAAG,eAAgB,SAAAlW,GAClB,IAAMjK,EAAOuJ,KAAK6W,MAAMnW,GACxBlI,EAAKM,MAAMge,SAAS,eAAgBrgB,KAExCigB,EAAGE,GAAG,sBAAuB,SAAAlW,GACzB,IAAMjK,EAAOuJ,KAAK6W,MAAMnW,GACxBlI,EAAKM,MAAMge,SAAS,sBAAuBrgB,KAE/CigB,EAAGE,GAAG,6BAA8B,SAAAlW,GAChC,IAAMjK,EAAOuJ,KAAK6W,MAAMnW,GACxBlI,EAAKM,MAAMge,SAAS,6BAA8BrgB,KAEtDigB,EAAGE,GAAG,OAAQ,SAAAlW,GACV,IAAMjK,EAAOuJ,KAAK6W,MAAMnW,GACxBlI,EAAKM,MAAMge,SAAS,OAAQrgB,KAEhCigB,EAAGE,GAAG,sBAAuB,SAAAlW,GACzB,IAAMjK,EAAOuJ,KAAK6W,MAAMnW,GACxBlI,EAAKM,MAAMge,SAAS,sBAAuBrgB,KAE/CigB,EAAGE,GAAG,qBAAsB,SAAAlW,GACxBlI,EAAKM,MAAM2M,eAEfiR,EAAGE,GAAG,oBAAqB,SAAAlW,GACvB,IAAMjK,EAAOuJ,KAAK6W,MAAMnW,GACxBlI,EAAKM,MAAMge,SAAS,oBAAqBrgB,QAIjDyQ,0BAA4B,SAACC,GACF,OAApBA,EAAUvT,OAAmBuT,EAAUvT,QAAU4E,EAAKM,MAAMlF,QAC3D4E,EAAKge,MAAMzgB,KAAKoR,EAAUvT,OAEtB4E,EAAKrC,MAAM8G,KACXzE,EAAKC,SAAS,CAAEwE,MAAM,IAEtBzE,EAAKue,mBAKjBA,aAAe,WACPve,EAAKge,MAAM3gB,OAAS,GACpB2C,EAAKC,SAAS,CACV7E,MAAO4E,EAAKge,MAAMQ,QAClB/Z,MAAM,OAKlBsS,YAAc,SAACxE,EAAOkM,GACH,cAAXA,GAGJze,EAAKC,SAAS,CAAEwE,MAAM,OAG1Bia,aAAe,WACX1e,EAAKue,wFAGA,IACEhe,EAAWH,KAAKE,MAAhBC,QACP,OACQI,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWN,EAAQ6B,MACpBzB,EAAAzB,EAAA0B,cAACqE,EAAD,KAE+B,cAA3B7E,KAAKE,MAAMzF,YAA8B8F,EAAAzB,EAAA0B,cAAC8P,GAAD,MACd,mBAA3BtQ,KAAKE,MAAMzF,YAAmC8F,EAAAzB,EAAA0B,cAAC+Y,GAAD,MACnB,oBAA3BvZ,KAAKE,MAAMzF,YAAoC8F,EAAAzB,EAAA0B,cAACwa,GAAD,MACpB,YAA3Bhb,KAAKE,MAAMzF,YAA4B8F,EAAAzB,EAAA0B,cAAC8b,GAAD,MACZ,UAA3Btc,KAAKE,MAAMzF,YAA0B8F,EAAAzB,EAAA0B,cAAC+d,GAAA,MAAD,MAAYhe,EAAAzB,EAAA0B,cAACge,GAAD,OAGrDje,EAAAzB,EAAA0B,cAACie,GAAA,EAAD,CACIC,aAAc,CACVC,SAAU,MACVC,WAAY,UAEhBva,KAAMrE,KAAKzC,MAAM8G,KAEjBC,QAAStE,KAAK2W,YACdkI,SAAU7e,KAAKse,aACfne,QAAS,CAAC2e,sBAAuB3e,EAAQ4e,YAEzCxe,EAAAzB,EAAA0B,cAACsc,GAAD,CACIxY,QAAStE,KAAK2W,YACd/T,QAA8B,OAArB5C,KAAKzC,MAAMvC,MAAiB,OAASgF,KAAKzC,MAAMvC,MAAMyC,KAC/DkQ,QAA8B,OAArB3N,KAAKzC,MAAMvC,MAAiB,GAAKgF,KAAKzC,MAAMvC,MAAM2S,mBA3GrEhJ,IAAMC,WAgJxB,IA2CMoa,GAAela,YArDrB,SAAyBvH,GAAO,IAAAwH,EACaxH,EAAMD,IAE/C,MAAO,CACH7C,YAJwBsK,EACpBtK,YAIJO,MALwB+J,EACP/J,MAKjBJ,SANwBmK,EACAnK,WASL,SAACoK,GAAD,MAAe,CACtC6Y,KAAM,WACF7Y,EAAS,CAACvH,KAAM,mCAChBkJ,GAAWuC,uBACNzB,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,iCAAkCI,UACnD,SAAA6P,GACC1I,EAAS,CAACvH,KAAM,iCAAkCiQ,YAG1D1I,EAAS,CAACvH,KAAM,yBAChBkJ,GAAWoE,cACNtD,KAAK,SAAA5J,GACmB,OAAlBA,EAAKjD,WACJoK,EAAS,CAACvH,KAAM,yBAChBkJ,GAAW0D,YAAYhL,EAAM4f,WAAW3hB,IAAI1C,UACvC6M,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,0BACjB,SAAAiQ,GACC1I,EAAS,CAACvH,KAAM,4BAG5BuH,EAAS,CAACvH,KAAM,uBAAwBI,UACzC,SAAA6P,GACC1I,EAAS,CAACvH,KAAM,uBAAwBiQ,YAEhD1I,EAAS,CAACvH,KAAM,wBAChBkJ,GAAWkG,aACNpF,KAAK,SAAA5J,GACFmH,EAAS,CAACvH,KAAM,sBAAuBI,UACxC,SAAA6P,GACC1I,EAAS,CAACvH,KAAM,2BAG5ByhB,WAAa,WACTla,EAAS,CAACvH,KAAM,iBAEpBygB,SAAU,SAACiB,EAAOthB,GACdmH,EAAS,CAACvH,KAAM0hB,EAAOthB,YAKViH,CAA6CG,YAtMnD,SAAA7E,GAAK,MAAK,CACrB4B,KAAM,CACFpB,OAAQ,QAEZme,UAAW,CACPK,IAAK,MAiMqDna,CAAmB0Y,KC7L7Evd,WAAQif,YAAe,CAC3B3J,QAAS,CACP3T,QAAS,CACPud,KAAM,UACNvC,KAAM,UACNwC,aAAc,WAEhBC,UAAW,CACTF,KAAM,UACNC,aAAc,eAoBtBE,iBACIlf,EAAAzB,EAAA0B,cAACkf,EAAA,EAAD,CAAkBtf,MAAOA,IACrBG,EAAAzB,EAAA0B,cAACmf,EAAA,EAAD,CAAUtgB,MAAOA,GACbkB,EAAAzB,EAAA0B,cAACwe,GAAD,QAGRY,SAASC,eAAe","file":"static/js/main.289e73d0.chunk.js","sourcesContent":["const initialState = {\r\n    currentPage: '',\r\n    currentTab: 0,\r\n    currentEditTab: 0,\r\n    timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n    alert: null,\r\n    time: Date.now(),\r\n    commissioningData: null,\r\n    fetchingCommissioningData: false,\r\n    currentTracker: null,\r\n    currentTrackerInfo: null,\r\n    xbeeResponse: [],\r\n    controlledTrackers: [],\r\n    editedTrackers: [],\r\n    SPAParameters: null,\r\n    stowAngles: null,\r\n    sendingSPAParameters: false,\r\n    sendingStowAngles: false,\r\n    gettingSPAParameters: false,\r\n    gettingStowAngles: false,\r\n    addingTrackers: false,\r\n    sensors: [],\r\n    responseQueue: [],\r\n    listen: false,\r\n    windSense: {\r\n        speed: null,\r\n        direction: null\r\n    },\r\n    wifiList: [],\r\n    sensorEvents: {\r\n        wind: false\r\n    },\r\n    roverStatus: {}\r\n}\r\n\r\nconst difference = (a1, a2) => {\r\n    var result = [];\r\n    for (var i = 0; i < a1.length; i++) {\r\n        if (a2.indexOf(a1[i]) === -1) {\r\n            result.push(a1[i]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function app(state, action) {\r\n    if (typeof state === 'undefined') {\r\n      return initialState\r\n    }\r\n    switch (action.type) {\r\n        case 'changeEvent/rover':\r\n        return {\r\n            ...state,\r\n            roverStatus: {...state.roverStatus, [action.json.DID]: action.json.state}\r\n        }\r\n\r\n        case 'SCAN_WIFI_SUCCESS':\r\n        return {\r\n            ...state,\r\n            wifiList: action.json.Result\r\n        }\r\n\r\n        case 'sensorReadings/wind':\r\n        return {\r\n            ...state,\r\n            windSense: action.json\r\n        }\r\n\r\n        case 'time':\r\n        return {\r\n            ...state,\r\n            time: action.json.time\r\n        }\r\n\r\n        case 'SET_CURRENT_TRACKER':\r\n        return {\r\n            ...state,\r\n            currentTracker: action.trackerID\r\n        }\r\n\r\n        case 'SET_RESPONSE_LISTENER':\r\n        return {\r\n            ...state,\r\n            listen: true\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: true,\r\n            responseQueue: []\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_REQUEST':\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: true,\r\n            responseQueue: []\r\n        }\r\n\r\n        case 'ui/rover/response/multiple':\r\n        if(state.listen) {\r\n            if(state.editedTrackers.length === state.responseQueue.length + 1) {\r\n                return {\r\n                    ...state,\r\n                    responseQueue: [...state.responseQueue, action.json],\r\n                    listen: false\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                responseQueue: [...state.responseQueue, action.json]\r\n            }\r\n        } else {\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        \r\n\r\n        case 'GET_SENSORS_SUCCESS':\r\n        let temp = {}\r\n        action.json.Result.map(s => {\r\n            temp[s.type] = s.enabled\r\n        })\r\n        return {\r\n            ...state,\r\n            sensors: action.json.Result,\r\n            sensorEvents: {...state.sensorEvents, ...temp}\r\n        }\r\n\r\n        case 'REMOVE_SENSOR_SUCCESS':\r\n                alert('Removed Sensor Successfully')\r\n        return {\r\n            ...state,/* \r\n            alert: {\r\n                type: 'success',\r\n                message: 'Removed Sensor Successfully'\r\n            } */\r\n        }\r\n\r\n        case 'ADD_SENSORS_SUCCESS':\r\n        alert('Added Sensor Successfully')\r\n        return {\r\n            ...state,/* \r\n            alert: {\r\n                type: 'success',\r\n                message: 'Added Sensor Successfully'\r\n            } */\r\n        }\r\n        \r\n        case 'CHANGE_PAGE':\r\n        return {\r\n            ...state,\r\n            currentPage: action.page,\r\n            responseQueue: [],\r\n            commandQueue: []\r\n        }\r\n\r\n        case 'CHANGE_TAB':\r\n        return {\r\n            ...state,\r\n            currentTab: action.value.value,\r\n            responseQueue: [],\r\n            commandQueue: []\r\n        }\r\n\r\n        \r\n        case 'CHANGE_EDIT_TAB':\r\n        return {\r\n            ...state,\r\n            currentEditTab: action.value.value,\r\n            responseQueue: [],\r\n            commandQueue: []\r\n        }\r\n\r\n        case 'CLEAR_ALERT':\r\n        return {\r\n            ...state,\r\n            alert: null           \r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_REQUEST':\r\n        return {\r\n            ...state,\r\n            fetchingCommissioningData: true\r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_SUCCESS':\r\n        if(action.json.staticData === null || action.json.staticData.length === 0) {\r\n            return {\r\n                ...state,\r\n                fetchingCommissioningData: false,\r\n                currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,\r\n                commissioningData: null\r\n            }\r\n        } else {\r\n            let newRoverStatus = {...state.roverStatus}\r\n            action.json.staticData.map(r => {\r\n                newRoverStatus[r.deviceID] = 'online'\r\n            })\r\n            return {\r\n                ...state,\r\n                fetchingCommissioningData: false,\r\n                currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,\r\n                commissioningData: action.json.staticData,\r\n                currentTracker: action.json.staticData[0].trackerID,\r\n                roverStatus: newRoverStatus\r\n            }\r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_FAILURE':\r\n        alert('Error loading commissioning data')\r\n        return {\r\n            ...state,\r\n            fetchingCommissioningData: false,\r\n            currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error loading commissioning data'\r\n            } */\r\n        }\r\n\r\n        case 'GET_TIMEZONE_SUCCESS':\r\n        if(action.json.timeZone !== null) {\r\n            return {\r\n                ...state,\r\n                timeZone: action.json.timeZone\r\n            }\r\n        } else {\r\n            return state\r\n        }\r\n\r\n        case 'GET_TIMEZONE_FAILURE':\r\n        alert('Error getting timezone')\r\n        return {\r\n            ...state,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting timezone'\r\n            } */\r\n        }\r\n\r\n        case 'SCAN':\r\n        return {\r\n            ...state,\r\n            currentPage: 'Row Controller',\r\n            currentTab: 1\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_REQUEST':\r\n        return {\r\n            ...state\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_SUCCESS':\r\n        return {\r\n            ...state,\r\n            currentTrackerInfo: action.json\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_FAILURE':\r\n        alert('Error getting current tracker info')\r\n        return {\r\n            ...state,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting current tracker info'\r\n            } */\r\n        }\r\n\r\n        case 'DISCOVER_SUCCESS':\r\n        alert('Started Scanning')\r\n        return {\r\n            ...state,\r\n            xbeeResponse: [],/* \r\n            alert: {\r\n                type: 'success',\r\n                message: 'Started Scanning'\r\n            } */\r\n        }\r\n\r\n        case 'DISCOVER_FAILURE':\r\n        alert('Error Starting Scan')\r\n        return {\r\n            ...state,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error starting scan'\r\n            } */\r\n        }\r\n\r\n        case 'ui/rover/scan':\r\n        let a = null\r\n        if(state.commissioningData === null) {\r\n            a = [...state.xbeeResponse, action.json]\r\n        } else {\r\n            let b = state.commissioningData.filter(r => action.json.DID === r.deviceID)\r\n            if(b.length === 0) {\r\n                a = [...state.xbeeResponse, action.json]\r\n            } else {\r\n                a = [...state.xbeeResponse]\r\n            }\r\n                \r\n        }\r\n        return {\r\n            ...state,\r\n            xbeeResponse: a\r\n        }\r\n\r\n        case 'ADD_TRACKERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            addingTrackers: true\r\n        }\r\n\r\n        case 'ADD_TRACKERS_SUCCESS':\r\n        alert('Tracker(s) added')\r\n        const newXbeeResponse = difference(state.xbeeResponse, action.devices)\r\n        return {\r\n            ...state,\r\n            xbeeResponse: newXbeeResponse,\r\n            addingTrackers: false,/* \r\n            alert: {\r\n                type: 'success',\r\n                message: 'Tracker(s) added'\r\n            } */\r\n        }\r\n\r\n        case 'ADD_TRACKERS_FAILURE':\r\n        alert('Error adding trackers')\r\n        return {\r\n            ...state,\r\n            addingTrackers: false,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error adding trackers'\r\n            } */\r\n        }\r\n\r\n        case 'SET_EDITED_TRACKERS':\r\n        return {\r\n            ...state,\r\n            editedTrackers: action.trackers\r\n        }\r\n\r\n        case 'SET_CONTROLLED_TRACKERS':\r\n        return {\r\n            ...state,\r\n            controlledTrackers: action.trackers\r\n        }\r\n\r\n        case 'ui/rover/spa':\r\n        return {\r\n            ...state,\r\n            SPAParameters: {...state.SPAParameters, [action.json.DID]: action.json},\r\n            gettingSPAParameters: false\r\n        }\r\n\r\n        case 'ui/rover/stowangles':\r\n        return {\r\n            ...state,\r\n            stowAngles: {...state.stowAngles, [action.json.DID]: action.json},\r\n            gettingStowAngles: false\r\n        }\r\n\r\n        case 'GET_STOW_ANGLES_REQUEST':\r\n        return {\r\n            ...state,\r\n            gettingStowAngles: true\r\n        }\r\n\r\n        case 'GET_STOW_ANGLES_FAILURE':\r\n        alert('Error getting stow angles')\r\n        return {\r\n            ...state,\r\n            gettingStowAngles: false,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting stow angles'\r\n            } */\r\n        }\r\n\r\n        case 'GET_SPA_PARAMETERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            gettingSPAParameters: true\r\n        }\r\n\r\n        case 'GET_SPA_PARAMETERS_FAILURE':\r\n        alert('Error getting SPA parameters')\r\n        return {\r\n            ...state,\r\n            gettingSPAParameters: false,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting SPA parameters'\r\n            } */\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_FAILURE':\r\n        alert('Error setting SPA parameters')\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: false,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error setting SPA parameters'\r\n            } */\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_SUCCESS':\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: false\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_FAILURE':\r\n        alert('Error setting stow angles')\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: false,/* \r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error setting stow angles'\r\n            } */\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_SUCCESS':\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: false\r\n        }\r\n\r\n        default:\r\n        return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport { app } from '../App/app.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  app\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n        loggerMiddleware        \r\n    )\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport Time from '@material-ui/icons/AccessTime';\r\nimport Toys from '@material-ui/icons/Toys';\r\nimport { Chip } from '@material-ui/core';\r\n\r\nconst drawerWidth = 190;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100%'\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('md')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    marginLeft: drawerWidth,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: 20,\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    paddingTop: 88\r\n  },\r\n  selected: {\r\n    backgroundColor: '#54AAB3 !important',\r\n    color: '#ffffff !important'\r\n  },\r\n  iconSVG: {\r\n    fill: 'white',\r\n    stroke: 'white'\r\n  },\r\n  icon: {\r\n    color: 'white'\r\n  }\r\n});\r\n\r\nclass ResponsiveDrawer extends React.Component {\r\n  state = {\r\n    mobileOpen: false,\r\n  };\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n  };\r\n\r\n  \r\n  checkTime = (i) => {\r\n    if (i < 10) {i = \"0\" + i};  // add zero in front of numbers < 10\r\n    return i;\r\n  }\r\n\r\n  render() {\r\n    const { classes, theme, children } = this.props;\r\n\r\n    const drawer = (\r\n      <div>\r\n        <div className={classes.toolbar} >\r\n            <img src='img/voyager-logo-no bg.png' height='60px' width='90%' style={{marginLeft: '2.5%', marginRight: '2.5%'}} alt=''></img>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Dashboard', 'Row Controller', 'Zone Controller', 'Sensors', 'About'].map((text, index) => (\r\n            <ListItem \r\n                button \r\n                key={text}\r\n                onClick={() => this.props.changePage(text)}\r\n                selected={this.props.currentPage === text}\r\n                classes={{selected: classes.selected}}\r\n                disabled={text === 'About'}\r\n            >{/* \r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\r\n              <ListItemText disableTypography primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" color='primary' className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h5\" color=\"inherit\" noWrap>\r\n              Voyager Zone Controller\r\n            </Typography>\r\n            <Chip\r\n              icon={<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2em\" height=\"2em\" viewBox=\"0 0 296.639 296.639\"><g><g><g><path d=\"M267.83,59.159c-5.268-4.88-13.488-6.784-20.332-5.176c-0.728-7.116-3.608-14.528-9.94-19.12c4.488-9.668,2.444-20.848-5.652-29.592c-2.916-3.152-6.044-4.912-9.304-5.228c-4.144-0.408-9.108,2.108-9.84,6.888c-0.108,0.704-0.108,1.46-0.096,2.208c0.004,0.12,0.008,0.256,0.012,0.396c-0.492-0.376-1.18-1.008-2.02-2.036c-4.708-5.724-12.776-8.548-20.092-7.064c-2.532,0.52-4.556,1.912-6.04,3.068c-1.972,1.536-3,3.324-3.064,5.304c-0.112,3.472,2.788,6.052,5.124,8.124c0.36,0.32,0.8,0.712,1.196,1.084c-1.492,0.22-3.776,0.26-5.324,0.284c-3.268,0.056-6.64,0.116-9.42,0.952c-2,0.608-8.088,2.456-9.364,7.852c-1.26,5.328,3.108,9.744,7.612,12.096c4.396,2.3,9.132,3.768,14.068,4.356c0.636,0.08,1.304,0.136,1.976,0.188c1.04,0.084,2.688,0.22,3.412,0.484c0,0.04,0.02,0.072,0.02,0.112c-3.044,3.696-5.564,8-7.5,13.096c-2.7,7.12-3.3,14.66-3.884,21.948l-0.328,3.968c-0.716,8.008-2.012,16.312-6.6,22.796c-4.004,5.644-14.836,11.488-16.884,10.78c0,0-0.052-0.132-0.052-0.472c0.136-58.088-35.64-85.632-68.944-86.64c-41.5-1.312-62.604,33.836-64.592,66.98c-0.096,1.636,1.168,3.044,2.824,3.136c1.608,0.112,3.08-1.152,3.18-2.784c2.612-43.56,31.22-62.228,58.404-61.4c30.488,0.928,63.24,26.572,63.116,80.696c-0.008,2.952,1.452,5.104,4.004,5.904c5.688,1.764,15.54-4.308,21.028-9.6c-0.076,1.256-0.18,2.508-0.176,3.756c0.008,2.964,0.248,6.404,1.96,9.42c1.768,3.124,4.992,5.084,8.148,5.084c0.42,0,0.844-0.036,1.264-0.112c2.944-0.504,5.068-2.612,6.408-4.156c2.312-2.652,4.148-5.652,5.452-8.916c0.436-1.096,0.848-2.256,1.26-3.432c1.628-4.624,3.168-9.008,6.936-10.36c0.276,1.472-0.068,3.14-0.432,4.9c-0.16,0.78-0.32,1.556-0.436,2.332c-0.508,3.428,0.252,8.016,4.084,9.668c1.672,0.72,3.48,0.688,5.224-0.112c2.552-1.168,4.824-3.98,5.78-7.156c0.252-0.844,0.468-1.716,0.684-2.596c0.344-1.4,0.676-2.76,1.168-3.932c0.776,2.052,1.6,4.164,2.904,6.108c2.236,3.32,6.452,6.168,10.884,5.04c0.28-0.072,0.528-0.236,0.796-0.348c2.016,9.776,2.136,19.464,0.232,28.604c-3.172,15.248-11.992,28.372-24.196,36c-4.264,2.668-10.692,5.66-17.156,4.612c-1.428-0.22-2.824,0.588-3.308,1.94c-2.892,8.012-12.62,19.96-19.644,24.12c-0.264,0.156-0.456,0.376-0.652,0.588c-1.496,0.172-2.672,1.38-2.672,2.904v29.956c0,0.096,0.048,0.18,0.056,0.272h-6.432c0.008-0.096,0.056-0.176,0.056-0.272v-29.956c0-1.088-0.62-2-1.504-2.52c-0.18-0.296-0.4-0.58-0.688-0.808c-5.292-4.164-5.764-17.336-2.232-23.764c0.576-1.056,0.456-2.352-0.308-3.284c-0.764-0.932-2.02-1.316-3.188-0.98c-17.708,5.164-37.828,0.408-51.244-12.108c-1.208-1.128-3.112-1.072-4.252,0.12c-1.14,1.192-1.084,3.068,0.12,4.192c13.544,12.636,33.2,18.16,51.464,14.82c-2.216,8.916-0.52,20.5,5.824,25.58v28.708c0,0.096,0.048,0.18,0.056,0.272H114.93c-0.048,0-0.084,0.024-0.128,0.024l-9.456-11.232c-0.4-0.476-0.992-0.748-1.62-0.748h-48.6c-0.816,0-1.556,0.468-1.908,1.196c-0.344,0.728-0.232,1.592,0.288,2.212l13.268,15.76l-13.268,15.76c-0.52,0.62-0.632,1.484-0.288,2.212c0.348,0.728,1.088,1.192,1.908,1.192h48.6c0.628,0,1.22-0.272,1.62-0.748l9.436-11.212h41.944c0,0.012-0.008,0.02-0.008,0.032v32.292c0,1.64,1.344,2.968,3.008,2.968h12.336c1.66,0,3.008-1.328,3.008-2.968v-32.292c0-0.012-0.008-0.02-0.008-0.032h50.356v11.62c0,0.74,0.404,1.428,1.052,1.8c0.328,0.184,0.688,0.28,1.052,0.28s0.728-0.096,1.052-0.28l33.044-18.828c0.648-0.372,1.052-1.06,1.052-1.8s-0.404-1.428-1.052-1.8l-33.044-18.828c-0.656-0.368-1.452-0.368-2.104,0c-0.648,0.372-1.052,1.06-1.052,1.8v11.616H175.01c0.008-0.096,0.056-0.176,0.056-0.272v-28.248c0.132-0.056,0.276-0.036,0.404-0.112c7.628-4.516,17.248-15.94,21.328-25.036c5.944,0.304,12.424-1.652,18.904-5.708c13.58-8.488,23.368-23.004,26.872-39.824c3.148-15.12,1.308-31.56-5.332-47.532l-0.232-0.56c-0.952-2.288-1.856-4.444-1.728-6.436c0.136-2.076,1.408-4.12,2.836-6.248c0.096,1.868,0.164,3.736,0.348,5.584c0.264,2.768,0.688,5.956,2.316,8.772c1.92,3.332,5.252,5.384,8.64,5.384c0.236,0,0.468-0.008,0.704-0.028c4.696-0.408,7.86-4.604,8.564-8.54c0.672-3.716-0.356-7.272-1.372-10.312c-1.488-4.44-3.3-8.772-5.368-12.988c6.524,0.052,13.104,2.564,17.144,6.756c0.576,0.596,1.368,0.924,2.18,0.924c0.288,0,0.576-0.04,0.86-0.128c1.084-0.32,1.892-1.212,2.1-2.312C275.718,72.059,273.322,64.243,267.83,59.159z M229.626,259.275v-10.264v-10.092l26.724,15.228l-26.724,15.228V259.275z M102.742,269.159H59.614l11.516-13.684c0.648-0.772,0.648-1.884,0-2.66l-11.516-13.684h43.128l12.636,15.012L102.742,269.159z M169.054,261.387v29.324h-6.32v-29.324c0-0.012-0.004-0.02-0.004-0.032h6.332C169.058,261.367,169.054,261.375,169.054,261.387z M225.418,251.091v6.108h-0.004H118.282l1.452-1.72c0.648-0.772,0.648-1.884,0-2.66l-1.452-1.728H225.418z M187.826,37.827c-0.592-0.048-1.18-0.096-1.744-0.164c-4.204-0.508-8.24-1.752-11.984-3.708c-2.516-1.316-5.02-3.6-4.568-5.504c0.408-1.716,3.096-2.868,5.276-3.524c1.964-0.596,4.908-0.644,7.752-0.696c5.236-0.088,10.176-0.172,11.804-3.86c1.428-3.244-1.44-5.796-3.748-7.852c-0.936-0.836-3.128-2.78-3.14-3.512c0,0,0.088-0.304,0.788-0.852c1.024-0.792,2.236-1.644,3.528-1.904c5.164-1.072,10.876,0.944,14.196,4.988c2.492,3.032,4.816,4.568,7.112,4.688c1.408,0.072,2.844-0.452,3.908-1.496c1.744-1.716,1.704-3.928,1.68-5.396c-0.008-0.412-0.032-0.836,0.028-1.228c0.16-1.076,1.72-2,3.3-1.856c1.732,0.168,3.568,1.288,5.448,3.324c6.24,6.736,7.996,15.184,4.916,22.516c-3.656-1.736-8.864-3.376-15.504-2.024c-9.04,1.836-16.24,5.216-21.928,10.228C193.078,38.331,190.326,38.031,187.826,37.827z M241.678,59.671c-0.46,7.856-2.984,15.504-7.312,22.108l-0.836,1.256c-1.868,2.776-3.992,5.92-4.244,9.788c-0.22,3.372,1.052,6.404,2.168,9.08l0.232,0.548c1.548,3.732,2.816,7.484,3.804,11.232c-0.276,0.256-0.576,0.464-0.9,0.544c-2.392,0.628-4.924-1.28-6.276-3.296c-1.096-1.624-1.808-3.516-2.568-5.52c-0.432-1.136-0.864-2.276-1.368-3.388c-0.264-0.58-0.788-1.012-1.412-1.168c-0.64-0.168-1.3-0.024-1.808,0.364c-2.956,2.228-3.82,5.756-4.584,8.864c-0.192,0.808-0.392,1.612-0.624,2.384c-0.6,1.984-2.072,3.9-3.5,4.552c-0.836,0.38-1.388,0.22-1.736,0.072c-1.528-0.66-1.892-3.172-1.588-5.224c0.104-0.7,0.252-1.4,0.396-2.104c0.456-2.196,0.972-4.688,0.288-7.208c-0.112-0.412-0.456-1.676-1.672-2.412c-1.296-0.768-2.684-0.404-3.156-0.28c-6.084,1.656-8.236,7.764-10.128,13.148c-0.392,1.116-0.78,2.228-1.2,3.268c-1.128,2.828-2.72,5.428-4.724,7.724c-1.456,1.676-2.7,2.552-3.924,2.764c-1.992,0.336-4.012-1.192-4.976-2.896c-1.236-2.18-1.412-4.956-1.42-7.388c-0.012-3.528,0.336-7.092,0.984-10.596c3.604-6.82,4.788-14.552,5.452-22.012l0.332-4.024c0.576-7.2,1.116-13.996,3.52-20.328c5.124-13.504,14.124-20.888,29.188-23.948c6.752-1.368,11.46,1.32,14.944,3.304C240.062,42.871,242.102,52.239,241.678,59.671z M252.77,97.091c-0.296,1.652-1.588,3.52-3.156,3.656c-1.252,0.064-2.748-0.896-3.604-2.38c-1.04-1.796-1.34-4.14-1.556-6.392c-0.516-5.296-0.656-10.68-0.448-16.004c0.264-0.664,0.564-1.312,0.8-1.984c2.704,5.04,4.996,10.288,6.804,15.692C252.394,92.031,253.198,94.731,252.77,97.091z M248.886,69.027c-0.628-1.104-1.252-2.212-1.92-3.296c0.324-1.868,0.588-3.748,0.7-5.648c5.072-1.768,11.916-0.42,16.048,3.408c2.764,2.56,4.44,6.12,4.844,10.064C262.95,70.051,255.818,68.387,248.886,69.027z\"/><path d=\"M73.898,66.487c2.592-0.816,1.484-4.86-1.128-4.04c-28.344,8.928-40.844,41.248-34.464,68.108  c0.624,2.624,4.716,1.512,4.092-1.116C36.57,104.919,47.854,74.691,73.898,66.487z\"/><path d=\"M124.226,98.675c-0.068,2.696,4.176,2.696,4.244,0c0.376-14.748-11.428-26.448-23.868-32.808  c-2.42-1.236-4.568,2.376-2.14,3.616C113.574,75.167,124.566,85.395,124.226,98.675z\"/><path d=\"M59.714,123.883c-2.78,13.268,0.788,24.74,7.12,36.46c1.284,2.38,4.948,0.268,3.664-2.112  c-5.768-10.688-9.236-21.076-6.692-33.232C64.358,122.363,60.27,121.239,59.714,123.883z\"/><path d=\"M63.21,113.487c-1.108,2.44,2.548,4.572,3.664,2.116c7.556-16.632,28.364-33.856,45.696-17.74  c1.988,1.844,4.996-1.112,3-2.964C96.286,76.963,72.002,94.123,63.21,113.487z\"/><path d=\"M85.17,116.447c-7.444,17.128-6.732,41.524,8.896,53.932c2.988,2.376,7.268-1.8,4.252-4.196  c-13.316-10.576-14.384-31.944-7.956-46.74C91.87,115.971,86.69,112.943,85.17,116.447z\"/><path d=\"M110.63,99.999c-5.36,0.388-10.356,2-14.892,4.848c-3.256,2.048-0.244,7.188,3.036,5.128  c3.624-2.28,7.548-3.732,11.856-4.04C114.47,105.663,114.498,99.723,110.63,99.999z\"/><path d=\"M156.542,162.987c2.716-0.132,2.732-4.32,0-4.188c-5.36,0.256-10.56-0.212-15.724-1.696  c-2.628-0.752-3.748,3.288-1.128,4.04C145.202,162.723,150.818,163.259,156.542,162.987z\"/><path d=\"M200.826,135.259c-7.472,11.228-20.552,22.468-34.932,21.768c-2.728-0.132-2.724,4.056,0,4.188  c15.936,0.776,30.324-11.408,38.596-23.84C205.994,135.115,202.322,133.015,200.826,135.259z\"/><path d=\"M191.074,159.283c-3.3,3.376-7.012,6.196-11.556,7.708c-2.576,0.86-1.472,4.904,1.128,4.04  c5.244-1.748,9.612-4.88,13.432-8.788C195.97,160.303,192.974,157.339,191.074,159.283z\"/><path d=\"M197.426,158.403c2.268-2.86,4.36-5.832,6.408-8.852c1.52-2.248-2.152-4.348-3.664-2.116  c-1.84,2.72-3.7,5.428-5.744,8.004C192.758,157.543,195.742,160.527,197.426,158.403z\"/><path d=\"M220.374,48.571c-5.024,0-9.108,4.032-9.108,8.988s4.088,8.992,9.108,8.992c5.02,0,9.108-4.032,9.108-8.992  C229.486,52.603,225.398,48.571,220.374,48.571z M220.374,60.611c-1.708,0-3.092-1.364-3.092-3.052  c0-1.684,1.384-3.048,3.092-3.048s3.092,1.364,3.092,3.048C223.47,59.247,222.082,60.611,220.374,60.611z\"/></g></g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g></svg>}\r\n              style={this.props.sensorEvents.wind ? {marginLeft: 'auto', backgroundColor: 'white'} : {marginLeft: 'auto', backgroundColor: '#8c0000', color: 'white'}}\r\n              label={this.props.windSense.direction !== null ? this.props.windSense.direction.toFixed(2) : 'offline'}\r\n              classes={this.props.sensorEvents.wind ? {} : {icon: classes.iconSVG}}\r\n            />\r\n            <Chip\r\n              icon={<Toys />}\r\n              style={this.props.sensorEvents.wind ? {marginLeft: 10, backgroundColor: 'white'} : {marginLeft: 10, backgroundColor: '#8c0000', color: 'white'}}\r\n              label={this.props.windSense.speed !== null ? this.props.windSense.speed.toFixed(2) : 'offline'}\r\n              classes={this.props.sensorEvents.wind ? {} : {icon: classes.icon}}\r\n            />\r\n            <Chip\r\n              icon={<Time />}\r\n              style={{marginLeft: 10, backgroundColor: 'white'}}\r\n              label={`${this.checkTime(new Date(new Date(Number(this.props.time)).toLocaleString('en-US', {timeZone:  this.props.timeZone})).getHours())} : ${this.checkTime(new Date(new Date(Number(this.props.time)).toLocaleString('en-US', {timeZone:  this.props.timeZone})).getMinutes())}`}\r\n            />\r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav className={classes.drawer}>\r\n          <Hidden mdUp implementation=\"css\">\r\n            <Drawer\r\n              container={this.props.container}\r\n              variant=\"temporary\"\r\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n              open={this.state.mobileOpen}\r\n              onClose={this.handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden smDown implementation=\"css\">\r\n            <Drawer\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n        </nav>\r\n        <main className={classes.content}>\r\n          {children}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\n \r\nfunction mapStateToProps(state) {\r\n    const { currentPage, time, timeZone, windSense, sensorEvents } = state.app;\r\n    \r\n    return {\r\n        currentPage,\r\n        time,\r\n        timeZone,\r\n        windSense,\r\n        sensorEvents\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changePage: (page) => {\r\n      dispatch({type: 'CHANGE_PAGE', page})\r\n    }\r\n})\r\n  \r\nconst connectedNavBar = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ResponsiveDrawer));\r\nexport { connectedNavBar as NavBar }","import React, {Fragment} from 'react'\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { connect } from 'react-redux'\r\nimport {withStyles} from '@material-ui/core/styles'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%', width: '100%', padding: 24\r\n    },\r\n    selected: {\r\n        backgroundColor: '#54aab3 !important'\r\n    }\r\n})\r\n\r\nclass TrackerList extends React.Component {\r\n\r\n    render() {\r\n        const {classes, commissioningData, currentTracker, roverStatus} = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Typography variant='h5'>\r\n                        Tracker List\r\n                    </Typography>\r\n                    <Table>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell >TrackerID</TableCell>\r\n                            <TableCell >Status</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {commissioningData && commissioningData.map(n => {\r\n                                return (\r\n                                <TableRow\r\n                                    hover\r\n                                    //className={[n.trackerID === currentTracker ? classes.selected : classes.row, classes.tableRow]}\r\n                                    key={n.trackerID}\r\n                                    onClick={() => this.props.setCurrentTracker(n.trackerID)}\r\n                                    style={{cursor: 'pointer'}}\r\n                                    selected={n.trackerID === currentTracker}\r\n                                    classes={{selected: classes.selected}}\r\n                                >\r\n                                    <TableCell style={n.trackerID === currentTracker ? {color: 'white'} : {}}>\r\n                                        {n.trackerID}\r\n                                    </TableCell>\r\n                                    <TableCell style={n.trackerID === currentTracker ? {color: 'white'} : {}}>\r\n                                        {roverStatus[n.deviceID]}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                );\r\n                            })}\r\n                            </TableBody>\r\n                        </Table>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData, currentTracker, roverStatus } = state.app\r\n\r\n    return {\r\n        commissioningData,\r\n        currentTracker,\r\n        roverStatus\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCurrentTracker: (trackerID) => {\r\n        dispatch({type: 'SET_CURRENT_TRACKER', trackerID})\r\n    }\r\n})\r\n\r\n\r\nconst connectedTrackerList = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TrackerList))\r\nexport {connectedTrackerList as TrackerList}","export const appService = {\r\n    setWifiInfo,\r\n    uploadDriver,\r\n    selectSensor,\r\n    uploadKey,\r\n    setWindAddress,\r\n    getWindAddress,\r\n    caliberate,\r\n    sendCommand,\r\n    sendStow,\r\n    getCommissioningData,\r\n    getCurrentTrackerInfo,\r\n    triggerDiscovery,\r\n    setPanID,\r\n    threshold,\r\n    heartBeat,\r\n    setTimeZone,\r\n    getHeartBeat,\r\n    getThreshold,\r\n    getPanID,\r\n    getFrequency,\r\n    setFrequency,\r\n    getTimeZone,\r\n    getTime,\r\n    discover,\r\n    addTrackers,\r\n    removeTrackers,\r\n    sendSPAParameters,\r\n    sendStowAngles,\r\n    getSPAParameters,\r\n    getStowAngles,\r\n    getSensors,\r\n    addSensor,\r\n    removeSensor,\r\n    enableSensor,\r\n    disableSensor,\r\n    scanWifi\r\n};\r\nconst hostName = 'http://159.89.169.50:4000'; \r\n/*const hostName = `http://${window.location.hostname}:5000`;*/\r\n\r\nconst hostName2 = `http://${window.location.hostname}:5001`; \r\n\r\nfunction scanWifi() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        body: null\r\n    }\r\n\r\n    return fetch(`${hostName}/scanWifi`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction disableSensor(type, model) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            type: type, \r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/disable`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction enableSensor(type, model) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            type: type, \r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/enable`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction removeSensor(model, type) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            type: type, \r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/remove`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction addSensor(port, type, model, samplingPeriod) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            port: port, \r\n            type: type, \r\n            samplingPeriod: samplingPeriod,\r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/setParams`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getSensors() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        body: null\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/getParams`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getStowAngles(DID) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: 'QSTO'\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/get`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getSPAParameters(DID) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: \"QSPA\"\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/get`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction sendStowAngles(DID, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: 'HSTO',\r\n            VALUES: `${WindStowAngle}, ${SnowStowAngle}, ${CleanStowAngle}, ${NightStowAngle}, ${EmergencyStowAngle}`\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/set`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction sendSPAParameters(DID, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backtracking) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: \"HSPA\",\r\n            VALUES: `${Lattitude}, ${Longitude}, ${Altitude}, ${EastLimit}, ${WestLimit}, ${TrackerWidth}, ${Pitch}, ${TrackingAccuracy}, ${AzimuthDeviation}, ${AltitudeTrackeronEast}, ${AltitudeTrackeronWest}, ${StartTimeLead}, ${EndTimeLag}, 0, ${backtracking}`\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/set`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction removeTrackers(DIDs) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DIDs: DIDs\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/removePairedDevices`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction addTrackers(devices) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            devices: devices\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/addDiscoveredDevices`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction discover(did) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: did\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/scan`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction handleResponse(response) {\r\n    return response.json().then(json => {\r\n        if (!response.ok) {\r\n            const error = (json && json.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return json;\r\n    });\r\n}\r\n\r\n\r\nfunction setWifiInfo(ssid, pass, staticIP) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"ssid\": ssid,\r\n            \"password\": pass,\r\n            \"staticIP\": staticIP\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/setWifiInfo`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction uploadDriver(file, type, model) {\r\n    var data = new FormData()\r\n    data.append('file', file)\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: data\r\n    };\r\n\r\n    return fetch(`${hostName}/sensors/addDriver?type=${type}&model=${model}`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction uploadKey(file) {\r\n    var data = new FormData()\r\n    data.append('file', file)\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: data\r\n    };\r\n\r\n    return fetch(`${hostName}/loadBigQueryKey`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction selectSensor(windSensor, rainSensor, floodSensor, snowSensor) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"windSensor\": windSensor,\r\n            \"rainSensor\": rainSensor,\r\n            \"floodSensor\": floodSensor,\r\n            \"snowSensor\": snowSensor,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/sensors`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setWindAddress(address) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"deviceAddress\": address,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/windSensorSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getWindAddress() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/windSensorSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction caliberate(sensor) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"sensor\": sensor,\r\n        })\r\n    };\r\n\r\n\r\n    return fetch(`${hostName}/calibrateSensor`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n//control\r\n\r\nfunction sendCommand(deviceID, value) {\r\n\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"DID\": deviceID,\r\n            \"CMD\": \"HMNM\",\r\n            \"VALUES\": value\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/rover/control`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction sendStow(deviceID, mode) {\r\n\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"DID\": deviceID,\r\n            \"CMD\": \"HMOD\",\r\n            \"MODE\": mode\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/rover/control`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n//dashboard\r\n\r\n\r\nfunction getCommissioningData() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/getCommissioningData`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getCurrentTrackerInfo(trackerID) {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/getCurrentTrackerInfo?id=${trackerID}`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction triggerDiscovery() {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"CMD\": \"HINF\",\r\n            \"DID\": \"00000\",\r\n        })\r\n    };\r\n\r\n    return fetch(`http://${hostName2}/sendCommand`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\n//settings\r\n\r\nfunction setPanID(panID) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"panID\": panID\r\n        })\r\n    };\r\n\r\n    console.log(panID);\r\n\r\n    return fetch(`http://${hostName2}/settings/xbeePanID `, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction threshold(maxWindSpeed, maxRainFall, meanWindSpeed, windSpeedTimer, maxFloodLevel, maxSnowFall) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"maxWindSpeed\": maxWindSpeed,\r\n            \"maxRainFall\": maxRainFall,\r\n            \"meanWindSpeed\": meanWindSpeed,\r\n            \"windSpeedTimer\": windSpeedTimer,\r\n            \"maxFloodLevel\": maxFloodLevel,\r\n            \"maxSnowFall\": maxSnowFall,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/threshold`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setFrequency(power, status) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"powerRequestTimePeriod\": power,\r\n            \"statusRequestTimePeriod\": status,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/requestFrequency`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\n\r\nfunction heartBeat(enabled, hbinterval, maxMsgs) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"enabled\": enabled,\r\n            \"interval\": hbinterval,\r\n            \"maxMsgs\": maxMsgs,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/heartBeatSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setTimeZone(time) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"timeZone\": time,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/timeZone`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getTimeZone() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/timeZone`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getTime() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/time`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getThreshold() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/threshold`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getFrequency() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/requestFrequency`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getHeartBeat() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/heartBeatSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getPanID() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`http://${hostName2}/gettings/xbeePanID`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n","import React from 'react'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { connect } from 'react-redux'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%', width: '100%', padding: 24, flexWrap: 'nowrap'\r\n    }\r\n})\r\n\r\nconst NoCurrentTrackerInfo = () =>\r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            No Info Found For Selected Tracker.\r\n    </div>\r\n\r\nclass TrackerDetails extends React.Component {\r\n\r\n    timer = null\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.refresh()\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.currentTracker !== this.props.currentTracker) {\r\n            this.props.getCurrentTrackerInfo(nextProps.currentTracker)\r\n        }\r\n    }\r\n\r\n    refresh = (c = true) => {\r\n        this.props.getCurrentTrackerInfo(this.props.currentTracker)\r\n\r\n        if(c) {\r\n            this.timer = setTimeout(this.refresh, 30000)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes, currentTrackerInfo } = this.props\r\n\r\n        return (currentTrackerInfo === null ? <NoCurrentTrackerInfo /> :\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Typography variant='h5' style={{height: '48px'}}>\r\n                        Tracker Details\r\n                    </Typography>\r\n                    <div \r\n                        className={currentTrackerInfo.currentAngle !== '--' && (currentTrackerInfo.currentAngle > 58 ? 'angle60' :\r\n                        currentTrackerInfo.currentAngle > 56 ? 'angle58' :\r\n                        currentTrackerInfo.currentAngle > 54 ? 'angle56' :\r\n                        currentTrackerInfo.currentAngle > 52 ? 'angle54' :\r\n                        currentTrackerInfo.currentAngle > 50 ? 'angle52' :\r\n                        currentTrackerInfo.currentAngle > 48 ? 'angle50' :\r\n                        currentTrackerInfo.currentAngle > 46 ? 'angle48' :\r\n                        currentTrackerInfo.currentAngle > 44 ? 'angle46' :\r\n                        currentTrackerInfo.currentAngle > 42 ? 'angle44' :\r\n                        currentTrackerInfo.currentAngle > 40 ? 'angle42' :\r\n                        currentTrackerInfo.currentAngle > 38 ? 'angle40' :\r\n                        currentTrackerInfo.currentAngle > 36 ? 'angle38' :\r\n                        currentTrackerInfo.currentAngle > 34 ? 'angle36' :\r\n                        currentTrackerInfo.currentAngle > 32 ? 'angle34' :\r\n                        currentTrackerInfo.currentAngle > 30 ? 'angle32' :\r\n                        currentTrackerInfo.currentAngle > 28 ? 'angle30' :\r\n                        currentTrackerInfo.currentAngle > 26 ? 'angle28' :\r\n                        currentTrackerInfo.currentAngle > 24 ? 'angle26' :\r\n                        currentTrackerInfo.currentAngle > 22 ? 'angle24' :\r\n                        currentTrackerInfo.currentAngle > 20 ? 'angle22' :\r\n                        currentTrackerInfo.currentAngle > 18 ? 'angle20' :\r\n                        currentTrackerInfo.currentAngle > 16 ? 'angle18' :\r\n                        currentTrackerInfo.currentAngle > 14 ? 'angle16' :\r\n                        currentTrackerInfo.currentAngle > 12 ? 'angle14' :\r\n                        currentTrackerInfo.currentAngle > 10 ? 'angle12' :\r\n                        currentTrackerInfo.currentAngle > 8 ? 'angle10' :\r\n                        currentTrackerInfo.currentAngle > 6 ? 'angle8' :\r\n                        currentTrackerInfo.currentAngle > 4 ? 'angle6' :\r\n                        currentTrackerInfo.currentAngle > 2 ? 'angle4' :\r\n                        currentTrackerInfo.currentAngle > 0 ? 'angle2' :\r\n                        currentTrackerInfo.currentAngle > -2 ? 'angle0' :\r\n                        currentTrackerInfo.currentAngle > -4 ? 'angle_2' :\r\n                        currentTrackerInfo.currentAngle > -6 ? 'angle_4' :\r\n                        currentTrackerInfo.currentAngle > -8 ? 'angle_6' :\r\n                        currentTrackerInfo.currentAngle > -10 ? 'angle_8' :\r\n                        currentTrackerInfo.currentAngle > -12 ? 'angle_10' :\r\n                        currentTrackerInfo.currentAngle > -14 ? 'angle_12' :\r\n                        currentTrackerInfo.currentAngle > -16 ? 'angle_14' :\r\n                        currentTrackerInfo.currentAngle > -18 ? 'angle_16' :\r\n                        currentTrackerInfo.currentAngle > -20 ? 'angle_18' :\r\n                        currentTrackerInfo.currentAngle > -22 ? 'angle_20' :\r\n                        currentTrackerInfo.currentAngle > -24 ? 'angle_22' :\r\n                        currentTrackerInfo.currentAngle > -26 ? 'angle_24' :\r\n                        currentTrackerInfo.currentAngle > -28 ? 'angle_26' :\r\n                        currentTrackerInfo.currentAngle > -30 ? 'angle_28' :\r\n                        currentTrackerInfo.currentAngle > -32 ? 'angle_30' :\r\n                        currentTrackerInfo.currentAngle > -34 ? 'angle_32' :\r\n                        currentTrackerInfo.currentAngle > -36 ? 'angle_34' :\r\n                        currentTrackerInfo.currentAngle > -38 ? 'angle_36' :\r\n                        currentTrackerInfo.currentAngle > -40 ? 'angle_38' :\r\n                        currentTrackerInfo.currentAngle > -42 ? 'angle_40' :\r\n                        currentTrackerInfo.currentAngle > -44 ? 'angle_42' :\r\n                        currentTrackerInfo.currentAngle > -46 ? 'angle_44' :\r\n                        currentTrackerInfo.currentAngle > -48 ? 'angle_46' :\r\n                        currentTrackerInfo.currentAngle > -50 ? 'angle_48' :\r\n                        currentTrackerInfo.currentAngle > -52 ? 'angle_50' :\r\n                        currentTrackerInfo.currentAngle > -54 ? 'angle_52' :\r\n                        currentTrackerInfo.currentAngle > -56 ? 'angle_54' :\r\n                        currentTrackerInfo.currentAngle > -58 ? 'angle_56' :\r\n                        currentTrackerInfo.currentAngle > -60 ? 'angle_58' :\r\n                        'angle_60')} \r\n                        style={{width: '100%', height: '150px', marginTop: 5}}>\r\n                            {currentTrackerInfo.currentAngle === '--' && <div \r\n                                style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n                                    No Current Angle Data Found.\r\n                            </div>}\r\n                        </div>\r\n                    {currentTrackerInfo.currentAngle !== '--' && <Typography variant='h5' style={{textAlign: 'center', height: 48, marginTop: 5}}>\r\n                        Angle = {currentTrackerInfo.currentAngle}\r\n                    </Typography>}\r\n                    <div style={{height: 'calc(100% - 246px)', width: '100%', overflow: 'auto'}}>\r\n                    <Table padding='none'>\r\n                        <TableBody>\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Tracker ID\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.trackerID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Device ID\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.deviceID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Mac ID \r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.macID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Current Mode\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.currentMode}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                    Current Angle\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.currentAngle}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                    Date and Time\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{new Date(currentTrackerInfo.timeStamp).toLocaleDateString('en-US', {timeZone: this.props.timeZone})} -- {new Date(currentTrackerInfo.timeStamp).toLocaleTimeString('en-US', {timeZone:  this.props.timeZone, hour12: false})}</TableCell>\r\n                        </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                    </div>\r\n                </Grid>\r\n        )\r\n    }\r\n} \r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentTrackerInfo, timeZone, currentTracker } = state.app\r\n\r\n    return {\r\n        currentTrackerInfo,\r\n        timeZone,\r\n        currentTracker\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getCurrentTrackerInfo : (trackerID) => {\r\n        dispatch({type: 'GET_CURRENT_TRACKER_INFO_REQUEST'})\r\n        appService.getCurrentTrackerInfo(trackerID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_CURRENT_TRACKER_INFO_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_CURRENT_TRACKER_INFO_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedTrackerDetails = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TrackerDetails))\r\nexport {connectedTrackerDetails as TrackerDetails}","import React from 'react'\r\nimport { Grid, Paper, Button } from '@material-ui/core';\r\nimport { TrackerList } from './TrackerList'\r\nimport { TrackerDetails } from './TrackerDetails';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexWrap: 'wrap',\r\n        [theme.breakpoints.up('md')]: {\r\n            height: '100%',\r\n        }\r\n    },\r\n    trackerList: {\r\n        width: '100%',\r\n        padding: 10,\r\n        [theme.breakpoints.up('md')]: {\r\n            minHeight: '100%', width: '50%'\r\n        }\r\n    },\r\n    trackerDetails: {\r\n        width: '100%',\r\n        padding: 10,\r\n        [theme.breakpoints.up('md')]: {\r\n            minHeight: '100%', width: '50%'\r\n        }\r\n    }\r\n})\r\n\r\nconst Initializing = (props) => \r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            <p style={{margin: 10}}>No static data found.  </p>\r\n            <Button variant='contained' style={{margin: 10}} color='primary' onClick={() => props.scan()}>Add trackers</Button>\r\n            <Button variant='contained' style={{margin: 10}} color='primary' onClick={() => props.getCommissioningData()}>Refresh static data</Button>\r\n    </div>\r\n\r\n\r\nconst Fetching = () => \r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            FETCHING...\r\n    </div>\r\n\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    state = {\r\n    }\r\n\r\n    getCommissioningData = () => {\r\n        this.props.getCommissioningData()\r\n    }\r\n\r\n    scan = () => {\r\n        this.props.scan()\r\n    }\r\n\r\n    render() {\r\n        const { classes, commissioningData, fetchingCommissioningData } = this.props\r\n        return ( fetchingCommissioningData ? <Fetching /> : commissioningData === null ? <Initializing scan={() => this.scan()} getCommissioningData={() => this.getCommissioningData()}/> :\r\n            <Grid container direction=\"column\" className={classes.root}>\r\n                <Grid item className={classes.trackerList}>\r\n                    <Paper style={{height: '100%'}}>\r\n                        <TrackerList />\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item className={classes.trackerDetails}>\r\n                    <Paper style={{height: '100%'}}>\r\n                        <TrackerDetails />\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData, fetchingCommissioningData } = state.app\r\n\r\n    return {\r\n        commissioningData,\r\n        fetchingCommissioningData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    scan : () => {\r\n        dispatch({type: 'SCAN'})\r\n    },\r\n    getCommissioningData: () => {\r\n        dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n        appService.getCommissioningData()\r\n            .then(json => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedDashboard = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Dashboard))\r\nexport {connectedDashboard as Dashboard}","import React, { Fragment } from 'react'\r\nimport { Grid, Button, TextField, FormControlLabel, Checkbox, InputAdornment } from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    fieldGrid: {\r\n        display: 'flex', \r\n        flexDirection: 'row', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    },\r\n    field: {\r\n        width: '45%',\r\n        margin: '10px 2.5% 0px 2.5%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '31.33%',\r\n            margin: '10px 1% 0px 1%'\r\n        }\r\n    }\r\n})\r\n\r\nclass SPAParameters extends React.Component {\r\n    state = {\r\n        Lattitude: '',\r\n        Longitude: '',\r\n        Altitude: '',\r\n        TrackingLimitEast: '',\r\n        TrackingLimitWest: '',\r\n        RowWidth: '',\r\n        RowPitch: '',\r\n        TrackingResolution: '',\r\n        AzimuthDeviation: '',\r\n        AltitudeofTrackerontheEast: '',\r\n        AltitudeofTrackerontheWest: '',\r\n        EarlyStartMinutes: '',\r\n        LateFinishMinutes: '',\r\n        LattitudeError: '',\r\n        LongitudeError: '',\r\n        AltitudeError: '',\r\n        TrackingLimitEastError: '',\r\n        TrackingLimitWestError: '',\r\n        RowWidthError: '',\r\n        RowPitchError: '',\r\n        TrackingResolutionError: '',\r\n        AzimuthDeviationError: '',\r\n        AltitudeofTrackerontheEastError: '',\r\n        AltitudeofTrackerontheWestError: '',\r\n        EarlyStartMinutesError: '',\r\n        LateFinishMinutesError: '',\r\n        backTracking: '0',\r\n        submit: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.editedTrackers.length ===  1) {\r\n            this.props.getSPAParameters(this.props.editedTrackers[0].deviceID)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.SPAParameters !== this.props.SPAParameters) {\r\n            const values = nextProps.SPAParameters.VALUES.split(',')\r\n            this.setState({\r\n                Lattitude: values[0],\r\n                Longitude: values[1],\r\n                Altitude: values[2],\r\n                TrackingLimitEast: values[3],\r\n                TrackingLimitWest: values[4],\r\n                RowWidth: values[5],\r\n                RowPitch: values[6],\r\n                TrackingResolution: values[7],\r\n                AzimuthDeviation: values[8],\r\n                AltitudeofTrackerontheEast: values[9],\r\n                AltitudeofTrackerontheWest: values[10],\r\n                EarlyStartMinutes: values[11],\r\n                LateFinishMinutes: values[12],\r\n                backTracking: values[14]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleBlur = (e, p) => {\r\n            const regex = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+$\")\r\n            const regexTest = regex.test(e.target.value)\r\n            if(!regexTest) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    [`${e.target.name}Error`]: `Please enter a number.`,\r\n                    submit: false\r\n                })\r\n            } else {\r\n                const value = Number(e.target.value)\r\n                if(p.min !== null && p.max !== null) {\r\n                    if(value < p.min || value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min} max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.min !== null) {\r\n                    if(value < p.min) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.max != null) {\r\n                    if(value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \r\n    }\r\n\r\n    sendSPAParameters = () => {\r\n        const { Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking } = this.state\r\n        this.props.sendSPAParameters(this.props.editedTrackers, Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                    {\r\n                        [\r\n                            {\r\n                                key: 'Lattitude',\r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 0\r\n                            },\r\n                            {\r\n                                key: 'Longitude', \r\n                                adornment: 'Deg',\r\n                                min: -180,\r\n                                max: +180,\r\n                                value: 1\r\n                            }, \r\n                            { \r\n                                key: 'Altitude',\r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 2\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - East', \r\n                                adornment: 'Deg',\r\n                                min: -60,\r\n                                max: 0,\r\n                                value: 3\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - West', \r\n                                adornment: 'Deg',\r\n                                min: 0,\r\n                                max: +60,\r\n                                value: 4 \r\n                            }, \r\n                            { \r\n                                key: 'Row Width', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 5\r\n                            }, \r\n                            { \r\n                                key: 'Row Pitch', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 6\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Resolution', \r\n                                adornment: 'Deg',\r\n                                min: +0.50,\r\n                                max: +30.0,\r\n                                value: 7 \r\n                            }, \r\n                            { \r\n                                key: 'Azimuth Deviation', \r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 8  \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the East', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 9 \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the West', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 10\r\n                            }, \r\n                            { \r\n                                key: 'Early Start Minutes', \r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 11\r\n                            }, \r\n                            { \r\n                                key: 'Late Finish Minutes',\r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 12\r\n                            }\r\n                        ].map(p => {\r\n                            return <TextField\r\n                                key={p.key}\r\n                                className={classes.field}\r\n                                id={p.key}\r\n                                name={p.key.replace(/ /g, '').replace(/-/g, '')}\r\n                                label={p.key}\r\n                                value={this.state[p.key.replace(/ /g, '').replace(/-/g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">{p.adornment}</InputAdornment>,\r\n                                  }}\r\n                                error={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`] !== ''}\r\n                                helperText={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`]}\r\n                                onBlur={(e) => this.handleBlur(e, p)}\r\n                            />\r\n                        })\r\n                    }\r\n                        <FormControlLabel disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters} className={classes.field}\r\n                            control={\r\n                                <Checkbox color='primary' checked={this.state.backTracking === '1'} onClick={() => this.setState({...this.state, backTracking: this.state.backTracking === '0' ? '1' : '0'})}/>\r\n                            }\r\n                            label=\"Enable Backtracking\"\r\n                        />\r\n                        <Button color='primary' disabled variant='contained' className={classes.field}>Sync time with Zone Controller</Button>    \r\n                    </Grid>\r\n                    <Grid item style={{textAlign: 'center'}}>\r\n                        <Button color='primary' disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters || !this.state.submit} variant='contained' onClick={() => this.sendSPAParameters()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { editedTrackers, sendingSPAParameters } = state.app\r\n\r\n    return {\r\n        editedTrackers,\r\n        sendingSPAParameters,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendSPAParameters: (editedTrackers, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking) => {\r\n        dispatch({type: 'SET_RESPONSE_LISTENER'})\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_SPA_PARAMETERS_REQUEST', t})\r\n            appService.sendSPAParameters(t.deviceID, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_SUCCESS'})\r\n                }, error => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_FAILURE'})\r\n                })\r\n        })\r\n        \r\n    }\r\n})\r\n\r\n\r\nconst connectedSPAParameters = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SPAParameters))\r\nexport {connectedSPAParameters as SPAParameters}","import React, { Fragment } from 'react'\r\nimport { Grid, Button, TextField, InputAdornment } from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    fieldGrid: {\r\n        display: 'flex', \r\n        flexDirection: 'row', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    },\r\n    field: {\r\n        width: '45%',\r\n        margin: '10px 2.5% 0px 2.5%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '31.33%',\r\n            margin: '10px 1% 0px 1%'\r\n        }\r\n    }\r\n})\r\n\r\nclass StowAngles extends React.Component {\r\n    state = {\r\n        WindStowAngle: '',\r\n        SnowStowAngle: '',\r\n        NightStowAngle: '',\r\n        EmergencyStowAngle: '',\r\n        CleanStowAngle: '',\r\n        submit: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.editedTrackers.length === 1) {\r\n            this.props.getStowAngles(this.props.editedTrackers[0].deviceID)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.stowAngles !== this.props.stowAngles) {\r\n            const values = nextProps.stowAngles.VALUES.split(',')\r\n            this.setState({\r\n                WindStowAngle: values[0],\r\n                SnowStowAngle: values[1],\r\n                NightStowAngle: values[2],\r\n                EmergencyStowAngle: values[3],\r\n                CleanStowAngle: values[4]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleBlur = (e, p) => {\r\n        if(e.target.value === '') {\r\n            this.setState({\r\n                ...this.state,\r\n                [e.target.name]: this.props.SPAParameters.VALUES.split(',')[p.value],\r\n                [`${e.target.name}Error`]: '',\r\n                submit: false\r\n            })\r\n        } else {\r\n            const regex = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+$\")\r\n            const regexTest = regex.test(e.target.value)\r\n            if(!regexTest) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    [`${e.target.name}Error`]: `Please enter a number.`,\r\n                    submit: false\r\n                })\r\n            } else {\r\n                const value = Number(e.target.value)\r\n                if(p.min !== null && p.max !== null) {\r\n                    if(value < p.min || value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min} max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.min !== null) {\r\n                    if(value < p.min) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.max != null) {\r\n                    if(value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    sendStowAngles = () => {\r\n        const { WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle } = this.state\r\n        this.props.sendStowAngles(this.props.editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                    {\r\n                        ['Wind Stow Angle', 'Snow Stow Angle', 'Night Stow Angle', 'Emergency Stow Angle', 'Clean Stow Angle'].map(p => {\r\n                            return <TextField\r\n                                key={p}\r\n                                className={classes.field}\r\n                                id={p}\r\n                                name={p.replace(/ /g, '')}\r\n                                label={p}\r\n                                value={this.state[p.replace(/ /g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingStowAngles || this.props.gettingStowAngles}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">Deg</InputAdornment>,\r\n                                  }}\r\n                            />\r\n                        })\r\n                    }\r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center'}}>\r\n                        <Button color='primary' disabled={this.props.sendingStowAngles || this.props.gettingStowAngles} variant='contained' onClick={() => this.sendStowAngles()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { editedTrackers, stowAngles, sendingStowAngles, gettingStowAngles } = state.app\r\n\r\n    return {\r\n        editedTrackers,\r\n        stowAngles,\r\n        sendingStowAngles,\r\n        gettingStowAngles\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendStowAngles: (editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle) => {\r\n        dispatch({type: 'SET_RESPONSE_LISTENER'})\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_STOW_ANGLES_REQUEST', t})\r\n            appService.sendStowAngles(t.deviceID, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_SUCCESS'})\r\n                }, error => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_FAILURE'})\r\n                })\r\n        })\r\n    }\r\n})\r\n\r\n\r\nconst connectedStowAngles = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(StowAngles))\r\nexport {connectedStowAngles as StowAngles}","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { connect } from 'react-redux'\r\nimport { SPAParameters } from './SPAParameters';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { StowAngles } from './StowAngles';\r\nimport LeftIcon from '@material-ui/icons/ArrowBack'\r\nimport { Grid, Typography, Chip, Toolbar } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      margin: 10,\r\n      display: 'flex',\r\n      flexDirection: 'column'\r\n    },\r\n    body: {\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    tabsIndicator: {\r\n      backgroundColor: '#54AAB3',\r\n    },\r\n    selected: {\r\n      backgroundColor: '#54AAB3',\r\n      color: '#ffffff',\r\n      fontWeight: 600,\r\n      fontSize: 14\r\n    },\r\n    editedTrackers: {\r\n        width: '25%',\r\n        margin: 10,\r\n    },\r\n    tabs: {\r\n        width: '75%',\r\n        padding: 10,\r\n        boxShadow: '-1px 0px 0px 0px rgba(0,0,0,0.5)'\r\n    },\r\n    chip: {\r\n        margin: 10\r\n    },\r\n    green: {\r\n        backgroundColor: 'green'\r\n    },\r\n    red: {\r\n        backgroundColor: 'red'\r\n    }\r\n});\r\n\r\nclass EditRowController extends React.Component {\r\n    handleChange = (event, value) => {\r\n        this.props.changeTab({ value });\r\n    };\r\n    \r\n    render() {console.log(this.props)\r\n        const { classes, currentEditTab, editedTrackers, responseQueue } = this.props;\r\n    \r\n        return (\r\n        <div className={classes.root}>\r\n            <div className={classes.header}>\r\n            <Grid item>\r\n                <Typography variant='h5'>\r\n                    <IconButton aria-label=\"Back\" onClick={this.props.back} >\r\n                        <LeftIcon fontSize=\"large\" />\r\n                    </IconButton>\r\n                    Edit Parameters\r\n                </Typography>\r\n            </Grid>\r\n            </div>\r\n            <div className={classes.body}>\r\n            <div className={classes.editedTrackers}>\r\n            \r\n            <AppBar position=\"static\" color='secondary'>\r\n                <Toolbar style={{minHeight: 48}} disableGutters>\r\n                <Typography variant=\"subtitle1\" style={{margin: 'auto'}}>\r\n                    Selected Trackers\r\n                </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {\r\n                editedTrackers.map(t => (\r\n                <Chip key={t.deviceID} label={`Row#: ${t.rowNumber}`} className={classes.chip} style={responseQueue.filter(r => r.request.DID === t.deviceID)[0] ? responseQueue.filter(r => r.request.DID === t.deviceID)[0].success ? {backgroundColor: 'green'} : {backgroundColor: 'red'} : {}}/>\r\n            ))}\r\n            </div>\r\n            <div className={classes.tabs}>\r\n            <AppBar position=\"static\" color='secondary'>\r\n                <Tabs value={currentEditTab} onChange={this.handleChange} classes={{indicator: classes.tabsIndicator}}>\r\n                    <Tab label=\"SPA Parameters\" classes={{selected: classes.selected}}/>\r\n                    <Tab label=\"Stow Angles\" classes={{selected: classes.selected}}/>\r\n                </Tabs>\r\n            </AppBar>\r\n            {currentEditTab === 0 && <SPAParameters />}\r\n            {currentEditTab === 1 && <StowAngles />}\r\n            </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentEditTab, editedTrackers, responseQueue } = state.app\r\n\r\n    return {\r\n        currentEditTab,\r\n        editedTrackers,\r\n        responseQueue       \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changeTab: (value) => {\r\n        dispatch({type: 'CHANGE_EDIT_TAB', value})\r\n    }\r\n})\r\n\r\n\r\nconst connectedEditRowController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(EditRowController))\r\nexport {connectedEditRowController as EditRowController}","import React, { Fragment } from 'react'\r\nimport LeftIcon from '@material-ui/icons/ArrowBack'\r\nimport { IconButton, Typography, Grid, Button, TextField, FormControlLabel, Checkbox, InputAdornment } from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    fieldGrid: {\r\n        display: 'flex', \r\n        flexDirection: 'row', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    },\r\n    field: {\r\n        width: '45%',\r\n        margin: '10px 2.5% 0px 2.5%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '23%',\r\n            margin: '10px 1% 0px 1%'\r\n        }\r\n    }\r\n})\r\n\r\nclass EditRowController extends React.Component {\r\n    state = {\r\n        Lattitude: '',\r\n        Longitude: '',\r\n        Altitude: '',\r\n        TrackingLimitEast: '',\r\n        TrackingLimitWest: '',\r\n        RowWidth: '',\r\n        RowPitch: '',\r\n        TrackingResolution: '',\r\n        AzimuthDeviation: '',\r\n        AltitudeofTrackerontheEast: '',\r\n        AltitudeofTrackerontheWest: '',\r\n        EarlyStartMinutes: '',\r\n        LateFinishMinutes: '',\r\n        LattitudeError: '',\r\n        LongitudeError: '',\r\n        AltitudeError: '',\r\n        TrackingLimitEastError: '',\r\n        TrackingLimitWestError: '',\r\n        RowWidthError: '',\r\n        RowPitchError: '',\r\n        TrackingResolutionError: '',\r\n        AzimuthDeviationError: '',\r\n        AltitudeofTrackerontheEastError: '',\r\n        AltitudeofTrackerontheWestError: '',\r\n        EarlyStartMinutesError: '',\r\n        LateFinishMinutesError: '',\r\n        WindStowAngle: '',\r\n        SnowStowAngle: '',\r\n        NightStowAngle: '',\r\n        EmergencyStowAngle: '',\r\n        CleanStowAngle: '',\r\n        backTracking: '0',\r\n        submit: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.editedTrackers.length === 1) {\r\n            this.props.getSPAParameters(this.props.editedTrackers[0].deviceID)\r\n            this.props.getStowAngles(this.props.editedTrackers[0].deviceID)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.SPAParameters !== this.props.SPAParameters) {\r\n            if(nextProps.SPAParameters[this.props.editedTrackers[0].deviceID]) {\r\n                const values = nextProps.SPAParameters[this.props.editedTrackers[0].deviceID].VALUES.split(',')\r\n                this.setState({\r\n                    Lattitude: values[0],\r\n                    Longitude: values[1],\r\n                    Altitude: values[2],\r\n                    TrackingLimitEast: values[3],\r\n                    TrackingLimitWest: values[4],\r\n                    RowWidth: values[5],\r\n                    RowPitch: values[6],\r\n                    TrackingResolution: values[7],\r\n                    AzimuthDeviation: values[8],\r\n                    AltitudeofTrackerontheEast: values[9],\r\n                    AltitudeofTrackerontheWest: values[10],\r\n                    EarlyStartMinutes: values[11],\r\n                    LateFinishMinutes: values[12],\r\n                    backTracking: values[14]\r\n                })\r\n            }\r\n        }\r\n        if(nextProps.stowAngles !== this.props.stowAngles) {\r\n            if(nextProps.stowAngles[this.props.editedTrackers[0].deviceID]) {\r\n                const values = nextProps.stowAngles[this.props.editedTrackers[0].deviceID].VALUES.split(',')\r\n                this.setState({\r\n                    WindStowAngle: values[0],\r\n                    SnowStowAngle: values[1],\r\n                    NightStowAngle: values[2],\r\n                    EmergencyStowAngle: values[3],\r\n                    CleanStowAngle: values[4]\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleChangeSPA = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleBlur = (e, p) => {\r\n        if(e.target.value === '') {\r\n            this.setState({\r\n                ...this.state,\r\n                [e.target.name]: this.props.SPAParameters.VALUES.split(',')[p.value],\r\n                [`${e.target.name}Error`]: '',\r\n                submit: false\r\n            })\r\n        } else {\r\n            const regex = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+$\")\r\n            const regexTest = regex.test(e.target.value)\r\n            if(!regexTest) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    [`${e.target.name}Error`]: `Please enter a number.`,\r\n                    submit: false\r\n                })\r\n            } else {\r\n                const value = Number(e.target.value)\r\n                if(p.min !== null && p.max !== null) {\r\n                    if(value < p.min || value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min} max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.min !== null) {\r\n                    if(value < p.min) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.max != null) {\r\n                    if(value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    sendSPAParameters = () => {\r\n        const { Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking } = this.state\r\n        this.props.sendSPAParameters(this.props.editedTrackers, Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking)\r\n    }\r\n\r\n    sendStowAngles = () => {\r\n        const { WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle } = this.state\r\n        this.props.sendStowAngles(this.props.editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item style={{height: 64, borderBottom: '0.1px solid lightgrey'}}>\r\n                        <Typography variant='h5'>\r\n                            <IconButton aria-label=\"Back\" onClick={this.props.back} >\r\n                                <LeftIcon fontSize=\"large\" />\r\n                            </IconButton>\r\n                            Edit Parameters\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Typography variant='h6' style={{paddingLeft: 'calc(1% + 10px)'}}>\r\n                        SPA Settings\r\n                    </Typography>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                        \r\n                    {\r\n                        [\r\n                            {\r\n                                key: 'Lattitude',\r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 0\r\n                            },\r\n                            {\r\n                                key: 'Longitude', \r\n                                adornment: 'Deg',\r\n                                min: -180,\r\n                                max: +180,\r\n                                value: 1\r\n                            }, \r\n                            { \r\n                                key: 'Altitude',\r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 2\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - East', \r\n                                adornment: 'Deg',\r\n                                min: -60,\r\n                                max: 0,\r\n                                value: 3\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - West', \r\n                                adornment: 'Deg',\r\n                                min: 0,\r\n                                max: +60,\r\n                                value: 4 \r\n                            }, \r\n                            { \r\n                                key: 'Row Width', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 5\r\n                            }, \r\n                            { \r\n                                key: 'Row Pitch', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 6\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Resolution', \r\n                                adornment: 'Deg',\r\n                                min: +0.50,\r\n                                max: +30.0,\r\n                                value: 7 \r\n                            }, \r\n                            { \r\n                                key: 'Azimuth Deviation', \r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 8  \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the East', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 9 \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the West', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 10\r\n                            }, \r\n                            { \r\n                                key: 'Early Start Minutes', \r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 11\r\n                            }, \r\n                            { \r\n                                key: 'Late Finish Minutes',\r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 12\r\n                            }\r\n                        ].map(p => {\r\n                            return <TextField\r\n                                key={p.key}\r\n                                className={classes.field}\r\n                                id={p.key}\r\n                                name={p.key.replace(/ /g, '').replace(/-/g, '')}\r\n                                label={p.key}\r\n                                value={this.state[p.key.replace(/ /g, '').replace(/-/g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">{p.adornment}</InputAdornment>,\r\n                                  }}\r\n                                error={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`] !== ''}\r\n                                helperText={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`]}\r\n                                onBlur={(e) => this.handleBlur(e, p)}\r\n                            />\r\n                        })\r\n                    }\r\n                        <FormControlLabel disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters} style={{ margin: 10, marginLeft: 'auto' }}\r\n                            control={\r\n                                <Checkbox color='primary' checked={this.state.backTracking === '1'} onClick={() => this.setState({...this.state, backTracking: this.state.backTracking === '0' ? '1' : '0'})}/>\r\n                            }\r\n                            label=\"Enable Backtracking\"\r\n                        />\r\n                        <Button color='primary' disabled variant='contained' style={{ margin: 10 }}>Sync time with Zone Controller</Button>    \r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center', borderBottom: '0.1px solid lightgrey'}}>\r\n                        <Button color='primary' disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters || !this.state.submit} variant='contained' onClick={() => this.sendSPAParameters()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                    <Typography variant='h6' style={{paddingLeft: 'calc(1% + 10px)'}}>\r\n                        Stow Angle Settings\r\n                    </Typography>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                        \r\n                    {\r\n                        ['Wind Stow Angle', 'Snow Stow Angle', 'Night Stow Angle', 'Emergency Stow Angle', 'Clean Stow Angle'].map(p => {\r\n                            return <TextField\r\n                                key={p}\r\n                                className={classes.field}\r\n                                id={p}\r\n                                name={p.replace(/ /g, '')}\r\n                                label={p}\r\n                                value={this.state[p.replace(/ /g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingStowAngles || this.props.gettingStowAngles}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">Deg</InputAdornment>,\r\n                                  }}\r\n                            />\r\n                        })\r\n                    }\r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center'}}>\r\n                        <Button color='primary' disabled={this.props.sendingStowAngles || this.props.gettingStowAngles} variant='contained' onClick={() => this.sendStowAngles()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { editedTrackers, SPAParameters, stowAngles, sendingSPAParameters, sendingStowAngles, gettingSPAParameters, gettingStowAngles } = state.app\r\n\r\n    return {\r\n        editedTrackers,\r\n        SPAParameters,\r\n        stowAngles,\r\n        sendingSPAParameters,\r\n        sendingStowAngles,\r\n        gettingSPAParameters,\r\n        gettingStowAngles\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendSPAParameters: (editedTrackers, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking) => {\r\n        const values = `${Lattitude}, ${Longitude}, ${Altitude}, ${EastLimit}, ${WestLimit}, ${TrackerWidth}, ${Pitch}, ${TrackingAccuracy}, ${AzimuthDeviation}, ${AltitudeTrackeronEast}, ${AltitudeTrackeronWest}, ${StartTimeLead}, ${EndTimeLag}, 0, ${backTracking}`\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_SPA_PARAMETERS_REQUEST', t, values})\r\n            appService.sendSPAParameters(t.deviceID, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_SUCCESS'})\r\n                    dispatch({type: 'GET_SPA_PARAMETERS_REQUEST'})\r\n                    appService.getSPAParameters(t.deviceID)\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_SPA_PARAMETERS_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_SPA_PARAMETERS_FAILURE'})\r\n                        })\r\n\r\n                }, error => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_FAILURE'})\r\n                })\r\n        })\r\n        \r\n    },\r\n    sendStowAngles: (editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle) => {\r\n        const values = `${WindStowAngle}, ${SnowStowAngle}, ${CleanStowAngle}, ${NightStowAngle}, ${EmergencyStowAngle}`\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_STOW_ANGLES_REQUEST', t, values})\r\n            appService.sendStowAngles(t.deviceID, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_SUCCESS'})\r\n                    dispatch({type: 'GET_STOW_ANGLES_REQUEST'})\r\n                    appService.getStowAngles(t.deviceID)\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_STOW_ANGLES_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_STOW_ANGLES_FAILURE'})\r\n                        })\r\n                }, error => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_FAILURE'})\r\n                })\r\n        })\r\n    },\r\n    getStowAngles: (DID) => {\r\n        dispatch({type: 'GET_STOW_ANGLES_REQUEST'})\r\n        appService.getStowAngles(DID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_STOW_ANGLES_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'GET_STOW_ANGLES_FAILURE'})\r\n            })\r\n    },\r\n    getSPAParameters: (DID) => {\r\n        dispatch({type: 'GET_SPA_PARAMETERS_REQUEST'})\r\n        appService.getSPAParameters(DID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_SPA_PARAMETERS_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'GET_SPA_PARAMETERS_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedEditRowController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(EditRowController))\r\nexport {connectedEditRowController as EditRowController1}","import React, { Fragment } from 'react'\r\nimport LeftIcon from '@material-ui/icons/ArrowBack'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { IconButton, Typography, Grid, Button, Menu, MenuItem, FormControlLabel, Switch } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: 'calc(100% - 48px)'\r\n    },\r\n    second: {\r\n        height: 'calc(100% - 128px)', \r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    }\r\n})\r\n\r\nclass ControlRowController extends React.Component {\r\n    state = {\r\n        typeOfStow: 'STOW',\r\n        auto: false\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.setState({ ...this.state, anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleClose = (key) => {\r\n        this.setState({ typeOfStow: key, anchorEl: null });\r\n    };\r\n\r\n    autoToggle = () => {\r\n        if(this.state.auto) {\r\n            this.props.controlledTrackers.map(t => this.props.sendStow(t.deviceID, 'AUTO'))\r\n            this.setState({...this.state, auto: !this.state.auto})\r\n        } else {\r\n            this.props.controlledTrackers.map(t => this.props.sendStow(t.deviceID, 'MANUAL'))\r\n            this.setState({...this.state, auto: !this.state.auto})\r\n        }\r\n    } \r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        const { anchorEl } = this.state\r\n        return (\r\n            <Fragment>\r\n\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item style={{height: 64}}>\r\n                        <Typography variant='h5'>\r\n                            <IconButton aria-label=\"Back\" onClick={this.props.back} >\r\n                                <LeftIcon fontSize=\"large\" />\r\n                            </IconButton>\r\n                            Control\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item className={classes.second}>\r\n                    \r\n                    </Grid>\r\n                    <Grid item style={{textAlign: 'center'}}>\r\n                        <Button color='primary' variant='contained' onClick={() => this.props.controlledTrackers.map(t => this.props.sendCommand(t.deviceID, 'NEGATIVE'))} style={{ margin: 10 }}>Run West</Button>\r\n                        <Button color='primary' variant='contained' onClick={() => this.props.controlledTrackers.map(t => this.props.sendCommand(t.deviceID, 'POSITIVE'))} style={{ margin: 10 }}>Run East</Button>\r\n                        <Button color='primary' variant='contained' onClick={() => this.props.controlledTrackers.map(t => this.props.sendCommand(t.deviceID, 'STOP'))} style={{ margin: 10 }}>Stop</Button>\r\n                        <Button color='primary' disabled={this.state.typeOfStow === 'STOW'} onClick={() => this.props.controlledTrackers.map(t => this.props.sendStow(t.deviceID, this.state.typeOfStow))} variant='contained' style={{ marginLeft: 10 }}>{this.state.typeOfStow}</Button>\r\n                        <Button \r\n                            color='primary' \r\n                            variant='contained' \r\n                            aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={this.handleClick}\r\n                            style={{ minWidth: 24, paddingLeft: 0, paddingRight: 0}}\r\n                        >\r\n                            <ExpandMoreIcon />\r\n                        </Button>\r\n                        <Menu\r\n                            id=\"simple-menu\"\r\n                            anchorEl={anchorEl}\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={this.handleClose}\r\n                            >\r\n                            <MenuItem onClick={() => this.handleClose('WIND')}>WIND</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('SNOW')}>SNOW</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('NIGHT')}>NIGHT</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('CLEAN')}>CLEAN</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('EMERGENCY')}>EMERGENCY</MenuItem>\r\n                        </Menu>\r\n                        <FormControlLabel style={{ margin: 10 }} labelPlacement=\"top\"\r\n                            control={\r\n                                <Switch color='primary' checked={this.state.auto} onClick={() => this.autoToggle()} />\r\n                            }\r\n                            label=\"Enable Auto Mode\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { controlledTrackers } = state.app\r\n\r\n    return {\r\n        controlledTrackers,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendCommand: (DID, value) => {\r\n        dispatch({type: 'SEND_COMMAND_REQUEST'})\r\n        appService.sendCommand(DID, value)\r\n            .then(json => {\r\n                dispatch({type: 'SEND_COMMAND_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'SEND_COMMAND_FAILURE'})\r\n            })\r\n    },\r\n    sendStow: (DID, mode) => {\r\n        dispatch({type: 'SEND_STOW_REQUEST'})\r\n        appService.sendStow(DID, mode)\r\n            .then(json => {\r\n                dispatch({type: 'SEND_STOW_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'SEND_STOW_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedControlRowController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ControlRowController))\r\nexport {connectedControlRowController as ControlRowController}","import React, { Fragment } from 'react'\r\nimport { Grid, Button, Checkbox } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { EditRowController } from './EditRowController';\r\nimport { EditRowController1 } from './_EditRowController'\r\nimport { ControlRowController } from './ControlRowController'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    buttons: {\r\n        marginBottom: 10,\r\n        marginRight: 10,\r\n        marginTop: 10\r\n    }\r\n});\r\n\r\nclass RowControllerTab extends React.Component {\r\n    state = {\r\n        selectedTrackers: [],\r\n        location: 'home'\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedTrackers.length === this.props.commissioningData.length) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.props.commissioningData]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectRow = (row) => {\r\n        if(this.state.selectedTrackers.indexOf(row) === -1) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.state.selectedTrackers, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.state.selectedTrackers.filter(t => t.macID !== row.macID)]\r\n            })\r\n        }\r\n    }\r\n\r\n    editTracker = () => {\r\n        this.props.setEditedTrackers(this.state.selectedTrackers)\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'edit'\r\n        })\r\n    }\r\n\r\n    controlTracker = () => {\r\n        this.props.setControlledTrackers(this.state.selectedTrackers)\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'control'\r\n        })\r\n    }\r\n\r\n    back = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'home'\r\n        })\r\n    }\r\n\r\n    removeTrackers = () => {\r\n        this.props.removeTrackers(this.state.selectedTrackers.map(s => s.deviceID))\r\n        this.setState({...this.state, selectedTrackers: []})\r\n    }\r\n\r\n    render() {\r\n        const { classes, commissioningData } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    this.state.location === 'edit' ? \r\n                        this.state.selectedTrackers.length > 1 ?\r\n                        <EditRowController back={this.back}/> : <EditRowController1 back={this.back}/> :\r\n                    this.state.location === 'control' ?\r\n                    <ControlRowController back={this.back}/> :\r\n                    <Grid container direction='column' style={{ height: 'calc(100% - 48px)'}}>\r\n                        <Grid item style={{textAlign: 'end'}}>\r\n                            <Button color='primary' variant='contained' disabled={this.state.selectedTrackers.length === 0} className={classes.buttons} onClick={() => this.editTracker()}>Edit</Button>\r\n                            <Button color='primary' variant='contained' disabled={this.state.selectedTrackers.length === 0} className={classes.buttons} onClick={() => this.controlTracker()}>Control</Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    onClick={() => this.selectAll()}\r\n                                    style={{cursor: 'pointer'}}\r\n                                >\r\n                                    {commissioningData !== null && commissioningData.length > 1 && <Checkbox \r\n                                        checked={this.state.selectedTrackers.length === commissioningData.length}\r\n                                        color='primary'\r\n                                    />}\r\n                                        </TableCell>\r\n                                <TableCell >Row #</TableCell>\r\n                                <TableCell >Device ID</TableCell>\r\n                                <TableCell >Mac ID</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {commissioningData && commissioningData.map(row => (\r\n                                <TableRow key={row.macID}\r\n                                    onClick={() => this.selectRow(row)}\r\n                                    style={{cursor: 'pointer'}}\r\n                                >\r\n                                <TableCell>\r\n                                    <Checkbox \r\n                                        checked={this.state.selectedTrackers.indexOf(row) !== -1}\r\n                                        color='primary'\r\n                                    />\r\n                                </TableCell>\r\n                                    <TableCell >{row.rowNumber}</TableCell>\r\n                                    <TableCell >{row.deviceID}</TableCell>\r\n                                    <TableCell >{row.macID}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        </Grid>{commissioningData !== null &&\r\n                        <Grid item style={{textAlign: 'end'}}>\r\n                            <Button variant='contained' color='primary' className={classes.buttons} disabled={this.state.selectedTrackers.length === 0} onClick={() => this.removeTrackers()}>Forget</Button>\r\n                        </Grid>}\r\n                    </Grid>\r\n                    \r\n                }\r\n                \r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData } = state.app\r\n\r\n    return {\r\n        commissioningData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    removeTrackers : (DIDs) => {\r\n        dispatch({type: 'REMOVE_TRACKERS_REQUEST'})\r\n        appService.removeTrackers(DIDs)\r\n            .then(json => {\r\n                dispatch({type: 'REMOVE_TRACKERS_SUCCESS', DIDs})\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n                appService.getCommissioningData()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n                    })\r\n            }, error => {\r\n                dispatch({type: 'REMOVE_TRACKERS_FAILURE'})\r\n            })\r\n    },\r\n    setEditedTrackers: (trackers) => {\r\n        dispatch({type: 'SET_EDITED_TRACKERS', trackers})\r\n    },\r\n    setControlledTrackers: (trackers) => {\r\n        dispatch({type: 'SET_CONTROLLED_TRACKERS', trackers})\r\n    }\r\n})\r\n\r\n\r\nconst connectedRowControllerTab = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RowControllerTab))\r\nexport {connectedRowControllerTab as RowControllerTab}","import React, { Fragment } from 'react'\r\nimport { Grid, Checkbox, TextField, Button } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    textField: {\r\n        marginLeft: 24\r\n    },\r\n    formControl: {\r\n        marginLeft: 24\r\n    }\r\n});\r\n  \r\n\r\nclass ScanTab extends React.Component {\r\n    state = {\r\n        selectedTrackers: [],\r\n        scanSelection: 'PAN ID'\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedTrackers.length === this.props.xbeeResponse.length) {\r\n            this.setState({\r\n                selectedTrackers: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selectedTrackers: [...this.props.xbeeResponse]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectRow = (row) => {\r\n        if(this.state.selectedTrackers.indexOf(row) === -1) {\r\n            this.setState({\r\n                selectedTrackers: [...this.state.selectedTrackers, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selectedTrackers: [...this.state.selectedTrackers.filter(t => t.id !== row.id)]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            scanSelection: e.target.value\r\n        })\r\n    }\r\n\r\n    inputChange = (e) =>{\r\n        this.setState({\r\n            scanParameter: e.target.value\r\n        })\r\n    }\r\n\r\n    scan = () => {\r\n        if(this.state.scanSelection === 'PAN ID') {\r\n            this.props.discover('00000')\r\n        } else {\r\n            this.props.discover(this.state.scanParameter)\r\n        }\r\n    } \r\n\r\n    addTrackers = () => {\r\n        this.props.addTrackers(this.state.selectedTrackers)\r\n    }\r\n\r\n    render() {\r\n        const { classes, xbeeResponse } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column'>\r\n                    <Grid item>\r\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                            <RadioGroup\r\n                                row\r\n                                aria-label=\"Scan\"\r\n                                name=\"scan\"\r\n                                value={this.state.scanSelection}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <FormControlLabel value=\"PAN ID\" control={<Radio color='primary'/>} label=\"PAN ID\" />\r\n                                <FormControlLabel value=\"Device ID\" control={<Radio color='primary'/>} label=\"Device ID\" />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item style={{marginBottom: 24}}>\r\n                    {\r\n                        this.state.scanSelection === 'PAN ID' ?\r\n                        <TextField\r\n                            id=\"scanParameter\"\r\n                            className={classes.textField}\r\n                            value={this.state.scanParameter}\r\n                            onChange={this.inputChange}\r\n                            placeholder='PAN ID'\r\n                            margin=\"none\"\r\n                            variant='outlined'\r\n                        /> :\r\n                        <TextField\r\n                            id=\"scanParameter\"\r\n                            className={classes.textField}\r\n                            value={this.state.scanParameter}\r\n                            onChange={this.inputChange}\r\n                            placeholder='Device ID'\r\n                            margin=\"none\"\r\n                            variant='outlined'\r\n                        />\r\n                    }\r\n                        <Button color='primary' onClick={() => this.scan()} variant='contained' style={{marginLeft: 24, verticalAlign: 'bottom'}}>Scan</Button>\r\n                    </Grid>{xbeeResponse.length !== 0 && xbeeResponse !== undefined &&\r\n                    <Grid item>\r\n                    <Table className={classes.table}>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell\r\n                                onClick={() => this.selectAll()}\r\n                                style={{cursor: 'pointer'}}\r\n                            >\r\n                                {xbeeResponse.length > 1 && xbeeResponse !== undefined && <Checkbox \r\n                                    checked={this.state.selectedTrackers.length === xbeeResponse.length && this.state.selectedTrackers.length !== 0}\r\n                                    color='primary'\r\n                                />}\r\n                                    </TableCell>\r\n                            <TableCell >Row #</TableCell>\r\n                            <TableCell >Device ID</TableCell>\r\n                            <TableCell >Mac ID</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {xbeeResponse.length !== 0 && xbeeResponse !== undefined && xbeeResponse.map(res => {\r\n                            return (\r\n                            <TableRow key={res.DID}\r\n                                onClick={() => this.selectRow(res)}\r\n                                style={{cursor: 'pointer'}}\r\n                            >\r\n                            <TableCell>\r\n                                <Checkbox \r\n                                    checked={this.state.selectedTrackers.indexOf(res) !== -1}\r\n                                    color='primary'\r\n                                />\r\n                            </TableCell>\r\n                                <TableCell >{res.VALUES.split(',')[0]}</TableCell>\r\n                                <TableCell >{res.DID}</TableCell>\r\n                                <TableCell >{res.macID}</TableCell>\r\n                            </TableRow>\r\n                        )})}\r\n                        </TableBody>\r\n                    </Table>\r\n                    </Grid>}{xbeeResponse.length !== 0 && xbeeResponse !== undefined &&\r\n                    <Grid item style={{textAlign: 'end'}}>\r\n                        <Button color='primary' disabled={this.state.selectedTrackers.length === 0} onClick={() => this.addTrackers()} variant='contained' style={{margin: 10}}>Add</Button>\r\n                    </Grid>}\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { xbeeResponse } = state.app\r\n\r\n    return {\r\n        xbeeResponse\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    discover : (did) => {\r\n        dispatch({type: 'DISCOVER_REQUEST'})\r\n        appService.discover(did)\r\n            .then(json => {\r\n                dispatch({type: 'DISCOVER_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'DISCOVER_FAILURE'})\r\n            })\r\n    },\r\n    addTrackers: (devices) => {\r\n        dispatch({type: 'ADD_TRACKERS_REQUEST'})\r\n        appService.addTrackers(devices)\r\n            .then(json => {\r\n                dispatch({type: 'ADD_TRACKERS_SUCCESS', devices})\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n                appService.getCommissioningData()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n                    })\r\n            }, error => {\r\n                dispatch({type: 'ADD_TRACKERS_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedScanTab = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ScanTab))\r\nexport {connectedScanTab as ScanTab}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { RowControllerTab } from './RowControllerTab'\r\nimport { ScanTab } from './ScanTab'\r\nimport { connect } from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    minWidth: 550\r\n  },\r\n  tabsIndicator: {\r\n    backgroundColor: '#54AAB3',\r\n  },\r\n  selected: {\r\n    backgroundColor: '#54AAB3',\r\n    color: '#ffffff',\r\n    fontWeight: 600,\r\n    fontSize: 14\r\n  }\r\n});\r\n\r\nclass RowController extends React.Component {\r\n\r\n  handleChange = (event, value) => {\r\n    this.props.changeTab({ value });\r\n  };\r\n\r\n  render() {\r\n    const { classes, currentTab } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" color='secondary'>\r\n          <Tabs value={currentTab} onChange={this.handleChange} classes={{indicator: classes.tabsIndicator}}>\r\n            <Tab label=\"Paired Rows\" classes={{selected: classes.selected}}/>\r\n            <Tab label=\"Scan\" classes={{selected: classes.selected}}/>\r\n          </Tabs>\r\n        </AppBar>\r\n        {currentTab === 0 && <RowControllerTab />}\r\n        {currentTab === 1 && <ScanTab />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRowController.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentTab } = state.app\r\n\r\n    return {\r\n        currentTab\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changeTab: (value) => {\r\n        dispatch({type: 'CHANGE_TAB', value})\r\n    }\r\n})\r\n\r\n\r\nconst connectedRowController = (connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RowController)))\r\nexport {connectedRowController as RowController}","import React, { Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Grid, TextField, Typography, IconButton, FormControlLabel, FormControl, Radio, RadioGroup, Button, MenuItem, OutlinedInput, Select, InputLabel, CircularProgress } from '@material-ui/core';\r\nimport { connect } from 'react-redux'\r\nimport { appService } from '../App/app.services';\r\nimport Refresh from '@material-ui/icons/Refresh'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    minWidth: 300,\r\n    backgroundColor: theme.palette.background.paper,\r\n    [theme.breakpoints.up('md')]: {\r\n        height: '660px'\r\n    }\r\n  },\r\n  grid2: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '90%',\r\n    [theme.breakpoints.up('md')]: {\r\n        width: '30%',\r\n    }\r\n  },\r\n  field: {\r\n    flexDirection: 'row',\r\n    [theme.breakpoints.up('md')]: {\r\n        margin: '10px 0 0 0'\r\n    }\r\n  },\r\n  saveButton: {\r\n    margin: '10px 10px 10px 5%',\r\n    alignSelf: 'start',\r\n    [theme.breakpoints.down('sm')]: {\r\n        width: '90%',\r\n        margin: 10,\r\n        alignSelf: 'center'\r\n    }\r\n  },\r\n  button: {\r\n      width: '10%'\r\n  },\r\n  selectWifi: {\r\n      width: '90%'\r\n  }\r\n});\r\n\r\nclass ZoneController extends React.Component {\r\n\r\n    state = {\r\n        ssid: '',\r\n        password: '',\r\n        staticIP: ''\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.scanWifi()\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    setWifiInfo = () => {\r\n        this.props.setWifiInfo(this.state.ssid, this.props.password, this.state.staticIP)\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes, wifiList } = this.props\r\n        return (\r\n            <Fragment>\r\n                    <Grid item xs={12} container direction='column' justify='center' alignItems='center' className={classes.root}>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Network\r\n                        </Typography>\r\n                        <FormControl variant=\"outlined\" className={classes.field} fullWidth>\r\n                            <InputLabel htmlFor=\"ssid\">\r\n                                SSID\r\n                            </InputLabel>\r\n                            <Select\r\n                                value={this.state.ssid}\r\n                                onChange={this.handleChange}\r\n                                autoWidth\r\n                                className={classes.selectWifi}\r\n                                input={<OutlinedInput labelWidth={50} name=\"ssid\" id=\"ssid\" />}\r\n                            >\r\n                                {\r\n                                    wifiList.length === 0 ? <MenuItem value={'none'}> <CircularProgress /></MenuItem> : wifiList.map(w => <MenuItem key={w} value={w}>{w}</MenuItem>)\r\n                                }\r\n                                \r\n                            </Select>\r\n                            <IconButton className={classes.button} onClick={() => this.props.scanWifi()} aria-label=\"Refresh Wifi list\">\r\n                                <Refresh />\r\n                            </IconButton>\r\n                        </FormControl>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            name='password'\r\n                            label='Password'\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            name='staticIP'\r\n                            label='Static IP'\r\n                            value={this.state.staticIP}\r\n                            onChange={this.handleChange}\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary' onClick={() => this.setWifiInfo()} className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Heart Beat\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='heartbeatInterval'\r\n                            label='Heart Beat Interval'\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='heartbeatMaxMessages'\r\n                            label='Heart Beat Max Messages'\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Big Query\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='bqKey'\r\n                            label='Big Query key'\r\n                            value={this.state.bqKey}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            PAN ID\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='panID'\r\n                            label='PAN ID'\r\n                            value={this.state.panID}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Wind Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='maxWindSpeed'\r\n                            label='Max Wind Speed'\r\n                            value={this.state.maxWindSpeed}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='meanWindSpeed'\r\n                            label='Mean Wind Speed'\r\n                            value={this.state.meanWindSpeed}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='windSpeedTimer'\r\n                            label='Wind Speed Timer'\r\n                            value={this.state.windSpeedTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Flood Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='maxFloodLevel'\r\n                            label='Max FLood Level'\r\n                            value={this.state.maxFloodLevel}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='floodLevelTimer'\r\n                            label='Flood level Timer'\r\n                            value={this.state.floodLevelTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Snow Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='maxSnowLevel'\r\n                            label='Max Snow Level'\r\n                            value={this.state.maxSnowLevel}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='snowLevelTimer'\r\n                            label='Snow level Timer'\r\n                            value={this.state.snowLevelTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Rain Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='maxRainLevel'\r\n                            label='Max Rain Level'\r\n                            value={this.state.maxRainLevel}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            fullWidth\r\n                            id='rainLevelTimer'\r\n                            label='Rain level Timer'\r\n                            value={this.state.rainLevelTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <FormControl component=\"fieldset\" className={classes.field}>\r\n                            <RadioGroup\r\n                                row\r\n                                aria-label=\"Sync\"\r\n                                name=\"sync\"\r\n                                value={this.state.syncTime}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <FormControlLabel value=\"internet\" control={<Radio color='primary'/>} label=\"Sync from internet\" />\r\n                                <FormControlLabel value=\"scada\" control={<Radio color='primary'/>} label=\"Sync from SCADA\" />\r\n                            </RadioGroup>\r\n                            <Button variant='contained' color='primary' style={{marginBottom: 10}}>Sync</Button>\r\n                        </FormControl>\r\n                        </div>\r\n                    </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { wifiList } = state.app\r\n\r\n    return {\r\n        wifiList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setWifiInfo: (ssid, pass, staticIP) => {\r\n        dispatch({type: 'SET_WIFI_INFO_REQUEST'}) \r\n        appService.setWifiInfo(ssid, pass, staticIP)\r\n            .then(json => {\r\n                dispatch({type: 'SET_WIFI_INFO_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'SET_WIFI_INFO_FAILURE'})\r\n            })\r\n    },\r\n    scanWifi: () => {\r\n        dispatch({type: 'SCAN_WIFI_REQUEST'})\r\n        appService.scanWifi()\r\n            .then(json => {\r\n                dispatch({type: 'SCAN_WIFI_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'SCAN_WIFI_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedZoneController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ZoneController))\r\nexport {connectedZoneController as ZoneController}","import React from 'react'\r\nimport { Grid, Button, Checkbox, TextField, DialogActions, DialogTitle, Dialog, DialogContent, MenuItem, OutlinedInput, InputLabel, FormControl, Select, Tooltip, Switch } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      height: '100%',\r\n      overflowX: 'auto',\r\n      backgroundColor: 'white'\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    buttons: {\r\n        marginBottom: 10,\r\n        marginRight: 10,\r\n        marginTop: 10\r\n    }\r\n});\r\n  \r\n\r\nclass Sensors extends React.Component {\r\n\r\n    state = {\r\n        selectedSensors: [],\r\n        dialog: false,\r\n        which: 'none',\r\n        port: '',\r\n        type: '',\r\n        model: '',\r\n        samplingPeriod: '',\r\n        driverFile: '',\r\n        driverFileName: '',\r\n        enabled: []\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.getSensors()\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.sensors !== this.props.sensors && nextProps.sensors !== undefined) {\r\n            this.setState({...this.state, enabled: [...nextProps.sensors.filter(s => s.enabled === true)]})\r\n        }\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedSensors.length === this.props.sensors.length) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...this.props.sensors]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectSensor = (row) => {\r\n        if(this.state.selectedSensors.filter(t => t.model === row.model && t.type === row.type).length === 0) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...this.state.selectedSensors, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...this.state.selectedSensors.filter(t => t.model !== row.model)]\r\n            })\r\n        }\r\n    }\r\n\r\n    addSensor = () => {\r\n        this.setState({ ...this.state, dialog: true, which: 'add'})\r\n    }\r\n\r\n    editSensor = () => {\r\n        this.setState({ ...this.state, dialog: true, which: 'edit', port: this.state.selectedSensors[0].port, type: this.state.selectedSensors[0].type, model: this.state.selectedSensors[0].model, samplingPeriod: this.state.selectedSensors[0].samplingPeriod})\r\n    }\r\n\r\n    removeSensor = () => {\r\n        this.props.removeSensor(this.state.selectedSensors)\r\n    }\r\n\r\n    enable = (row) => {\r\n        if(this.state.enabled.filter(t => t.model === row.model && t.type === row.type).length === 0) {\r\n            this.props.enableSensor(row.type, row.model)\r\n            this.setState({...this.state, enabled: [...this.state.enabled, row]})\r\n        } else {\r\n            this.props.disableSensor(row.type, row.model)\r\n            this.setState({...this.state, enabled: this.state.enabled.filter(e => e !== row)})\r\n        }\r\n        \r\n    }\r\n\r\n    handleClose = () => {\r\n        if(this.state.which === 'edit') {\r\n            this.props.softRemoveSensor(this.state.selectedSensors)\r\n            this.props.addSensor(this.state.port, this.state.type, this.state.model, this.state.samplingPeriod)\r\n            this.props.uploadDriver(this.state.driverFile, this.state.type, this.state.model)   \r\n        } else {\r\n            this.props.addSensor(this.state.port, this.state.type, this.state.model, this.state.samplingPeriod)\r\n            this.props.uploadDriver(this.state.driverFile, this.state.type, this.state.model)\r\n        }\r\n            \r\n        \r\n        this.setState({ ...this.state, dialog: false, which: 'none' });\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ ...this.state, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    \r\n    handleSelectedFile = e => {\r\n        this.setState({\r\n            ...this.state,\r\n            driverFile: e.target.files[0],\r\n            driverFileName: e.target.files[0].name\r\n        })\r\n    }\r\n\r\n    render() {console.log(this.state)\r\n        const { classes, sensors } = this.props\r\n\r\n        return (\r\n            <Grid container direction='column' className={classes.root}>\r\n                <Grid item style={{textAlign: 'end'}}>\r\n                    <Button color='primary' variant='contained' className={classes.buttons} onClick={() => this.addSensor()}>Add New</Button>\r\n                    {this.state.selectedSensors.length > 1 ?\r\n                        <Tooltip title='Cannot edit multiple sensors at once. Please choose a single sensor to edit.'>\r\n                            <span><Button color='primary' variant='contained' className={classes.buttons} disabled>Edit</Button></span>\r\n                        </Tooltip> :\r\n                        <Button color='primary' variant='contained' disabled={this.state.selectedSensors.length !== 1} className={classes.buttons} onClick={() => this.editSensor()}>Edit</Button>\r\n                    }\r\n                </Grid>\r\n                <Grid item>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell\r\n                            onClick={() => this.selectAll()}\r\n                            style={{cursor: 'pointer'}}\r\n                        >{sensors && sensors.length > 1 && \r\n                            <Checkbox \r\n                                checked={this.state.selectedSensors.length === this.props.sensors.length}\r\n                                color='primary'\r\n                            />}\r\n                                </TableCell>\r\n                        <TableCell >Port #</TableCell>\r\n                        <TableCell >Sensor Type</TableCell>\r\n                        <TableCell >Model #</TableCell>\r\n                        <TableCell >Sampling Period</TableCell>\r\n                        <TableCell >Enabled</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {sensors && sensors.map(row => (\r\n                        <TableRow key={row.port+row.type+row.model}\r\n                            style={{cursor: 'pointer'}}\r\n                        >\r\n                            <TableCell>\r\n                                <Checkbox \r\n                                    onClick={() => this.selectSensor(row)}\r\n                                    checked={this.state.selectedSensors.filter(t => t.model === row.model && t.type === row.type).length !== 0}\r\n                                    color='primary'\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell >{row.port}</TableCell>\r\n                            <TableCell >{row.type}</TableCell>\r\n                            <TableCell >{row.model}</TableCell>\r\n                            <TableCell >{row.samplingPeriod}</TableCell>\r\n                            <TableCell>\r\n                                {/* <Checkbox \r\n                                    checked={this.state.enabled.filter(t => t.model === row.model && t.type === row.type).length !== 0}\r\n                                    onClick={() => this.enable(row)}\r\n                                    color='primary'\r\n                                /> */}\r\n                                <Switch color='primary' checked={this.state.enabled.filter(t => t.model === row.model && t.type === row.type).length !== 0} onClick={() => this.enable(row)} />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>{sensors && sensors.length > 0 &&\r\n                <Grid item style={{textAlign: 'end'}}>\r\n                    <Button color='primary' variant='contained' disabled={this.state.selectedSensors.length === 0} className={classes.buttons} onClick={() => this.removeSensor()}>Remove</Button>\r\n                </Grid>}\r\n                </Grid>\r\n                <Dialog\r\n                    open={this.state.dialog}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">{this.state.which === 'add' ? 'Add Sensor' : 'Edit Sensor'}</DialogTitle>\r\n                    <DialogContent>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl} fullWidth margin='dense'>\r\n                            <InputLabel htmlFor=\"port\">\r\n                                Port #\r\n                            </InputLabel>\r\n                            <Select\r\n                                value={this.state.port}\r\n                                onChange={this.handleChange}\r\n                                autoWidth\r\n                                input={<OutlinedInput labelWidth={50} name=\"port\" id=\"port\" />}\r\n                            >\r\n                                <MenuItem value={'ADC48CH0'}>ADC48CH0 (Address: 0x48; Channel: 0)</MenuItem>\r\n                                <MenuItem value={'ADC48CH1'}>ADC48CH1 (Address: 0x48; Channel: 1)</MenuItem>\r\n                                <MenuItem value={'ADC48CH2'}>ADC48CH2 (Address: 0x48; Channel: 2)</MenuItem>\r\n                                <MenuItem value={'ADC48CH3'}>ADC48CH3 (Address: 0x48; Channel: 3)</MenuItem>\r\n                                <MenuItem value={'ADC49CH0'}>ADC49CH0 (Address: 0x49; Channel: 0)</MenuItem>\r\n                                <MenuItem value={'ADC49CH1'}>ADC49CH1 (Address: 0x49; Channel: 1)</MenuItem>\r\n                                <MenuItem value={'ADC49CH2'}>ADC49CH2 (Address: 0x49; Channel: 2)</MenuItem>\r\n                                <MenuItem value={'ADC49CH3'}>ADC49CH3 (Address: 0x49; Channel: 3)</MenuItem>\r\n                                <MenuItem value={'Modbus RTU'}>Modbus RTU</MenuItem>\r\n                                <MenuItem value={'GPIO11'}>GPIO11 (Pin 11)</MenuItem>\r\n                                <MenuItem value={'GPIO13'}>GPIO13 (Pin 13)</MenuItem>\r\n                                <MenuItem value={'GPIO15'}>GPIO15 (Pin 15)</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl} fullWidth margin='dense'>\r\n                            <InputLabel htmlFor=\"type\">\r\n                                Sensor Type\r\n                            </InputLabel>\r\n                            <Select\r\n                                value={this.state.type}\r\n                                onChange={this.handleChange}\r\n                                autoWidth\r\n                                input={<OutlinedInput labelWidth={100} name=\"type\" id=\"type\" />}\r\n                            >\r\n                                <MenuItem value={'wind'}>Wind Sensor</MenuItem>\r\n                                <MenuItem value={'snow'}>Snow Sensor</MenuItem>\r\n                                <MenuItem value={'flood'}>Flood Sensor</MenuItem>\r\n                                <MenuItem value={'rain'}>Rain Sensor</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField\r\n                            fullWidth\r\n                            id='model'\r\n                            name='model'\r\n                            label='Model #'\r\n                            value={this.state.model}\r\n                            onChange={this.handleChange}\r\n                            margin=\"dense\"\r\n                            variant='outlined'\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id='samplingPeriod'\r\n                            name='samplingPeriod'\r\n                            label='samplingPeriod'\r\n                            value={this.state.samplingPeriod}\r\n                            onChange={this.handleChange}\r\n                            margin=\"dense\"\r\n                            variant='outlined'\r\n                        />\r\n                        <div style={{display: 'flex', alignItems: 'baseline'}}>\r\n                        <TextField\r\n                            id=\"driverFile\"\r\n                            label=\"Driver File\"\r\n                            helperText=\"Upload Sensor Driver File\"\r\n                            name='driverFile'\r\n                            value={this.state.driverFileName}\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        />\r\n                        <input\r\n                            accept=\"*\"\r\n                            style={{ display: 'none'}}\r\n                            id=\"contained-button-file\"\r\n                            type=\"file\"\r\n                            onChange={this.handleSelectedFile}\r\n                        />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\" style={{margin: 5}}>\r\n                                Browse\r\n                            </Button>\r\n                        </label>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant='contained' onClick={this.handleClose} color=\"primary\">\r\n                            {this.state.which === 'add' ? 'Add Sensor' : 'Save'}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Grid>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { sensors } = state.app\r\n\r\n    return {\r\n        sensors,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getSensors: () => {\r\n        dispatch({type: 'GET_SENSORS_REQUEST'})\r\n        appService.getSensors()\r\n            .then(json => {\r\n                dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_SENSORS_FAILURE'})\r\n            })        \r\n    },\r\n    addSensor: (port, type, model, samplingPeriod) => {\r\n        dispatch({type: 'ADD_SENSOR_REQUEST'})\r\n        appService.addSensor(port, type, model, samplingPeriod)\r\n            .then(json => {\r\n                dispatch({type: 'ADD_SENSORS_SUCCESS'})\r\n                dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                appService.getSensors()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                    }) \r\n            }, error => {\r\n                dispatch({type: 'ADD_SENSORS_FAILURE'})\r\n            })\r\n    },\r\n    removeSensor: (selectedSensors) => {\r\n        selectedSensors.map(s => {\r\n            dispatch({type: 'REMOVE_SENSOR_REQUEST'})\r\n            appService.removeSensor(s.model, s.type)\r\n                .then(json => {\r\n                    dispatch({type: 'REMOVE_SENSOR_SUCCESS'})\r\n                    dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                    appService.getSensors()\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                        })\r\n                }, error => {\r\n                    dispatch({type: 'REMOVE_SENSOR_FAILURE'})\r\n                })\r\n        })\r\n        \r\n    },\r\n    softRemoveSensor: (selectedSensors) => {\r\n        selectedSensors.map(s => {\r\n            dispatch({type: 'REMOVE_SENSOR_REQUEST'})\r\n            appService.removeSensor(s.model, s.type)\r\n                .then(json => {\r\n                    dispatch({type: 'REMOVE_SENSOR_SUCCESS'})\r\n                }, error => {\r\n                    dispatch({type: 'REMOVE_SENSOR_FAILURE'})\r\n                })\r\n        })\r\n    },\r\n    enableSensor: (type, model) => {\r\n        dispatch({type: 'ENABLE_SENSOR_REQUEST'})\r\n        appService.enableSensor(type, model)\r\n            .then(json => {\r\n                dispatch({type: 'ENABLE_SENSOR_SUCCESS'})\r\n                dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                appService.getSensors()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                    }) \r\n            }, error => {\r\n                dispatch({type: 'ENABLE_SENSOR_FAILURE'})\r\n            })\r\n    },\r\n    disableSensor: (type, model) => {\r\n        dispatch({type: 'DISABLE_SENSOR_REQUEST'})\r\n        appService.disableSensor(type, model)\r\n            .then(json => {\r\n                dispatch({type: 'DISABLE_SENSOR_SUCCESS'})\r\n                dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                appService.getSensors()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                    }) \r\n            }, error => {\r\n                dispatch({type: 'DISABLE_SENSOR_FAILURE'})\r\n            })\r\n    },\r\n    uploadDriver: (file, type, model) => {\r\n        dispatch({type: 'UPLOAD_DRIVER_FILE_REQUEST'})\r\n        appService.uploadDriver(file, type, model)\r\n            .then(json => {\r\n                dispatch({type: 'UPLOAD_DRIVER_FILE_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'UPLOAD_DRIVER_FILE_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedSensors = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Sensors))\r\nexport {connectedSensors as Sensors}","import React from 'react';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst styles1 = theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n  const { classes, className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={[classes[variant], className]}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={[classes.icon, classes.iconVariant]} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          className={classes.close}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nexport const SnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);","import React from 'react';\r\nimport { NavBar } from '../NavBar/NavBar'\r\nimport {Dashboard} from '../Dashboard/Dashboard'\r\nimport { RowController }  from '../RowController/RowController'\r\nimport { ZoneController } from '../ZoneController/ZoneController'\r\nimport { Sensors } from '../Sensors/Sensors'\r\nimport { About } from '../About/About'\r\nimport { connect } from 'react-redux'\r\nimport { appService } from './app.services';\r\nimport { Snackbar, DialogActions, DialogTitle, Dialog, DialogContent, Button, DialogContentText, Slide } from '@material-ui/core';\r\nimport { SnackbarContentWrapper } from '../util/SnackbarContentWrapper';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { store } from '../util/store'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%'\r\n    },\r\n    topCenter: {\r\n        top: 75\r\n    }\r\n})\r\n\r\nconst Initializing = () => <div style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>INITIALIZING...</div>\r\n\r\nclass App extends React.Component {\r\n    queue = [];\r\n    timer = null\r\n\r\n    state = {\r\n        open: false,\r\n        alert: null,\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.props.init()\r\n        const io = socketIOClient(`http://${window.location.hostname}:8080`);\r\n        io.on('connect', () => {\r\n            console.log('connected')\r\n        })\r\n        io.on('ui/rover/scan', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/scan', json)\r\n        })\r\n        io.on('ui/rover/spa', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/spa', json)\r\n        })\r\n        io.on('ui/rover/stowangles', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/stowangles', json)\r\n        })\r\n        io.on('ui/rover/response/multiple', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/response/multiple', json)\r\n        })\r\n        io.on('time', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('time', json)\r\n        })\r\n        io.on('sensorReadings/wind', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('sensorReadings/wind', json)\r\n        })\r\n        io.on('changeEvent/sensor', data => {\r\n            this.props.getSensors()\r\n        })\r\n        io.on('changeEvent/rover', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('changeEvent/rover', json)\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.alert !== null && (nextProps.alert !== this.props.alert)) {\r\n            this.queue.push(nextProps.alert);\r\n        \r\n            if (this.state.open) {\r\n                this.setState({ open: false });\r\n            } else {\r\n                this.processQueue();\r\n            }    \r\n        }\r\n    }\r\n\r\n    processQueue = () => {\r\n        if (this.queue.length > 0) {\r\n            this.setState({\r\n                alert: this.queue.shift(),\r\n                open: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n        return;\r\n        }\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleExited = () => {\r\n        this.processQueue();\r\n    };\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return ( \r\n                <div className={classes.root}>\r\n                    <NavBar>\r\n                    {\r\n                        this.props.currentPage === 'Dashboard' ? <Dashboard /> :\r\n                        this.props.currentPage === 'Row Controller' ? <RowController /> :\r\n                        this.props.currentPage === 'Zone Controller' ? <ZoneController /> :\r\n                        this.props.currentPage === 'Sensors' ? <Sensors /> : \r\n                        this.props.currentPage === 'About' ? <About /> : <Initializing />\r\n                    }\r\n                    </NavBar>\r\n                    <Snackbar\r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'center',\r\n                        }}\r\n                        open={this.state.open}\r\n                        //autoHideDuration={3000}\r\n                        onClose={this.handleClose}\r\n                        onExited={this.handleExited}\r\n                        classes={{anchorOriginTopCenter: classes.topCenter}}\r\n                    >\r\n                        <SnackbarContentWrapper\r\n                            onClose={this.handleClose}\r\n                            variant={this.state.alert === null ? 'info' : this.state.alert.type}\r\n                            message={this.state.alert === null ? '' : this.state.alert.message}\r\n                        />\r\n                    </Snackbar>\r\n                    {/* <Dialog\r\n                        open={this.state.open}\r\n                        onClose={this.handleClose}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                        style={{ minWidth: 300 }}\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\" style={{color:'white', background: this.state.alert !== null ? this.state.alert.type==='success' ? 'green' : this.state.alert.type === 'warning' ? 'orange' : 'red' : 'blue'}}>{this.state.alert === null ? 'info' : this.state.alert.type}</DialogTitle>\r\n                        <DialogContent style={{color:'white', background: this.state.alert !== null ? this.state.alert.type==='success' ? 'green' : this.state.alert.type === 'warning' ? 'orange' : 'red' : 'blue'}}>\r\n                        <DialogContentText id=\"alert-dialog-description\" style={{color:'white'}}>\r\n                            {this.state.alert === null ? '' : this.state.alert.message}\r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions style={{color:'white', background: this.state.alert !== null ? this.state.alert.type==='success' ? 'green' : this.state.alert.type === 'warning' ? 'orange' : 'red' : 'blue'}}>\r\n                        <Button onClick={this.handleClose} color=\"primary\" variant='contained'>\r\n                            Close\r\n                        </Button>\r\n                        </DialogActions>\r\n                    </Dialog> */}\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentPage, alert, timeZone } = state.app\r\n\r\n    return {\r\n        currentPage,\r\n        alert,\r\n        timeZone\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    init: () => {\r\n        dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n        appService.getCommissioningData()\r\n            .then(json => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n            })\r\n        \r\n        dispatch({type: 'GET_TIMEZONE_REQUEST'})\r\n        appService.getTimeZone()\r\n            .then(json => {\r\n                if(json.timeZone === null) {\r\n                    dispatch({type: 'SET_TIMEZONE_REQUEST'})\r\n                    appService.setTimeZone(store.getState().app.timeZone)\r\n                        .then(json => {\r\n                            dispatch({type: 'SET_TIMEZONE_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'SET_TIMEZONE_FAILURE'})\r\n                        })\r\n                }\r\n                dispatch({type: 'GET_TIMEZONE_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_TIMEZONE_FAILURE', error})\r\n            })\r\n        dispatch({type: 'GET_SENSORS_REQUEST'})\r\n        appService.getSensors()\r\n            .then(json => {\r\n                dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_SENSORS_FAILURE'})\r\n            })\r\n    },\r\n    clearAlert : () => {\r\n        dispatch({type: 'CLEAR_ALERT'})\r\n    },\r\n    received: (topic, json) => {\r\n        dispatch({type: topic, json})\r\n    }\r\n})\r\n\r\n\r\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(App))\r\nexport {connectedApp as App}","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { store } from './util/store';\r\nimport { App } from './App';\r\nimport './index.css'\r\n\r\n/* const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#54AAB3\",\r\n        contrastText: '#fff'\r\n      }\r\n    },\r\n    overrides: {\r\n      MuiIconButton: {\r\n          root: {\r\n            color: 'white'\r\n          },\r\n      }\r\n    } \r\n  }); */\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#54AAB3',\r\n        dark: '#3c8f98',\r\n        contrastText: '#ffffff'\r\n      },\r\n      secondary: {\r\n        main: '#ffffff',\r\n        contrastText: '#000000'\r\n      }\r\n    }/* ,\r\n    overrides: {\r\n      MuiListItem: {\r\n        root: {\r\n          backgroundColor: '#ffffff',\r\n          '&$selected': {\r\n            backgroundColor: '#54AAB3',\r\n            color: '#ffffff'\r\n          },\r\n          '&$selected:hover': {\r\n            backgroundColor: '#3c8f98',\r\n            color: '#ffffff'\r\n          }\r\n        },\r\n      },\r\n    } */\r\n  });\r\n\r\nrender(\r\n    <MuiThemeProvider theme={theme}>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </MuiThemeProvider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}