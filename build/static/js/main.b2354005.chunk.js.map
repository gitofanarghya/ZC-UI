{"version":3,"sources":["App/app.reducer.js","util/rootReducer.js","util/store.js","NavBar/NavBar.js","Dashboard/TrackerList.js","App/app.services.js","Dashboard/TrackerDetails.js","Dashboard/Dashboard.js","RowController/SPAParameters.js","RowController/StowAngles.js","RowController/EditRowController.js","RowController/_EditRowController.js","RowController/ControlRowController.js","RowController/RowControllerTab.js","RowController/ScanTab.js","RowController/RowController.js","ZoneController/ZoneController.js","Sensors/Sensors.js","util/SnackbarContentWrapper.js","App/App.jsx","index.js"],"names":["initialState","currentPage","currentTab","currentEditTab","timeZone","Intl","DateTimeFormat","resolvedOptions","alert","time","Date","now","commissioningData","fetchingCommissioningData","currentTracker","currentTrackerInfo","xbeeResponse","controlledTrackers","editedTrackers","SPAParameters","stowAngles","sendingSPAParameters","sendingStowAngles","gettingSPAParameters","gettingStowAngles","addingTrackers","sensors","responseQueue","listen","difference","a1","a2","result","i","length","indexOf","push","rootReducer","combineReducers","app","state","action","type","Object","objectSpread","json","trackerID","concat","toConsumableArray","Result","message","page","commandQueue","value","staticData","a","filter","r","DID","deviceID","newXbeeResponse","devices","trackers","newSPAParameters","defineProperty","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ResponsiveDrawer","mobileOpen","handleDrawerToggle","_this","setState","_this2","this","_this$props","props","classes","theme","children","drawer","react_default","createElement","className","toolbar","src","height","width","alt","Divider","List","map","text","index","ListItem","button","key","onClick","changePage","selected","ListItemIcon","MoveToInbox_default","Mail_default","ListItemText","disableTypography","primary","root","CssBaseline","AppBar","position","color","appBar","Toolbar","IconButton","aria-label","menuButton","Menu_default","Typography","variant","noWrap","Chip","icon","AccessTime_default","style","marginLeft","backgroundColor","label","Number","toLocaleString","getHours","getMinutes","Hidden","mdUp","implementation","Drawer","container","anchor","direction","open","onClose","paper","drawerPaper","smDown","content","React","Component","connectedNavBar","connect","_state$app","dispatch","withStyles","display","breakpoints","up","flexShrink","marginRight","mixins","flexGrow","padding","spacing","paddingTop","withTheme","TrackerList","react","Grid","Table","TableHead","TableRow","TableCell","TableBody","n","hover","setCurrentTracker","cursor","connectedTrackerList","appService","setWifiInfo","ssid","pass","requestOptions","method","mode","body","JSON","stringify","password","fetch","hostName","then","handleResponse","uploadDriver","file","model","data","FormData","append","selectSensor","windSensor","rainSensor","floodSensor","snowSensor","uploadKey","setWindAddress","address","deviceAddress","getWindAddress","caliberate","sensor","sendCommand","CMD","VALUES","sendStow","MODE","getCommissioningData","getCurrentTrackerInfo","triggerDiscovery","hostName2","setPanID","panID","console","log","threshold","maxWindSpeed","maxRainFall","meanWindSpeed","windSpeedTimer","maxFloodLevel","maxSnowFall","heartBeat","enabled","hbinterval","maxMsgs","interval","setTimeZone","getHeartBeat","getThreshold","getPanID","getFrequency","setFrequency","power","status","powerRequestTimePeriod","statusRequestTimePeriod","getTimeZone","getTime","discover","did","addTrackers","removeTrackers","DIDs","sendSPAParameters","Lattitude","Longitude","Altitude","EastLimit","WestLimit","TrackerWidth","Pitch","TrackingAccuracy","AzimuthDeviation","AltitudeTrackeronEast","AltitudeTrackeronWest","StartTimeLead","EndTimeLag","backtracking","sendStowAngles","WindStowAngle","SnowStowAngle","CleanStowAngle","NightStowAngle","EmergencyStowAngle","getSPAParameters","getStowAngles","getSensors","addSensor","port","samplingPeriod","removeSensor","enableSensor","disableSensor","window","location","hostname","response","ok","error","statusText","Promise","reject","NoCurrentTrackerInfo","alignItems","justifyContent","TrackerDetails","timer","componentDidMount","refresh","componentWillReceiveProps","nextProps","c","arguments","undefined","setTimeout","TrackerDetails_NoCurrentTrackerInfo","currentAngle","marginTop","textAlign","overflow","macID","currentMode","timeStamp","toLocaleDateString","toLocaleTimeString","hour12","connectedTrackerDetails","flexWrap","Initializing","flexDirection","margin","Button","scan","Fetching","Dashboard","Dashboard_Fetching","Dashboard_Initializing","item","trackerList","Paper","trackerDetails","connectedDashboard","minHeight","TrackingLimitEast","TrackingLimitWest","RowWidth","RowPitch","TrackingResolution","AltitudeofTrackerontheEast","AltitudeofTrackerontheWest","EarlyStartMinutes","LateFinishMinutes","LattitudeError","LongitudeError","AltitudeError","TrackingLimitEastError","TrackingLimitWestError","RowWidthError","RowPitchError","TrackingResolutionError","AzimuthDeviationError","AltitudeofTrackerontheEastError","AltitudeofTrackerontheWestError","EarlyStartMinutesError","LateFinishMinutesError","backTracking","submit","values","split","handleChange","event","_objectSpread2","target","name","handleBlur","e","p","RegExp","test","_objectSpread4","min","max","_objectSpread5","_objectSpread6","_objectSpread3","_this$state","fieldGrid","adornment","TextField","field","id","replace","onChange","InputLabelProps","shrink","disabled","InputProps","endAdornment","InputAdornment","helperText","onBlur","FormControlLabel","control","Checkbox","checked","connectedSPAParameters","t","StowAngles","_objectSpread7","connectedStowAngles","EditRowController","changeTab","header","back","ArrowBack_default","fontSize","disableGutters","rowNumber","chip","request","success","tabs","Tabs","indicator","tabsIndicator","Tab","connectedEditRowController","palette","background","fontWeight","boxShadow","green","red","handleChangeSPA","_objectSpread8","_this$state2","borderBottom","paddingLeft","ControlRowController","typeOfStow","auto","handleClick","anchorEl","currentTarget","handleClose","autoToggle","second","aria-owns","aria-haspopup","minWidth","paddingRight","ExpandMore_default","Menu_Menu","Boolean","MenuItem","labelPlacement","Switch","connectedControlRowController","RowControllerTab","selectedTrackers","selectAll","selectRow","row","editTracker","setEditedTrackers","controlTracker","setControlledTrackers","s","_EditRowController_connectedEditRowController","buttons","table","connectedRowControllerTab","overflowX","marginBottom","ScanTab","scanSelection","inputChange","scanParameter","FormControl","component","formControl","RadioGroup","Radio","textField","placeholder","verticalAlign","res","connectedScanTab","RowController","connectedRowController","ZoneController","xs","justify","grid2","staticIP","saveButton","bqKey","floodLevelTimer","maxSnowLevel","snowLevelTimer","maxRainLevel","rainLevelTimer","syncTime","connectedZoneController","alignSelf","down","Sensors","selectedSensors","dialog","which","driverFile","driverFileName","editSensor","enable","softRemoveSensor","handleSelectedFile","files","Tooltip","title","Dialog","aria-labelledby","DialogTitle","DialogContent","fullWidth","InputLabel","htmlFor","Select","autoWidth","input","OutlinedInput","labelWidth","accept","DialogActions","connectedSensors","variantIcon","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","SnackbarContentWrapper","dark","amber","iconVariant","opacity","other","objectWithoutProperties","Icon","SnackbarContent","assign","aria-describedby","close","Close_default","App","queue","init","io","socketIOClient","on","parse","received","processQueue","shift","reason","handleExited","About","App_Initializing","Snackbar","anchorOrigin","vertical","horizontal","onExited","anchorOriginTopCenter","topCenter","connectedApp","getState","clearAlert","topic","top","createMuiTheme","main","contrastText","secondary","render","MuiThemeProvider","es","document","getElementById"],"mappings":"2SAAMA,EAAe,CACjBC,YAAa,GACbC,WAAY,EACZC,eAAgB,EAChBC,SAAUC,KAAKC,iBAAiBC,kBAAkBH,SAClDI,MAAO,KACPC,KAAMC,KAAKC,MACXC,kBAAmB,KACnBC,2BAA2B,EAC3BC,eAAgB,KAChBC,mBAAoB,KACpBC,aAAc,GACdC,mBAAoB,GACpBC,eAAgB,GAChBC,cAAe,KACfC,WAAY,KACZC,sBAAsB,EACtBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,gBAAgB,EAChBC,QAAS,GACTC,cAAe,GACfC,QAAQ,GAGNC,EAAa,SAACC,EAAIC,GAEpB,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAIH,EAAGI,OAAQD,KACJ,IAAvBF,EAAGI,QAAQL,EAAGG,KACdD,EAAOI,KAAKN,EAAGG,IAGnB,OAAOD,GC7BX,IAIeK,EAJKC,YAAgB,CAClCC,ID+BK,SAAaC,EAAOC,GACvB,GAAqB,qBAAVD,EACT,OAAOxC,EAET,OAAQyC,EAAOC,MACX,IAAK,OACL,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEI/B,KAAMgC,EAAOI,KAAKpC,OAGtB,IAAK,sBACL,OAAOkC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEI1B,eAAgB2B,EAAOK,YAG3B,IAAK,wBACL,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIZ,QAAQ,IAGZ,IAAK,8BACL,OAAOe,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEInB,sBAAsB,EACtBM,cAAe,KAGnB,IAAK,2BACL,OAAOgB,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIlB,mBAAmB,EACnBK,cAAe,KAGnB,IAAK,oBACL,GAAGa,EAAMZ,OACL,OAAGY,EAAMtB,eAAegB,SAAWM,EAAMb,cAAcO,OAAS,EACrDS,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIb,cAAa,GAAAoB,OAAAJ,OAAAK,EAAA,EAAAL,CAAMH,EAAMb,eAAZ,CAA2Bc,EAAOI,OAC/CjB,QAAQ,IAGTe,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIb,cAAa,GAAAoB,OAAAJ,OAAAK,EAAA,EAAAL,CAAMH,EAAMb,eAAZ,CAA2Bc,EAAOI,SAKvD,IAAK,sBACL,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEId,QAASe,EAAOI,KAAKI,SAGzB,IAAK,wBACL,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIhC,MAAO,CACHkC,KAAM,UACNQ,QAAS,iCAIjB,IAAK,sBACL,OAAOP,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIhC,MAAO,CACHkC,KAAM,UACNQ,QAAS,+BAIjB,IAAK,cACL,OAAOP,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIvC,YAAawC,EAAOU,KACpBxB,cAAe,GACfyB,aAAc,KAGlB,IAAK,aACL,OAAOT,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEItC,WAAYuC,EAAOY,MAAMA,MACzB1B,cAAe,GACfyB,aAAc,KAIlB,IAAK,kBACL,OAAOT,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIrC,eAAgBsC,EAAOY,MAAMA,MAC7B1B,cAAe,GACfyB,aAAc,KAGlB,IAAK,cACL,OAAOT,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIhC,MAAO,OAGX,IAAK,iCACL,OAAOmC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEI3B,2BAA2B,IAG/B,IAAK,iCACL,OAA8B,OAA3B4B,EAAOI,KAAKS,YAAyD,IAAlCb,EAAOI,KAAKS,WAAWpB,OAClDS,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEI3B,2BAA2B,EAC3BZ,YAAmC,KAAtBuC,EAAMvC,YAAqB,YAAcuC,EAAMvC,YAC5DW,kBAAmB,KACnBJ,MAAO,CACHkC,KAAM,UACNQ,QAAS,yBAIVP,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEI3B,2BAA2B,EAC3BZ,YAAmC,KAAtBuC,EAAMvC,YAAqB,YAAcuC,EAAMvC,YAC5DW,kBAAmB6B,EAAOI,KAAKS,WAC/BxC,eAAgB2B,EAAOI,KAAKS,WAAW,GAAGR,YAIlD,IAAK,iCACL,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEI3B,2BAA2B,EAC3BZ,YAAmC,KAAtBuC,EAAMvC,YAAqB,YAAcuC,EAAMvC,YAC5DO,MAAO,CACHkC,KAAM,QACNQ,QAAS,sCAIjB,IAAK,uBACL,OAA4B,OAAzBT,EAAOI,KAAKzC,SACJuC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIpC,SAAUqC,EAAOI,KAAKzC,WAGnBoC,EAGX,IAAK,uBACL,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIhC,MAAO,CACHkC,KAAM,QACNQ,QAAS,4BAIjB,IAAK,OACL,OAAOP,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIvC,YAAa,iBACbC,WAAY,IAGhB,IAAK,mCACL,OAAOyC,OAAAC,EAAA,EAAAD,CAAA,GACAH,GAGP,IAAK,mCACL,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIzB,mBAAoB0B,EAAOI,OAG/B,IAAK,mCACL,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIhC,MAAO,CACHkC,KAAM,QACNQ,QAAS,wCAIjB,IAAK,mBACL,OAAOP,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIxB,aAAc,GACdR,MAAO,CACHkC,KAAM,UACNQ,QAAS,sBAIjB,IAAK,mBACL,OAAOP,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIhC,MAAO,CACHkC,KAAM,QACNQ,QAAS,yBAIjB,IAAK,gBACL,IAAIK,EAAI,KAYR,OAVIA,EAD2B,OAA5Bf,EAAM5B,kBACJ,GAAAmC,OAAAJ,OAAAK,EAAA,EAAAL,CAAOH,EAAMxB,cAAb,CAA2ByB,EAAOI,OAGnB,IADRL,EAAM5B,kBAAkB4C,OAAO,SAAAC,GAAC,OAAIhB,EAAOI,KAAKa,MAAQD,EAAEE,WAC7DzB,OACA,GAAAa,OAAAJ,OAAAK,EAAA,EAAAL,CAAOH,EAAMxB,cAAb,CAA2ByB,EAAOI,OAElCF,OAAAK,EAAA,EAAAL,CAAOH,EAAMxB,cAIf2B,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIxB,aAAcuC,IAGlB,IAAK,uBACL,OAAOZ,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIf,gBAAgB,IAGpB,IAAK,uBACL,IAAMmC,EAAkB/B,EAAWW,EAAMxB,aAAcyB,EAAOoB,SAC9D,OAAOlB,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIxB,aAAc4C,EACdnC,gBAAgB,EAChBjB,MAAO,CACHkC,KAAM,UACNQ,QAAS,sBAIjB,IAAK,uBACL,OAAOP,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIf,gBAAgB,EAChBjB,MAAO,CACHkC,KAAM,QACNQ,QAAS,2BAIjB,IAAK,sBACL,OAAOP,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEItB,eAAgBuB,EAAOqB,WAG3B,IAAK,0BACL,OAAOnB,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIvB,mBAAoBwB,EAAOqB,WAG/B,IAAK,eACL,IAAIJ,EAAMjB,EAAOI,KAAKa,IAClBK,EAAgBpB,OAAAC,EAAA,EAAAD,CAAA,GAAOH,EAAMrB,cAAbwB,OAAAqB,EAAA,EAAArB,CAAA,GAA6Be,EAAMjB,EAAOI,OAC9D,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIrB,cAAe4C,EACfxC,sBAAsB,IAG1B,IAAK,sBACL,OAAOoB,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIpB,WAAYqB,EAAOI,KACnBrB,mBAAmB,IAGvB,IAAK,0BACL,OAAOmB,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIhB,mBAAmB,IAGvB,IAAK,0BACL,OAAOmB,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIhB,mBAAmB,EACnBhB,MAAO,CACHkC,KAAM,QACNQ,QAAS,+BAIjB,IAAK,6BACL,OAAOP,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIjB,sBAAsB,IAG1B,IAAK,6BACL,OAAOoB,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIjB,sBAAsB,EACtBf,MAAO,CACHkC,KAAM,QACNQ,QAAS,kCAIjB,IAAK,8BACL,OAAOP,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEInB,sBAAsB,EACtBb,MAAO,CACHkC,KAAM,QACNQ,QAAS,kCAIjB,IAAK,8BACL,OAAOP,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEInB,sBAAsB,IAG1B,IAAK,2BACL,OAAOsB,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIlB,mBAAmB,EACnBd,MAAO,CACHkC,KAAM,QACNQ,QAAS,+BAIjB,IAAK,2BACL,OAAOP,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIlB,mBAAmB,IAGvB,QACA,OAAOkB,ME9XTyB,EAAmBC,yBAEZC,EAAQC,YACjB/B,EACAgC,YACIC,IACAL,+OCoDFM,6MACJ/B,MAAQ,CACNgC,YAAY,KAGdC,mBAAqB,WACnBC,EAAKC,SAAS,SAAAnC,GAAK,MAAK,CAAEgC,YAAahC,EAAMgC,uFAGtC,IAAAI,EAAAC,KAAAC,EAC8BD,KAAKE,MAAlCC,EADDF,EACCE,QAASC,EADVH,EACUG,MAAOC,EADjBJ,EACiBI,SAElBC,EACJC,EAAA7B,EAAA8B,cAAA,WACED,EAAA7B,EAAA8B,cAAA,OAAKC,UAAWN,EAAQO,SACpBH,EAAA7B,EAAA8B,cAAA,OAAKG,IAAI,sCAAsCC,OAAO,OAAOC,MAAM,MAAMC,IAAI,MAEjFP,EAAA7B,EAAA8B,cAACO,EAAA,EAAD,MACAR,EAAA7B,EAAA8B,cAACQ,EAAA,EAAD,KACG,CAAC,YAAa,iBAAkB,kBAAmB,UAAW,SAASC,IAAI,SAACC,EAAMC,GAAP,OAC1EZ,EAAA7B,EAAA8B,cAACY,EAAA,EAAD,CACIC,QAAM,EACNC,IAAKJ,EACLK,QAAS,kBAAMxB,EAAKG,MAAMsB,WAAWN,IACrCO,SAAU1B,EAAKG,MAAM9E,cAAgB8F,EACrCf,QAAS,CAACsB,SAAUtB,EAAQsB,WAE9BlB,EAAA7B,EAAA8B,cAACkB,EAAA,EAAD,KAAeP,EAAQ,IAAM,EAAIZ,EAAA7B,EAAA8B,cAACmB,EAAAjD,EAAD,MAAgB6B,EAAA7B,EAAA8B,cAACoB,EAAAlD,EAAD,OACjD6B,EAAA7B,EAAA8B,cAACqB,EAAA,EAAD,CAAcC,mBAAiB,EAACC,QAASb,QAI/CX,EAAA7B,EAAA8B,cAACO,EAAA,EAAD,OAIJ,OACER,EAAA7B,EAAA8B,cAAA,OAAKC,UAAWN,EAAQ6B,MACtBzB,EAAA7B,EAAA8B,cAACyB,EAAA,EAAD,MACA1B,EAAA7B,EAAA8B,cAAC0B,EAAA,EAAD,CAAQC,SAAS,QAAQC,MAAM,UAAU3B,UAAWN,EAAQkC,QAC1D9B,EAAA7B,EAAA8B,cAAC8B,EAAA,EAAD,KACE/B,EAAA7B,EAAA8B,cAAC+B,EAAA,EAAD,CACEH,MAAM,UACNI,aAAW,cACXjB,QAASvB,KAAKJ,mBACda,UAAWN,EAAQsC,YAEnBlC,EAAA7B,EAAA8B,cAACkC,EAAAhE,EAAD,OAEF6B,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAKR,MAAM,UAAUS,QAAM,GAA/C,2BAGAtC,EAAA7B,EAAA8B,cAACsC,EAAA,EAAD,CACEC,KAAMxC,EAAA7B,EAAA8B,cAACwC,EAAAtE,EAAD,MACNuE,MAAO,CAACC,WAAY,OAAQC,gBAAiB,SAC7CC,MAAK,GAAAlF,OAAK,IAAIrC,KAAK,IAAIA,KAAKwH,OAAOrD,KAAKE,MAAMtE,OAAO0H,eAAe,QAAS,CAAC/H,SAAWyE,KAAKE,MAAM3E,YAAYgI,WAA3G,OAAArF,OAA2H,IAAIrC,KAAK,IAAIA,KAAKwH,OAAOrD,KAAKE,MAAMtE,OAAO0H,eAAe,QAAS,CAAC/H,SAAWyE,KAAKE,MAAM3E,YAAYiI,kBAI5OjD,EAAA7B,EAAA8B,cAAA,OAAKC,UAAWN,EAAQG,QACtBC,EAAA7B,EAAA8B,cAACiD,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OAC1BpD,EAAA7B,EAAA8B,cAACoD,EAAA,EAAD,CACEC,UAAW7D,KAAKE,MAAM2D,UACtBjB,QAAQ,YACRkB,OAA4B,QAApB1D,EAAM2D,UAAsB,QAAU,OAC9CC,KAAMhE,KAAKrC,MAAMgC,WACjBsE,QAASjE,KAAKJ,mBACdO,QAAS,CACP+D,MAAO/D,EAAQgE,cAGhB7D,IAGLC,EAAA7B,EAAA8B,cAACiD,EAAA,EAAD,CAAQW,QAAM,EAACT,eAAe,OAC5BpD,EAAA7B,EAAA8B,cAACoD,EAAA,EAAD,CACEzD,QAAS,CACP+D,MAAO/D,EAAQgE,aAEjBvB,QAAQ,YACRoB,MAAI,GAEH1D,KAIPC,EAAA7B,EAAA8B,cAAA,QAAMC,UAAWN,EAAQkE,SACtBhE,WAvFoBiE,IAAMC,WA8GrC,IAMMC,EAAkBC,YAhBxB,SAAyB9G,GAAO,IAAA+G,EACY/G,EAAMD,IAE9C,MAAO,CACHtC,YAJwBsJ,EACpBtJ,YAIJQ,KALwB8I,EACP9I,KAKjBL,SANwBmJ,EACDnJ,WASJ,SAACoJ,GAAD,MAAe,CACtCnD,WAAY,SAAClD,GACXqG,EAAS,CAAC9G,KAAM,cAAeS,YAIbmG,CAA6CG,YA1JtD,SAAAxE,GAAK,MAAK,CACvB4B,KAAM,CACJ6C,QAAS,OACTjE,OAAQ,QAEVN,OAAOxC,OAAAqB,EAAA,EAAArB,CAAA,GACJsC,EAAM0E,YAAYC,GAAG,MAAQ,CAC5BlE,MATc,IAUdmE,WAAY,IAGhB3C,OAAOvE,OAAAqB,EAAA,EAAArB,CAAA,CACLoF,WAdgB,KAef9C,EAAM0E,YAAYC,GAAG,MAAQ,CAC5BlE,MAAK,eAAA3C,OAhBS,IAgBT,SAGTuE,WAAW3E,OAAAqB,EAAA,EAAArB,CAAA,CACTmH,YAAa,IACZ7E,EAAM0E,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,SAGbnE,QAASN,EAAM8E,OAAOxE,QACtByD,YAAa,CACXtD,MA3BgB,KA6BlBwD,QAAS,CACPc,SAAU,EACVC,QAAShF,EAAMiF,QAAQ,GACvBC,WAAY,IAEd7D,SAAU,CACR0B,gBAAiB,qBACjBf,MAAO,wBAwH6E,CAAEmD,WAAW,GAAhCX,CAAwClF,+EC/JvG8F,oLAEO,IAAA3F,EAAAG,KAAAC,EACgDD,KAAKE,MAAnDC,EADFF,EACEE,QAASpE,EADXkE,EACWlE,kBAAmBE,EAD9BgE,EAC8BhE,eAEnC,OACIsE,EAAA7B,EAAA8B,cAACiF,EAAA,SAAD,KACIlF,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAM7B,WAAS,EAACE,UAAU,SAAStD,UAAWN,EAAQ6B,MAClDzB,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,MAApB,gBAGArC,EAAA7B,EAAA8B,cAACmF,EAAA,EAAD,KACIpF,EAAA7B,EAAA8B,cAACoF,GAAA,EAAD,KACArF,EAAA7B,EAAA8B,cAACqF,GAAA,EAAD,KACItF,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,kBACAvF,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,iBAGJvF,EAAA7B,EAAA8B,cAACuF,EAAA,EAAD,KACKhK,GAAqBA,EAAkBkF,IAAI,SAAA+E,GACxC,OACAzF,EAAA7B,EAAA8B,cAACqF,GAAA,EAAD,CACII,OAAK,EAEL3E,IAAK0E,EAAE/H,UACPsD,QAAS,kBAAM1B,EAAKK,MAAMgG,kBAAkBF,EAAE/H,YAC9CgF,MAAO,CAACkD,OAAQ,WAChB1E,SAAUuE,EAAE/H,YAAchC,EAC1BkE,QAAS,CAACsB,SAAUtB,EAAQsB,WAE5BlB,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KACKE,EAAE/H,WAEPsC,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,gCAjCVxB,IAAMC,WAsDhC,IAOM6B,GAAuB3B,YAhB7B,SAAyB9G,GAAO,IAAA+G,EACkB/G,EAAMD,IAEpD,MAAO,CACH3B,kBAJwB2I,EACpB3I,kBAIJE,eALwByI,EACDzI,iBAQJ,SAAC0I,GAAD,MAAe,CACtCuB,kBAAmB,SAACjI,GAChB0G,EAAS,CAAC9G,KAAM,sBAAuBI,iBAKlBwG,CAA6CG,YAvE3D,SAAAxE,GAAK,MAAK,CACrB4B,KAAM,CACFpB,OAAQ,OAAQC,MAAO,OAAQuE,QAAS,IAE5C3D,SAAU,CACN0B,gBAAiB,qBACjBf,MAAO,WAiE2DwC,CAAmBY,KCjFhFa,GAAa,CACtBC,YA6NJ,SAAqBC,EAAMC,GACvB,IAAMC,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBP,KAAQA,EACRQ,SAAYP,KAIpB,OAAOQ,MAAK,GAAA9I,OAAI+I,GAAJ,gBAA4BR,GACnCS,KAAKC,KAvOVC,aA0OJ,SAAsBC,EAAMxJ,EAAMyJ,GAC9B,IAAIC,EAAO,IAAIC,SACfD,EAAKE,OAAO,OAAQJ,GACpB,IAAMZ,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMW,GAGV,OAAOP,MAAK,GAAA9I,OAAI+I,GAAJ,4BAAA/I,OAAuCL,EAAvC,WAAAK,OAAqDoJ,GAASb,GACrES,KAAKC,KAnPVO,aAmQJ,SAAsBC,EAAYC,EAAYC,EAAaC,GACvD,IAAMrB,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBa,WAAcA,EACdC,WAAcA,EACdC,YAAeA,EACfC,WAAcA,KAItB,OAAOd,MAAK,GAAA9I,OAAI+I,GAAJ,gBAA4BR,GACnCS,KAAKC,KA/QVY,UAqPJ,SAAmBV,GACf,IAAIE,EAAO,IAAIC,SACfD,EAAKE,OAAO,OAAQJ,GACpB,IAAMZ,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMW,GAGV,OAAOP,MAAK,GAAA9I,OAAI+I,GAAJ,oBAAgCR,GACvCS,KAAKC,KA9PVa,eAiRJ,SAAwBC,GACpB,IAAMxB,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBoB,cAAiBD,KAIzB,OAAOjB,MAAK,GAAA9I,OAAI+I,GAAJ,2BAAuCR,GAC9CS,KAAKC,KA1RVgB,eA8RJ,WAOI,OAAOnB,MAAK,GAAA9I,OAAI+I,GAAJ,2BANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KArSViB,WAwSJ,SAAoBC,GAChB,IAAM5B,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBuB,OAAUA,KAKlB,OAAOrB,MAAK,GAAA9I,OAAI+I,GAAJ,oBAAgCR,GACvCS,KAAKC,KAlTVmB,YAuTJ,SAAqBxJ,EAAUN,GAE3B,IAAMiI,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBjI,IAAOC,EACPyJ,IAAO,OACPC,OAAUhK,KAIlB,OAAOwI,MAAK,GAAA9I,OAAI+I,GAAJ,kBAA8BR,GACrCS,KAAKC,KAnUVsB,SAsUJ,SAAkB3J,EAAU6H,GAExB,IAAMF,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBjI,IAAOC,EACPyJ,IAAO,OACPG,KAAQ/B,KAIhB,OAAOK,MAAK,GAAA9I,OAAI+I,GAAJ,kBAA8BR,GACrCS,KAAKC,KAlVVwB,qBAuVJ,WAOI,OAAO3B,MAAK,GAAA9I,OAAI+I,GAAJ,yBANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KA9VVyB,sBAiWJ,SAA+B3K,GAO3B,OAAO+I,MAAK,GAAA9I,OAAI+I,GAAJ,8BAAA/I,OAAyCD,GAN9B,CACnByI,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KAxWV0B,iBA2WJ,WACI,IAAMpC,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjByB,IAAO,OACP1J,IAAO,WAIf,OAAOmI,MAAK,UAAA9I,OAAW4K,GAAX,gBAAoCrC,GAC3CS,KAAKC,KArXV4B,SA2XJ,SAAkBC,GACd,IAAMvC,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBkC,MAASA,KAMjB,OAFAC,QAAQC,IAAIF,GAELhC,MAAK,UAAA9I,OAAW4K,GAAX,wBAA4CrC,GACnDS,KAAKC,KAtYVgC,UAyYJ,SAAmBC,EAAcC,EAAaC,EAAeC,EAAgBC,EAAeC,GACxF,IAAMhD,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBsC,aAAgBA,EAChBC,YAAeA,EACfC,cAAiBA,EACjBC,eAAkBA,EAClBC,cAAiBA,EACjBC,YAAeA,KAIvB,OAAOzC,MAAK,GAAA9I,OAAI+I,GAAJ,kBAA8BR,GACrCS,KAAKC,KAvZVuC,UA0aJ,SAAmBC,EAASC,EAAYC,GACpC,IAAMpD,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjB6C,QAAWA,EACXG,SAAYF,EACZC,QAAWA,KAInB,OAAO7C,MAAK,GAAA9I,OAAI+I,GAAJ,0BAAsCR,GAC7CS,KAAKC,KArbV4C,YAwbJ,SAAqBnO,GACjB,IAAM6K,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBvL,SAAYK,KAIpB,OAAOoL,MAAK,GAAA9I,OAAI+I,GAAJ,iBAA6BR,GACpCS,KAAKC,KAjcV6C,aAifJ,WAOI,OAAOhD,MAAK,GAAA9I,OAAI+I,GAAJ,0BANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KAxfV8C,aA0dJ,WAOI,OAAOjD,MAAK,GAAA9I,OAAI+I,GAAJ,kBANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KAjeV+C,SA0fJ,WAOI,OAAOlD,MAAK,UAAA9I,OAAW4K,GAAX,uBANW,CACnBpC,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KAjgBVgD,aAmeJ,WAOI,OAAOnD,MAAK,GAAA9I,OAAI+I,GAAJ,yBANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KA1eViD,aAoZJ,SAAsBC,EAAOC,GACzB,IAAM7D,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjByD,uBAA0BF,EAC1BG,wBAA2BF,KAInC,OAAOtD,MAAK,GAAA9I,OAAI+I,GAAJ,yBAAqCR,GAC5CS,KAAKC,KA9ZVsD,YAgcJ,WAOI,OAAOzD,MAAK,GAAA9I,OAAI+I,GAAJ,iBANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KAvcVuD,QA0cJ,WAOI,OAAO1D,MAAK,GAAA9I,OAAI+I,GAAJ,aANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KAjdVwD,SA6KJ,SAAkBC,GACd,IAAMnE,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBjI,IAAK+L,KAIb,OAAO5D,MAAK,GAAA9I,OAAI+I,GAAJ,SAAqBR,GAC5BS,KAAKC,KAtLV0D,YA+JJ,SAAqB7L,GACjB,IAAMyH,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjB9H,QAASA,KAIjB,OAAOgI,MAAK,GAAA9I,OAAI+I,GAAJ,yBAAqCR,GAC5CS,KAAKC,KAxKV2D,eAiJJ,SAAwBC,GACpB,IAAMtE,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBiE,KAAMA,KAId,OAAO/D,MAAK,GAAA9I,OAAI+I,GAAJ,wBAAoCR,GAC3CS,KAAKC,KA1JV6D,kBAiIJ,SAA2BnM,EAAKoM,EAAWC,EAAWC,EAAUC,EAAWC,EAAWC,EAAcC,EAAOC,EAAkBC,EAAkBC,EAAuBC,EAAuBC,EAAeC,EAAYC,GACpN,IAAMrF,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBjI,IAAKA,EACL0J,IAAK,OACLC,OAAM,GAAAtK,OAAK+M,EAAL,MAAA/M,OAAmBgN,EAAnB,MAAAhN,OAAiCiN,EAAjC,MAAAjN,OAA8CkN,EAA9C,MAAAlN,OAA4DmN,EAA5D,MAAAnN,OAA0EoN,EAA1E,MAAApN,OAA2FqN,EAA3F,MAAArN,OAAqGsN,EAArG,MAAAtN,OAA0HuN,EAA1H,MAAAvN,OAA+IwN,EAA/I,MAAAxN,OAAyKyN,EAAzK,MAAAzN,OAAmM0N,EAAnM,MAAA1N,OAAqN2N,EAArN,SAAA3N,OAAuO4N,MAIrP,OAAO9E,MAAK,GAAA9I,OAAI+I,GAAJ,qBAAiCR,GACxCS,KAAKC,KA5IV4E,eAgHJ,SAAwBlN,EAAKmN,EAAeC,EAAeC,EAAgBC,EAAgBC,GACvF,IAAM3F,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBjI,IAAKA,EACL0J,IAAK,OACLC,OAAM,GAAAtK,OAAK8N,EAAL,MAAA9N,OAAuB+N,EAAvB,MAAA/N,OAAyCgO,EAAzC,MAAAhO,OAA4DiO,EAA5D,MAAAjO,OAA+EkO,MAI7F,OAAOpF,MAAK,GAAA9I,OAAI+I,GAAJ,qBAAiCR,GACxCS,KAAKC,KA3HVkF,iBAiGJ,SAA0BxN,GACtB,IAAM4H,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBjI,IAAKA,EACL0J,IAAK,UAIb,OAAOvB,MAAK,GAAA9I,OAAI+I,GAAJ,qBAAiCR,GACxCS,KAAKC,KA3GVmF,cAiFJ,SAAuBzN,GACnB,IAAM4H,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBjI,IAAKA,EACL0J,IAAK,UAIb,OAAOvB,MAAK,GAAA9I,OAAI+I,GAAJ,qBAAiCR,GACxCS,KAAKC,KA3FVoF,WAqEJ,WAOI,OAAOvF,MAAK,GAAA9I,OAAI+I,GAAJ,sBANW,CACnBP,OAAQ,MACRC,KAAM,OACNC,KAAM,OAILM,KAAKC,KA5EVqF,UAoDJ,SAAmBC,EAAM5O,EAAMyJ,EAAOoF,GAClC,IAAMjG,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjB2F,KAAMA,EACN5O,KAAMA,EACN6O,eAAgBA,EAChBpF,MAAOA,KAIf,OAAON,MAAK,GAAA9I,OAAI+I,GAAJ,sBAAkCR,GACzCS,KAAKC,KAhEVwF,aAqCJ,SAAsBrF,EAAOzJ,GACzB,IAAM4I,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBjJ,KAAMA,EACNyJ,MAAOA,KAIf,OAAON,MAAK,GAAA9I,OAAI+I,GAAJ,mBAA+BR,GACtCS,KAAKC,KA/CVyF,aAsBJ,SAAsB/O,EAAMyJ,GACxB,IAAMb,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBjJ,KAAMA,EACNyJ,MAAOA,KAIf,OAAON,MAAK,GAAA9I,OAAI+I,GAAJ,mBAA+BR,GACtCS,KAAKC,KAhCV0F,cAOJ,SAAuBhP,EAAMyJ,GACzB,IAAMb,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBjJ,KAAMA,EACNyJ,MAAOA,KAIf,OAAON,MAAK,GAAA9I,OAAI+I,GAAJ,oBAAgCR,GACvCS,KAAKC,MAfRF,GAAQ,UAAA/I,OAAa4O,OAAOC,SAASC,SAA7B,SAERlE,GAAS,UAAA5K,OAAa4O,OAAOC,SAASC,SAA7B,SA2Kf,SAAS7F,GAAe8F,GACpB,OAAOA,EAASjP,OAAOkJ,KAAK,SAAAlJ,GACxB,IAAKiP,EAASC,GAAI,CACd,IAAMC,EAASnP,GAAQA,EAAKK,SAAY4O,EAASG,WACjD,OAAOC,QAAQC,OAAOH,GAE1B,OAAOnP,IC/Mf,IAMMuP,GAAuB,kBACzBhN,EAAA7B,EAAA8B,cAAA,OACIyC,MAAO,CAACrC,OAAQ,OAAQC,MAAO,OAAQgE,QAAS,OAAQ2I,WAAY,SAAUC,eAAgB,SAAUtK,gBAAiB,UAAWf,MAAO,UAD/I,wCAKEsL,8MAEFC,MAAQ,OAERhQ,MAAQ,KAIRiQ,kBAAoB,WAChB/N,EAAKgO,aAGTC,0BAA4B,SAACC,GACtBA,EAAU9R,iBAAmB4D,EAAKK,MAAMjE,gBACvC4D,EAAKK,MAAM0I,sBAAsBmF,EAAU9R,mBAInD4R,QAAU,WAAc,IAAbG,IAAaC,UAAA5Q,OAAA,QAAA6Q,IAAAD,UAAA,KAAAA,UAAA,GACpBpO,EAAKK,MAAM0I,sBAAsB/I,EAAKK,MAAMjE,gBAEzC+R,IACCnO,EAAK8N,MAAQQ,WAAWtO,EAAKgO,QAAS,+EAIrC,IAAA5N,EACmCD,KAAKE,MAArCC,EADHF,EACGE,QAASjE,EADZ+D,EACY/D,mBAEjB,OAA+B,OAAvBA,EAA8BqE,EAAA7B,EAAA8B,cAAC4N,GAAD,MAC9B7N,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAM7B,WAAS,EAACE,UAAU,SAAStD,UAAWN,EAAQ6B,MAClDzB,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAKK,MAAO,CAACrC,OAAQ,SAAzC,mBAGAL,EAAA7B,EAAA8B,cAAA,OACIC,UAA+C,OAApCvE,EAAmBmS,eAA0BnS,EAAmBmS,aAAe,GAAK,UAC/FnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,GAAK,UACvCnS,EAAmBmS,aAAe,EAAI,UACtCnS,EAAmBmS,aAAe,EAAI,SACtCnS,EAAmBmS,aAAe,EAAI,SACtCnS,EAAmBmS,aAAe,EAAI,SACtCnS,EAAmBmS,aAAe,EAAI,SACtCnS,EAAmBmS,cAAgB,EAAI,SACvCnS,EAAmBmS,cAAgB,EAAI,UACvCnS,EAAmBmS,cAAgB,EAAI,UACvCnS,EAAmBmS,cAAgB,EAAI,UACvCnS,EAAmBmS,cAAgB,GAAK,UACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxCnS,EAAmBmS,cAAgB,GAAK,WACxC,YACApL,MAAO,CAACpC,MAAO,OAAQD,OAAQ,QAAS0N,UAAW,IACV,OAApCpS,EAAmBmS,cAAyB9N,EAAA7B,EAAA8B,cAAA,OACzCyC,MAAO,CAACrC,OAAQ,OAAQC,MAAO,OAAQgE,QAAS,OAAQ2I,WAAY,SAAUC,eAAgB,SAAUtK,gBAAiB,UAAWf,MAAO,UADlG,iCAKhB,OAApClG,EAAmBmS,cAAyB9N,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAKK,MAAO,CAACsL,UAAW,SAAU3N,OAAQ,GAAI0N,UAAW,IAA7E,WAChCpS,EAAmBmS,cAEhC9N,EAAA7B,EAAA8B,cAAA,OAAKyC,MAAO,CAACrC,OAAQ,qBAAsBC,MAAO,OAAQ2N,SAAU,SACpEjO,EAAA7B,EAAA8B,cAACmF,EAAA,EAAD,CAAOP,QAAQ,QACX7E,EAAA7B,EAAA8B,cAACuF,EAAA,EAAD,KACAxF,EAAA7B,EAAA8B,cAACqF,GAAA,EAAD,CAAU5C,MAAO,CAACkD,OAAQ,YACtB5F,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KACIvF,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,SAApB,eAIJrC,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KAAY5J,EAAmB+B,YAGnCsC,EAAA7B,EAAA8B,cAACqF,GAAA,EAAD,CAAU5C,MAAO,CAACkD,OAAQ,YACtB5F,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KACIvF,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,SAApB,cAIJrC,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KAAY5J,EAAmB4C,WAGnCyB,EAAA7B,EAAA8B,cAACqF,GAAA,EAAD,CAAU5C,MAAO,CAACkD,OAAQ,YACtB5F,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KACIvF,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,SAApB,WAIJrC,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KAAY5J,EAAmBuS,QAGnClO,EAAA7B,EAAA8B,cAACqF,GAAA,EAAD,CAAU5C,MAAO,CAACkD,OAAQ,YACtB5F,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KACIvF,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,SAApB,iBAIJrC,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KAAY5J,EAAmBwS,cAGnCnO,EAAA7B,EAAA8B,cAACqF,GAAA,EAAD,CAAU5C,MAAO,CAACkD,OAAQ,YACtB5F,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KACIvF,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,SAApB,kBAIJrC,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KAAY5J,EAAmBmS,eAGnC9N,EAAA7B,EAAA8B,cAACqF,GAAA,EAAD,CAAU5C,MAAO,CAACkD,OAAQ,YACtB5F,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KACIvF,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,SAApB,kBAIJrC,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KAAY,IAAIjK,KAAKK,EAAmByS,WAAWC,mBAAmB,QAAS,CAACrT,SAAUyE,KAAKE,MAAM3E,WAArG,OAAqH,IAAIM,KAAKK,EAAmByS,WAAWE,mBAAmB,QAAS,CAACtT,SAAWyE,KAAKE,MAAM3E,SAAUuT,QAAQ,iBA/JhOxK,IAAMC,WAoLnC,IAaMwK,GAA0BtK,YAvBhC,SAAyB9G,GAAO,IAAA+G,EAC6B/G,EAAMD,IAE/D,MAAO,CACHxB,mBAJwBwI,EACpBxI,mBAIJX,SALwBmJ,EACAnJ,SAKxBU,eANwByI,EACUzI,iBASf,SAAC0I,GAAD,MAAe,CACtCiE,sBAAwB,SAAC3K,GACrB0G,EAAS,CAAC9G,KAAM,qCAChBwI,GAAWuC,sBAAsB3K,GAC5BiJ,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,mCAAoCG,UACrD,SAAAmP,GACCxI,EAAS,CAAC9G,KAAM,0CAMA4G,CAA6CG,YA7M9D,SAAAxE,GAAK,MAAK,CACrB4B,KAAM,CACFpB,OAAQ,OAAQC,MAAO,OAAQuE,QAAS,GAAI4J,SAAU,YA2MepK,CAAmB8I,KCxL1FuB,GAAe,SAAC/O,GAAD,OACjBK,EAAA7B,EAAA8B,cAAA,OACIyC,MAAO,CAACrC,OAAQ,OAAQC,MAAO,OAAQgE,QAAS,OAAQqK,cAAe,SAAU1B,WAAY,SAAUC,eAAgB,SAAUtK,gBAAiB,UAAWf,MAAO,UAChK7B,EAAA7B,EAAA8B,cAAA,KAAGyC,MAAO,CAACkM,OAAQ,KAAnB,2BACA5O,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQxM,QAAQ,YAAYK,MAAO,CAACkM,OAAQ,IAAK/M,MAAM,UAAUb,QAAS,kBAAMrB,EAAMmP,SAAtF,gBACA9O,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQxM,QAAQ,YAAYK,MAAO,CAACkM,OAAQ,IAAK/M,MAAM,UAAUb,QAAS,kBAAMrB,EAAMyI,yBAAtF,yBAIN2G,GAAW,kBACb/O,EAAA7B,EAAA8B,cAAA,OACIyC,MAAO,CAACrC,OAAQ,OAAQC,MAAO,OAAQgE,QAAS,OAAQ2I,WAAY,SAAUC,eAAgB,SAAUtK,gBAAiB,UAAWf,MAAO,UAD/I,gBAOEmN,8MAEF5R,MAAQ,KAGRgL,qBAAuB,WACnB9I,EAAKK,MAAMyI,0BAGf0G,KAAO,WACHxP,EAAKK,MAAMmP,gFAGN,IAAAtP,EAAAC,KAAAC,EAC6DD,KAAKE,MAA/DC,EADHF,EACGE,QAASpE,EADZkE,EACYlE,kBACjB,OAFKkE,EAC+BjE,0BACCuE,EAAA7B,EAAA8B,cAACgP,GAAD,MAAqC,OAAtBzT,EAA6BwE,EAAA7B,EAAA8B,cAACiP,GAAD,CAAcJ,KAAM,kBAAMtP,EAAKsP,QAAQ1G,qBAAsB,kBAAM5I,EAAK4I,0BACrJpI,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAM7B,WAAS,EAACE,UAAU,SAAStD,UAAWN,EAAQ6B,MAClDzB,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,EAACjP,UAAWN,EAAQwP,aAC1BpP,EAAA7B,EAAA8B,cAACoP,EAAA,EAAD,CAAO3M,MAAO,CAACrC,OAAQ,SACnBL,EAAA7B,EAAA8B,cAAC4F,GAAD,QAGR7F,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,EAACjP,UAAWN,EAAQ0P,gBAC1BtP,EAAA7B,EAAA8B,cAACoP,EAAA,EAAD,CAAO3M,MAAO,CAACrC,OAAQ,SACnBL,EAAA7B,EAAA8B,cAACuO,GAAD,gBAxBAzK,IAAMC,WAyC9B,IAgBMuL,GAAqBrL,YAzB3B,SAAyB9G,GAAO,IAAA+G,EAC6B/G,EAAMD,IAE/D,MAAO,CACH3B,kBAJwB2I,EACpB3I,kBAIJC,0BALwB0I,EACD1I,4BAQJ,SAAC2I,GAAD,MAAe,CACtC0K,KAAO,WACH1K,EAAS,CAAC9G,KAAM,UAEpB8K,qBAAsB,WAClBhE,EAAS,CAAC9G,KAAM,mCAChBwI,GAAWsC,uBACNzB,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,iCAAkCG,UACnD,SAAAmP,GACCxI,EAAS,CAAC9G,KAAM,iCAAkCsP,eAMvC1I,CAA6CG,YAjGzD,SAAAxE,GAAK,MAAK,CACrB4B,KAAKlE,OAAAqB,EAAA,EAAArB,CAAA,CACDkR,SAAU,QACT5O,EAAM0E,YAAYC,GAAG,MAAQ,CAC1BnE,OAAQ,SAGhB+O,YAAY7R,OAAAqB,EAAA,EAAArB,CAAA,CACR+C,MAAO,OACPuE,QAAS,IACRhF,EAAM0E,YAAYC,GAAG,MAAQ,CAC1BgL,UAAW,OAAQlP,MAAO,QAGlCgP,eAAe/R,OAAAqB,EAAA,EAAArB,CAAA,CACX+C,MAAO,OACPuE,QAAS,IACRhF,EAAM0E,YAAYC,GAAG,MAAQ,CAC1BgL,UAAW,OAAQlP,MAAO,UA+EkC+D,CAAmB2K,iEChFrFjT,8MACFqB,MAAQ,CACJsN,UAAW,GACXC,UAAW,GACXC,SAAU,GACV6E,kBAAmB,GACnBC,kBAAmB,GACnBC,SAAU,GACVC,SAAU,GACVC,mBAAoB,GACpB3E,iBAAkB,GAClB4E,2BAA4B,GAC5BC,2BAA4B,GAC5BC,kBAAmB,GACnBC,kBAAmB,GACnBC,eAAgB,GAChBC,eAAgB,GAChBC,cAAe,GACfC,uBAAwB,GACxBC,uBAAwB,GACxBC,cAAe,GACfC,cAAe,GACfC,wBAAyB,GACzBC,sBAAuB,GACvBC,gCAAiC,GACjCC,gCAAiC,GACjCC,uBAAwB,GACxBC,uBAAwB,GACxBC,aAAc,IACdC,QAAQ,KAGZ3D,kBAAoB,WACyB,IAAtC/N,EAAKK,MAAM7D,eAAegB,QACzBwC,EAAKK,MAAMmM,iBAAiBxM,EAAKK,MAAM7D,eAAe,GAAGyC,aAIjEgP,0BAA4B,SAACC,GACzB,GAAGA,EAAUzR,gBAAkBuD,EAAKK,MAAM5D,cAAe,CACrD,IAAMkV,EAASzD,EAAUzR,cAAckM,OAAOiJ,MAAM,KACpD5R,EAAKC,SAAS,CACVmL,UAAWuG,EAAO,GAClBtG,UAAWsG,EAAO,GAClBrG,SAAUqG,EAAO,GACjBxB,kBAAmBwB,EAAO,GAC1BvB,kBAAmBuB,EAAO,GAC1BtB,SAAUsB,EAAO,GACjBrB,SAAUqB,EAAO,GACjBpB,mBAAoBoB,EAAO,GAC3B/F,iBAAkB+F,EAAO,GACzBnB,2BAA4BmB,EAAO,GACnClB,2BAA4BkB,EAAO,IACnCjB,kBAAmBiB,EAAO,IAC1BhB,kBAAmBgB,EAAO,IAC1BF,aAAcE,EAAO,UAKjCE,aAAe,SAAAC,GAAS,IAAAC,EACpB/R,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,OADZiU,EAAA,GAAA9T,OAAAqB,EAAA,EAAArB,CAAA8T,EAEKD,EAAME,OAAOC,KAAOH,EAAME,OAAOrT,OAFtCV,OAAAqB,EAAA,EAAArB,CAAA8T,EAAA,GAAA1T,OAGQyT,EAAME,OAAOC,KAHrB,SAGmC,IAHnChU,OAAAqB,EAAA,EAAArB,CAAA8T,EAAA,UAIY,GAJZA,QAQJG,WAAa,SAACC,EAAGC,GAGT,GAFc,IAAIC,OAAO,yBACDC,KAAKH,EAAEH,OAAOrT,OAO/B,CACH,IAEuC4T,EAFjC5T,EAAQ6E,OAAO2O,EAAEH,OAAOrT,OAC9B,GAAa,OAAVyT,EAAEI,KAA0B,OAAVJ,EAAEK,KACnB,GAAG9T,EAAQyT,EAAEI,KAAO7T,EAAQyT,EAAEK,IAC1BzS,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,OADZyU,EAAA,GAAAtU,OAAAqB,EAAA,EAAArB,CAAAsU,EAAA,GAAAlU,OAEQ8T,EAAEH,OAAOC,KAFjB,iBAAA5T,OAEuC+T,EAAEI,IAFzC,UAAAnU,OAEqD+T,EAAEK,MAFvDxU,OAAAqB,EAAA,EAAArB,CAAAsU,EAAA,UAGY,GAHZA,UAMD,GAAa,OAAVH,EAAEI,IAAc,CACJ,IAAAE,EAAlB,GAAG/T,EAAQyT,EAAEI,IACTxS,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,OADZ4U,EAAA,GAAAzU,OAAAqB,EAAA,EAAArB,CAAAyU,EAAA,GAAArU,OAEQ8T,EAAEH,OAAOC,KAFjB,iBAAA5T,OAEuC+T,EAAEI,MAFzCvU,OAAAqB,EAAA,EAAArB,CAAAyU,EAAA,UAGY,GAHZA,UAMD,GAAY,MAATN,EAAEK,IAAa,CACH,IAAAE,EAAlB,GAAGhU,EAAQyT,EAAEK,IACTzS,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,OADZ6U,EAAA,GAAA1U,OAAAqB,EAAA,EAAArB,CAAA0U,EAAA,GAAAtU,OAEQ8T,EAAEH,OAAOC,KAFjB,iBAAA5T,OAEuC+T,EAAEK,MAFzCxU,OAAAqB,EAAA,EAAArB,CAAA0U,EAAA,UAGY,GAHZA,UA1BG,KAAAC,EACX5S,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,OADZ8U,EAAA,GAAA3U,OAAAqB,EAAA,EAAArB,CAAA2U,EAAA,GAAAvU,OAEQ8T,EAAEH,OAAOC,KAFjB,mCAAAhU,OAAAqB,EAAA,EAAArB,CAAA2U,EAAA,UAGY,GAHZA,SAoCZzH,kBAAoB,WAAM,IAAA0H,EACiO7S,EAAKlC,MAApPsN,EADcyH,EACdzH,UAAWC,EADGwH,EACHxH,UAAWC,EADRuH,EACQvH,SAAU6E,EADlB0C,EACkB1C,kBAAmBC,EADrCyC,EACqCzC,kBAAmBC,EADxDwC,EACwDxC,SAAUC,EADlEuC,EACkEvC,SAAUC,EAD5EsC,EAC4EtC,mBAAoB3E,EADhGiH,EACgGjH,iBAAkB4E,EADlHqC,EACkHrC,2BAA4BC,EAD9IoC,EAC8IpC,2BAA4BC,EAD1KmC,EAC0KnC,kBAAmBC,EAD7LkC,EAC6LlC,kBAAmBc,EADhNoB,EACgNpB,aACtOzR,EAAKK,MAAM8K,kBAAkBnL,EAAKK,MAAM7D,eAAgB4O,EAAWC,EAAWC,EAAU6E,EAAmBC,EAAmBC,EAAUC,EAAUC,EAAoB3E,EAAkB4E,EAA4BC,EAA4BC,EAAmBC,EAAmBc,4EAGjR,IAAAvR,EAAAC,KACEG,EAAWH,KAAKE,MAAhBC,QACP,OACII,EAAA7B,EAAA8B,cAACiF,EAAA,SAAD,KACIlF,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAM7B,WAAS,EAACE,UAAU,SAAStD,UAAWN,EAAQ6B,MAClDzB,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,EAACjP,UAAWN,EAAQwS,WAE1B,CACI,CACIrR,IAAK,YACLsR,UAAW,MACXP,KAAM,GACNC,IAAK,GACL9T,MAAO,GAEX,CACI8C,IAAK,YACLsR,UAAW,MACXP,KAAM,IACNC,IAAK,IACL9T,MAAO,GAEX,CACI8C,IAAK,WACLsR,UAAW,IACXP,IAAK,EACLC,IAAK,KACL9T,MAAO,GAEX,CACI8C,IAAK,wBACLsR,UAAW,MACXP,KAAM,GACNC,IAAK,EACL9T,MAAO,GAEX,CACI8C,IAAK,wBACLsR,UAAW,MACXP,IAAK,EACLC,IAAK,GACL9T,MAAO,GAEX,CACI8C,IAAK,YACLsR,UAAW,IACXP,IAAK,EACLC,IAAK,KACL9T,MAAO,GAEX,CACI8C,IAAK,YACLsR,UAAW,IACXP,IAAK,EACLC,IAAK,KACL9T,MAAO,GAEX,CACI8C,IAAK,sBACLsR,UAAW,MACXP,IAAK,GACLC,IAAK,GACL9T,MAAO,GAEX,CACI8C,IAAK,oBACLsR,UAAW,MACXP,KAAM,GACNC,IAAK,GACL9T,MAAO,GAEX,CACI8C,IAAK,kCACLsR,UAAW,IACXP,IAAK,EACLC,IAAK,KACL9T,MAAO,GAEX,CACI8C,IAAK,kCACLsR,UAAW,IACXP,IAAK,EACLC,IAAK,KACL9T,MAAO,IAEX,CACI8C,IAAK,sBACLsR,UAAW,UACXP,IAAK,EACLC,IAAK,KACL9T,MAAO,IAEX,CACI8C,IAAK,sBACLsR,UAAW,UACXP,IAAK,EACLC,IAAK,KACL9T,MAAO,KAEbyC,IAAI,SAAAgR,GACF,OAAO1R,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACHvR,IAAK2Q,EAAE3Q,IACPb,UAAWN,EAAQ2S,MACnBC,GAAId,EAAE3Q,IACNwQ,KAAMG,EAAE3Q,IAAI0R,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAC5C5P,MAAO6O,EAAE3Q,IACT9C,MAAOuB,EAAKpC,MAAMsU,EAAE3Q,IAAI0R,QAAQ,KAAM,IAAIA,QAAQ,KAAM,KACxDC,SAAU,SAACjB,GAAD,OAAOjS,EAAK2R,aAAaM,IACnC7C,OAAO,SACPvM,QAAQ,WACRsQ,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUrT,EAAKG,MAAM1D,sBAAwBuD,EAAKG,MAAMxD,qBACxD2W,WAAY,CACRC,aAAc/S,EAAA7B,EAAA8B,cAAC+S,GAAA,EAAD,CAAgBpR,SAAS,OAAO8P,EAAEW,YAEpDzF,MAA2E,KAApEpN,EAAKpC,MAAL,GAAAO,OAAc+T,EAAE3Q,IAAI0R,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAApD,UACPQ,WAAYzT,EAAKpC,MAAL,GAAAO,OAAc+T,EAAE3Q,IAAI0R,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAApD,UACZS,OAAQ,SAACzB,GAAD,OAAOjS,EAAKgS,WAAWC,EAAGC,QAI1C1R,EAAA7B,EAAA8B,cAACkT,GAAA,EAAD,CAAkBN,SAAUpT,KAAKE,MAAM1D,sBAAwBwD,KAAKE,MAAMxD,qBAAsB+D,UAAWN,EAAQ2S,MAC/Ga,QACIpT,EAAA7B,EAAA8B,cAACoT,GAAA,EAAD,CAAUxR,MAAM,UAAUyR,QAAqC,MAA5B7T,KAAKrC,MAAM2T,aAAsB/P,QAAS,kBAAMxB,EAAKD,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GAAkBiC,EAAKpC,MAAvB,CAA8B2T,aAA0C,MAA5BvR,EAAKpC,MAAM2T,aAAuB,IAAM,UAE3KlO,MAAM,wBAEV7C,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQhN,MAAM,UAAUgR,UAAQ,EAACxQ,QAAQ,YAAYnC,UAAWN,EAAQ2S,OAAxE,mCAEJvS,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,EAACzM,MAAO,CAACsL,UAAW,WAC1BhO,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQhN,MAAM,UAAUgR,SAAUpT,KAAKE,MAAM1D,sBAAwBwD,KAAKE,MAAMxD,uBAAyBsD,KAAKrC,MAAM4T,OAAQ3O,QAAQ,YAAYrB,QAAS,kBAAMxB,EAAKiL,qBAAqB/H,MAAO,CAAEkM,OAAQ,KAA1M,kBApPI7K,IAAMC,WAqQlC,IAiBMuP,GAAyBrP,YA1B/B,SAAyB9G,GAAO,IAAA+G,EACqB/G,EAAMD,IAEvD,MAAO,CACHrB,eAJwBqI,EACpBrI,eAIJG,qBALwBkI,EACJlI,uBAQD,SAACmI,GAAD,MAAe,CACtCqG,kBAAmB,SAAC3O,EAAgB4O,EAAWC,EAAWC,EAAUC,EAAWC,EAAWC,EAAcC,EAAOC,EAAkBC,EAAkBC,EAAuBC,EAAuBC,EAAeC,EAAYyF,GACxN3M,EAAS,CAAC9G,KAAM,0BAChBxB,EAAe4E,IAAI,SAAA8S,GACfpP,EAAS,CAAC9G,KAAM,8BAA+BkW,MAC/C1N,GAAW2E,kBAAkB+I,EAAEjV,SAAUmM,EAAWC,EAAWC,EAAUC,EAAWC,EAAWC,EAAcC,EAAOC,EAAkBC,EAAkBC,EAAuBC,EAAuBC,EAAeC,EAAYyF,GAC5NpK,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,iCACjB,SAAAsP,GACCxI,EAAS,CAAC9G,KAAM,uCAQL4G,CAA6CG,YAzS7D,SAAAxE,GAAK,MAAK,CACrB4B,KAAM,GACN2Q,UAAW,CACP9N,QAAS,OACTqK,cAAe,MACfF,SAAU,OACV5J,QAAS,GACToJ,SAAU,QAEdsE,MAAMhV,OAAAqB,EAAA,EAAArB,CAAA,CACF+C,MAAO,MACPsO,OAAQ,sBACP/O,EAAM0E,YAAYC,GAAG,MAAQ,CAC1BlE,MAAO,SACPsO,OAAQ,qBA2RwDvK,CAAmBtI,KCtRzF0X,8MACFrW,MAAQ,CACJqO,cAAe,GACfC,cAAe,GACfE,eAAgB,GAChBC,mBAAoB,GACpBF,eAAgB,GAChBqF,QAAQ,KAGZ3D,kBAAoB,WACwB,IAArC/N,EAAKK,MAAM7D,eAAegB,QACzBwC,EAAKK,MAAMoM,cAAczM,EAAKK,MAAM7D,eAAe,GAAGyC,aAI9DgP,0BAA4B,SAACC,GACzB,GAAGA,EAAUxR,aAAesD,EAAKK,MAAM3D,WAAY,CAC/C,IAAMiV,EAASzD,EAAUxR,WAAWiM,OAAOiJ,MAAM,KACjD5R,EAAKC,SAAS,CACVkM,cAAewF,EAAO,GACtBvF,cAAeuF,EAAO,GACtBrF,eAAgBqF,EAAO,GACvBpF,mBAAoBoF,EAAO,GAC3BtF,eAAgBsF,EAAO,SAKnCE,aAAe,SAAAC,GAAS,IAAAC,EACpB/R,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,OADZiU,EAAA,GAAA9T,OAAAqB,EAAA,EAAArB,CAAA8T,EAEKD,EAAME,OAAOC,KAAOH,EAAME,OAAOrT,OAFtCV,OAAAqB,EAAA,EAAArB,CAAA8T,EAAA,GAAA1T,OAGQyT,EAAME,OAAOC,KAHrB,SAGmC,IAHnChU,OAAAqB,EAAA,EAAArB,CAAA8T,EAAA,UAIY,GAJZA,QAQJG,WAAa,SAACC,EAAGC,GACa,IAAAQ,EAA1B,GAAsB,KAAnBT,EAAEH,OAAOrT,MACRqB,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,OADZ8U,EAAA,GAAA3U,OAAAqB,EAAA,EAAArB,CAAA2U,EAEKT,EAAEH,OAAOC,KAAOjS,EAAKK,MAAM5D,cAAckM,OAAOiJ,MAAM,KAAKQ,EAAEzT,QAFlEV,OAAAqB,EAAA,EAAArB,CAAA2U,EAAA,GAAAvU,OAGQ8T,EAAEH,OAAOC,KAHjB,SAG+B,IAH/BhU,OAAAqB,EAAA,EAAArB,CAAA2U,EAAA,UAIY,GAJZA,UASA,GAFc,IAAIP,OAAO,yBACDC,KAAKH,EAAEH,OAAOrT,OAO/B,CACH,IAEuC+T,EAFjC/T,EAAQ6E,OAAO2O,EAAEH,OAAOrT,OAC9B,GAAa,OAAVyT,EAAEI,KAA0B,OAAVJ,EAAEK,KACnB,GAAG9T,EAAQyT,EAAEI,KAAO7T,EAAQyT,EAAEK,IAC1BzS,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,OADZ4U,EAAA,GAAAzU,OAAAqB,EAAA,EAAArB,CAAAyU,EAAA,GAAArU,OAEQ8T,EAAEH,OAAOC,KAFjB,iBAAA5T,OAEuC+T,EAAEI,IAFzC,UAAAnU,OAEqD+T,EAAEK,MAFvDxU,OAAAqB,EAAA,EAAArB,CAAAyU,EAAA,UAGY,GAHZA,UAMD,GAAa,OAAVN,EAAEI,IAAc,CACJ,IAAAG,EAAlB,GAAGhU,EAAQyT,EAAEI,IACTxS,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,OADZ6U,EAAA,GAAA1U,OAAAqB,EAAA,EAAArB,CAAA0U,EAAA,GAAAtU,OAEQ8T,EAAEH,OAAOC,KAFjB,iBAAA5T,OAEuC+T,EAAEI,MAFzCvU,OAAAqB,EAAA,EAAArB,CAAA0U,EAAA,UAGY,GAHZA,UAMD,GAAY,MAATP,EAAEK,IAAa,CACH,IAAA2B,EAAlB,GAAGzV,EAAQyT,EAAEK,IACTzS,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,OADZsW,EAAA,GAAAnW,OAAAqB,EAAA,EAAArB,CAAAmW,EAAA,GAAA/V,OAEQ8T,EAAEH,OAAOC,KAFjB,iBAAA5T,OAEuC+T,EAAEK,MAFzCxU,OAAAqB,EAAA,EAAArB,CAAAmW,EAAA,UAGY,GAHZA,UA1BG,KAAA7B,EACXvS,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,OADZyU,EAAA,GAAAtU,OAAAqB,EAAA,EAAArB,CAAAsU,EAAA,GAAAlU,OAEQ8T,EAAEH,OAAOC,KAFjB,mCAAAhU,OAAAqB,EAAA,EAAArB,CAAAsU,EAAA,UAGY,GAHZA,SAqCZrG,eAAiB,WAAM,IAAA2G,EAC0E7S,EAAKlC,MAA1FqO,EADW0G,EACX1G,cAAeC,EADJyG,EACIzG,cAAeC,EADnBwG,EACmBxG,eAAgBC,EADnCuG,EACmCvG,eAAgBC,EADnDsG,EACmDtG,mBACtEvM,EAAKK,MAAM6L,eAAelM,EAAKK,MAAM7D,eAAgB2P,EAAeC,EAAeC,EAAgBC,EAAgBC,4EAG9G,IAAArM,EAAAC,KACEG,EAAWH,KAAKE,MAAhBC,QACP,OACII,EAAA7B,EAAA8B,cAACiF,EAAA,SAAD,KACIlF,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAM7B,WAAS,EAACE,UAAU,SAAStD,UAAWN,EAAQ6B,MAClDzB,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,EAACjP,UAAWN,EAAQwS,WAE1B,CAAC,kBAAmB,kBAAmB,mBAAoB,uBAAwB,oBAAoB1R,IAAI,SAAAgR,GACvG,OAAO1R,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACHvR,IAAK2Q,EACLxR,UAAWN,EAAQ2S,MACnBC,GAAId,EACJH,KAAMG,EAAEe,QAAQ,KAAM,IACtB5P,MAAO6O,EACPzT,MAAOuB,EAAKpC,MAAMsU,EAAEe,QAAQ,KAAM,KAClCC,SAAU,SAACjB,GAAD,OAAOjS,EAAK2R,aAAaM,IACnC7C,OAAO,SACPvM,QAAQ,WACRsQ,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUrT,EAAKG,MAAMzD,mBAAqBsD,EAAKG,MAAMvD,kBACrD0W,WAAY,CACRC,aAAc/S,EAAA7B,EAAA8B,cAAC+S,GAAA,EAAD,CAAgBpR,SAAS,OAAzB,aAM9B5B,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,EAACzM,MAAO,CAACrC,OAAQ,GAAI2N,UAAW,WACtChO,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQhN,MAAM,UAAUgR,SAAUpT,KAAKE,MAAMzD,mBAAqBuD,KAAKE,MAAMvD,kBAAmBiG,QAAQ,YAAYrB,QAAS,kBAAMxB,EAAKgM,kBAAkB9I,MAAO,CAAEkM,OAAQ,KAA3K,kBAxHC7K,IAAMC,WA2I/B,IAgBM2P,GAAsBzP,YA3B5B,SAAyB9G,GAAO,IAAA+G,EACiD/G,EAAMD,IAEnF,MAAO,CACHrB,eAJwBqI,EACpBrI,eAIJE,WALwBmI,EACJnI,WAKpBE,kBANwBiI,EACQjI,kBAMhCE,kBAPwB+H,EAC2B/H,oBAUhC,SAACgI,GAAD,MAAe,CACtCoH,eAAgB,SAAC1P,EAAgB2P,EAAeC,EAAeC,EAAgBC,EAAgBC,GAC3FzH,EAAS,CAAC9G,KAAM,0BAChBxB,EAAe4E,IAAI,SAAA8S,GACfpP,EAAS,CAAC9G,KAAM,2BAA4BkW,MAC5C1N,GAAW0F,eAAegI,EAAEjV,SAAUkN,EAAeC,EAAeC,EAAgBC,EAAgBC,GAC/FlF,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,8BACjB,SAAAsP,GACCxI,EAAS,CAAC9G,KAAM,oCAOR4G,CAA6CG,YA9K1D,SAAAxE,GAAK,MAAK,CACrB4B,KAAM,GACN2Q,UAAW,CACP9N,QAAS,OACTqK,cAAe,MACfF,SAAU,OACV5J,QAAS,GACToJ,SAAU,QAEdsE,MAAMhV,OAAAqB,EAAA,EAAArB,CAAA,CACF+C,MAAO,MACPsO,OAAQ,sBACP/O,EAAM0E,YAAYC,GAAG,MAAQ,CAC1BlE,MAAO,SACPsO,OAAQ,qBAgKqDvK,CAAmBoP,yBChItFG,8MACFzC,aAAe,SAACC,EAAOnT,GACnBqB,EAAKK,MAAMkU,UAAU,CAAE5V,mFAGjByK,QAAQC,IAAIlJ,KAAKE,OAAlB,IAAAD,EAC8DD,KAAKE,MAAhEC,EADHF,EACGE,QAAS7E,EADZ2E,EACY3E,eAAgBe,EAD5B4D,EAC4B5D,eAAgBS,EAD5CmD,EAC4CnD,cAEjD,OACAyD,EAAA7B,EAAA8B,cAAA,OAAKC,UAAWN,EAAQ6B,MACpBzB,EAAA7B,EAAA8B,cAAA,OAAKC,UAAWN,EAAQkU,QACxB9T,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,GACNnP,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,MAChBrC,EAAA7B,EAAA8B,cAAC+B,EAAA,EAAD,CAAYC,aAAW,OAAOjB,QAASvB,KAAKE,MAAMoU,MAC9C/T,EAAA7B,EAAA8B,cAAC+T,GAAA7V,EAAD,CAAU8V,SAAS,WAF3B,qBAQJjU,EAAA7B,EAAA8B,cAAA,OAAKC,UAAWN,EAAQyG,MACxBrG,EAAA7B,EAAA8B,cAAA,OAAKC,UAAWN,EAAQ9D,gBAExBkE,EAAA7B,EAAA8B,cAAC0B,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,aAC5B7B,EAAA7B,EAAA8B,cAAC8B,EAAA,EAAD,CAASW,MAAO,CAAC8M,UAAW,IAAK0E,gBAAc,GAC/ClU,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,YAAYK,MAAO,CAACkM,OAAQ,SAAhD,uBAMA9S,EAAe4E,IAAI,SAAA8S,GAAC,OACpBxT,EAAA7B,EAAA8B,cAACsC,EAAA,EAAD,CAAMxB,IAAKyS,EAAEjV,SAAUsE,MAAK,SAAAlF,OAAW6V,EAAEW,WAAajU,UAAWN,EAAQwU,KAAM1R,MAAOnG,EAAc6B,OAAO,SAAAC,GAAC,OAAIA,EAAEgW,QAAQ/V,MAAQkV,EAAEjV,WAAU,GAAKhC,EAAc6B,OAAO,SAAAC,GAAC,OAAIA,EAAEgW,QAAQ/V,MAAQkV,EAAEjV,WAAU,GAAG+V,QAAU,CAAC1R,gBAAiB,SAAW,CAACA,gBAAiB,OAAS,QAGpR5C,EAAA7B,EAAA8B,cAAA,OAAKC,UAAWN,EAAQ2U,MACxBvU,EAAA7B,EAAA8B,cAAC0B,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,aAC5B7B,EAAA7B,EAAA8B,cAACuU,GAAA,EAAD,CAAMvW,MAAOlD,EAAgB2X,SAAUjT,KAAK0R,aAAcvR,QAAS,CAAC6U,UAAW7U,EAAQ8U,gBACnF1U,EAAA7B,EAAA8B,cAAC0U,GAAA,EAAD,CAAK9R,MAAM,iBAAiBjD,QAAS,CAACsB,SAAUtB,EAAQsB,YACxDlB,EAAA7B,EAAA8B,cAAC0U,GAAA,EAAD,CAAK9R,MAAM,cAAcjD,QAAS,CAACsB,SAAUtB,EAAQsB,cAGzC,IAAnBnG,GAAwBiF,EAAA7B,EAAA8B,cAACsT,GAAD,MACL,IAAnBxY,GAAwBiF,EAAA7B,EAAA8B,cAAC0T,GAAD,gBA3CL5P,IAAMC,WA6DtC,IAOM4Q,GAA6B1Q,YAjBnC,SAAyB9G,GAAO,IAAA+G,EAC8B/G,EAAMD,IAEhE,MAAO,CACHpC,eAJwBoJ,EACpBpJ,eAIJe,eALwBqI,EACJrI,eAKpBS,cANwB4H,EACY5H,gBASjB,SAAC6H,GAAD,MAAe,CACtCyP,UAAW,SAAC5V,GACRmG,EAAS,CAAC9G,KAAM,kBAAmBW,aAKRiG,CAA6CG,YA5GjE,SAAAxE,GAAK,MAAK,CACrB4B,KAAM,CACJmB,gBAAiB/C,EAAMgV,QAAQC,WAAWnR,MAC1CiL,OAAQ,GACRtK,QAAS,OACTqK,cAAe,UAEjBtI,KAAM,CACF/B,QAAS,OACTqK,cAAe,OAEnB+F,cAAe,CACb9R,gBAAiB,WAEnB1B,SAAU,CACR0B,gBAAiB,UACjBf,MAAO,UACPkT,WAAY,IACZd,SAAU,IAEZnY,eAAgB,CACZwE,MAAO,MACPsO,OAAQ,IAEZ2F,KAAM,CACFjU,MAAO,MACPuE,QAAS,GACTmQ,UAAW,oCAEfZ,KAAM,CACFxF,OAAQ,IAEZqG,MAAO,CACHrS,gBAAiB,SAErBsS,IAAK,CACDtS,gBAAiB,SAwEuDyB,CAAmBuP,KC9F7FA,8MACFxW,MAAQ,CACJsN,UAAW,GACXC,UAAW,GACXC,SAAU,GACV6E,kBAAmB,GACnBC,kBAAmB,GACnBC,SAAU,GACVC,SAAU,GACVC,mBAAoB,GACpB3E,iBAAkB,GAClB4E,2BAA4B,GAC5BC,2BAA4B,GAC5BC,kBAAmB,GACnBC,kBAAmB,GACnBC,eAAgB,GAChBC,eAAgB,GAChBC,cAAe,GACfC,uBAAwB,GACxBC,uBAAwB,GACxBC,cAAe,GACfC,cAAe,GACfC,wBAAyB,GACzBC,sBAAuB,GACvBC,gCAAiC,GACjCC,gCAAiC,GACjCC,uBAAwB,GACxBC,uBAAwB,GACxBrF,cAAe,GACfC,cAAe,GACfE,eAAgB,GAChBC,mBAAoB,GACpBF,eAAgB,GAChBoF,aAAc,IACdC,QAAQ,KAGZ3D,kBAAoB,WACwB,IAArC/N,EAAKK,MAAM7D,eAAegB,SACzBwC,EAAKK,MAAMmM,iBAAiBxM,EAAKK,MAAM7D,eAAe,GAAGyC,UACzDe,EAAKK,MAAMoM,cAAczM,EAAKK,MAAM7D,eAAe,GAAGyC,cAI9DgP,0BAA4B,SAACC,GACzB,GAAGA,EAAUzR,gBAAkBuD,EAAKK,MAAM5D,eACnCyR,EAAUzR,cAAcuD,EAAKK,MAAM7D,eAAe,GAAGyC,UAAW,CAC/D,IAAM0S,EAASzD,EAAUzR,cAAcuD,EAAKK,MAAM7D,eAAe,GAAGyC,UAAU0J,OAAOiJ,MAAM,KAC3F5R,EAAKC,SAAS,CACVmL,UAAWuG,EAAO,GAClBtG,UAAWsG,EAAO,GAClBrG,SAAUqG,EAAO,GACjBxB,kBAAmBwB,EAAO,GAC1BvB,kBAAmBuB,EAAO,GAC1BtB,SAAUsB,EAAO,GACjBrB,SAAUqB,EAAO,GACjBpB,mBAAoBoB,EAAO,GAC3B/F,iBAAkB+F,EAAO,GACzBnB,2BAA4BmB,EAAO,GACnClB,2BAA4BkB,EAAO,IACnCjB,kBAAmBiB,EAAO,IAC1BhB,kBAAmBgB,EAAO,IAC1BF,aAAcE,EAAO,MAIjC,GAAGzD,EAAUxR,aAAesD,EAAKK,MAAM3D,WAAY,CAC/C,IAAMiV,EAASzD,EAAUxR,WAAWiM,OAAOiJ,MAAM,KACjD5R,EAAKC,SAAS,CACVkM,cAAewF,EAAO,GACtBvF,cAAeuF,EAAO,GACtBrF,eAAgBqF,EAAO,GACvBpF,mBAAoBoF,EAAO,GAC3BtF,eAAgBsF,EAAO,SAKnCE,aAAe,SAAAC,GAAS,IAAAC,EACpB/R,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,OADZiU,EAAA,GAAA9T,OAAAqB,EAAA,EAAArB,CAAA8T,EAEKD,EAAME,OAAOC,KAAOH,EAAME,OAAOrT,OAFtCV,OAAAqB,EAAA,EAAArB,CAAA8T,EAAA,GAAA1T,OAGQyT,EAAME,OAAOC,KAHrB,SAGmC,IAHnChU,OAAAqB,EAAA,EAAArB,CAAA8T,EAAA,UAIY,GAJZA,QAQJ8D,gBAAkB,SAAC/D,GAAU,IAAAc,EACzB5S,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,OADZ8U,EAAA,GAAA3U,OAAAqB,EAAA,EAAArB,CAAA2U,EAEKd,EAAME,OAAOC,KAAOH,EAAME,OAAOrT,OAFtCV,OAAAqB,EAAA,EAAArB,CAAA2U,EAAA,GAAAvU,OAGQyT,EAAME,OAAOC,KAHrB,SAGmC,IAHnChU,OAAAqB,EAAA,EAAArB,CAAA2U,EAAA,UAIY,GAJZA,QAQJV,WAAa,SAACC,EAAGC,GACa,IAAAG,EAA1B,GAAsB,KAAnBJ,EAAEH,OAAOrT,MACRqB,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,OADZyU,EAAA,GAAAtU,OAAAqB,EAAA,EAAArB,CAAAsU,EAEKJ,EAAEH,OAAOC,KAAOjS,EAAKK,MAAM5D,cAAckM,OAAOiJ,MAAM,KAAKQ,EAAEzT,QAFlEV,OAAAqB,EAAA,EAAArB,CAAAsU,EAAA,GAAAlU,OAGQ8T,EAAEH,OAAOC,KAHjB,SAG+B,IAH/BhU,OAAAqB,EAAA,EAAArB,CAAAsU,EAAA,UAIY,GAJZA,UASA,GAFc,IAAIF,OAAO,yBACDC,KAAKH,EAAEH,OAAOrT,OAO/B,CACH,IAEuCgU,EAFjChU,EAAQ6E,OAAO2O,EAAEH,OAAOrT,OAC9B,GAAa,OAAVyT,EAAEI,KAA0B,OAAVJ,EAAEK,KACnB,GAAG9T,EAAQyT,EAAEI,KAAO7T,EAAQyT,EAAEK,IAC1BzS,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,OADZ6U,EAAA,GAAA1U,OAAAqB,EAAA,EAAArB,CAAA0U,EAAA,GAAAtU,OAEQ8T,EAAEH,OAAOC,KAFjB,iBAAA5T,OAEuC+T,EAAEI,IAFzC,UAAAnU,OAEqD+T,EAAEK,MAFvDxU,OAAAqB,EAAA,EAAArB,CAAA0U,EAAA,UAGY,GAHZA,UAMD,GAAa,OAAVP,EAAEI,IAAc,CACJ,IAAA4B,EAAlB,GAAGzV,EAAQyT,EAAEI,IACTxS,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,OADZsW,EAAA,GAAAnW,OAAAqB,EAAA,EAAArB,CAAAmW,EAAA,GAAA/V,OAEQ8T,EAAEH,OAAOC,KAFjB,iBAAA5T,OAEuC+T,EAAEI,MAFzCvU,OAAAqB,EAAA,EAAArB,CAAAmW,EAAA,UAGY,GAHZA,UAMD,GAAY,MAAThC,EAAEK,IAAa,CACH,IAAAqD,EAAlB,GAAGnX,EAAQyT,EAAEK,IACTzS,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,OADZgY,EAAA,GAAA7X,OAAAqB,EAAA,EAAArB,CAAA6X,EAAA,GAAAzX,OAEQ8T,EAAEH,OAAOC,KAFjB,iBAAA5T,OAEuC+T,EAAEK,MAFzCxU,OAAAqB,EAAA,EAAArB,CAAA6X,EAAA,UAGY,GAHZA,UA1BG,KAAApD,EACX1S,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,OADZ4U,EAAA,GAAAzU,OAAAqB,EAAA,EAAArB,CAAAyU,EAAA,GAAArU,OAEQ8T,EAAEH,OAAOC,KAFjB,mCAAAhU,OAAAqB,EAAA,EAAArB,CAAAyU,EAAA,UAGY,GAHZA,SAqCZvH,kBAAoB,WAAM,IAAA0H,EACiO7S,EAAKlC,MAApPsN,EADcyH,EACdzH,UAAWC,EADGwH,EACHxH,UAAWC,EADRuH,EACQvH,SAAU6E,EADlB0C,EACkB1C,kBAAmBC,EADrCyC,EACqCzC,kBAAmBC,EADxDwC,EACwDxC,SAAUC,EADlEuC,EACkEvC,SAAUC,EAD5EsC,EAC4EtC,mBAAoB3E,EADhGiH,EACgGjH,iBAAkB4E,EADlHqC,EACkHrC,2BAA4BC,EAD9IoC,EAC8IpC,2BAA4BC,EAD1KmC,EAC0KnC,kBAAmBC,EAD7LkC,EAC6LlC,kBAAmBc,EADhNoB,EACgNpB,aACtOzR,EAAKK,MAAM8K,kBAAkBnL,EAAKK,MAAM7D,eAAgB4O,EAAWC,EAAWC,EAAU6E,EAAmBC,EAAmBC,EAAUC,EAAUC,EAAoB3E,EAAkB4E,EAA4BC,EAA4BC,EAAmBC,EAAmBc,MAG1RvF,eAAiB,WAAM,IAAA6J,EAC0E/V,EAAKlC,MAA1FqO,EADW4J,EACX5J,cAAeC,EADJ2J,EACI3J,cAAeC,EADnB0J,EACmB1J,eAAgBC,EADnCyJ,EACmCzJ,eAAgBC,EADnDwJ,EACmDxJ,mBACtEvM,EAAKK,MAAM6L,eAAelM,EAAKK,MAAM7D,eAAgB2P,EAAeC,EAAeC,EAAgBC,EAAgBC,4EAG9G,IAAArM,EAAAC,KACEG,EAAWH,KAAKE,MAAhBC,QACP,OACII,EAAA7B,EAAA8B,cAACiF,EAAA,SAAD,KACIlF,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAM7B,WAAS,EAACE,UAAU,SAAStD,UAAWN,EAAQ6B,MAClDzB,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,EAACzM,MAAO,CAACrC,OAAQ,GAAIiV,aAAc,0BACzCtV,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,MAChBrC,EAAA7B,EAAA8B,cAAC+B,EAAA,EAAD,CAAYC,aAAW,OAAOjB,QAASvB,KAAKE,MAAMoU,MAC9C/T,EAAA7B,EAAA8B,cAAC+T,GAAA7V,EAAD,CAAU8V,SAAS,WAF3B,oBAOJjU,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAKK,MAAO,CAAC6S,YAAa,oBAA9C,gBAGAvV,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,EAACjP,UAAWN,EAAQwS,WAG1B,CACI,CACIrR,IAAK,YACLsR,UAAW,MACXP,KAAM,GACNC,IAAK,GACL9T,MAAO,GAEX,CACI8C,IAAK,YACLsR,UAAW,MACXP,KAAM,IACNC,IAAK,IACL9T,MAAO,GAEX,CACI8C,IAAK,WACLsR,UAAW,IACXP,IAAK,EACLC,IAAK,KACL9T,MAAO,GAEX,CACI8C,IAAK,wBACLsR,UAAW,MACXP,KAAM,GACNC,IAAK,EACL9T,MAAO,GAEX,CACI8C,IAAK,wBACLsR,UAAW,MACXP,IAAK,EACLC,IAAK,GACL9T,MAAO,GAEX,CACI8C,IAAK,YACLsR,UAAW,IACXP,IAAK,EACLC,IAAK,KACL9T,MAAO,GAEX,CACI8C,IAAK,YACLsR,UAAW,IACXP,IAAK,EACLC,IAAK,KACL9T,MAAO,GAEX,CACI8C,IAAK,sBACLsR,UAAW,MACXP,IAAK,GACLC,IAAK,GACL9T,MAAO,GAEX,CACI8C,IAAK,oBACLsR,UAAW,MACXP,KAAM,GACNC,IAAK,GACL9T,MAAO,GAEX,CACI8C,IAAK,kCACLsR,UAAW,IACXP,IAAK,EACLC,IAAK,KACL9T,MAAO,GAEX,CACI8C,IAAK,kCACLsR,UAAW,IACXP,IAAK,EACLC,IAAK,KACL9T,MAAO,IAEX,CACI8C,IAAK,sBACLsR,UAAW,UACXP,IAAK,EACLC,IAAK,KACL9T,MAAO,IAEX,CACI8C,IAAK,sBACLsR,UAAW,UACXP,IAAK,EACLC,IAAK,KACL9T,MAAO,KAEbyC,IAAI,SAAAgR,GACF,OAAO1R,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACHvR,IAAK2Q,EAAE3Q,IACPb,UAAWN,EAAQ2S,MACnBC,GAAId,EAAE3Q,IACNwQ,KAAMG,EAAE3Q,IAAI0R,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAC5C5P,MAAO6O,EAAE3Q,IACT9C,MAAOuB,EAAKpC,MAAMsU,EAAE3Q,IAAI0R,QAAQ,KAAM,IAAIA,QAAQ,KAAM,KACxDC,SAAU,SAACjB,GAAD,OAAOjS,EAAK2R,aAAaM,IACnC7C,OAAO,SACPvM,QAAQ,WACRsQ,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUrT,EAAKG,MAAM1D,sBAAwBuD,EAAKG,MAAMxD,qBACxD2W,WAAY,CACRC,aAAc/S,EAAA7B,EAAA8B,cAAC+S,GAAA,EAAD,CAAgBpR,SAAS,OAAO8P,EAAEW,YAEpDzF,MAA2E,KAApEpN,EAAKpC,MAAL,GAAAO,OAAc+T,EAAE3Q,IAAI0R,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAApD,UACPQ,WAAYzT,EAAKpC,MAAL,GAAAO,OAAc+T,EAAE3Q,IAAI0R,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAApD,UACZS,OAAQ,SAACzB,GAAD,OAAOjS,EAAKgS,WAAWC,EAAGC,QAI1C1R,EAAA7B,EAAA8B,cAACkT,GAAA,EAAD,CAAkBN,SAAUpT,KAAKE,MAAM1D,sBAAwBwD,KAAKE,MAAMxD,qBAAsBuG,MAAO,CAAEkM,OAAQ,GAAIjM,WAAY,QAC7HyQ,QACIpT,EAAA7B,EAAA8B,cAACoT,GAAA,EAAD,CAAUxR,MAAM,UAAUyR,QAAqC,MAA5B7T,KAAKrC,MAAM2T,aAAsB/P,QAAS,kBAAMxB,EAAKD,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GAAkBiC,EAAKpC,MAAvB,CAA8B2T,aAA0C,MAA5BvR,EAAKpC,MAAM2T,aAAuB,IAAM,UAE3KlO,MAAM,wBAEV7C,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQhN,MAAM,UAAUgR,UAAQ,EAACxQ,QAAQ,YAAYK,MAAO,CAAEkM,OAAQ,KAAtE,mCAEJ5O,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,EAACzM,MAAO,CAACrC,OAAQ,GAAI2N,UAAW,SAAUsH,aAAc,0BAC9DtV,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQhN,MAAM,UAAUgR,SAAUpT,KAAKE,MAAM1D,sBAAwBwD,KAAKE,MAAMxD,uBAAyBsD,KAAKrC,MAAM4T,OAAQ3O,QAAQ,YAAYrB,QAAS,kBAAMxB,EAAKiL,qBAAqB/H,MAAO,CAAEkM,OAAQ,KAA1M,SAEJ5O,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAKK,MAAO,CAAC6S,YAAa,oBAA9C,uBAGAvV,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,EAACjP,UAAWN,EAAQwS,WAG1B,CAAC,kBAAmB,kBAAmB,mBAAoB,uBAAwB,oBAAoB1R,IAAI,SAAAgR,GACvG,OAAO1R,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACHvR,IAAK2Q,EACLxR,UAAWN,EAAQ2S,MACnBC,GAAId,EACJH,KAAMG,EAAEe,QAAQ,KAAM,IACtB5P,MAAO6O,EACPzT,MAAOuB,EAAKpC,MAAMsU,EAAEe,QAAQ,KAAM,KAClCC,SAAU,SAACjB,GAAD,OAAOjS,EAAK2R,aAAaM,IACnC7C,OAAO,SACPvM,QAAQ,WACRsQ,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUrT,EAAKG,MAAMzD,mBAAqBsD,EAAKG,MAAMvD,kBACrD0W,WAAY,CACRC,aAAc/S,EAAA7B,EAAA8B,cAAC+S,GAAA,EAAD,CAAgBpR,SAAS,OAAzB,aAM9B5B,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,EAACzM,MAAO,CAACrC,OAAQ,GAAI2N,UAAW,WACtChO,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQhN,MAAM,UAAUgR,SAAUpT,KAAKE,MAAMzD,mBAAqBuD,KAAKE,MAAMvD,kBAAmBiG,QAAQ,YAAYrB,QAAS,kBAAMxB,EAAKgM,kBAAkB9I,MAAO,CAAEkM,OAAQ,KAA3K,kBAtUQ7K,IAAMC,WA4VtC,IA8DM4Q,GAA6B1Q,YA5EnC,SAAyB9G,GAAO,IAAA+G,EAC4G/G,EAAMD,IAE9I,MAAO,CACHrB,eAJwBqI,EACpBrI,eAIJC,cALwBoI,EACJpI,cAKpBC,WANwBmI,EACWnI,WAMnCC,qBAPwBkI,EACuBlI,qBAO/CC,kBARwBiI,EAC6CjI,kBAQrEC,qBATwBgI,EACgEhI,qBASxFC,kBAVwB+H,EACsF/H,oBAa3F,SAACgI,GAAD,MAAe,CACtCqG,kBAAmB,SAAC3O,EAAgB4O,EAAWC,EAAWC,EAAUC,EAAWC,EAAWC,EAAcC,EAAOC,EAAkBC,EAAkBC,EAAuBC,EAAuBC,EAAeC,EAAYyF,GACxN,IAAME,EAAM,GAAAtT,OAAM+M,EAAN,MAAA/M,OAAoBgN,EAApB,MAAAhN,OAAkCiN,EAAlC,MAAAjN,OAA+CkN,EAA/C,MAAAlN,OAA6DmN,EAA7D,MAAAnN,OAA2EoN,EAA3E,MAAApN,OAA4FqN,EAA5F,MAAArN,OAAsGsN,EAAtG,MAAAtN,OAA2HuN,EAA3H,MAAAvN,OAAgJwN,EAAhJ,MAAAxN,OAA0KyN,EAA1K,MAAAzN,OAAoM0N,EAApM,MAAA1N,OAAsN2N,EAAtN,SAAA3N,OAAwOoT,GACpPjV,EAAe4E,IAAI,SAAA8S,GACfpP,EAAS,CAAC9G,KAAM,8BAA+BkW,IAAGvC,WAClDnL,GAAW2E,kBAAkB+I,EAAEjV,SAAUmM,EAAWC,EAAWC,EAAUC,EAAWC,EAAWC,EAAcC,EAAOC,EAAkBC,EAAkBC,EAAuBC,EAAuBC,EAAeC,EAAYyF,GAC5NpK,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,gCAChB8G,EAAS,CAAC9G,KAAM,+BAChBwI,GAAWgG,iBAAiB0H,EAAEjV,UACzBoI,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,gCACjB,SAAAsP,GACCxI,EAAS,CAAC9G,KAAM,kCAGzB,SAAAsP,GACCxI,EAAS,CAAC9G,KAAM,qCAKhCkO,eAAgB,SAAC1P,EAAgB2P,EAAeC,EAAeC,EAAgBC,EAAgBC,GAC3F,IAAMoF,EAAM,GAAAtT,OAAM8N,EAAN,MAAA9N,OAAwB+N,EAAxB,MAAA/N,OAA0CgO,EAA1C,MAAAhO,OAA6DiO,EAA7D,MAAAjO,OAAgFkO,GAC5F/P,EAAe4E,IAAI,SAAA8S,GACfpP,EAAS,CAAC9G,KAAM,2BAA4BkW,IAAGvC,WAC/CnL,GAAW0F,eAAegI,EAAEjV,SAAUkN,EAAeC,EAAeC,EAAgBC,EAAgBC,GAC/FlF,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,6BAChB8G,EAAS,CAAC9G,KAAM,4BAChBwI,GAAWiG,cAAcyH,EAAEjV,UACtBoI,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,6BACjB,SAAAsP,GACCxI,EAAS,CAAC9G,KAAM,+BAEzB,SAAAsP,GACCxI,EAAS,CAAC9G,KAAM,kCAIhCyO,cAAe,SAACzN,GACZ8F,EAAS,CAAC9G,KAAM,4BAChBwI,GAAWiG,cAAczN,GACpBqI,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,6BACjB,SAAAsP,GACCxI,EAAS,CAAC9G,KAAM,+BAG5BwO,iBAAkB,SAACxN,GACf8F,EAAS,CAAC9G,KAAM,+BAChBwI,GAAWgG,iBAAiBxN,GACvBqI,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,gCACjB,SAAAsP,GACCxI,EAAS,CAAC9G,KAAM,oCAMG4G,CAA6CG,YA7ajE,SAAAxE,GAAK,MAAK,CACrB4B,KAAM,GACN2Q,UAAW,CACP9N,QAAS,OACTqK,cAAe,MACfF,SAAU,OACV5J,QAAS,GACToJ,SAAU,QAEdsE,MAAMhV,OAAAqB,EAAA,EAAArB,CAAA,CACF+C,MAAO,MACPsO,OAAQ,sBACP/O,EAAM0E,YAAYC,GAAG,MAAQ,CAC1BlE,MAAO,MACPsO,OAAQ,qBA+Z4DvK,CAAmBuP,wDC9Z7F4B,8MACFpY,MAAQ,CACJqY,WAAY,OACZC,MAAM,KAGVC,YAAc,SAAAvE,GACV9R,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GAAmB+B,EAAKlC,MAAxB,CAA+BwY,SAAUxE,EAAMyE,oBAGnDC,YAAc,SAAC/U,GACXzB,EAAKC,SAAS,CAAEkW,WAAY1U,EAAK6U,SAAU,UAG/CG,WAAa,WACNzW,EAAKlC,MAAMsY,MACVpW,EAAKK,MAAM9D,mBAAmB6E,IAAI,SAAA8S,GAAC,OAAIlU,EAAKK,MAAMuI,SAASsL,EAAEjV,SAAU,UACvEe,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GAAkB+B,EAAKlC,MAAvB,CAA8BsY,MAAOpW,EAAKlC,MAAMsY,UAEhDpW,EAAKK,MAAM9D,mBAAmB6E,IAAI,SAAA8S,GAAC,OAAIlU,EAAKK,MAAMuI,SAASsL,EAAEjV,SAAU,YACvEe,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GAAkB+B,EAAKlC,MAAvB,CAA8BsY,MAAOpW,EAAKlC,MAAMsY,kFAI/C,IAAAlW,EAAAC,KACGG,EAAYH,KAAKE,MAAjBC,QACAgW,EAAanW,KAAKrC,MAAlBwY,SACR,OACI5V,EAAA7B,EAAA8B,cAACiF,EAAA,SAAD,KAEIlF,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAM7B,WAAS,EAACE,UAAU,SAAStD,UAAWN,EAAQ6B,MAClDzB,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,EAACzM,MAAO,CAACrC,OAAQ,KACvBL,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,MAChBrC,EAAA7B,EAAA8B,cAAC+B,EAAA,EAAD,CAAYC,aAAW,OAAOjB,QAASvB,KAAKE,MAAMoU,MAC9C/T,EAAA7B,EAAA8B,cAAC+T,GAAA7V,EAAD,CAAU8V,SAAS,WAF3B,YAOJjU,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,EAACjP,UAAWN,EAAQoW,SAG9BhW,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,EAACzM,MAAO,CAACsL,UAAW,WAC1BhO,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQhN,MAAM,UAAUQ,QAAQ,YAAYrB,QAAS,kBAAMxB,EAAKG,MAAM9D,mBAAmB6E,IAAI,SAAA8S,GAAC,OAAIhU,EAAKG,MAAMoI,YAAYyL,EAAEjV,SAAU,eAAcmE,MAAO,CAAEkM,OAAQ,KAApK,YACA5O,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQhN,MAAM,UAAUQ,QAAQ,YAAYrB,QAAS,kBAAMxB,EAAKG,MAAM9D,mBAAmB6E,IAAI,SAAA8S,GAAC,OAAIhU,EAAKG,MAAMoI,YAAYyL,EAAEjV,SAAU,eAAcmE,MAAO,CAAEkM,OAAQ,KAApK,YACA5O,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQhN,MAAM,UAAUQ,QAAQ,YAAYrB,QAAS,kBAAMxB,EAAKG,MAAM9D,mBAAmB6E,IAAI,SAAA8S,GAAC,OAAIhU,EAAKG,MAAMoI,YAAYyL,EAAEjV,SAAU,WAAUmE,MAAO,CAAEkM,OAAQ,KAAhK,QACA5O,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQhN,MAAM,UAAUgR,SAAoC,SAA1BpT,KAAKrC,MAAMqY,WAAuBzU,QAAS,kBAAMxB,EAAKG,MAAM9D,mBAAmB6E,IAAI,SAAA8S,GAAC,OAAIhU,EAAKG,MAAMuI,SAASsL,EAAEjV,SAAUiB,EAAKpC,MAAMqY,eAAcpT,QAAQ,YAAYK,MAAO,CAAEC,WAAY,KAAOlD,KAAKrC,MAAMqY,YAC9OzV,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CACIhN,MAAM,UACNQ,QAAQ,YACR4T,YAAWL,EAAW,mBAAgBjI,EACtCuI,gBAAc,OACdlV,QAASvB,KAAKkW,YACdjT,MAAO,CAAEyT,SAAU,GAAIZ,YAAa,EAAGa,aAAc,IAErDpW,EAAA7B,EAAA8B,cAACoW,GAAAlY,EAAD,OAEJ6B,EAAA7B,EAAA8B,cAACqW,GAAA,EAAD,CACI9D,GAAG,cACHoD,SAAUA,EACVnS,KAAM8S,QAAQX,GACdlS,QAASjE,KAAKqW,aAEd9V,EAAA7B,EAAA8B,cAACuW,GAAA,EAAD,CAAUxV,QAAS,kBAAMxB,EAAKsW,YAAY,UAA1C,QACA9V,EAAA7B,EAAA8B,cAACuW,GAAA,EAAD,CAAUxV,QAAS,kBAAMxB,EAAKsW,YAAY,UAA1C,QACA9V,EAAA7B,EAAA8B,cAACuW,GAAA,EAAD,CAAUxV,QAAS,kBAAMxB,EAAKsW,YAAY,WAA1C,SACA9V,EAAA7B,EAAA8B,cAACuW,GAAA,EAAD,CAAUxV,QAAS,kBAAMxB,EAAKsW,YAAY,WAA1C,SACA9V,EAAA7B,EAAA8B,cAACuW,GAAA,EAAD,CAAUxV,QAAS,kBAAMxB,EAAKsW,YAAY,eAA1C,cAEJ9V,EAAA7B,EAAA8B,cAACkT,GAAA,EAAD,CAAkBzQ,MAAO,CAAEkM,OAAQ,IAAM6H,eAAe,MACpDrD,QACIpT,EAAA7B,EAAA8B,cAACyW,GAAA,EAAD,CAAQ7U,MAAM,UAAUyR,QAAS7T,KAAKrC,MAAMsY,KAAM1U,QAAS,kBAAMxB,EAAKuW,gBAE1ElT,MAAM,+BAzECkB,IAAMC,WA2FzC,IAsBM2S,GAAgCzS,YA9BtC,SAAyB9G,GAGrB,MAAO,CACHvB,mBAH2BuB,EAAMD,IAA7BtB,qBAOe,SAACuI,GAAD,MAAe,CACtC2D,YAAa,SAACzJ,EAAKL,GACfmG,EAAS,CAAC9G,KAAM,yBAChBwI,GAAWiC,YAAYzJ,EAAKL,GACvB0I,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,0BACjB,SAAAsP,GACCxI,EAAS,CAAC9G,KAAM,4BAG5B4K,SAAU,SAAC5J,EAAK8H,GACZhC,EAAS,CAAC9G,KAAM,sBAChBwI,GAAWoC,SAAS5J,EAAK8H,GACpBO,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,uBACjB,SAAAsP,GACCxI,EAAS,CAAC9G,KAAM,2BAMM4G,CAA6CG,YA/HpE,SAAAxE,GAAK,MAAK,CACrB4B,KAAM,CACFpB,OAAQ,qBAEZ2V,OAAQ,CACJ3V,OAAQ,qBACRiE,QAAS,OACTqK,cAAe,SACfF,SAAU,OACV5J,QAAS,GACToJ,SAAU,UAqHiE5J,CAAmBmR,KCzGhGoB,8MACFxZ,MAAQ,CACJyZ,iBAAkB,GAClBrK,SAAU,UAGdsK,UAAY,WACLxX,EAAKlC,MAAMyZ,iBAAiB/Z,SAAWwC,EAAKK,MAAMnE,kBAAkBsB,OACnEwC,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,MADZ,CAEIyZ,iBAAkB,MAGtBvX,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,MADZ,CAEIyZ,iBAAiBtZ,OAAAK,EAAA,EAAAL,CAAK+B,EAAKK,MAAMnE,yBAK7Cub,UAAY,SAACC,IACwC,IAA9C1X,EAAKlC,MAAMyZ,iBAAiB9Z,QAAQia,GACnC1X,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,MADZ,CAEIyZ,iBAAgB,GAAAlZ,OAAAJ,OAAAK,EAAA,EAAAL,CAAM+B,EAAKlC,MAAMyZ,kBAAjB,CAAmCG,OAGvD1X,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,MADZ,CAEIyZ,iBAAiBtZ,OAAAK,EAAA,EAAAL,CAAK+B,EAAKlC,MAAMyZ,iBAAiBzY,OAAO,SAAAoV,GAAC,OAAIA,EAAEtF,QAAU8I,EAAI9I,eAK1F+I,YAAc,WACV3X,EAAKK,MAAMuX,kBAAkB5X,EAAKlC,MAAMyZ,kBACxCvX,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,MADZ,CAEIoP,SAAU,aAIlB2K,eAAiB,WACb7X,EAAKK,MAAMyX,sBAAsB9X,EAAKlC,MAAMyZ,kBAC5CvX,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,MADZ,CAEIoP,SAAU,gBAIlBuH,KAAO,WACHzU,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,MADZ,CAEIoP,SAAU,aAIlBjC,eAAiB,WACbjL,EAAKK,MAAM4K,eAAejL,EAAKlC,MAAMyZ,iBAAiBnW,IAAI,SAAA2W,GAAC,OAAIA,EAAE9Y,YACjEe,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GAAkB+B,EAAKlC,MAAvB,CAA8ByZ,iBAAkB,+EAG3C,IAAArX,EAAAC,KAAAC,EACkCD,KAAKE,MAApCC,EADHF,EACGE,QAASpE,EADZkE,EACYlE,kBAEjB,OACIwE,EAAA7B,EAAA8B,cAACiF,EAAA,SAAD,KAEgC,SAAxBzF,KAAKrC,MAAMoP,SACP/M,KAAKrC,MAAMyZ,iBAAiB/Z,OAAS,EACrCkD,EAAA7B,EAAA8B,cAAC2U,GAAD,CAAmBb,KAAMtU,KAAKsU,OAAU/T,EAAA7B,EAAA8B,cAACqX,GAAD,CAAoBvD,KAAMtU,KAAKsU,OACnD,YAAxBtU,KAAKrC,MAAMoP,SACXxM,EAAA7B,EAAA8B,cAAC0W,GAAD,CAAsB5C,KAAMtU,KAAKsU,OACjC/T,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAM7B,WAAS,EAACE,UAAU,SAASd,MAAO,CAAErC,OAAQ,sBAChDL,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,EAACzM,MAAO,CAACsL,UAAW,QAC1BhO,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQhN,MAAM,UAAUQ,QAAQ,YAAYwQ,SAAiD,IAAvCpT,KAAKrC,MAAMyZ,iBAAiB/Z,OAAcoD,UAAWN,EAAQ2X,QAASvW,QAAS,kBAAMxB,EAAKyX,gBAAhJ,QACAjX,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQhN,MAAM,UAAUQ,QAAQ,YAAYwQ,SAAiD,IAAvCpT,KAAKrC,MAAMyZ,iBAAiB/Z,OAAcoD,UAAWN,EAAQ2X,QAASvW,QAAS,kBAAMxB,EAAK2X,mBAAhJ,YAEJnX,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,GACVnP,EAAA7B,EAAA8B,cAACmF,EAAA,EAAD,CAAOlF,UAAWN,EAAQ4X,OACtBxX,EAAA7B,EAAA8B,cAACoF,GAAA,EAAD,KACArF,EAAA7B,EAAA8B,cAACqF,GAAA,EAAD,KACItF,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,CACIvE,QAAS,kBAAMxB,EAAKsX,aACpBpU,MAAO,CAACkD,OAAQ,YAEO,OAAtBpK,GAA8BA,EAAkBsB,OAAS,GAAKkD,EAAA7B,EAAA8B,cAACoT,GAAA,EAAD,CAC3DC,QAAS7T,KAAKrC,MAAMyZ,iBAAiB/Z,SAAWtB,EAAkBsB,OAClE+E,MAAM,aAGd7B,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,cACAvF,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,kBACAvF,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,iBAGJvF,EAAA7B,EAAA8B,cAACuF,EAAA,EAAD,KACChK,GAAqBA,EAAkBkF,IAAI,SAAAsW,GAAG,OAC3ChX,EAAA7B,EAAA8B,cAACqF,GAAA,EAAD,CAAUvE,IAAKiW,EAAI9I,MACflN,QAAS,kBAAMxB,EAAKuX,UAAUC,IAC9BtU,MAAO,CAACkD,OAAQ,YAEpB5F,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KACIvF,EAAA7B,EAAA8B,cAACoT,GAAA,EAAD,CACIC,SAAuD,IAA9C9T,EAAKpC,MAAMyZ,iBAAiB9Z,QAAQia,GAC7CnV,MAAM,aAGV7B,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KAAayR,EAAI7C,WACjBnU,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KAAayR,EAAIzY,UACjByB,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KAAayR,EAAI9I,aAKC,OAAtB1S,GACRwE,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,EAACzM,MAAO,CAACsL,UAAW,QAC1BhO,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQxM,QAAQ,YAAYR,MAAM,UAAU3B,UAAWN,EAAQ2X,QAAS1E,SAAiD,IAAvCpT,KAAKrC,MAAMyZ,iBAAiB/Z,OAAckE,QAAS,kBAAMxB,EAAK+K,mBAAhJ,oBArHGxG,IAAMC,WA0IrC,IA0BMyT,GAA4BvT,YAlClC,SAAyB9G,GAGrB,MAAO,CACH5B,kBAH0B4B,EAAMD,IAA5B3B,oBAOe,SAAC4I,GAAD,MAAe,CACtCmG,eAAiB,SAACC,GACdpG,EAAS,CAAC9G,KAAM,4BAChBwI,GAAWyE,eAAeC,GACrB7D,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,0BAA2BkN,SAC3CpG,EAAS,CAAC9G,KAAM,mCAChBwI,GAAWsC,uBACNzB,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,iCAAkCG,UACnD,SAAAmP,GACCxI,EAAS,CAAC9G,KAAM,iCAAkCsP,aAE3D,SAAAA,GACCxI,EAAS,CAAC9G,KAAM,+BAG5B4Z,kBAAmB,SAACxY,GAChB0F,EAAS,CAAC9G,KAAM,sBAAuBoB,cAE3C0Y,sBAAuB,SAAC1Y,GACpB0F,EAAS,CAAC9G,KAAM,0BAA2BoB,gBAKjBwF,CAA6CG,YApLhE,SAAAxE,GAAK,MAAK,CACrB4B,KAAM,CACJnB,MAAO,OACPyN,UAAWlO,EAAMiF,QAAQ,GACzB4S,UAAW,QAEbF,MAAO,CACLrB,SAAU,KAEZoB,QAAS,CACLI,aAAc,GACdjT,YAAa,GACbqJ,UAAW,MAwK4D1J,CAAmBuS,mCCjK5FgB,8MACFxa,MAAQ,CACJyZ,iBAAkB,GAClBgB,cAAe,YAGnBf,UAAY,WACLxX,EAAKlC,MAAMyZ,iBAAiB/Z,SAAWwC,EAAKK,MAAM/D,aAAakB,OAC9DwC,EAAKC,SAAS,CACVsX,iBAAkB,KAGtBvX,EAAKC,SAAS,CACVsX,iBAAiBtZ,OAAAK,EAAA,EAAAL,CAAK+B,EAAKK,MAAM/D,mBAK7Cmb,UAAY,SAACC,IACwC,IAA9C1X,EAAKlC,MAAMyZ,iBAAiB9Z,QAAQia,GACnC1X,EAAKC,SAAS,CACVsX,iBAAgB,GAAAlZ,OAAAJ,OAAAK,EAAA,EAAAL,CAAM+B,EAAKlC,MAAMyZ,kBAAjB,CAAmCG,MAGvD1X,EAAKC,SAAS,CACVsX,iBAAiBtZ,OAAAK,EAAA,EAAAL,CAAK+B,EAAKlC,MAAMyZ,iBAAiBzY,OAAO,SAAAoV,GAAC,OAAIA,EAAEhB,KAAOwE,EAAIxE,WAKvFrB,aAAe,SAACM,GACZnS,EAAKC,SAAS,CACVsY,cAAepG,EAAEH,OAAOrT,WAIhC6Z,YAAc,SAACrG,GACXnS,EAAKC,SAAS,CACVwY,cAAetG,EAAEH,OAAOrT,WAIhC6Q,KAAO,WAC6B,WAA7BxP,EAAKlC,MAAMya,cACVvY,EAAKK,MAAMyK,SAAS,SAEpB9K,EAAKK,MAAMyK,SAAS9K,EAAKlC,MAAM2a,kBAIvCzN,YAAc,WACVhL,EAAKK,MAAM2K,YAAYhL,EAAKlC,MAAMyZ,2FAG7B,IAAArX,EAAAC,KAAAC,EAC6BD,KAAKE,MAA/BC,EADHF,EACGE,QAAShE,EADZ8D,EACY9D,aAEjB,OACIoE,EAAA7B,EAAA8B,cAACiF,EAAA,SAAD,KACIlF,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAM7B,WAAS,EAACE,UAAU,UACtBxD,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,GACNnP,EAAA7B,EAAA8B,cAAC+X,GAAA,EAAD,CAAaC,UAAU,WAAW/X,UAAWN,EAAQsY,aACjDlY,EAAA7B,EAAA8B,cAACkY,GAAA,EAAD,CACInB,KAAG,EACH/U,aAAW,OACXsP,KAAK,OACLtT,MAAOwB,KAAKrC,MAAMya,cAClBnF,SAAUjT,KAAK0R,cAEfnR,EAAA7B,EAAA8B,cAACkT,GAAA,EAAD,CAAkBlV,MAAM,SAASmV,QAASpT,EAAA7B,EAAA8B,cAACmY,GAAA,EAAD,CAAOvW,MAAM,YAAagB,MAAM,WAC1E7C,EAAA7B,EAAA8B,cAACkT,GAAA,EAAD,CAAkBlV,MAAM,YAAYmV,QAASpT,EAAA7B,EAAA8B,cAACmY,GAAA,EAAD,CAAOvW,MAAM,YAAagB,MAAM,iBAIzF7C,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,EAACzM,MAAO,CAACiV,aAAc,KAEA,WAA7BlY,KAAKrC,MAAMya,cACX7X,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACIE,GAAG,gBACHtS,UAAWN,EAAQyY,UACnBpa,MAAOwB,KAAKrC,MAAM2a,cAClBrF,SAAUjT,KAAKqY,YACfQ,YAAY,SACZ1J,OAAO,OACPvM,QAAQ,aAEZrC,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACIE,GAAG,gBACHtS,UAAWN,EAAQyY,UACnBpa,MAAOwB,KAAKrC,MAAM2a,cAClBrF,SAAUjT,KAAKqY,YACfQ,YAAY,YACZ1J,OAAO,OACPvM,QAAQ,aAGZrC,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQhN,MAAM,UAAUb,QAAS,kBAAMxB,EAAKsP,QAAQzM,QAAQ,YAAYK,MAAO,CAACC,WAAY,GAAI4V,cAAe,WAA/G,SAC4B,IAAxB3c,EAAakB,aAAiC6Q,IAAjB/R,GACrCoE,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,GACVnP,EAAA7B,EAAA8B,cAACmF,EAAA,EAAD,CAAOlF,UAAWN,EAAQ4X,OACtBxX,EAAA7B,EAAA8B,cAACoF,GAAA,EAAD,KACArF,EAAA7B,EAAA8B,cAACqF,GAAA,EAAD,KACItF,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,CACIvE,QAAS,kBAAMxB,EAAKsX,aACpBpU,MAAO,CAACkD,OAAQ,YAEfhK,EAAakB,OAAS,QAAsB6Q,IAAjB/R,GAA8BoE,EAAA7B,EAAA8B,cAACoT,GAAA,EAAD,CACtDC,QAAS7T,KAAKrC,MAAMyZ,iBAAiB/Z,SAAWlB,EAAakB,QAAiD,IAAvC2C,KAAKrC,MAAMyZ,iBAAiB/Z,OACnG+E,MAAM,aAGd7B,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,cACAvF,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,kBACAvF,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,iBAGJvF,EAAA7B,EAAA8B,cAACuF,EAAA,EAAD,KACyB,IAAxB5J,EAAakB,aAAiC6Q,IAAjB/R,GAA8BA,EAAa8E,IAAI,SAAA8X,GACzE,OACAxY,EAAA7B,EAAA8B,cAACqF,GAAA,EAAD,CAAUvE,IAAKyX,EAAIla,IACf0C,QAAS,kBAAMxB,EAAKuX,UAAUyB,IAC9B9V,MAAO,CAACkD,OAAQ,YAEpB5F,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KACIvF,EAAA7B,EAAA8B,cAACoT,GAAA,EAAD,CACIC,SAAuD,IAA9C9T,EAAKpC,MAAMyZ,iBAAiB9Z,QAAQyb,GAC7C3W,MAAM,aAGV7B,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KAAaiT,EAAIvQ,OAAOiJ,MAAM,KAAK,IACnClR,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KAAaiT,EAAIla,KACjB0B,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KAAaiT,EAAItK,aAKI,IAAxBtS,EAAakB,aAAiC6Q,IAAjB/R,GACtCoE,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,EAACzM,MAAO,CAACsL,UAAW,QAC1BhO,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQhN,MAAM,UAAUgR,SAAiD,IAAvCpT,KAAKrC,MAAMyZ,iBAAiB/Z,OAAckE,QAAS,kBAAMxB,EAAK8K,eAAejI,QAAQ,YAAYK,MAAO,CAACkM,OAAQ,KAAnJ,iBA1IF7K,IAAMC,WA2J5B,IA6BMyU,GAAmBvU,YArCzB,SAAyB9G,GAGrB,MAAO,CACHxB,aAHqBwB,EAAMD,IAAvBvB,eAOe,SAACwI,GAAD,MAAe,CACtCgG,SAAW,SAACC,GACRjG,EAAS,CAAC9G,KAAM,qBAChBwI,GAAWsE,SAASC,GACf1D,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,sBACjB,SAAAsP,GACCxI,EAAS,CAAC9G,KAAM,wBAG5BgN,YAAa,SAAC7L,GACV2F,EAAS,CAAC9G,KAAM,yBAChBwI,GAAWwE,YAAY7L,GAClBkI,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,uBAAwBmB,YACxC2F,EAAS,CAAC9G,KAAM,mCAChBwI,GAAWsC,uBACNzB,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,iCAAkCG,UACnD,SAAAmP,GACCxI,EAAS,CAAC9G,KAAM,iCAAkCsP,aAE3D,SAAAA,GACCxI,EAAS,CAAC9G,KAAM,8BAMP4G,CAA6CG,YA1MvD,SAAAxE,GAAK,MAAK,CACrB4B,KAAM,CACJnB,MAAO,OACPyN,UAAWlO,EAAMiF,QAAQ,GACzB4S,UAAW,QAEbF,MAAO,CACLrB,SAAU,KAEZkC,UAAW,CACP1V,WAAY,IAEhBuV,YAAa,CACTvV,WAAY,MA6LkD0B,CAAmBuT,KChMnFc,8MAEJvH,aAAe,SAACC,EAAOnT,GACrBqB,EAAKK,MAAMkU,UAAU,CAAE5V,mFAGhB,IAAAyB,EACyBD,KAAKE,MAA7BC,EADDF,EACCE,QAAS9E,EADV4E,EACU5E,WAEjB,OACEkF,EAAA7B,EAAA8B,cAAA,OAAKC,UAAWN,EAAQ6B,MACtBzB,EAAA7B,EAAA8B,cAAC0B,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,aAC9B7B,EAAA7B,EAAA8B,cAACuU,GAAA,EAAD,CAAMvW,MAAOnD,EAAY4X,SAAUjT,KAAK0R,aAAcvR,QAAS,CAAC6U,UAAW7U,EAAQ8U,gBACjF1U,EAAA7B,EAAA8B,cAAC0U,GAAA,EAAD,CAAK9R,MAAM,cAAcjD,QAAS,CAACsB,SAAUtB,EAAQsB,YACrDlB,EAAA7B,EAAA8B,cAAC0U,GAAA,EAAD,CAAK9R,MAAM,OAAOjD,QAAS,CAACsB,SAAUtB,EAAQsB,cAGlC,IAAfpG,GAAoBkF,EAAA7B,EAAA8B,cAACwX,GAAD,MACL,IAAf3c,GAAoBkF,EAAA7B,EAAA8B,cAACwY,GAAD,cAlBD1U,IAAMC,WAqClC,IAOM2U,GAA0BzU,YAfhC,SAAyB9G,GAGrB,MAAO,CACHtC,WAHmBsC,EAAMD,IAArBrC,aAOe,SAACsJ,GAAD,MAAe,CACtCyP,UAAW,SAAC5V,GACRmG,EAAS,CAAC9G,KAAM,aAAcW,aAKNiG,CAA6CG,YA3D9D,SAAAxE,GAAK,MAAK,CACvB4B,KAAM,CACJmB,gBAAiB/C,EAAMgV,QAAQC,WAAWnR,OAE5C+Q,cAAe,CACb9R,gBAAiB,WAEnB1B,SAAU,CACR0B,gBAAiB,UACjBf,MAAO,UACPkT,WAAY,IACZd,SAAU,MAgD+D5P,CAAmBqU,KC7B1FE,8MAEFxb,MAAQ,2EAKC,IACGwC,EAAYH,KAAKE,MAAjBC,QACR,OACII,EAAA7B,EAAA8B,cAACiF,EAAA,SAAD,KACQlF,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,EAAC0J,GAAI,GAAIvV,WAAS,EAACE,UAAU,SAASsV,QAAQ,SAAS7L,WAAW,SAAS/M,UAAWN,EAAQ6B,MACpGzB,EAAA7B,EAAA8B,cAAA,OAAKC,UAAWN,EAAQmZ,OACxB/Y,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAKK,MAAO,CAACsL,UAAW,WAA5C,WAGAhO,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACIpS,UAAWN,EAAQ2S,MACnBC,GAAG,OACH3P,MAAM,OACN5E,MAAOwB,KAAKrC,MAAM4I,KAClB0M,SAAUjT,KAAK0R,aACfvC,OAAO,SACPvM,QAAQ,WACRsQ,gBAAiB,CAAEC,QAAQ,KAE/B5S,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACIpS,UAAWN,EAAQ2S,MACnBC,GAAG,WACH3P,MAAM,WACN5E,MAAOwB,KAAKrC,MAAMoJ,SAClBkM,SAAUjT,KAAK0R,aACfvC,OAAO,SACPvM,QAAQ,WACRsQ,gBAAiB,CAAEC,QAAQ,KAE/B5S,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACIpS,UAAWN,EAAQ2S,MACnBC,GAAG,WACH3P,MAAM,YACN5E,MAAOwB,KAAKrC,MAAM4b,SAClBtG,SAAUjT,KAAK0R,aACfvC,OAAO,SACPvM,QAAQ,WACRsQ,gBAAiB,CAAEC,QAAQ,KAE/B5S,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQxM,QAAQ,YAAYR,MAAM,UAAU3B,UAAWN,EAAQqZ,YAA/D,SAEAjZ,EAAA7B,EAAA8B,cAAA,OAAKC,UAAWN,EAAQmZ,OACxB/Y,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAKK,MAAO,CAACsL,UAAW,WAA5C,cAGAhO,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACIpS,UAAWN,EAAQ2S,MACnBC,GAAG,oBACH3P,MAAM,sBACN5E,MAAOwB,KAAKrC,MAAMoJ,SAClBkM,SAAUjT,KAAK0R,aACfvC,OAAO,SACPvM,QAAQ,WACRsQ,gBAAiB,CAAEC,QAAQ,KAE/B5S,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACIpS,UAAWN,EAAQ2S,MACnBC,GAAG,uBACH3P,MAAM,0BACN5E,MAAOwB,KAAKrC,MAAMoJ,SAClBkM,SAAUjT,KAAK0R,aACfvC,OAAO,SACPvM,QAAQ,WACRsQ,gBAAiB,CAAEC,QAAQ,KAE/B5S,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQxM,QAAQ,YAAYR,MAAM,UAAS3B,UAAWN,EAAQqZ,YAA9D,SAEAjZ,EAAA7B,EAAA8B,cAAA,OAAKC,UAAWN,EAAQmZ,OACxB/Y,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAKK,MAAO,CAACsL,UAAW,WAA5C,aAGAhO,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACIpS,UAAWN,EAAQ2S,MACnBC,GAAG,QACH3P,MAAM,gBACN5E,MAAOwB,KAAKrC,MAAM8b,MAClBxG,SAAUjT,KAAK0R,aACfvC,OAAO,SACPvM,QAAQ,WACRsQ,gBAAiB,CAAEC,QAAQ,KAE/B5S,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQxM,QAAQ,YAAYR,MAAM,UAAS3B,UAAWN,EAAQqZ,YAA9D,SAEAjZ,EAAA7B,EAAA8B,cAAA,OAAKC,UAAWN,EAAQmZ,OACxB/Y,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAKK,MAAO,CAACsL,UAAW,WAA5C,UAGAhO,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACIpS,UAAWN,EAAQ2S,MACnBC,GAAG,QACH3P,MAAM,SACN5E,MAAOwB,KAAKrC,MAAMqL,MAClBiK,SAAUjT,KAAK0R,aACfvC,OAAO,SACPvM,QAAQ,WACRsQ,gBAAiB,CAAEC,QAAQ,KAE/B5S,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQxM,QAAQ,YAAYR,MAAM,UAAS3B,UAAWN,EAAQqZ,YAA9D,SAEAjZ,EAAA7B,EAAA8B,cAAA,OAAKC,UAAWN,EAAQmZ,OACxB/Y,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAKK,MAAO,CAACsL,UAAW,WAA5C,eAGAhO,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACIpS,UAAWN,EAAQ2S,MACnBC,GAAG,eACH3P,MAAM,iBACN5E,MAAOwB,KAAKrC,MAAMyL,aAClB6J,SAAUjT,KAAK0R,aACfvC,OAAO,SACPvM,QAAQ,WACRsQ,gBAAiB,CAAEC,QAAQ,KAE/B5S,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACIpS,UAAWN,EAAQ2S,MACnBC,GAAG,gBACH3P,MAAM,kBACN5E,MAAOwB,KAAKrC,MAAM2L,cAClB2J,SAAUjT,KAAK0R,aACfvC,OAAO,SACPvM,QAAQ,WACRsQ,gBAAiB,CAAEC,QAAQ,KAE/B5S,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACIpS,UAAWN,EAAQ2S,MACnBC,GAAG,iBACH3P,MAAM,mBACN5E,MAAOwB,KAAKrC,MAAM4L,eAClB0J,SAAUjT,KAAK0R,aACfvC,OAAO,SACPvM,QAAQ,WACRsQ,gBAAiB,CAAEC,QAAQ,KAE/B5S,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQxM,QAAQ,YAAYR,MAAM,UAAS3B,UAAWN,EAAQqZ,YAA9D,SAEAjZ,EAAA7B,EAAA8B,cAAA,OAAKC,UAAWN,EAAQmZ,OACxB/Y,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAKK,MAAO,CAACsL,UAAW,WAA5C,gBAGAhO,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACIpS,UAAWN,EAAQ2S,MACnBC,GAAG,gBACH3P,MAAM,kBACN5E,MAAOwB,KAAKrC,MAAM6L,cAClByJ,SAAUjT,KAAK0R,aACfvC,OAAO,SACPvM,QAAQ,WACRsQ,gBAAiB,CAAEC,QAAQ,KAE/B5S,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACIpS,UAAWN,EAAQ2S,MACnBC,GAAG,kBACH3P,MAAM,oBACN5E,MAAOwB,KAAKrC,MAAM+b,gBAClBzG,SAAUjT,KAAK0R,aACfvC,OAAO,SACPvM,QAAQ,WACRsQ,gBAAiB,CAAEC,QAAQ,KAE/B5S,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQxM,QAAQ,YAAYR,MAAM,UAAS3B,UAAWN,EAAQqZ,YAA9D,SAEAjZ,EAAA7B,EAAA8B,cAAA,OAAKC,UAAWN,EAAQmZ,OACxB/Y,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAKK,MAAO,CAACsL,UAAW,WAA5C,eAGAhO,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACIpS,UAAWN,EAAQ2S,MACnBC,GAAG,eACH3P,MAAM,iBACN5E,MAAOwB,KAAKrC,MAAMgc,aAClB1G,SAAUjT,KAAK0R,aACfvC,OAAO,SACPvM,QAAQ,WACRsQ,gBAAiB,CAAEC,QAAQ,KAE/B5S,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACIpS,UAAWN,EAAQ2S,MACnBC,GAAG,iBACH3P,MAAM,mBACN5E,MAAOwB,KAAKrC,MAAMic,eAClB3G,SAAUjT,KAAK0R,aACfvC,OAAO,SACPvM,QAAQ,WACRsQ,gBAAiB,CAAEC,QAAQ,KAE/B5S,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQxM,QAAQ,YAAYR,MAAM,UAAS3B,UAAWN,EAAQqZ,YAA9D,SAEAjZ,EAAA7B,EAAA8B,cAAA,OAAKC,UAAWN,EAAQmZ,OACxB/Y,EAAA7B,EAAA8B,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAKK,MAAO,CAACsL,UAAW,WAA5C,eAGAhO,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACIpS,UAAWN,EAAQ2S,MACnBC,GAAG,eACH3P,MAAM,iBACN5E,MAAOwB,KAAKrC,MAAMkc,aAClB5G,SAAUjT,KAAK0R,aACfvC,OAAO,SACPvM,QAAQ,WACRsQ,gBAAiB,CAAEC,QAAQ,KAE/B5S,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACIpS,UAAWN,EAAQ2S,MACnBC,GAAG,iBACH3P,MAAM,mBACN5E,MAAOwB,KAAKrC,MAAMmc,eAClB7G,SAAUjT,KAAK0R,aACfvC,OAAO,SACPvM,QAAQ,WACRsQ,gBAAiB,CAAEC,QAAQ,KAE/B5S,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQxM,QAAQ,YAAYR,MAAM,UAAS3B,UAAWN,EAAQqZ,YAA9D,SAEAjZ,EAAA7B,EAAA8B,cAAA,OAAKC,UAAWN,EAAQmZ,OACxB/Y,EAAA7B,EAAA8B,cAAC+X,GAAA,EAAD,CAAaC,UAAU,WAAW/X,UAAWN,EAAQ2S,OACjDvS,EAAA7B,EAAA8B,cAACkY,GAAA,EAAD,CACInB,KAAG,EACH/U,aAAW,OACXsP,KAAK,OACLtT,MAAOwB,KAAKrC,MAAMoc,SAClB9G,SAAUjT,KAAK0R,cAEfnR,EAAA7B,EAAA8B,cAACkT,GAAA,EAAD,CAAkBlV,MAAM,WAAWmV,QAASpT,EAAA7B,EAAA8B,cAACmY,GAAA,EAAD,CAAOvW,MAAM,YAAagB,MAAM,uBAC5E7C,EAAA7B,EAAA8B,cAACkT,GAAA,EAAD,CAAkBlV,MAAM,QAAQmV,QAASpT,EAAA7B,EAAA8B,cAACmY,GAAA,EAAD,CAAOvW,MAAM,YAAagB,MAAM,qBAE7E7C,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQxM,QAAQ,YAAYR,MAAM,UAAUa,MAAO,CAACiV,aAAc,KAAlE,mBAxOC5T,IAAMC,WA0PnC,IAQMyV,GAA0BvV,YAhBhC,SAAyB9G,GAGrB,MAAO,CACH5B,kBAH0B4B,EAAMD,IAA5B3B,oBAOe,SAAC4I,GAAD,MAAe,CACtC2B,YAAa,SAACC,EAAMC,EAAM+S,GACtB5U,EAAS,CAAC9G,KAAM,kBAChBwI,GAAWC,YAAYC,EAAMC,MAKL/B,CAA6CG,YApS9D,SAAAxE,GAAK,MAAK,CACvB4B,KAAKlE,OAAAqB,EAAA,EAAArB,CAAA,CACHqF,gBAAiB/C,EAAMgV,QAAQC,WAAWnR,OACzC9D,EAAM0E,YAAYC,GAAG,MAAQ,CAC1BnE,OAAQ,UAGd0Y,MAAMxb,OAAAqB,EAAA,EAAArB,CAAA,CACJ+G,QAAS,OACTqK,cAAe,SACfzB,eAAgB,SAChBD,WAAY,SACZ3M,MAAO,OACNT,EAAM0E,YAAYC,GAAG,MAAQ,CAC1BlE,MAAO,QAGbiS,MAAMhV,OAAAqB,EAAA,EAAArB,CAAA,CACJ+C,MAAO,OACNT,EAAM0E,YAAYC,GAAG,MAAQ,CAC1BoK,OAAQ,eAGdqK,WAAW1b,OAAAqB,EAAA,EAAArB,CAAA,CACTqR,OAAQ,oBACR8K,UAAW,SACV7Z,EAAM0E,YAAYoV,KAAK,MAAQ,CAC5BrZ,MAAO,MACPsO,OAAQ,GACR8K,UAAW,aAuQ0DrV,CAAmBuU,qFC7Q1FgB,8MAEFxc,MAAQ,CACJyc,gBAAiB,GACjBC,QAAQ,EACRC,MAAO,OACP7N,KAAM,GACN5O,KAAM,GACNyJ,MAAO,GACPoF,eAAgB,GAChB6N,WAAY,GACZC,eAAgB,GAChB7Q,QAAS,MAGbiE,kBAAoB,WAChB/N,EAAKK,MAAMqM,gBAGfuB,0BAA4B,SAACC,GACtBA,EAAUlR,UAAYgD,EAAKK,MAAMrD,SAChCgD,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GAAkB+B,EAAKlC,MAAvB,CAA8BgM,QAAQ7L,OAAAK,EAAA,EAAAL,CAAKiQ,EAAUlR,QAAQ8B,OAAO,SAAAiZ,GAAC,OAAkB,IAAdA,EAAEjO,iBAInF0N,UAAY,WACLxX,EAAKlC,MAAMyc,gBAAgB/c,SAAWwC,EAAKK,MAAMrD,QAAQQ,OACxDwC,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,MADZ,CAEIyc,gBAAiB,MAGrBva,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,MADZ,CAEIyc,gBAAgBtc,OAAAK,EAAA,EAAAL,CAAK+B,EAAKK,MAAMrD,eAK5C6K,aAAe,SAAC6P,GACuF,IAAhG1X,EAAKlC,MAAMyc,gBAAgBzb,OAAO,SAAAoV,GAAC,OAAIA,EAAEzM,QAAUiQ,EAAIjQ,OAASyM,EAAElW,OAAS0Z,EAAI1Z,OAAMR,OACpFwC,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,MADZ,CAEIyc,gBAAe,GAAAlc,OAAAJ,OAAAK,EAAA,EAAAL,CAAM+B,EAAKlC,MAAMyc,iBAAjB,CAAkC7C,OAGrD1X,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,MADZ,CAEIyc,gBAAgBtc,OAAAK,EAAA,EAAAL,CAAK+B,EAAKlC,MAAMyc,gBAAgBzb,OAAO,SAAAoV,GAAC,OAAIA,EAAEzM,QAAUiQ,EAAIjQ,eAKxFkF,UAAY,WACR3M,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GAAmB+B,EAAKlC,MAAxB,CAA+B0c,QAAQ,EAAMC,MAAO,YAGxDG,WAAa,WACT5a,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GAAmB+B,EAAKlC,MAAxB,CAA+B0c,QAAQ,EAAMC,MAAO,OAAQ7N,KAAM5M,EAAKlC,MAAMyc,gBAAgB,GAAG3N,KAAM5O,KAAMgC,EAAKlC,MAAMyc,gBAAgB,GAAGvc,KAAMyJ,MAAOzH,EAAKlC,MAAMyc,gBAAgB,GAAG9S,MAAOoF,eAAgB7M,EAAKlC,MAAMyc,gBAAgB,GAAG1N,qBAG9OC,aAAe,WACX9M,EAAKK,MAAMyM,aAAa9M,EAAKlC,MAAMyc,oBAGvCM,OAAS,SAACnD,GACqF,IAAxF1X,EAAKlC,MAAMgM,QAAQhL,OAAO,SAAAoV,GAAC,OAAIA,EAAEzM,QAAUiQ,EAAIjQ,OAASyM,EAAElW,OAAS0Z,EAAI1Z,OAAMR,QAC5EwC,EAAKK,MAAM0M,aAAa2K,EAAI1Z,KAAM0Z,EAAIjQ,OACtCzH,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GAAkB+B,EAAKlC,MAAvB,CAA8BgM,QAAO,GAAAzL,OAAAJ,OAAAK,EAAA,EAAAL,CAAM+B,EAAKlC,MAAMgM,SAAjB,CAA0B4N,SAE/D1X,EAAKK,MAAM2M,cAAc0K,EAAI1Z,KAAM0Z,EAAIjQ,OACvCzH,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GAAkB+B,EAAKlC,MAAvB,CAA8BgM,QAAS9J,EAAKlC,MAAMgM,QAAQhL,OAAO,SAAAqT,GAAC,OAAIA,IAAMuF,WAKpFlB,YAAc,WACc,SAArBxW,EAAKlC,MAAM2c,OACVza,EAAKK,MAAMya,iBAAiB9a,EAAKlC,MAAMyc,iBACvCva,EAAKK,MAAMsM,UAAU3M,EAAKlC,MAAM8O,KAAM5M,EAAKlC,MAAME,KAAMgC,EAAKlC,MAAM2J,MAAOzH,EAAKlC,MAAM+O,gBACpF7M,EAAKK,MAAMkH,aAAavH,EAAKlC,MAAM4c,WAAY1a,EAAKlC,MAAME,KAAMgC,EAAKlC,MAAM2J,SAE3EzH,EAAKK,MAAMsM,UAAU3M,EAAKlC,MAAM8O,KAAM5M,EAAKlC,MAAME,KAAMgC,EAAKlC,MAAM2J,MAAOzH,EAAKlC,MAAM+O,gBACpF7M,EAAKK,MAAMkH,aAAavH,EAAKlC,MAAM4c,WAAY1a,EAAKlC,MAAME,KAAMgC,EAAKlC,MAAM2J,QAI/EzH,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GAAmB+B,EAAKlC,MAAxB,CAA+B0c,QAAQ,EAAOC,MAAO,aAGzD5I,aAAe,SAACM,GACZnS,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GAAmB+B,EAAKlC,MAAxBG,OAAAqB,EAAA,EAAArB,CAAA,GAAgCkU,EAAEH,OAAOC,KAAOE,EAAEH,OAAOrT,YAI7Doc,mBAAqB,SAAA5I,GACjBnS,EAAKC,SAALhC,OAAAC,EAAA,EAAAD,CAAA,GACO+B,EAAKlC,MADZ,CAEI4c,WAAYvI,EAAEH,OAAOgJ,MAAM,GAC3BL,eAAgBxI,EAAEH,OAAOgJ,MAAM,GAAG/I,iFAIjC,IAAA/R,EAAAC,KAACiJ,QAAQC,IAAIlJ,KAAKrC,OAAlB,IAAAsC,EACwBD,KAAKE,MAA1BC,EADHF,EACGE,QAAStD,EADZoD,EACYpD,QAEjB,OACI0D,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAM7B,WAAS,EAACE,UAAU,SAAStD,UAAWN,EAAQ6B,MAClDzB,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,EAACzM,MAAO,CAACsL,UAAW,QAC1BhO,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQhN,MAAM,UAAUQ,QAAQ,YAAYnC,UAAWN,EAAQ2X,QAASvW,QAAS,kBAAMxB,EAAKyM,cAA5F,WACCxM,KAAKrC,MAAMyc,gBAAgB/c,OAAS,EACjCkD,EAAA7B,EAAA8B,cAACsa,GAAA,EAAD,CAASC,MAAM,gFACXxa,EAAA7B,EAAA8B,cAAA,YAAMD,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQhN,MAAM,UAAUQ,QAAQ,YAAYnC,UAAWN,EAAQ2X,QAAS1E,UAAQ,GAAhF,UAEV7S,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQhN,MAAM,UAAUQ,QAAQ,YAAYwQ,SAAgD,IAAtCpT,KAAKrC,MAAMyc,gBAAgB/c,OAAcoD,UAAWN,EAAQ2X,QAASvW,QAAS,kBAAMxB,EAAK0a,eAA/I,SAGRla,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,GACVnP,EAAA7B,EAAA8B,cAACmF,EAAA,EAAD,CAAOlF,UAAWN,EAAQ4X,OACtBxX,EAAA7B,EAAA8B,cAACoF,GAAA,EAAD,KACArF,EAAA7B,EAAA8B,cAACqF,GAAA,EAAD,KACItF,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,CACIvE,QAAS,kBAAMxB,EAAKsX,aACpBpU,MAAO,CAACkD,OAAQ,YAClBtJ,GAAWA,EAAQQ,OAAS,GAC1BkD,EAAA7B,EAAA8B,cAACoT,GAAA,EAAD,CACIC,QAAS7T,KAAKrC,MAAMyc,gBAAgB/c,SAAW2C,KAAKE,MAAMrD,QAAQQ,OAClE+E,MAAM,aAGd7B,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,eACAvF,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,oBACAvF,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,gBACAvF,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,wBACAvF,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,kBAGJvF,EAAA7B,EAAA8B,cAACuF,EAAA,EAAD,KACClJ,GAAWA,EAAQoE,IAAI,SAAAsW,GAAG,OACvBhX,EAAA7B,EAAA8B,cAACqF,GAAA,EAAD,CAAUvE,IAAKiW,EAAI9K,KAAK8K,EAAI1Z,KAAK0Z,EAAIjQ,MACjCrE,MAAO,CAACkD,OAAQ,YAEhB5F,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KACIvF,EAAA7B,EAAA8B,cAACoT,GAAA,EAAD,CACIrS,QAAS,kBAAMxB,EAAK2H,aAAa6P,IACjC1D,QAAyG,IAAhG9T,EAAKpC,MAAMyc,gBAAgBzb,OAAO,SAAAoV,GAAC,OAAIA,EAAEzM,QAAUiQ,EAAIjQ,OAASyM,EAAElW,OAAS0Z,EAAI1Z,OAAMR,OAC9F+E,MAAM,aAGd7B,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KAAayR,EAAI9K,MACjBlM,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KAAayR,EAAI1Z,MACjB0C,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KAAayR,EAAIjQ,OACjB/G,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KAAayR,EAAI7K,gBACjBnM,EAAA7B,EAAA8B,cAACsF,GAAA,EAAD,KAMIvF,EAAA7B,EAAA8B,cAACyW,GAAA,EAAD,CAAQ7U,MAAM,UAAUyR,QAAiG,IAAxF9T,EAAKpC,MAAMgM,QAAQhL,OAAO,SAAAoV,GAAC,OAAIA,EAAEzM,QAAUiQ,EAAIjQ,OAASyM,EAAElW,OAAS0Z,EAAI1Z,OAAMR,OAAckE,QAAS,kBAAMxB,EAAK2a,OAAOnD,YAK9JvX,KAAKE,MAAMrD,QAAQQ,OAAS,GACrCkD,EAAA7B,EAAA8B,cAACkF,EAAA,EAAD,CAAMgK,MAAI,EAACzM,MAAO,CAACsL,UAAW,QAC1BhO,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQhN,MAAM,UAAUQ,QAAQ,YAAYwQ,SAAgD,IAAtCpT,KAAKrC,MAAMyc,gBAAgB/c,OAAcoD,UAAWN,EAAQ2X,QAASvW,QAAS,kBAAMxB,EAAK4M,iBAA/I,YAGJpM,EAAA7B,EAAA8B,cAACwa,GAAA,EAAD,CACIhX,KAAMhE,KAAKrC,MAAM0c,OACjBpW,QAASjE,KAAKqW,YACd4E,kBAAgB,qBAEhB1a,EAAA7B,EAAA8B,cAAC0a,GAAA,EAAD,CAAanI,GAAG,qBAA0C,QAArB/S,KAAKrC,MAAM2c,MAAkB,aAAe,eACjF/Z,EAAA7B,EAAA8B,cAAC2a,GAAA,EAAD,KACI5a,EAAA7B,EAAA8B,cAAC+X,GAAA,EAAD,CAAa3V,QAAQ,WAAWnC,UAAWN,EAAQsY,YAAa2C,WAAS,EAACjM,OAAO,SAC7E5O,EAAA7B,EAAA8B,cAAC6a,GAAA,EAAD,CAAYC,QAAQ,QAApB,UAGA/a,EAAA7B,EAAA8B,cAAC+a,GAAA,EAAD,CACI/c,MAAOwB,KAAKrC,MAAM8O,KAClBwG,SAAUjT,KAAK0R,aACf8J,WAAS,EACTC,MAAOlb,EAAA7B,EAAA8B,cAACkb,GAAA,EAAD,CAAeC,WAAY,GAAI7J,KAAK,OAAOiB,GAAG,UAErDxS,EAAA7B,EAAA8B,cAACuW,GAAA,EAAD,CAAUvY,MAAO,YAAjB,wCACA+B,EAAA7B,EAAA8B,cAACuW,GAAA,EAAD,CAAUvY,MAAO,YAAjB,wCACA+B,EAAA7B,EAAA8B,cAACuW,GAAA,EAAD,CAAUvY,MAAO,YAAjB,wCACA+B,EAAA7B,EAAA8B,cAACuW,GAAA,EAAD,CAAUvY,MAAO,YAAjB,wCACA+B,EAAA7B,EAAA8B,cAACuW,GAAA,EAAD,CAAUvY,MAAO,YAAjB,wCACA+B,EAAA7B,EAAA8B,cAACuW,GAAA,EAAD,CAAUvY,MAAO,YAAjB,wCACA+B,EAAA7B,EAAA8B,cAACuW,GAAA,EAAD,CAAUvY,MAAO,YAAjB,wCACA+B,EAAA7B,EAAA8B,cAACuW,GAAA,EAAD,CAAUvY,MAAO,YAAjB,wCACA+B,EAAA7B,EAAA8B,cAACuW,GAAA,EAAD,CAAUvY,MAAO,cAAjB,cACA+B,EAAA7B,EAAA8B,cAACuW,GAAA,EAAD,CAAUvY,MAAO,UAAjB,mBACA+B,EAAA7B,EAAA8B,cAACuW,GAAA,EAAD,CAAUvY,MAAO,UAAjB,mBACA+B,EAAA7B,EAAA8B,cAACuW,GAAA,EAAD,CAAUvY,MAAO,UAAjB,qBAGR+B,EAAA7B,EAAA8B,cAAC+X,GAAA,EAAD,CAAa3V,QAAQ,WAAWnC,UAAWN,EAAQsY,YAAa2C,WAAS,EAACjM,OAAO,SAC7E5O,EAAA7B,EAAA8B,cAAC6a,GAAA,EAAD,CAAYC,QAAQ,QAApB,eAGA/a,EAAA7B,EAAA8B,cAAC+a,GAAA,EAAD,CACI/c,MAAOwB,KAAKrC,MAAME,KAClBoV,SAAUjT,KAAK0R,aACf8J,WAAS,EACTC,MAAOlb,EAAA7B,EAAA8B,cAACkb,GAAA,EAAD,CAAeC,WAAY,IAAK7J,KAAK,OAAOiB,GAAG,UAEtDxS,EAAA7B,EAAA8B,cAACuW,GAAA,EAAD,CAAUvY,MAAO,QAAjB,eACA+B,EAAA7B,EAAA8B,cAACuW,GAAA,EAAD,CAAUvY,MAAO,QAAjB,eACA+B,EAAA7B,EAAA8B,cAACuW,GAAA,EAAD,CAAUvY,MAAO,SAAjB,gBACA+B,EAAA7B,EAAA8B,cAACuW,GAAA,EAAD,CAAUvY,MAAO,QAAjB,iBAGR+B,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACIuI,WAAS,EACTrI,GAAG,QACHjB,KAAK,QACL1O,MAAM,UACN5E,MAAOwB,KAAKrC,MAAM2J,MAClB2L,SAAUjT,KAAK0R,aACfvC,OAAO,QACPvM,QAAQ,aAEZrC,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACIuI,WAAS,EACTrI,GAAG,iBACHjB,KAAK,iBACL1O,MAAM,iBACN5E,MAAOwB,KAAKrC,MAAM+O,eAClBuG,SAAUjT,KAAK0R,aACfvC,OAAO,QACPvM,QAAQ,aAEZrC,EAAA7B,EAAA8B,cAAA,OAAKyC,MAAO,CAAC4B,QAAS,OAAQ2I,WAAY,aAC1CjN,EAAA7B,EAAA8B,cAACqS,GAAA,EAAD,CACIE,GAAG,aACH3P,MAAM,cACNoQ,WAAW,4BACX1B,KAAK,aACLtT,MAAOwB,KAAKrC,MAAM6c,eAClBrL,OAAO,QACPvM,QAAQ,WACRwY,WAAS,IAEb7a,EAAA7B,EAAA8B,cAAA,SACIob,OAAO,IACP3Y,MAAO,CAAE4B,QAAS,QAClBkO,GAAG,wBACHlV,KAAK,OACLoV,SAAUjT,KAAK4a,qBAEnBra,EAAA7B,EAAA8B,cAAA,SAAO8a,QAAQ,yBACX/a,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQxM,QAAQ,YAAYR,MAAM,UAAUoW,UAAU,OAAOvV,MAAO,CAACkM,OAAQ,IAA7E,aAMR5O,EAAA7B,EAAA8B,cAACqb,GAAA,EAAD,KACItb,EAAA7B,EAAA8B,cAAC4O,EAAA,EAAD,CAAQxM,QAAQ,YAAYrB,QAASvB,KAAKqW,YAAajU,MAAM,WACnC,QAArBpC,KAAKrC,MAAM2c,MAAkB,aAAe,kBAvQnDhW,IAAMC,WA0R5B,IAoGMuX,GAAmBrX,YA5GzB,SAAyB9G,GAGrB,MAAO,CACHd,QAHgBc,EAAMD,IAAlBb,UAOe,SAAC8H,GAAD,MAAe,CACtC4H,WAAY,WACR5H,EAAS,CAAC9G,KAAM,wBAChBwI,GAAWkG,aACNrF,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,sBAAuBG,UACxC,SAAAmP,GACCxI,EAAS,CAAC9G,KAAM,2BAG5B2O,UAAW,SAACC,EAAM5O,EAAMyJ,EAAOoF,GAC3B/H,EAAS,CAAC9G,KAAM,uBAChBwI,GAAWmG,UAAUC,EAAM5O,EAAMyJ,EAAOoF,GACnCxF,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,wBAChB8G,EAAS,CAAC9G,KAAM,wBAChBwI,GAAWkG,aACNrF,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,sBAAuBG,UACxC,SAAAmP,GACCxI,EAAS,CAAC9G,KAAM,2BAEzB,SAAAsP,GACCxI,EAAS,CAAC9G,KAAM,2BAG5B8O,aAAc,SAACyN,GACXA,EAAgBnZ,IAAI,SAAA2W,GAChBjT,EAAS,CAAC9G,KAAM,0BAChBwI,GAAWsG,aAAaiL,EAAEtQ,MAAOsQ,EAAE/Z,MAC9BqJ,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,0BAChB8G,EAAS,CAAC9G,KAAM,wBAChBwI,GAAWkG,aACNrF,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,sBAAuBG,UACxC,SAAAmP,GACCxI,EAAS,CAAC9G,KAAM,2BAEzB,SAAAsP,GACCxI,EAAS,CAAC9G,KAAM,+BAKhC8c,iBAAkB,SAACP,GACfA,EAAgBnZ,IAAI,SAAA2W,GAChBjT,EAAS,CAAC9G,KAAM,0BAChBwI,GAAWsG,aAAaiL,EAAEtQ,MAAOsQ,EAAE/Z,MAC9BqJ,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,2BACjB,SAAAsP,GACCxI,EAAS,CAAC9G,KAAM,+BAIhC+O,aAAc,SAAC/O,EAAMyJ,GACjB3C,EAAS,CAAC9G,KAAM,0BAChBwI,GAAWuG,aAAa/O,EAAMyJ,GACzBJ,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,0BAChB8G,EAAS,CAAC9G,KAAM,wBAChBwI,GAAWkG,aACNrF,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,sBAAuBG,UACxC,SAAAmP,GACCxI,EAAS,CAAC9G,KAAM,2BAEzB,SAAAsP,GACCxI,EAAS,CAAC9G,KAAM,6BAG5BgP,cAAe,SAAChP,EAAMyJ,GAClB3C,EAAS,CAAC9G,KAAM,2BAChBwI,GAAWwG,cAAchP,EAAMyJ,GAC1BJ,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,2BAChB8G,EAAS,CAAC9G,KAAM,wBAChBwI,GAAWkG,aACNrF,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,sBAAuBG,UACxC,SAAAmP,GACCxI,EAAS,CAAC9G,KAAM,2BAEzB,SAAAsP,GACCxI,EAAS,CAAC9G,KAAM,8BAG5BuJ,aAAc,SAACC,EAAMxJ,EAAMyJ,GACvB3C,EAAS,CAAC9G,KAAM,+BAChBwI,GAAWe,aAAaC,EAAMxJ,EAAMyJ,GAC/BJ,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,gCACjB,SAAAsP,GACCxI,EAAS,CAAC9G,KAAM,oCAMP4G,CAA6CG,YAhZvD,SAAAxE,GAAK,MAAK,CACrB4B,KAAM,CACJnB,MAAO,OACPD,OAAQ,OACRqX,UAAW,OACX9U,gBAAiB,SAEnB4U,MAAO,CACLrB,SAAU,KAEZoB,QAAS,CACLI,aAAc,GACdjT,YAAa,GACbqJ,UAAW,MAmYmD1J,CAAmBuV,gMC/YnF4B,GAAc,CAClBlH,QAASmH,KACTC,QAASC,KACT/O,MAAOgP,KACPC,KAAMC,MA2DD,IAAMC,GAAyB1X,YAxDtB,SAAAxE,GAAK,MAAK,CACxByU,QAAS,CACP1R,gBAAiBqS,KAAM,MAEzBrI,MAAO,CACLhK,gBAAiB/C,EAAMgV,QAAQjI,MAAMoP,MAEvCH,KAAM,CACJjZ,gBAAiB/C,EAAMgV,QAAQrT,QAAQwa,MAEzCN,QAAS,CACP9Y,gBAAiBqZ,KAAM,MAEzBzZ,KAAM,CACJyR,SAAU,IAEZiI,YAAa,CACXC,QAAS,GACTzX,YAAa7E,EAAMiF,QAAQ,IAE7BhH,QAAS,CACPwG,QAAS,OACT2I,WAAY,YAkCsB5I,CA9BtC,SAA2B1E,GAAO,IACxBC,EAA4DD,EAA5DC,QAASM,EAAmDP,EAAnDO,UAAWpC,EAAwC6B,EAAxC7B,QAAS4F,EAA+B/D,EAA/B+D,QAASrB,EAAsB1C,EAAtB0C,QAAY+Z,EAD1B7e,OAAA8e,GAAA,EAAA9e,CACoCoC,EADpC,uDAE1B2c,EAAOd,GAAYnZ,GAEzB,OACErC,EAAA7B,EAAA8B,cAACsc,GAAA,EAADhf,OAAAif,OAAA,CACEtc,UAAW,CAACN,EAAQyC,GAAUnC,GAC9Buc,mBAAiB,kBACjB3e,QACEkC,EAAA7B,EAAA8B,cAAA,QAAMuS,GAAG,kBAAkBtS,UAAWN,EAAQ9B,SAC5CkC,EAAA7B,EAAA8B,cAACqc,EAAD,CAAMpc,UAAW,CAACN,EAAQ4C,KAAM5C,EAAQsc,eACvCpe,GAGLT,OAAQ,CACN2C,EAAA7B,EAAA8B,cAAC+B,EAAA,EAAD,CACEjB,IAAI,QACJkB,aAAW,QACXJ,MAAM,UACN3B,UAAWN,EAAQ8c,MACnB1b,QAAS0C,GAET1D,EAAA7B,EAAA8B,cAAC0c,GAAAxe,EAAD,CAAW+B,UAAWN,EAAQ4C,UAG9B4Z,2BC9CJ1N,GAAe,kBAAM1O,EAAA7B,EAAA8B,cAAA,OAAKyC,MAAO,CAACrC,OAAQ,OAAQC,MAAO,OAAQgE,QAAS,OAAQ2I,WAAY,SAAUC,eAAgB,SAAUtK,gBAAiB,UAAWf,MAAO,UAAhJ,oBAErB+a,8MACFC,MAAQ,KACRzP,MAAQ,OAERhQ,MAAQ,CACJqG,MAAM,EACNrI,MAAO,QAGXiS,kBAAoB,WAChB/N,EAAKK,MAAMmd,OACX,IAAMC,EAAKC,KAAc,UAAArf,OAAW4O,OAAOC,SAASC,SAA3B,UACzBsQ,EAAGE,GAAG,UAAW,WACbvU,QAAQC,IAAI,eAEhBoU,EAAGE,GAAG,gBAAiB,SAAAjW,GACnB,IAAMvJ,EAAO6I,KAAK4W,MAAMlW,GACxB1H,EAAKK,MAAMwd,SAAS,gBAAiB1f,KAEzCsf,EAAGE,GAAG,eAAgB,SAAAjW,GAClB,IAAMvJ,EAAO6I,KAAK4W,MAAMlW,GACxB1H,EAAKK,MAAMwd,SAAS,eAAgB1f,KAExCsf,EAAGE,GAAG,sBAAuB,SAAAjW,GACzB,IAAMvJ,EAAO6I,KAAK4W,MAAMlW,GACxB1H,EAAKK,MAAMwd,SAAS,sBAAuB1f,KAE/Csf,EAAGE,GAAG,oBAAqB,SAAAjW,GACvB,IAAMvJ,EAAO6I,KAAK4W,MAAMlW,GACxB1H,EAAKK,MAAMwd,SAAS,oBAAqB1f,KAE7Csf,EAAGE,GAAG,OAAQ,SAAAjW,GACV,IAAMvJ,EAAO6I,KAAK4W,MAAMlW,GACxB1H,EAAKK,MAAMwd,SAAS,OAAQ1f,QAIpC8P,0BAA4B,SAACC,GACF,OAApBA,EAAUpS,OAAmBoS,EAAUpS,QAAUkE,EAAKK,MAAMvE,QAC3DkE,EAAKud,MAAM7f,KAAKwQ,EAAUpS,OAEtBkE,EAAKlC,MAAMqG,KACXnE,EAAKC,SAAS,CAAEkE,MAAM,IAEtBnE,EAAK8d,mBAKjBA,aAAe,WACP9d,EAAKud,MAAM/f,OAAS,GACpBwC,EAAKC,SAAS,CACVnE,MAAOkE,EAAKud,MAAMQ,QAClB5Z,MAAM,OAKlBqS,YAAc,SAAC1E,EAAOkM,GACH,cAAXA,GAGJhe,EAAKC,SAAS,CAAEkE,MAAM,OAG1B8Z,aAAe,WACXje,EAAK8d,wFAGA,IACExd,EAAWH,KAAKE,MAAhBC,QACP,OACQI,EAAA7B,EAAA8B,cAAA,OAAKC,UAAWN,EAAQ6B,MACpBzB,EAAA7B,EAAA8B,cAACgE,EAAD,KAE+B,cAA3BxE,KAAKE,MAAM9E,YAA8BmF,EAAA7B,EAAA8B,cAACsP,GAAD,MACd,mBAA3B9P,KAAKE,MAAM9E,YAAmCmF,EAAA7B,EAAA8B,cAAC0Y,GAAD,MACnB,oBAA3BlZ,KAAKE,MAAM9E,YAAoCmF,EAAA7B,EAAA8B,cAACwZ,GAAD,MACpB,YAA3Bha,KAAKE,MAAM9E,YAA4BmF,EAAA7B,EAAA8B,cAACsb,GAAD,MACZ,UAA3B9b,KAAKE,MAAM9E,YAA0BmF,EAAA7B,EAAA8B,cAACud,GAAA,MAAD,MAAYxd,EAAA7B,EAAA8B,cAACwd,GAAD,OAGrDzd,EAAA7B,EAAA8B,cAACyd,GAAA,EAAD,CACIC,aAAc,CACVC,SAAU,MACVC,WAAY,UAEhBpa,KAAMhE,KAAKrC,MAAMqG,KAEjBC,QAASjE,KAAKqW,YACdgI,SAAUre,KAAK8d,aACf3d,QAAS,CAACme,sBAAuBne,EAAQoe,YAEzChe,EAAA7B,EAAA8B,cAAC8b,GAAD,CACIrY,QAASjE,KAAKqW,YACdzT,QAA8B,OAArB5C,KAAKrC,MAAMhC,MAAiB,OAASqE,KAAKrC,MAAMhC,MAAMkC,KAC/DQ,QAA8B,OAArB2B,KAAKrC,MAAMhC,MAAiB,GAAKqE,KAAKrC,MAAMhC,MAAM0C,mBAhGrEiG,IAAMC,WAqIxB,IA6CMia,GAAe/Z,YAvDrB,SAAyB9G,GAAO,IAAA+G,EACa/G,EAAMD,IAE/C,MAAO,CACHtC,YAJwBsJ,EACpBtJ,YAIJO,MALwB+I,EACP/I,MAKjBJ,SANwBmJ,EACAnJ,WASL,SAACoJ,GAAD,MAAe,CACtC0Y,KAAM,WACF1Y,EAAS,CAAC9G,KAAM,mCAChBwI,GAAWsC,uBACNzB,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,iCAAkCG,UACnD,SAAAmP,GACCxI,EAAS,CAAC9G,KAAM,iCAAkCsP,YAG1DxI,EAAS,CAAC9G,KAAM,yBAChBwI,GAAWoE,cACNvD,KAAK,SAAAlJ,GACmB,OAAlBA,EAAKzC,WACJoJ,EAAS,CAAC9G,KAAM,yBAChBwI,GAAW0D,YAAYzK,EAAMmf,WAAW/gB,IAAInC,UACvC2L,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,0BACjB,SAAAsP,GACCxI,EAAS,CAAC9G,KAAM,4BAG5B8G,EAAS,CAAC9G,KAAM,uBAAwBG,UACzC,SAAAmP,GACCxI,EAAS,CAAC9G,KAAM,uBAAwBsP,aAGpDzC,QAAS,WACL/F,EAAS,CAAC9G,KAAM,qBAChBwI,GAAWqE,UACNxD,KAAK,SAAAlJ,GACF2G,EAAS,CAAC9G,KAAM,mBAAoBG,UACrC,SAAAmP,GACCxI,EAAS,CAAC9G,KAAM,mBAAoBsP,aAGhDuR,WAAa,WACT/Z,EAAS,CAAC9G,KAAM,iBAEpB6f,SAAU,SAACiB,EAAO3gB,GACd2G,EAAS,CAAC9G,KAAM8gB,EAAO3gB,YAKVyG,CAA6CG,YA7LnD,SAAAxE,GAAK,MAAK,CACrB4B,KAAM,CACFpB,OAAQ,QAEZ2d,UAAW,CACPK,IAAK,MAwLqDha,CAAmBuY,KCpL7E/c,WAAQye,YAAe,CAC3BzJ,QAAS,CACPrT,QAAS,CACP+c,KAAM,UACNvC,KAAM,UACNwC,aAAc,WAEhBC,UAAW,CACTF,KAAM,UACNC,aAAc,eAoBtBE,iBACI1e,EAAA7B,EAAA8B,cAAC0e,EAAA,EAAD,CAAkB9e,MAAOA,IACrBG,EAAA7B,EAAA8B,cAAC2e,EAAA,EAAD,CAAU7f,MAAOA,GACbiB,EAAA7B,EAAA8B,cAACge,GAAD,QAGRY,SAASC,eAAe","file":"static/js/main.b2354005.chunk.js","sourcesContent":["const initialState = {\r\n    currentPage: '',\r\n    currentTab: 0,\r\n    currentEditTab: 0,\r\n    timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n    alert: null,\r\n    time: Date.now(),\r\n    commissioningData: null,\r\n    fetchingCommissioningData: false,\r\n    currentTracker: null,\r\n    currentTrackerInfo: null,\r\n    xbeeResponse: [],\r\n    controlledTrackers: [],\r\n    editedTrackers: [],\r\n    SPAParameters: null,\r\n    stowAngles: null,\r\n    sendingSPAParameters: false,\r\n    sendingStowAngles: false,\r\n    gettingSPAParameters: false,\r\n    gettingStowAngles: false,\r\n    addingTrackers: false,\r\n    sensors: [],\r\n    responseQueue: [],\r\n    listen: false\r\n}\r\n\r\nconst difference = (a1, a2) => {\r\n    var result = [];\r\n    for (var i = 0; i < a1.length; i++) {\r\n    if (a2.indexOf(a1[i]) === -1) {\r\n        result.push(a1[i]);\r\n    }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function app(state, action) {\r\n    if (typeof state === 'undefined') {\r\n      return initialState\r\n    }\r\n    switch (action.type) {\r\n        case 'time':\r\n        return {\r\n            ...state,\r\n            time: action.json.time\r\n        }\r\n\r\n        case 'SET_CURRENT_TRACKER':\r\n        return {\r\n            ...state,\r\n            currentTracker: action.trackerID\r\n        }\r\n\r\n        case 'SET_RESPONSE_LISTENER':\r\n        return {\r\n            ...state,\r\n            listen: true\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: true,\r\n            responseQueue: []\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_REQUEST':\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: true,\r\n            responseQueue: []\r\n        }\r\n\r\n        case 'ui/rover/response':\r\n        if(state.listen) {\r\n            if(state.editedTrackers.length === state.responseQueue.length + 1) {\r\n                return {\r\n                    ...state,\r\n                    responseQueue: [...state.responseQueue, action.json],\r\n                    listen: false\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                responseQueue: [...state.responseQueue, action.json]\r\n            }\r\n        }\r\n        \r\n\r\n        case 'GET_SENSORS_SUCCESS':\r\n        return {\r\n            ...state,\r\n            sensors: action.json.Result\r\n        }\r\n\r\n        case 'REMOVE_SENSOR_SUCCESS':\r\n        return {\r\n            ...state,\r\n            alert: {\r\n                type: 'success',\r\n                message: 'Removed Sensor Successfully'\r\n            }\r\n        }\r\n\r\n        case 'ADD_SENSORS_SUCCESS':\r\n        return {\r\n            ...state,\r\n            alert: {\r\n                type: 'success',\r\n                message: 'Added Sensor Successfully'\r\n            }\r\n        }\r\n        \r\n        case 'CHANGE_PAGE':\r\n        return {\r\n            ...state,\r\n            currentPage: action.page,\r\n            responseQueue: [],\r\n            commandQueue: []\r\n        }\r\n\r\n        case 'CHANGE_TAB':\r\n        return {\r\n            ...state,\r\n            currentTab: action.value.value,\r\n            responseQueue: [],\r\n            commandQueue: []\r\n        }\r\n\r\n        \r\n        case 'CHANGE_EDIT_TAB':\r\n        return {\r\n            ...state,\r\n            currentEditTab: action.value.value,\r\n            responseQueue: [],\r\n            commandQueue: []\r\n        }\r\n\r\n        case 'CLEAR_ALERT':\r\n        return {\r\n            ...state,\r\n            alert: null           \r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_REQUEST':\r\n        return {\r\n            ...state,\r\n            fetchingCommissioningData: true\r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_SUCCESS':\r\n        if(action.json.staticData === null || action.json.staticData.length === 0) {\r\n            return {\r\n                ...state,\r\n                fetchingCommissioningData: false,\r\n                currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,\r\n                commissioningData: null,\r\n                alert: {\r\n                    type: 'warning',\r\n                    message: 'Please add trackers'\r\n                }\r\n            }\r\n        } else {\r\n            return {\r\n                ...state,\r\n                fetchingCommissioningData: false,\r\n                currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,\r\n                commissioningData: action.json.staticData,\r\n                currentTracker: action.json.staticData[0].trackerID\r\n            }\r\n        }\r\n\r\n        case 'GET_COMMISSIONING_DATA_FAILURE':\r\n        return {\r\n            ...state,\r\n            fetchingCommissioningData: false,\r\n            currentPage: state.currentPage === '' ? 'Dashboard' : state.currentPage,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error loading commissioning data'\r\n            }\r\n        }\r\n\r\n        case 'GET_TIMEZONE_SUCCESS':\r\n        if(action.json.timeZone !== null) {\r\n            return {\r\n                ...state,\r\n                timeZone: action.json.timeZone\r\n            }\r\n        } else {\r\n            return state\r\n        }\r\n\r\n        case 'GET_TIMEZONE_FAILURE':\r\n        return {\r\n            ...state,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting timezone'\r\n            }\r\n        }\r\n\r\n        case 'SCAN':\r\n        return {\r\n            ...state,\r\n            currentPage: 'Row Controller',\r\n            currentTab: 1\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_REQUEST':\r\n        return {\r\n            ...state\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_SUCCESS':\r\n        return {\r\n            ...state,\r\n            currentTrackerInfo: action.json\r\n        }\r\n\r\n        case 'GET_CURRENT_TRACKER_INFO_FAILURE':\r\n        return {\r\n            ...state,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting current tracker info'\r\n            }\r\n        }\r\n\r\n        case 'DISCOVER_SUCCESS':\r\n        return {\r\n            ...state,\r\n            xbeeResponse: [],\r\n            alert: {\r\n                type: 'success',\r\n                message: 'Started Scanning'\r\n            }\r\n        }\r\n\r\n        case 'DISCOVER_FAILURE':\r\n        return {\r\n            ...state,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error starting scan'\r\n            }\r\n        }\r\n\r\n        case 'ui/rover/scan':\r\n        let a = null\r\n        if(state.commissioningData === null) {\r\n            a = [...state.xbeeResponse, action.json]\r\n        } else {\r\n            let b = state.commissioningData.filter(r => action.json.DID === r.deviceID)\r\n            if(b.length === 0) {\r\n                a = [...state.xbeeResponse, action.json]\r\n            } else {\r\n                a = [...state.xbeeResponse]\r\n            }\r\n                \r\n        }\r\n        return {\r\n            ...state,\r\n            xbeeResponse: a\r\n        }\r\n\r\n        case 'ADD_TRACKERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            addingTrackers: true\r\n        }\r\n\r\n        case 'ADD_TRACKERS_SUCCESS':\r\n        const newXbeeResponse = difference(state.xbeeResponse, action.devices)\r\n        return {\r\n            ...state,\r\n            xbeeResponse: newXbeeResponse,\r\n            addingTrackers: false,\r\n            alert: {\r\n                type: 'success',\r\n                message: 'Tracker(s) added'\r\n            }\r\n        }\r\n\r\n        case 'ADD_TRACKERS_FAILURE':\r\n        return {\r\n            ...state,\r\n            addingTrackers: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error adding trackers'\r\n            }\r\n        }\r\n\r\n        case 'SET_EDITED_TRACKERS':\r\n        return {\r\n            ...state,\r\n            editedTrackers: action.trackers\r\n        }\r\n\r\n        case 'SET_CONTROLLED_TRACKERS':\r\n        return {\r\n            ...state,\r\n            controlledTrackers: action.trackers\r\n        }\r\n\r\n        case 'ui/rover/spa':\r\n        let DID = action.json.DID\r\n        let newSPAParameters = {...state.SPAParameters, [DID]: action.json}\r\n        return {\r\n            ...state,\r\n            SPAParameters: newSPAParameters,\r\n            gettingSPAParameters: false\r\n        }\r\n\r\n        case 'ui/rover/stowangles':\r\n        return {\r\n            ...state,\r\n            stowAngles: action.json,\r\n            gettingStowAngles: false\r\n        }\r\n\r\n        case 'GET_STOW_ANGLES_REQUEST':\r\n        return {\r\n            ...state,\r\n            gettingStowAngles: true\r\n        }\r\n\r\n        case 'GET_STOW_ANGLES_FAILURE':\r\n        return {\r\n            ...state,\r\n            gettingStowAngles: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting stow angles'\r\n            }\r\n        }\r\n\r\n        case 'GET_SPA_PARAMETERS_REQUEST':\r\n        return {\r\n            ...state,\r\n            gettingSPAParameters: true\r\n        }\r\n\r\n        case 'GET_SPA_PARAMETERS_FAILURE':\r\n        return {\r\n            ...state,\r\n            gettingSPAParameters: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error getting SPA parameters'\r\n            }\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_FAILURE':\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error setting SPA parameters'\r\n            }\r\n        }\r\n\r\n        case 'SEND_SPA_PARAMETERS_SUCCESS':\r\n        return {\r\n            ...state,\r\n            sendingSPAParameters: false\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_FAILURE':\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: false,\r\n            alert: {\r\n                type: 'error',\r\n                message: 'Error setting stow angles'\r\n            }\r\n        }\r\n\r\n        case 'SEND_STOW_ANGLES_SUCCESS':\r\n        return {\r\n            ...state,\r\n            sendingStowAngles: false\r\n        }\r\n\r\n        default:\r\n        return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport { app } from '../App/app.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  app\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n        loggerMiddleware        \r\n    )\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport Time from '@material-ui/icons/AccessTime';\r\nimport { Chip } from '@material-ui/core';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100%'\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('md')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    marginLeft: drawerWidth,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: 20,\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    paddingTop: 88\r\n  },\r\n  selected: {\r\n    backgroundColor: '#54AAB3 !important',\r\n    color: '#ffffff !important'\r\n  }\r\n});\r\n\r\nclass ResponsiveDrawer extends React.Component {\r\n  state = {\r\n    mobileOpen: false,\r\n  };\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme, children } = this.props;\r\n\r\n    const drawer = (\r\n      <div>\r\n        <div className={classes.toolbar} >\r\n            <img src='img/Voyager logo - large- no bg.png' height='60px' width='70%' alt=''></img>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Dashboard', 'Row Controller', 'Zone Controller', 'Sensors', 'About'].map((text, index) => (\r\n            <ListItem \r\n                button \r\n                key={text}\r\n                onClick={() => this.props.changePage(text)}\r\n                selected={this.props.currentPage === text}\r\n                classes={{selected: classes.selected}}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText disableTypography primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" color='primary' className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h5\" color=\"inherit\" noWrap>\r\n              Voyager Zone Controller\r\n            </Typography>\r\n            <Chip\r\n              icon={<Time />}\r\n              style={{marginLeft: 'auto', backgroundColor: 'white'}}\r\n              label={`${new Date(new Date(Number(this.props.time)).toLocaleString('en-US', {timeZone:  this.props.timeZone})).getHours()} : ${new Date(new Date(Number(this.props.time)).toLocaleString('en-US', {timeZone:  this.props.timeZone})).getMinutes()}`}\r\n            />\r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav className={classes.drawer}>\r\n          <Hidden mdUp implementation=\"css\">\r\n            <Drawer\r\n              container={this.props.container}\r\n              variant=\"temporary\"\r\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n              open={this.state.mobileOpen}\r\n              onClose={this.handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden smDown implementation=\"css\">\r\n            <Drawer\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n        </nav>\r\n        <main className={classes.content}>\r\n          {children}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\n \r\nfunction mapStateToProps(state) {\r\n    const { currentPage, time, timeZone } = state.app;\r\n    \r\n    return {\r\n        currentPage,\r\n        time,\r\n        timeZone\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changePage: (page) => {\r\n      dispatch({type: 'CHANGE_PAGE', page})\r\n    }\r\n})\r\n  \r\nconst connectedNavBar = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ResponsiveDrawer));\r\nexport { connectedNavBar as NavBar }","import React, {Fragment} from 'react'\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { connect } from 'react-redux'\r\nimport {withStyles} from '@material-ui/core/styles'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%', width: '100%', padding: 24\r\n    },\r\n    selected: {\r\n        backgroundColor: '#54aab3 !important',\r\n        color: 'white'\r\n    }\r\n})\r\n\r\nclass TrackerList extends React.Component {\r\n\r\n    render() {\r\n        const {classes, commissioningData, currentTracker} = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Typography variant='h5'>\r\n                        Tracker List\r\n                    </Typography>\r\n                    <Table>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell >TrackerID</TableCell>\r\n                            <TableCell >Status</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {commissioningData && commissioningData.map(n => {\r\n                                return (\r\n                                <TableRow\r\n                                    hover\r\n                                    //className={[n.trackerID === currentTracker ? classes.selected : classes.row, classes.tableRow]}\r\n                                    key={n.trackerID}\r\n                                    onClick={() => this.props.setCurrentTracker(n.trackerID)}\r\n                                    style={{cursor: 'pointer'}}\r\n                                    selected={n.trackerID === currentTracker}\r\n                                    classes={{selected: classes.selected}}\r\n                                >\r\n                                    <TableCell>\r\n                                        {n.trackerID}\r\n                                    </TableCell>\r\n                                    <TableCell>Reachable</TableCell>\r\n                                </TableRow>\r\n                                );\r\n                            })}\r\n                            </TableBody>\r\n                        </Table>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData, currentTracker } = state.app\r\n\r\n    return {\r\n        commissioningData,\r\n        currentTracker\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCurrentTracker: (trackerID) => {\r\n        dispatch({type: 'SET_CURRENT_TRACKER', trackerID})\r\n    }\r\n})\r\n\r\n\r\nconst connectedTrackerList = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TrackerList))\r\nexport {connectedTrackerList as TrackerList}","export const appService = {\r\n    setWifiInfo,\r\n    uploadDriver,\r\n    selectSensor,\r\n    uploadKey,\r\n    setWindAddress,\r\n    getWindAddress,\r\n    caliberate,\r\n    sendCommand,\r\n    sendStow,\r\n    getCommissioningData,\r\n    getCurrentTrackerInfo,\r\n    triggerDiscovery,\r\n    setPanID,\r\n    threshold,\r\n    heartBeat,\r\n    setTimeZone,\r\n    getHeartBeat,\r\n    getThreshold,\r\n    getPanID,\r\n    getFrequency,\r\n    setFrequency,\r\n    getTimeZone,\r\n    getTime,\r\n    discover,\r\n    addTrackers,\r\n    removeTrackers,\r\n    sendSPAParameters,\r\n    sendStowAngles,\r\n    getSPAParameters,\r\n    getStowAngles,\r\n    getSensors,\r\n    addSensor,\r\n    removeSensor,\r\n    enableSensor,\r\n    disableSensor\r\n};\r\n/*const hostName = 'http://159.89.169.50:4000'; */\r\nconst hostName = `http://${window.location.hostname}:5000`;\r\n\r\nconst hostName2 = `http://${window.location.hostname}:5001`; \r\n\r\nfunction disableSensor(type, model) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            type: type, \r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/disable`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction enableSensor(type, model) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            type: type, \r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/enable`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction removeSensor(model, type) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            type: type, \r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/remove`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction addSensor(port, type, model, samplingPeriod) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            port: port, \r\n            type: type, \r\n            samplingPeriod: samplingPeriod,\r\n            model: model\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/setParams`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getSensors() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        body: null\r\n    }\r\n\r\n    return fetch(`${hostName}/sensors/getParams`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getStowAngles(DID) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: 'QSTO'\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/get`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getSPAParameters(DID) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: \"QSPA\"\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/get`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction sendStowAngles(DID, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: 'HSTO',\r\n            VALUES: `${WindStowAngle}, ${SnowStowAngle}, ${CleanStowAngle}, ${NightStowAngle}, ${EmergencyStowAngle}`\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/set`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction sendSPAParameters(DID, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backtracking) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: DID,\r\n            CMD: \"HSPA\",\r\n            VALUES: `${Lattitude}, ${Longitude}, ${Altitude}, ${EastLimit}, ${WestLimit}, ${TrackerWidth}, ${Pitch}, ${TrackingAccuracy}, ${AzimuthDeviation}, ${AltitudeTrackeronEast}, ${AltitudeTrackeronWest}, ${StartTimeLead}, ${EndTimeLag}, 0, ${backtracking}`\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/rover/params/set`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction removeTrackers(DIDs) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DIDs: DIDs\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/removePairedDevices`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction addTrackers(devices) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            devices: devices\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/addDiscoveredDevices`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction discover(did) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            DID: did\r\n        })\r\n    }\r\n\r\n    return fetch(`${hostName}/scan`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction handleResponse(response) {\r\n    return response.json().then(json => {\r\n        if (!response.ok) {\r\n            const error = (json && json.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return json;\r\n    });\r\n}\r\n\r\n\r\nfunction setWifiInfo(ssid, pass) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"ssid\": ssid,\r\n            \"password\": pass\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/setWifiInfo`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction uploadDriver(file, type, model) {\r\n    var data = new FormData()\r\n    data.append('file', file)\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: data\r\n    };\r\n\r\n    return fetch(`${hostName}/sensors/addDriver?type=${type}&model=${model}`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction uploadKey(file) {\r\n    var data = new FormData()\r\n    data.append('file', file)\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: data\r\n    };\r\n\r\n    return fetch(`${hostName}/loadBigQueryKey`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction selectSensor(windSensor, rainSensor, floodSensor, snowSensor) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"windSensor\": windSensor,\r\n            \"rainSensor\": rainSensor,\r\n            \"floodSensor\": floodSensor,\r\n            \"snowSensor\": snowSensor,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/sensors`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setWindAddress(address) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"deviceAddress\": address,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/windSensorSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getWindAddress() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/windSensorSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction caliberate(sensor) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"sensor\": sensor,\r\n        })\r\n    };\r\n\r\n\r\n    return fetch(`${hostName}/calibrateSensor`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n//control\r\n\r\nfunction sendCommand(deviceID, value) {\r\n\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"DID\": deviceID,\r\n            \"CMD\": \"HMNM\",\r\n            \"VALUES\": value\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/rover/control`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction sendStow(deviceID, mode) {\r\n\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"DID\": deviceID,\r\n            \"CMD\": \"HMOD\",\r\n            \"MODE\": mode\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/rover/control`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n//dashboard\r\n\r\n\r\nfunction getCommissioningData() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/getCommissioningData`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getCurrentTrackerInfo(trackerID) {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/getCurrentTrackerInfo?id=${trackerID}`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction triggerDiscovery() {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"CMD\": \"HINF\",\r\n            \"DID\": \"00000\",\r\n        })\r\n    };\r\n\r\n    return fetch(`http://${hostName2}/sendCommand`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\n//settings\r\n\r\nfunction setPanID(panID) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"panID\": panID\r\n        })\r\n    };\r\n\r\n    console.log(panID);\r\n\r\n    return fetch(`http://${hostName2}/settings/xbeePanID `, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction threshold(maxWindSpeed, maxRainFall, meanWindSpeed, windSpeedTimer, maxFloodLevel, maxSnowFall) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"maxWindSpeed\": maxWindSpeed,\r\n            \"maxRainFall\": maxRainFall,\r\n            \"meanWindSpeed\": meanWindSpeed,\r\n            \"windSpeedTimer\": windSpeedTimer,\r\n            \"maxFloodLevel\": maxFloodLevel,\r\n            \"maxSnowFall\": maxSnowFall,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/threshold`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setFrequency(power, status) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"powerRequestTimePeriod\": power,\r\n            \"statusRequestTimePeriod\": status,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/requestFrequency`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\n\r\nfunction heartBeat(enabled, hbinterval, maxMsgs) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"enabled\": enabled,\r\n            \"interval\": hbinterval,\r\n            \"maxMsgs\": maxMsgs,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/heartBeatSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction setTimeZone(time) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        body: JSON.stringify({\r\n            \"timeZone\": time,\r\n        })\r\n    };\r\n\r\n    return fetch(`${hostName}/set/timeZone`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getTimeZone() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/timeZone`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getTime() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/time`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getThreshold() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/threshold`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getFrequency() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/requestFrequency`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getHeartBeat() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`${hostName}/get/heartBeatSettings`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getPanID() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        body: null\r\n    };\r\n\r\n    return fetch(`http://${hostName2}/gettings/xbeePanID`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n","import React from 'react'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { connect } from 'react-redux'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%', width: '100%', padding: 24, flexWrap: 'nowrap'\r\n    }\r\n})\r\n\r\nconst NoCurrentTrackerInfo = () =>\r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            No Info Found For Selected Tracker.\r\n    </div>\r\n\r\nclass TrackerDetails extends React.Component {\r\n\r\n    timer = null\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.refresh()\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.currentTracker !== this.props.currentTracker) {\r\n            this.props.getCurrentTrackerInfo(nextProps.currentTracker)\r\n        }\r\n    }\r\n\r\n    refresh = (c = true) => {\r\n        this.props.getCurrentTrackerInfo(this.props.currentTracker)\r\n\r\n        if(c) {\r\n            this.timer = setTimeout(this.refresh, 30000)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes, currentTrackerInfo } = this.props\r\n\r\n        return (currentTrackerInfo === null ? <NoCurrentTrackerInfo /> :\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Typography variant='h5' style={{height: '48px'}}>\r\n                        Tracker Details\r\n                    </Typography>\r\n                    <div \r\n                        className={currentTrackerInfo.currentAngle !== '--' && (currentTrackerInfo.currentAngle > 58 ? 'angle60' :\r\n                        currentTrackerInfo.currentAngle > 56 ? 'angle58' :\r\n                        currentTrackerInfo.currentAngle > 54 ? 'angle56' :\r\n                        currentTrackerInfo.currentAngle > 52 ? 'angle54' :\r\n                        currentTrackerInfo.currentAngle > 50 ? 'angle52' :\r\n                        currentTrackerInfo.currentAngle > 48 ? 'angle50' :\r\n                        currentTrackerInfo.currentAngle > 46 ? 'angle48' :\r\n                        currentTrackerInfo.currentAngle > 44 ? 'angle46' :\r\n                        currentTrackerInfo.currentAngle > 42 ? 'angle44' :\r\n                        currentTrackerInfo.currentAngle > 40 ? 'angle42' :\r\n                        currentTrackerInfo.currentAngle > 38 ? 'angle40' :\r\n                        currentTrackerInfo.currentAngle > 36 ? 'angle38' :\r\n                        currentTrackerInfo.currentAngle > 34 ? 'angle36' :\r\n                        currentTrackerInfo.currentAngle > 32 ? 'angle34' :\r\n                        currentTrackerInfo.currentAngle > 30 ? 'angle32' :\r\n                        currentTrackerInfo.currentAngle > 28 ? 'angle30' :\r\n                        currentTrackerInfo.currentAngle > 26 ? 'angle28' :\r\n                        currentTrackerInfo.currentAngle > 24 ? 'angle26' :\r\n                        currentTrackerInfo.currentAngle > 22 ? 'angle24' :\r\n                        currentTrackerInfo.currentAngle > 20 ? 'angle22' :\r\n                        currentTrackerInfo.currentAngle > 18 ? 'angle20' :\r\n                        currentTrackerInfo.currentAngle > 16 ? 'angle18' :\r\n                        currentTrackerInfo.currentAngle > 14 ? 'angle16' :\r\n                        currentTrackerInfo.currentAngle > 12 ? 'angle14' :\r\n                        currentTrackerInfo.currentAngle > 10 ? 'angle12' :\r\n                        currentTrackerInfo.currentAngle > 8 ? 'angle10' :\r\n                        currentTrackerInfo.currentAngle > 6 ? 'angle8' :\r\n                        currentTrackerInfo.currentAngle > 4 ? 'angle6' :\r\n                        currentTrackerInfo.currentAngle > 2 ? 'angle4' :\r\n                        currentTrackerInfo.currentAngle > 0 ? 'angle2' :\r\n                        currentTrackerInfo.currentAngle > -2 ? 'angle0' :\r\n                        currentTrackerInfo.currentAngle > -4 ? 'angle_2' :\r\n                        currentTrackerInfo.currentAngle > -6 ? 'angle_4' :\r\n                        currentTrackerInfo.currentAngle > -8 ? 'angle_6' :\r\n                        currentTrackerInfo.currentAngle > -10 ? 'angle_8' :\r\n                        currentTrackerInfo.currentAngle > -12 ? 'angle_10' :\r\n                        currentTrackerInfo.currentAngle > -14 ? 'angle_12' :\r\n                        currentTrackerInfo.currentAngle > -16 ? 'angle_14' :\r\n                        currentTrackerInfo.currentAngle > -18 ? 'angle_16' :\r\n                        currentTrackerInfo.currentAngle > -20 ? 'angle_18' :\r\n                        currentTrackerInfo.currentAngle > -22 ? 'angle_20' :\r\n                        currentTrackerInfo.currentAngle > -24 ? 'angle_22' :\r\n                        currentTrackerInfo.currentAngle > -26 ? 'angle_24' :\r\n                        currentTrackerInfo.currentAngle > -28 ? 'angle_26' :\r\n                        currentTrackerInfo.currentAngle > -30 ? 'angle_28' :\r\n                        currentTrackerInfo.currentAngle > -32 ? 'angle_30' :\r\n                        currentTrackerInfo.currentAngle > -34 ? 'angle_32' :\r\n                        currentTrackerInfo.currentAngle > -36 ? 'angle_34' :\r\n                        currentTrackerInfo.currentAngle > -38 ? 'angle_36' :\r\n                        currentTrackerInfo.currentAngle > -40 ? 'angle_38' :\r\n                        currentTrackerInfo.currentAngle > -42 ? 'angle_40' :\r\n                        currentTrackerInfo.currentAngle > -44 ? 'angle_42' :\r\n                        currentTrackerInfo.currentAngle > -46 ? 'angle_44' :\r\n                        currentTrackerInfo.currentAngle > -48 ? 'angle_46' :\r\n                        currentTrackerInfo.currentAngle > -50 ? 'angle_48' :\r\n                        currentTrackerInfo.currentAngle > -52 ? 'angle_50' :\r\n                        currentTrackerInfo.currentAngle > -54 ? 'angle_52' :\r\n                        currentTrackerInfo.currentAngle > -56 ? 'angle_54' :\r\n                        currentTrackerInfo.currentAngle > -58 ? 'angle_56' :\r\n                        currentTrackerInfo.currentAngle > -60 ? 'angle_58' :\r\n                        'angle_60')} \r\n                        style={{width: '100%', height: '150px', marginTop: 5}}>\r\n                            {currentTrackerInfo.currentAngle === '--' && <div \r\n                                style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n                                    No Current Angle Data Found.\r\n                            </div>}\r\n                        </div>\r\n                    {currentTrackerInfo.currentAngle !== '--' && <Typography variant='h5' style={{textAlign: 'center', height: 48, marginTop: 5}}>\r\n                        Angle = {currentTrackerInfo.currentAngle}\r\n                    </Typography>}\r\n                    <div style={{height: 'calc(100% - 246px)', width: '100%', overflow: 'auto'}}>\r\n                    <Table padding='none'>\r\n                        <TableBody>\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Tracker ID\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.trackerID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Device ID\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.deviceID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Mac ID \r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.macID}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                Current Mode\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.currentMode}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                    Current Angle\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{currentTrackerInfo.currentAngle}</TableCell>\r\n                        </TableRow>\r\n\r\n                        <TableRow style={{cursor: 'pointer'}}>\r\n                            <TableCell>\r\n                                <Typography variant=\"body1\">\r\n                                    Date and Time\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell>{new Date(currentTrackerInfo.timeStamp).toLocaleDateString('en-US', {timeZone: this.props.timeZone})} -- {new Date(currentTrackerInfo.timeStamp).toLocaleTimeString('en-US', {timeZone:  this.props.timeZone, hour12: false})}</TableCell>\r\n                        </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                    </div>\r\n                </Grid>\r\n        )\r\n    }\r\n} \r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentTrackerInfo, timeZone, currentTracker } = state.app\r\n\r\n    return {\r\n        currentTrackerInfo,\r\n        timeZone,\r\n        currentTracker\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getCurrentTrackerInfo : (trackerID) => {\r\n        dispatch({type: 'GET_CURRENT_TRACKER_INFO_REQUEST'})\r\n        appService.getCurrentTrackerInfo(trackerID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_CURRENT_TRACKER_INFO_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_CURRENT_TRACKER_INFO_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedTrackerDetails = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TrackerDetails))\r\nexport {connectedTrackerDetails as TrackerDetails}","import React from 'react'\r\nimport { Grid, Paper, Button } from '@material-ui/core';\r\nimport { TrackerList } from './TrackerList'\r\nimport { TrackerDetails } from './TrackerDetails';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexWrap: 'wrap',\r\n        [theme.breakpoints.up('md')]: {\r\n            height: '100%',\r\n        }\r\n    },\r\n    trackerList: {\r\n        width: '100%',\r\n        padding: 10,\r\n        [theme.breakpoints.up('md')]: {\r\n            minHeight: '100%', width: '50%'\r\n        }\r\n    },\r\n    trackerDetails: {\r\n        width: '100%',\r\n        padding: 10,\r\n        [theme.breakpoints.up('md')]: {\r\n            minHeight: '100%', width: '50%'\r\n        }\r\n    }\r\n})\r\n\r\nconst Initializing = (props) => \r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            <p style={{margin: 10}}>No static data found.  </p>\r\n            <Button variant='contained' style={{margin: 10}} color='primary' onClick={() => props.scan()}>Add trackers</Button>\r\n            <Button variant='contained' style={{margin: 10}} color='primary' onClick={() => props.getCommissioningData()}>Refresh static data</Button>\r\n    </div>\r\n\r\n\r\nconst Fetching = () => \r\n    <div \r\n        style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>\r\n            FETCHING...\r\n    </div>\r\n\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    state = {\r\n    }\r\n\r\n    getCommissioningData = () => {\r\n        this.props.getCommissioningData()\r\n    }\r\n\r\n    scan = () => {\r\n        this.props.scan()\r\n    }\r\n\r\n    render() {\r\n        const { classes, commissioningData, fetchingCommissioningData } = this.props\r\n        return ( fetchingCommissioningData ? <Fetching /> : commissioningData === null ? <Initializing scan={() => this.scan()} getCommissioningData={() => this.getCommissioningData()}/> :\r\n            <Grid container direction=\"column\" className={classes.root}>\r\n                <Grid item className={classes.trackerList}>\r\n                    <Paper style={{height: '100%'}}>\r\n                        <TrackerList />\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item className={classes.trackerDetails}>\r\n                    <Paper style={{height: '100%'}}>\r\n                        <TrackerDetails />\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData, fetchingCommissioningData } = state.app\r\n\r\n    return {\r\n        commissioningData,\r\n        fetchingCommissioningData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    scan : () => {\r\n        dispatch({type: 'SCAN'})\r\n    },\r\n    getCommissioningData: () => {\r\n        dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n        appService.getCommissioningData()\r\n            .then(json => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedDashboard = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Dashboard))\r\nexport {connectedDashboard as Dashboard}","import React, { Fragment } from 'react'\r\nimport { Grid, Button, TextField, FormControlLabel, Checkbox, InputAdornment } from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    fieldGrid: {\r\n        display: 'flex', \r\n        flexDirection: 'row', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    },\r\n    field: {\r\n        width: '45%',\r\n        margin: '10px 2.5% 0px 2.5%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '31.33%',\r\n            margin: '10px 1% 0px 1%'\r\n        }\r\n    }\r\n})\r\n\r\nclass SPAParameters extends React.Component {\r\n    state = {\r\n        Lattitude: '',\r\n        Longitude: '',\r\n        Altitude: '',\r\n        TrackingLimitEast: '',\r\n        TrackingLimitWest: '',\r\n        RowWidth: '',\r\n        RowPitch: '',\r\n        TrackingResolution: '',\r\n        AzimuthDeviation: '',\r\n        AltitudeofTrackerontheEast: '',\r\n        AltitudeofTrackerontheWest: '',\r\n        EarlyStartMinutes: '',\r\n        LateFinishMinutes: '',\r\n        LattitudeError: '',\r\n        LongitudeError: '',\r\n        AltitudeError: '',\r\n        TrackingLimitEastError: '',\r\n        TrackingLimitWestError: '',\r\n        RowWidthError: '',\r\n        RowPitchError: '',\r\n        TrackingResolutionError: '',\r\n        AzimuthDeviationError: '',\r\n        AltitudeofTrackerontheEastError: '',\r\n        AltitudeofTrackerontheWestError: '',\r\n        EarlyStartMinutesError: '',\r\n        LateFinishMinutesError: '',\r\n        backTracking: '0',\r\n        submit: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.editedTrackers.length ===  1) {\r\n            this.props.getSPAParameters(this.props.editedTrackers[0].deviceID)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.SPAParameters !== this.props.SPAParameters) {\r\n            const values = nextProps.SPAParameters.VALUES.split(',')\r\n            this.setState({\r\n                Lattitude: values[0],\r\n                Longitude: values[1],\r\n                Altitude: values[2],\r\n                TrackingLimitEast: values[3],\r\n                TrackingLimitWest: values[4],\r\n                RowWidth: values[5],\r\n                RowPitch: values[6],\r\n                TrackingResolution: values[7],\r\n                AzimuthDeviation: values[8],\r\n                AltitudeofTrackerontheEast: values[9],\r\n                AltitudeofTrackerontheWest: values[10],\r\n                EarlyStartMinutes: values[11],\r\n                LateFinishMinutes: values[12],\r\n                backTracking: values[14]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleBlur = (e, p) => {\r\n            const regex = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+$\")\r\n            const regexTest = regex.test(e.target.value)\r\n            if(!regexTest) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    [`${e.target.name}Error`]: `Please enter a number.`,\r\n                    submit: false\r\n                })\r\n            } else {\r\n                const value = Number(e.target.value)\r\n                if(p.min !== null && p.max !== null) {\r\n                    if(value < p.min || value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min} max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.min !== null) {\r\n                    if(value < p.min) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.max != null) {\r\n                    if(value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \r\n    }\r\n\r\n    sendSPAParameters = () => {\r\n        const { Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking } = this.state\r\n        this.props.sendSPAParameters(this.props.editedTrackers, Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                    {\r\n                        [\r\n                            {\r\n                                key: 'Lattitude',\r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 0\r\n                            },\r\n                            {\r\n                                key: 'Longitude', \r\n                                adornment: 'Deg',\r\n                                min: -180,\r\n                                max: +180,\r\n                                value: 1\r\n                            }, \r\n                            { \r\n                                key: 'Altitude',\r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 2\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - East', \r\n                                adornment: 'Deg',\r\n                                min: -60,\r\n                                max: 0,\r\n                                value: 3\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - West', \r\n                                adornment: 'Deg',\r\n                                min: 0,\r\n                                max: +60,\r\n                                value: 4 \r\n                            }, \r\n                            { \r\n                                key: 'Row Width', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 5\r\n                            }, \r\n                            { \r\n                                key: 'Row Pitch', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 6\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Resolution', \r\n                                adornment: 'Deg',\r\n                                min: +0.50,\r\n                                max: +30.0,\r\n                                value: 7 \r\n                            }, \r\n                            { \r\n                                key: 'Azimuth Deviation', \r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 8  \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the East', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 9 \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the West', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 10\r\n                            }, \r\n                            { \r\n                                key: 'Early Start Minutes', \r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 11\r\n                            }, \r\n                            { \r\n                                key: 'Late Finish Minutes',\r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 12\r\n                            }\r\n                        ].map(p => {\r\n                            return <TextField\r\n                                key={p.key}\r\n                                className={classes.field}\r\n                                id={p.key}\r\n                                name={p.key.replace(/ /g, '').replace(/-/g, '')}\r\n                                label={p.key}\r\n                                value={this.state[p.key.replace(/ /g, '').replace(/-/g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">{p.adornment}</InputAdornment>,\r\n                                  }}\r\n                                error={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`] !== ''}\r\n                                helperText={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`]}\r\n                                onBlur={(e) => this.handleBlur(e, p)}\r\n                            />\r\n                        })\r\n                    }\r\n                        <FormControlLabel disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters} className={classes.field}\r\n                            control={\r\n                                <Checkbox color='primary' checked={this.state.backTracking === '1'} onClick={() => this.setState({...this.state, backTracking: this.state.backTracking === '0' ? '1' : '0'})}/>\r\n                            }\r\n                            label=\"Enable Backtracking\"\r\n                        />\r\n                        <Button color='primary' disabled variant='contained' className={classes.field}>Sync time with Zone Controller</Button>    \r\n                    </Grid>\r\n                    <Grid item style={{textAlign: 'center'}}>\r\n                        <Button color='primary' disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters || !this.state.submit} variant='contained' onClick={() => this.sendSPAParameters()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { editedTrackers, sendingSPAParameters } = state.app\r\n\r\n    return {\r\n        editedTrackers,\r\n        sendingSPAParameters,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendSPAParameters: (editedTrackers, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking) => {\r\n        dispatch({type: 'SET_RESPONSE_LISTENER'})\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_SPA_PARAMETERS_REQUEST', t})\r\n            appService.sendSPAParameters(t.deviceID, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_SUCCESS'})\r\n                }, error => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_FAILURE'})\r\n                })\r\n        })\r\n        \r\n    }\r\n})\r\n\r\n\r\nconst connectedSPAParameters = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SPAParameters))\r\nexport {connectedSPAParameters as SPAParameters}","import React, { Fragment } from 'react'\r\nimport { Grid, Button, TextField, InputAdornment } from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    fieldGrid: {\r\n        display: 'flex', \r\n        flexDirection: 'row', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    },\r\n    field: {\r\n        width: '45%',\r\n        margin: '10px 2.5% 0px 2.5%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '31.33%',\r\n            margin: '10px 1% 0px 1%'\r\n        }\r\n    }\r\n})\r\n\r\nclass StowAngles extends React.Component {\r\n    state = {\r\n        WindStowAngle: '',\r\n        SnowStowAngle: '',\r\n        NightStowAngle: '',\r\n        EmergencyStowAngle: '',\r\n        CleanStowAngle: '',\r\n        submit: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.editedTrackers.length === 1) {\r\n            this.props.getStowAngles(this.props.editedTrackers[0].deviceID)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.stowAngles !== this.props.stowAngles) {\r\n            const values = nextProps.stowAngles.VALUES.split(',')\r\n            this.setState({\r\n                WindStowAngle: values[0],\r\n                SnowStowAngle: values[1],\r\n                NightStowAngle: values[2],\r\n                EmergencyStowAngle: values[3],\r\n                CleanStowAngle: values[4]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleBlur = (e, p) => {\r\n        if(e.target.value === '') {\r\n            this.setState({\r\n                ...this.state,\r\n                [e.target.name]: this.props.SPAParameters.VALUES.split(',')[p.value],\r\n                [`${e.target.name}Error`]: '',\r\n                submit: false\r\n            })\r\n        } else {\r\n            const regex = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+$\")\r\n            const regexTest = regex.test(e.target.value)\r\n            if(!regexTest) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    [`${e.target.name}Error`]: `Please enter a number.`,\r\n                    submit: false\r\n                })\r\n            } else {\r\n                const value = Number(e.target.value)\r\n                if(p.min !== null && p.max !== null) {\r\n                    if(value < p.min || value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min} max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.min !== null) {\r\n                    if(value < p.min) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.max != null) {\r\n                    if(value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    sendStowAngles = () => {\r\n        const { WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle } = this.state\r\n        this.props.sendStowAngles(this.props.editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                    {\r\n                        ['Wind Stow Angle', 'Snow Stow Angle', 'Night Stow Angle', 'Emergency Stow Angle', 'Clean Stow Angle'].map(p => {\r\n                            return <TextField\r\n                                key={p}\r\n                                className={classes.field}\r\n                                id={p}\r\n                                name={p.replace(/ /g, '')}\r\n                                label={p}\r\n                                value={this.state[p.replace(/ /g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingStowAngles || this.props.gettingStowAngles}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">Deg</InputAdornment>,\r\n                                  }}\r\n                            />\r\n                        })\r\n                    }\r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center'}}>\r\n                        <Button color='primary' disabled={this.props.sendingStowAngles || this.props.gettingStowAngles} variant='contained' onClick={() => this.sendStowAngles()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { editedTrackers, stowAngles, sendingStowAngles, gettingStowAngles } = state.app\r\n\r\n    return {\r\n        editedTrackers,\r\n        stowAngles,\r\n        sendingStowAngles,\r\n        gettingStowAngles\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendStowAngles: (editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle) => {\r\n        dispatch({type: 'SET_RESPONSE_LISTENER'})\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_STOW_ANGLES_REQUEST', t})\r\n            appService.sendStowAngles(t.deviceID, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_SUCCESS'})\r\n                }, error => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_FAILURE'})\r\n                })\r\n        })\r\n    }\r\n})\r\n\r\n\r\nconst connectedStowAngles = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(StowAngles))\r\nexport {connectedStowAngles as StowAngles}","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { connect } from 'react-redux'\r\nimport { SPAParameters } from './SPAParameters';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { StowAngles } from './StowAngles';\r\nimport LeftIcon from '@material-ui/icons/ArrowBack'\r\nimport { Grid, Typography, Chip, Toolbar } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      margin: 10,\r\n      display: 'flex',\r\n      flexDirection: 'column'\r\n    },\r\n    body: {\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    tabsIndicator: {\r\n      backgroundColor: '#54AAB3',\r\n    },\r\n    selected: {\r\n      backgroundColor: '#54AAB3',\r\n      color: '#ffffff',\r\n      fontWeight: 600,\r\n      fontSize: 14\r\n    },\r\n    editedTrackers: {\r\n        width: '25%',\r\n        margin: 10,\r\n    },\r\n    tabs: {\r\n        width: '75%',\r\n        padding: 10,\r\n        boxShadow: '-1px 0px 0px 0px rgba(0,0,0,0.5)'\r\n    },\r\n    chip: {\r\n        margin: 10\r\n    },\r\n    green: {\r\n        backgroundColor: 'green'\r\n    },\r\n    red: {\r\n        backgroundColor: 'red'\r\n    }\r\n});\r\n\r\nclass EditRowController extends React.Component {\r\n    handleChange = (event, value) => {\r\n        this.props.changeTab({ value });\r\n    };\r\n    \r\n    render() {console.log(this.props)\r\n        const { classes, currentEditTab, editedTrackers, responseQueue } = this.props;\r\n    \r\n        return (\r\n        <div className={classes.root}>\r\n            <div className={classes.header}>\r\n            <Grid item>\r\n                <Typography variant='h5'>\r\n                    <IconButton aria-label=\"Back\" onClick={this.props.back} >\r\n                        <LeftIcon fontSize=\"large\" />\r\n                    </IconButton>\r\n                    Edit Parameters\r\n                </Typography>\r\n            </Grid>\r\n            </div>\r\n            <div className={classes.body}>\r\n            <div className={classes.editedTrackers}>\r\n            \r\n            <AppBar position=\"static\" color='secondary'>\r\n                <Toolbar style={{minHeight: 48}} disableGutters>\r\n                <Typography variant=\"subtitle1\" style={{margin: 'auto'}}>\r\n                    Selected Trackers\r\n                </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {\r\n                editedTrackers.map(t => (\r\n                <Chip key={t.deviceID} label={`Row#: ${t.rowNumber}`} className={classes.chip} style={responseQueue.filter(r => r.request.DID === t.deviceID)[0] ? responseQueue.filter(r => r.request.DID === t.deviceID)[0].success ? {backgroundColor: 'green'} : {backgroundColor: 'red'} : {}}/>\r\n            ))}\r\n            </div>\r\n            <div className={classes.tabs}>\r\n            <AppBar position=\"static\" color='secondary'>\r\n                <Tabs value={currentEditTab} onChange={this.handleChange} classes={{indicator: classes.tabsIndicator}}>\r\n                    <Tab label=\"SPA Parameters\" classes={{selected: classes.selected}}/>\r\n                    <Tab label=\"Stow Angles\" classes={{selected: classes.selected}}/>\r\n                </Tabs>\r\n            </AppBar>\r\n            {currentEditTab === 0 && <SPAParameters />}\r\n            {currentEditTab === 1 && <StowAngles />}\r\n            </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentEditTab, editedTrackers, responseQueue } = state.app\r\n\r\n    return {\r\n        currentEditTab,\r\n        editedTrackers,\r\n        responseQueue       \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changeTab: (value) => {\r\n        dispatch({type: 'CHANGE_EDIT_TAB', value})\r\n    }\r\n})\r\n\r\n\r\nconst connectedEditRowController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(EditRowController))\r\nexport {connectedEditRowController as EditRowController}","import React, { Fragment } from 'react'\r\nimport LeftIcon from '@material-ui/icons/ArrowBack'\r\nimport { IconButton, Typography, Grid, Button, TextField, FormControlLabel, Checkbox, InputAdornment } from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    fieldGrid: {\r\n        display: 'flex', \r\n        flexDirection: 'row', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    },\r\n    field: {\r\n        width: '45%',\r\n        margin: '10px 2.5% 0px 2.5%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '23%',\r\n            margin: '10px 1% 0px 1%'\r\n        }\r\n    }\r\n})\r\n\r\nclass EditRowController extends React.Component {\r\n    state = {\r\n        Lattitude: '',\r\n        Longitude: '',\r\n        Altitude: '',\r\n        TrackingLimitEast: '',\r\n        TrackingLimitWest: '',\r\n        RowWidth: '',\r\n        RowPitch: '',\r\n        TrackingResolution: '',\r\n        AzimuthDeviation: '',\r\n        AltitudeofTrackerontheEast: '',\r\n        AltitudeofTrackerontheWest: '',\r\n        EarlyStartMinutes: '',\r\n        LateFinishMinutes: '',\r\n        LattitudeError: '',\r\n        LongitudeError: '',\r\n        AltitudeError: '',\r\n        TrackingLimitEastError: '',\r\n        TrackingLimitWestError: '',\r\n        RowWidthError: '',\r\n        RowPitchError: '',\r\n        TrackingResolutionError: '',\r\n        AzimuthDeviationError: '',\r\n        AltitudeofTrackerontheEastError: '',\r\n        AltitudeofTrackerontheWestError: '',\r\n        EarlyStartMinutesError: '',\r\n        LateFinishMinutesError: '',\r\n        WindStowAngle: '',\r\n        SnowStowAngle: '',\r\n        NightStowAngle: '',\r\n        EmergencyStowAngle: '',\r\n        CleanStowAngle: '',\r\n        backTracking: '0',\r\n        submit: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.editedTrackers.length === 1) {\r\n            this.props.getSPAParameters(this.props.editedTrackers[0].deviceID)\r\n            this.props.getStowAngles(this.props.editedTrackers[0].deviceID)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.SPAParameters !== this.props.SPAParameters) {\r\n            if(nextProps.SPAParameters[this.props.editedTrackers[0].deviceID]) {\r\n                const values = nextProps.SPAParameters[this.props.editedTrackers[0].deviceID].VALUES.split(',')\r\n                this.setState({\r\n                    Lattitude: values[0],\r\n                    Longitude: values[1],\r\n                    Altitude: values[2],\r\n                    TrackingLimitEast: values[3],\r\n                    TrackingLimitWest: values[4],\r\n                    RowWidth: values[5],\r\n                    RowPitch: values[6],\r\n                    TrackingResolution: values[7],\r\n                    AzimuthDeviation: values[8],\r\n                    AltitudeofTrackerontheEast: values[9],\r\n                    AltitudeofTrackerontheWest: values[10],\r\n                    EarlyStartMinutes: values[11],\r\n                    LateFinishMinutes: values[12],\r\n                    backTracking: values[14]\r\n                })\r\n            }\r\n        }\r\n        if(nextProps.stowAngles !== this.props.stowAngles) {\r\n            const values = nextProps.stowAngles.VALUES.split(',')\r\n            this.setState({\r\n                WindStowAngle: values[0],\r\n                SnowStowAngle: values[1],\r\n                NightStowAngle: values[2],\r\n                EmergencyStowAngle: values[3],\r\n                CleanStowAngle: values[4]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleChangeSPA = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n            [`${event.target.name}Error`]: '',\r\n            submit: true\r\n        })\r\n    }\r\n\r\n    handleBlur = (e, p) => {\r\n        if(e.target.value === '') {\r\n            this.setState({\r\n                ...this.state,\r\n                [e.target.name]: this.props.SPAParameters.VALUES.split(',')[p.value],\r\n                [`${e.target.name}Error`]: '',\r\n                submit: false\r\n            })\r\n        } else {\r\n            const regex = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+$\")\r\n            const regexTest = regex.test(e.target.value)\r\n            if(!regexTest) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    [`${e.target.name}Error`]: `Please enter a number.`,\r\n                    submit: false\r\n                })\r\n            } else {\r\n                const value = Number(e.target.value)\r\n                if(p.min !== null && p.max !== null) {\r\n                    if(value < p.min || value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min} max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.min !== null) {\r\n                    if(value < p.min) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `min: ${p.min}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                } else if(p.max != null) {\r\n                    if(value > p.max) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [`${e.target.name}Error`]: `max: ${p.max}`,\r\n                            submit: false\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    sendSPAParameters = () => {\r\n        const { Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking } = this.state\r\n        this.props.sendSPAParameters(this.props.editedTrackers, Lattitude, Longitude, Altitude, TrackingLimitEast, TrackingLimitWest, RowWidth, RowPitch, TrackingResolution, AzimuthDeviation, AltitudeofTrackerontheEast, AltitudeofTrackerontheWest, EarlyStartMinutes, LateFinishMinutes, backTracking)\r\n    }\r\n\r\n    sendStowAngles = () => {\r\n        const { WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle } = this.state\r\n        this.props.sendStowAngles(this.props.editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item style={{height: 64, borderBottom: '0.1px solid lightgrey'}}>\r\n                        <Typography variant='h5'>\r\n                            <IconButton aria-label=\"Back\" onClick={this.props.back} >\r\n                                <LeftIcon fontSize=\"large\" />\r\n                            </IconButton>\r\n                            Edit Parameters\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Typography variant='h6' style={{paddingLeft: 'calc(1% + 10px)'}}>\r\n                        SPA Settings\r\n                    </Typography>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                        \r\n                    {\r\n                        [\r\n                            {\r\n                                key: 'Lattitude',\r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 0\r\n                            },\r\n                            {\r\n                                key: 'Longitude', \r\n                                adornment: 'Deg',\r\n                                min: -180,\r\n                                max: +180,\r\n                                value: 1\r\n                            }, \r\n                            { \r\n                                key: 'Altitude',\r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 2\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - East', \r\n                                adornment: 'Deg',\r\n                                min: -60,\r\n                                max: 0,\r\n                                value: 3\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Limit - West', \r\n                                adornment: 'Deg',\r\n                                min: 0,\r\n                                max: +60,\r\n                                value: 4 \r\n                            }, \r\n                            { \r\n                                key: 'Row Width', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 5\r\n                            }, \r\n                            { \r\n                                key: 'Row Pitch', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 6\r\n                            }, \r\n                            { \r\n                                key: 'Tracking Resolution', \r\n                                adornment: 'Deg',\r\n                                min: +0.50,\r\n                                max: +30.0,\r\n                                value: 7 \r\n                            }, \r\n                            { \r\n                                key: 'Azimuth Deviation', \r\n                                adornment: 'Deg',\r\n                                min: -90,\r\n                                max: +90,\r\n                                value: 8  \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the East', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 9 \r\n                            }, \r\n                            { \r\n                                key: 'Altitude of Tracker on the West', \r\n                                adornment: 'm',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 10\r\n                            }, \r\n                            { \r\n                                key: 'Early Start Minutes', \r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 11\r\n                            }, \r\n                            { \r\n                                key: 'Late Finish Minutes',\r\n                                adornment: 'Minutes',\r\n                                min: 0,\r\n                                max: null,\r\n                                value: 12\r\n                            }\r\n                        ].map(p => {\r\n                            return <TextField\r\n                                key={p.key}\r\n                                className={classes.field}\r\n                                id={p.key}\r\n                                name={p.key.replace(/ /g, '').replace(/-/g, '')}\r\n                                label={p.key}\r\n                                value={this.state[p.key.replace(/ /g, '').replace(/-/g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">{p.adornment}</InputAdornment>,\r\n                                  }}\r\n                                error={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`] !== ''}\r\n                                helperText={this.state[`${p.key.replace(/ /g, '').replace(/-/g, '')}Error`]}\r\n                                onBlur={(e) => this.handleBlur(e, p)}\r\n                            />\r\n                        })\r\n                    }\r\n                        <FormControlLabel disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters} style={{ margin: 10, marginLeft: 'auto' }}\r\n                            control={\r\n                                <Checkbox color='primary' checked={this.state.backTracking === '1'} onClick={() => this.setState({...this.state, backTracking: this.state.backTracking === '0' ? '1' : '0'})}/>\r\n                            }\r\n                            label=\"Enable Backtracking\"\r\n                        />\r\n                        <Button color='primary' disabled variant='contained' style={{ margin: 10 }}>Sync time with Zone Controller</Button>    \r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center', borderBottom: '0.1px solid lightgrey'}}>\r\n                        <Button color='primary' disabled={this.props.sendingSPAParameters || this.props.gettingSPAParameters || !this.state.submit} variant='contained' onClick={() => this.sendSPAParameters()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                    <Typography variant='h6' style={{paddingLeft: 'calc(1% + 10px)'}}>\r\n                        Stow Angle Settings\r\n                    </Typography>\r\n                    <Grid item className={classes.fieldGrid}>\r\n                        \r\n                    {\r\n                        ['Wind Stow Angle', 'Snow Stow Angle', 'Night Stow Angle', 'Emergency Stow Angle', 'Clean Stow Angle'].map(p => {\r\n                            return <TextField\r\n                                key={p}\r\n                                className={classes.field}\r\n                                id={p}\r\n                                name={p.replace(/ /g, '')}\r\n                                label={p}\r\n                                value={this.state[p.replace(/ /g, '')]}\r\n                                onChange={(e) => this.handleChange(e)}\r\n                                margin=\"normal\"\r\n                                variant='outlined'\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled={this.props.sendingStowAngles || this.props.gettingStowAngles}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">Deg</InputAdornment>,\r\n                                  }}\r\n                            />\r\n                        })\r\n                    }\r\n                    </Grid>\r\n                    <Grid item style={{height: 64, textAlign: 'center'}}>\r\n                        <Button color='primary' disabled={this.props.sendingStowAngles || this.props.gettingStowAngles} variant='contained' onClick={() => this.sendStowAngles()} style={{ margin: 10 }}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { editedTrackers, SPAParameters, stowAngles, sendingSPAParameters, sendingStowAngles, gettingSPAParameters, gettingStowAngles } = state.app\r\n\r\n    return {\r\n        editedTrackers,\r\n        SPAParameters,\r\n        stowAngles,\r\n        sendingSPAParameters,\r\n        sendingStowAngles,\r\n        gettingSPAParameters,\r\n        gettingStowAngles\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendSPAParameters: (editedTrackers, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking) => {\r\n        const values = `${Lattitude}, ${Longitude}, ${Altitude}, ${EastLimit}, ${WestLimit}, ${TrackerWidth}, ${Pitch}, ${TrackingAccuracy}, ${AzimuthDeviation}, ${AltitudeTrackeronEast}, ${AltitudeTrackeronWest}, ${StartTimeLead}, ${EndTimeLag}, 0, ${backTracking}`\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_SPA_PARAMETERS_REQUEST', t, values})\r\n            appService.sendSPAParameters(t.deviceID, Lattitude, Longitude, Altitude, EastLimit, WestLimit, TrackerWidth, Pitch, TrackingAccuracy, AzimuthDeviation, AltitudeTrackeronEast, AltitudeTrackeronWest, StartTimeLead, EndTimeLag, backTracking)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_SUCCESS'})\r\n                    dispatch({type: 'GET_SPA_PARAMETERS_REQUEST'})\r\n                    appService.getSPAParameters(t.deviceID)\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_SPA_PARAMETERS_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_SPA_PARAMETERS_FAILURE'})\r\n                        })\r\n\r\n                }, error => {\r\n                    dispatch({type: 'SEND_SPA_PARAMETERS_FAILURE'})\r\n                })\r\n        })\r\n        \r\n    },\r\n    sendStowAngles: (editedTrackers, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle) => {\r\n        const values = `${WindStowAngle}, ${SnowStowAngle}, ${CleanStowAngle}, ${NightStowAngle}, ${EmergencyStowAngle}`\r\n        editedTrackers.map(t => {\r\n            dispatch({type: 'SEND_STOW_ANGLES_REQUEST', t, values})\r\n            appService.sendStowAngles(t.deviceID, WindStowAngle, SnowStowAngle, CleanStowAngle, NightStowAngle, EmergencyStowAngle)\r\n                .then(json => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_SUCCESS'})\r\n                    dispatch({type: 'GET_STOW_ANGLES_REQUEST'})\r\n                    appService.getStowAngles(t.deviceID)\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_STOW_ANGLES_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_STOW_ANGLES_FAILURE'})\r\n                        })\r\n                }, error => {\r\n                    dispatch({type: 'SEND_STOW_ANGLES_FAILURE'})\r\n                })\r\n        })\r\n    },\r\n    getStowAngles: (DID) => {\r\n        dispatch({type: 'GET_STOW_ANGLES_REQUEST'})\r\n        appService.getStowAngles(DID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_STOW_ANGLES_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'GET_STOW_ANGLES_FAILURE'})\r\n            })\r\n    },\r\n    getSPAParameters: (DID) => {\r\n        dispatch({type: 'GET_SPA_PARAMETERS_REQUEST'})\r\n        appService.getSPAParameters(DID)\r\n            .then(json => {\r\n                dispatch({type: 'GET_SPA_PARAMETERS_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'GET_SPA_PARAMETERS_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedEditRowController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(EditRowController))\r\nexport {connectedEditRowController as EditRowController1}","import React, { Fragment } from 'react'\r\nimport LeftIcon from '@material-ui/icons/ArrowBack'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { IconButton, Typography, Grid, Button, Menu, MenuItem, FormControlLabel, Switch } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: 'calc(100% - 48px)'\r\n    },\r\n    second: {\r\n        height: 'calc(100% - 128px)', \r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        flexWrap: 'wrap', \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    }\r\n})\r\n\r\nclass ControlRowController extends React.Component {\r\n    state = {\r\n        typeOfStow: 'STOW',\r\n        auto: false\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.setState({ ...this.state, anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleClose = (key) => {\r\n        this.setState({ typeOfStow: key, anchorEl: null });\r\n    };\r\n\r\n    autoToggle = () => {\r\n        if(this.state.auto) {\r\n            this.props.controlledTrackers.map(t => this.props.sendStow(t.deviceID, 'AUTO'))\r\n            this.setState({...this.state, auto: !this.state.auto})\r\n        } else {\r\n            this.props.controlledTrackers.map(t => this.props.sendStow(t.deviceID, 'MANUAL'))\r\n            this.setState({...this.state, auto: !this.state.auto})\r\n        }\r\n    } \r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        const { anchorEl } = this.state\r\n        return (\r\n            <Fragment>\r\n\r\n                <Grid container direction='column' className={classes.root}>\r\n                    <Grid item style={{height: 64}}>\r\n                        <Typography variant='h5'>\r\n                            <IconButton aria-label=\"Back\" onClick={this.props.back} >\r\n                                <LeftIcon fontSize=\"large\" />\r\n                            </IconButton>\r\n                            Control\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item className={classes.second}>\r\n                    \r\n                    </Grid>\r\n                    <Grid item style={{textAlign: 'center'}}>\r\n                        <Button color='primary' variant='contained' onClick={() => this.props.controlledTrackers.map(t => this.props.sendCommand(t.deviceID, 'NEGATIVE'))} style={{ margin: 10 }}>Run West</Button>\r\n                        <Button color='primary' variant='contained' onClick={() => this.props.controlledTrackers.map(t => this.props.sendCommand(t.deviceID, 'POSITIVE'))} style={{ margin: 10 }}>Run East</Button>\r\n                        <Button color='primary' variant='contained' onClick={() => this.props.controlledTrackers.map(t => this.props.sendCommand(t.deviceID, 'STOP'))} style={{ margin: 10 }}>Stop</Button>\r\n                        <Button color='primary' disabled={this.state.typeOfStow === 'STOW'} onClick={() => this.props.controlledTrackers.map(t => this.props.sendStow(t.deviceID, this.state.typeOfStow))} variant='contained' style={{ marginLeft: 10 }}>{this.state.typeOfStow}</Button>\r\n                        <Button \r\n                            color='primary' \r\n                            variant='contained' \r\n                            aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={this.handleClick}\r\n                            style={{ minWidth: 24, paddingLeft: 0, paddingRight: 0}}\r\n                        >\r\n                            <ExpandMoreIcon />\r\n                        </Button>\r\n                        <Menu\r\n                            id=\"simple-menu\"\r\n                            anchorEl={anchorEl}\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={this.handleClose}\r\n                            >\r\n                            <MenuItem onClick={() => this.handleClose('WIND')}>WIND</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('SNOW')}>SNOW</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('NIGHT')}>NIGHT</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('CLEAN')}>CLEAN</MenuItem>\r\n                            <MenuItem onClick={() => this.handleClose('EMERGENCY')}>EMERGENCY</MenuItem>\r\n                        </Menu>\r\n                        <FormControlLabel style={{ margin: 10 }} labelPlacement=\"top\"\r\n                            control={\r\n                                <Switch color='primary' checked={this.state.auto} onClick={() => this.autoToggle()} />\r\n                            }\r\n                            label=\"Enable Auto Mode\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { controlledTrackers } = state.app\r\n\r\n    return {\r\n        controlledTrackers,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendCommand: (DID, value) => {\r\n        dispatch({type: 'SEND_COMMAND_REQUEST'})\r\n        appService.sendCommand(DID, value)\r\n            .then(json => {\r\n                dispatch({type: 'SEND_COMMAND_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'SEND_COMMAND_FAILURE'})\r\n            })\r\n    },\r\n    sendStow: (DID, mode) => {\r\n        dispatch({type: 'SEND_STOW_REQUEST'})\r\n        appService.sendStow(DID, mode)\r\n            .then(json => {\r\n                dispatch({type: 'SEND_STOW_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'SEND_STOW_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedControlRowController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ControlRowController))\r\nexport {connectedControlRowController as ControlRowController}","import React, { Fragment } from 'react'\r\nimport { Grid, Button, Checkbox } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { EditRowController } from './EditRowController';\r\nimport { EditRowController1 } from './_EditRowController'\r\nimport { ControlRowController } from './ControlRowController'\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    buttons: {\r\n        marginBottom: 10,\r\n        marginRight: 10,\r\n        marginTop: 10\r\n    }\r\n});\r\n\r\nclass RowControllerTab extends React.Component {\r\n    state = {\r\n        selectedTrackers: [],\r\n        location: 'home'\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedTrackers.length === this.props.commissioningData.length) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.props.commissioningData]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectRow = (row) => {\r\n        if(this.state.selectedTrackers.indexOf(row) === -1) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.state.selectedTrackers, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedTrackers: [...this.state.selectedTrackers.filter(t => t.macID !== row.macID)]\r\n            })\r\n        }\r\n    }\r\n\r\n    editTracker = () => {\r\n        this.props.setEditedTrackers(this.state.selectedTrackers)\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'edit'\r\n        })\r\n    }\r\n\r\n    controlTracker = () => {\r\n        this.props.setControlledTrackers(this.state.selectedTrackers)\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'control'\r\n        })\r\n    }\r\n\r\n    back = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            location: 'home'\r\n        })\r\n    }\r\n\r\n    removeTrackers = () => {\r\n        this.props.removeTrackers(this.state.selectedTrackers.map(s => s.deviceID))\r\n        this.setState({...this.state, selectedTrackers: []})\r\n    }\r\n\r\n    render() {\r\n        const { classes, commissioningData } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    this.state.location === 'edit' ? \r\n                        this.state.selectedTrackers.length > 1 ?\r\n                        <EditRowController back={this.back}/> : <EditRowController1 back={this.back}/> :\r\n                    this.state.location === 'control' ?\r\n                    <ControlRowController back={this.back}/> :\r\n                    <Grid container direction='column' style={{ height: 'calc(100% - 48px)'}}>\r\n                        <Grid item style={{textAlign: 'end'}}>\r\n                            <Button color='primary' variant='contained' disabled={this.state.selectedTrackers.length === 0} className={classes.buttons} onClick={() => this.editTracker()}>Edit</Button>\r\n                            <Button color='primary' variant='contained' disabled={this.state.selectedTrackers.length === 0} className={classes.buttons} onClick={() => this.controlTracker()}>Control</Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    onClick={() => this.selectAll()}\r\n                                    style={{cursor: 'pointer'}}\r\n                                >\r\n                                    {commissioningData !== null && commissioningData.length > 1 && <Checkbox \r\n                                        checked={this.state.selectedTrackers.length === commissioningData.length}\r\n                                        color='primary'\r\n                                    />}\r\n                                        </TableCell>\r\n                                <TableCell >Row #</TableCell>\r\n                                <TableCell >Device ID</TableCell>\r\n                                <TableCell >Mac ID</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {commissioningData && commissioningData.map(row => (\r\n                                <TableRow key={row.macID}\r\n                                    onClick={() => this.selectRow(row)}\r\n                                    style={{cursor: 'pointer'}}\r\n                                >\r\n                                <TableCell>\r\n                                    <Checkbox \r\n                                        checked={this.state.selectedTrackers.indexOf(row) !== -1}\r\n                                        color='primary'\r\n                                    />\r\n                                </TableCell>\r\n                                    <TableCell >{row.rowNumber}</TableCell>\r\n                                    <TableCell >{row.deviceID}</TableCell>\r\n                                    <TableCell >{row.macID}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        </Grid>{commissioningData !== null &&\r\n                        <Grid item style={{textAlign: 'end'}}>\r\n                            <Button variant='contained' color='primary' className={classes.buttons} disabled={this.state.selectedTrackers.length === 0} onClick={() => this.removeTrackers()}>Forget</Button>\r\n                        </Grid>}\r\n                    </Grid>\r\n                    \r\n                }\r\n                \r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData } = state.app\r\n\r\n    return {\r\n        commissioningData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    removeTrackers : (DIDs) => {\r\n        dispatch({type: 'REMOVE_TRACKERS_REQUEST'})\r\n        appService.removeTrackers(DIDs)\r\n            .then(json => {\r\n                dispatch({type: 'REMOVE_TRACKERS_SUCCESS', DIDs})\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n                appService.getCommissioningData()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n                    })\r\n            }, error => {\r\n                dispatch({type: 'REMOVE_TRACKERS_FAILURE'})\r\n            })\r\n    },\r\n    setEditedTrackers: (trackers) => {\r\n        dispatch({type: 'SET_EDITED_TRACKERS', trackers})\r\n    },\r\n    setControlledTrackers: (trackers) => {\r\n        dispatch({type: 'SET_CONTROLLED_TRACKERS', trackers})\r\n    }\r\n})\r\n\r\n\r\nconst connectedRowControllerTab = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RowControllerTab))\r\nexport {connectedRowControllerTab as RowControllerTab}","import React, { Fragment } from 'react'\r\nimport { Grid, Checkbox, TextField, Button } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    textField: {\r\n        marginLeft: 24\r\n    },\r\n    formControl: {\r\n        marginLeft: 24\r\n    }\r\n});\r\n  \r\n\r\nclass ScanTab extends React.Component {\r\n    state = {\r\n        selectedTrackers: [],\r\n        scanSelection: 'PAN ID'\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedTrackers.length === this.props.xbeeResponse.length) {\r\n            this.setState({\r\n                selectedTrackers: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selectedTrackers: [...this.props.xbeeResponse]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectRow = (row) => {\r\n        if(this.state.selectedTrackers.indexOf(row) === -1) {\r\n            this.setState({\r\n                selectedTrackers: [...this.state.selectedTrackers, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selectedTrackers: [...this.state.selectedTrackers.filter(t => t.id !== row.id)]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            scanSelection: e.target.value\r\n        })\r\n    }\r\n\r\n    inputChange = (e) =>{\r\n        this.setState({\r\n            scanParameter: e.target.value\r\n        })\r\n    }\r\n\r\n    scan = () => {\r\n        if(this.state.scanSelection === 'PAN ID') {\r\n            this.props.discover('00000')\r\n        } else {\r\n            this.props.discover(this.state.scanParameter)\r\n        }\r\n    } \r\n\r\n    addTrackers = () => {\r\n        this.props.addTrackers(this.state.selectedTrackers)\r\n    }\r\n\r\n    render() {\r\n        const { classes, xbeeResponse } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction='column'>\r\n                    <Grid item>\r\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                            <RadioGroup\r\n                                row\r\n                                aria-label=\"Scan\"\r\n                                name=\"scan\"\r\n                                value={this.state.scanSelection}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <FormControlLabel value=\"PAN ID\" control={<Radio color='primary'/>} label=\"PAN ID\" />\r\n                                <FormControlLabel value=\"Device ID\" control={<Radio color='primary'/>} label=\"Device ID\" />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item style={{marginBottom: 24}}>\r\n                    {\r\n                        this.state.scanSelection === 'PAN ID' ?\r\n                        <TextField\r\n                            id=\"scanParameter\"\r\n                            className={classes.textField}\r\n                            value={this.state.scanParameter}\r\n                            onChange={this.inputChange}\r\n                            placeholder='PAN ID'\r\n                            margin=\"none\"\r\n                            variant='outlined'\r\n                        /> :\r\n                        <TextField\r\n                            id=\"scanParameter\"\r\n                            className={classes.textField}\r\n                            value={this.state.scanParameter}\r\n                            onChange={this.inputChange}\r\n                            placeholder='Device ID'\r\n                            margin=\"none\"\r\n                            variant='outlined'\r\n                        />\r\n                    }\r\n                        <Button color='primary' onClick={() => this.scan()} variant='contained' style={{marginLeft: 24, verticalAlign: 'bottom'}}>Scan</Button>\r\n                    </Grid>{xbeeResponse.length !== 0 && xbeeResponse !== undefined &&\r\n                    <Grid item>\r\n                    <Table className={classes.table}>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell\r\n                                onClick={() => this.selectAll()}\r\n                                style={{cursor: 'pointer'}}\r\n                            >\r\n                                {xbeeResponse.length > 1 && xbeeResponse !== undefined && <Checkbox \r\n                                    checked={this.state.selectedTrackers.length === xbeeResponse.length && this.state.selectedTrackers.length !== 0}\r\n                                    color='primary'\r\n                                />}\r\n                                    </TableCell>\r\n                            <TableCell >Row #</TableCell>\r\n                            <TableCell >Device ID</TableCell>\r\n                            <TableCell >Mac ID</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {xbeeResponse.length !== 0 && xbeeResponse !== undefined && xbeeResponse.map(res => {\r\n                            return (\r\n                            <TableRow key={res.DID}\r\n                                onClick={() => this.selectRow(res)}\r\n                                style={{cursor: 'pointer'}}\r\n                            >\r\n                            <TableCell>\r\n                                <Checkbox \r\n                                    checked={this.state.selectedTrackers.indexOf(res) !== -1}\r\n                                    color='primary'\r\n                                />\r\n                            </TableCell>\r\n                                <TableCell >{res.VALUES.split(',')[0]}</TableCell>\r\n                                <TableCell >{res.DID}</TableCell>\r\n                                <TableCell >{res.macID}</TableCell>\r\n                            </TableRow>\r\n                        )})}\r\n                        </TableBody>\r\n                    </Table>\r\n                    </Grid>}{xbeeResponse.length !== 0 && xbeeResponse !== undefined &&\r\n                    <Grid item style={{textAlign: 'end'}}>\r\n                        <Button color='primary' disabled={this.state.selectedTrackers.length === 0} onClick={() => this.addTrackers()} variant='contained' style={{margin: 10}}>Add</Button>\r\n                    </Grid>}\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { xbeeResponse } = state.app\r\n\r\n    return {\r\n        xbeeResponse\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    discover : (did) => {\r\n        dispatch({type: 'DISCOVER_REQUEST'})\r\n        appService.discover(did)\r\n            .then(json => {\r\n                dispatch({type: 'DISCOVER_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'DISCOVER_FAILURE'})\r\n            })\r\n    },\r\n    addTrackers: (devices) => {\r\n        dispatch({type: 'ADD_TRACKERS_REQUEST'})\r\n        appService.addTrackers(devices)\r\n            .then(json => {\r\n                dispatch({type: 'ADD_TRACKERS_SUCCESS', devices})\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n                appService.getCommissioningData()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n                    })\r\n            }, error => {\r\n                dispatch({type: 'ADD_TRACKERS_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedScanTab = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ScanTab))\r\nexport {connectedScanTab as ScanTab}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { RowControllerTab } from './RowControllerTab'\r\nimport { ScanTab } from './ScanTab'\r\nimport { connect } from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  tabsIndicator: {\r\n    backgroundColor: '#54AAB3',\r\n  },\r\n  selected: {\r\n    backgroundColor: '#54AAB3',\r\n    color: '#ffffff',\r\n    fontWeight: 600,\r\n    fontSize: 14\r\n  }\r\n});\r\n\r\nclass RowController extends React.Component {\r\n\r\n  handleChange = (event, value) => {\r\n    this.props.changeTab({ value });\r\n  };\r\n\r\n  render() {\r\n    const { classes, currentTab } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" color='secondary'>\r\n          <Tabs value={currentTab} onChange={this.handleChange} classes={{indicator: classes.tabsIndicator}}>\r\n            <Tab label=\"Paired Rows\" classes={{selected: classes.selected}}/>\r\n            <Tab label=\"Scan\" classes={{selected: classes.selected}}/>\r\n          </Tabs>\r\n        </AppBar>\r\n        {currentTab === 0 && <RowControllerTab />}\r\n        {currentTab === 1 && <ScanTab />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRowController.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentTab } = state.app\r\n\r\n    return {\r\n        currentTab\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changeTab: (value) => {\r\n        dispatch({type: 'CHANGE_TAB', value})\r\n    }\r\n})\r\n\r\n\r\nconst connectedRowController = (connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RowController)))\r\nexport {connectedRowController as RowController}","import React, { Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Grid, TextField, Typography, FormControlLabel, FormControl, Radio, RadioGroup, Button } from '@material-ui/core';\r\nimport { connect } from 'react-redux'\r\nimport { appService } from '../App/app.services';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    [theme.breakpoints.up('md')]: {\r\n        height: '660px'\r\n    }\r\n  },\r\n  grid2: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '90%',\r\n    [theme.breakpoints.up('md')]: {\r\n        width: '30%',\r\n    }\r\n  },\r\n  field: {\r\n    width: '90%',\r\n    [theme.breakpoints.up('md')]: {\r\n        margin: '10px 0 0 0'\r\n    }\r\n  },\r\n  saveButton: {\r\n    margin: '10px 10px 10px 5%',\r\n    alignSelf: 'start',\r\n    [theme.breakpoints.down('sm')]: {\r\n        width: '90%',\r\n        margin: 10,\r\n        alignSelf: 'center'\r\n    }\r\n  }\r\n});\r\n\r\nclass ZoneController extends React.Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        return (\r\n            <Fragment>\r\n                    <Grid item xs={12} container direction='column' justify='center' alignItems='center' className={classes.root}>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Network\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='ssid'\r\n                            label='SSID'\r\n                            value={this.state.ssid}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='password'\r\n                            label='Password'\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='staticIP'\r\n                            label='Static IP'\r\n                            value={this.state.staticIP}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary' className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Heart Beat\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='heartbeatInterval'\r\n                            label='Heart Beat Interval'\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='heartbeatMaxMessages'\r\n                            label='Heart Beat Max Messages'\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Big Query\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='bqKey'\r\n                            label='Big Query key'\r\n                            value={this.state.bqKey}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            PAN ID\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='panID'\r\n                            label='PAN ID'\r\n                            value={this.state.panID}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Wind Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='maxWindSpeed'\r\n                            label='Max Wind Speed'\r\n                            value={this.state.maxWindSpeed}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='meanWindSpeed'\r\n                            label='Mean Wind Speed'\r\n                            value={this.state.meanWindSpeed}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='windSpeedTimer'\r\n                            label='Wind Speed Timer'\r\n                            value={this.state.windSpeedTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Flood Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='maxFloodLevel'\r\n                            label='Max FLood Level'\r\n                            value={this.state.maxFloodLevel}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='floodLevelTimer'\r\n                            label='Flood level Timer'\r\n                            value={this.state.floodLevelTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Snow Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='maxSnowLevel'\r\n                            label='Max Snow Level'\r\n                            value={this.state.maxSnowLevel}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='snowLevelTimer'\r\n                            label='Snow level Timer'\r\n                            value={this.state.snowLevelTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <Typography variant='h6' style={{textAlign: 'center'}}>\r\n                            Rain Sensor\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='maxRainLevel'\r\n                            label='Max Rain Level'\r\n                            value={this.state.maxRainLevel}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            id='rainLevelTimer'\r\n                            label='Rain level Timer'\r\n                            value={this.state.rainLevelTimer}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                            variant='outlined'\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                        <Button variant='contained' color='primary'className={classes.saveButton}>Save</Button>\r\n                        </div>\r\n                        <div className={classes.grid2}>\r\n                        <FormControl component=\"fieldset\" className={classes.field}>\r\n                            <RadioGroup\r\n                                row\r\n                                aria-label=\"Sync\"\r\n                                name=\"sync\"\r\n                                value={this.state.syncTime}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <FormControlLabel value=\"internet\" control={<Radio color='primary'/>} label=\"Sync from internet\" />\r\n                                <FormControlLabel value=\"scada\" control={<Radio color='primary'/>} label=\"Sync from SCADA\" />\r\n                            </RadioGroup>\r\n                            <Button variant='contained' color='primary' style={{marginBottom: 10}}>Sync</Button>\r\n                        </FormControl>\r\n                        </div>\r\n                    </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { commissioningData } = state.app\r\n\r\n    return {\r\n        commissioningData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setWifiInfo: (ssid, pass, staticIP) => {\r\n        dispatch({type: 'SET_WIFI_INFO'}) \r\n        appService.setWifiInfo(ssid, pass)\r\n    }\r\n})\r\n\r\n\r\nconst connectedZoneController = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ZoneController))\r\nexport {connectedZoneController as ZoneController}","import React from 'react'\r\nimport { Grid, Button, Checkbox, TextField, DialogActions, DialogTitle, Dialog, DialogContent, MenuItem, OutlinedInput, InputLabel, FormControl, Select, Tooltip, Switch } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { appService } from '../App/app.services';\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      height: '100%',\r\n      overflowX: 'auto',\r\n      backgroundColor: 'white'\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    buttons: {\r\n        marginBottom: 10,\r\n        marginRight: 10,\r\n        marginTop: 10\r\n    }\r\n});\r\n  \r\n\r\nclass Sensors extends React.Component {\r\n\r\n    state = {\r\n        selectedSensors: [],\r\n        dialog: false,\r\n        which: 'none',\r\n        port: '',\r\n        type: '',\r\n        model: '',\r\n        samplingPeriod: '',\r\n        driverFile: '',\r\n        driverFileName: '',\r\n        enabled: []\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.getSensors()\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.sensors !== this.props.sensors) {\r\n            this.setState({...this.state, enabled: [...nextProps.sensors.filter(s => s.enabled === true)]})\r\n        }\r\n    }\r\n\r\n    selectAll = () => {\r\n        if(this.state.selectedSensors.length === this.props.sensors.length) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...this.props.sensors]\r\n            })\r\n        }\r\n    }\r\n\r\n    selectSensor = (row) => {\r\n        if(this.state.selectedSensors.filter(t => t.model === row.model && t.type === row.type).length === 0) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...this.state.selectedSensors, row]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedSensors: [...this.state.selectedSensors.filter(t => t.model !== row.model)]\r\n            })\r\n        }\r\n    }\r\n\r\n    addSensor = () => {\r\n        this.setState({ ...this.state, dialog: true, which: 'add'})\r\n    }\r\n\r\n    editSensor = () => {\r\n        this.setState({ ...this.state, dialog: true, which: 'edit', port: this.state.selectedSensors[0].port, type: this.state.selectedSensors[0].type, model: this.state.selectedSensors[0].model, samplingPeriod: this.state.selectedSensors[0].samplingPeriod})\r\n    }\r\n\r\n    removeSensor = () => {\r\n        this.props.removeSensor(this.state.selectedSensors)\r\n    }\r\n\r\n    enable = (row) => {\r\n        if(this.state.enabled.filter(t => t.model === row.model && t.type === row.type).length === 0) {\r\n            this.props.enableSensor(row.type, row.model)\r\n            this.setState({...this.state, enabled: [...this.state.enabled, row]})\r\n        } else {\r\n            this.props.disableSensor(row.type, row.model)\r\n            this.setState({...this.state, enabled: this.state.enabled.filter(e => e !== row)})\r\n        }\r\n        \r\n    }\r\n\r\n    handleClose = () => {\r\n        if(this.state.which === 'edit') {\r\n            this.props.softRemoveSensor(this.state.selectedSensors)\r\n            this.props.addSensor(this.state.port, this.state.type, this.state.model, this.state.samplingPeriod)\r\n            this.props.uploadDriver(this.state.driverFile, this.state.type, this.state.model)   \r\n        } else {\r\n            this.props.addSensor(this.state.port, this.state.type, this.state.model, this.state.samplingPeriod)\r\n            this.props.uploadDriver(this.state.driverFile, this.state.type, this.state.model)\r\n        }\r\n            \r\n        \r\n        this.setState({ ...this.state, dialog: false, which: 'none' });\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ ...this.state, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    \r\n    handleSelectedFile = e => {\r\n        this.setState({\r\n            ...this.state,\r\n            driverFile: e.target.files[0],\r\n            driverFileName: e.target.files[0].name\r\n        })\r\n    }\r\n\r\n    render() {console.log(this.state)\r\n        const { classes, sensors } = this.props\r\n\r\n        return (\r\n            <Grid container direction='column' className={classes.root}>\r\n                <Grid item style={{textAlign: 'end'}}>\r\n                    <Button color='primary' variant='contained' className={classes.buttons} onClick={() => this.addSensor()}>Add New</Button>\r\n                    {this.state.selectedSensors.length > 1 ?\r\n                        <Tooltip title='Cannot edit multiple sensors at once. Please choose a single sensor to edit.'>\r\n                            <span><Button color='primary' variant='contained' className={classes.buttons} disabled>Edit</Button></span>\r\n                        </Tooltip> :\r\n                        <Button color='primary' variant='contained' disabled={this.state.selectedSensors.length !== 1} className={classes.buttons} onClick={() => this.editSensor()}>Edit</Button>\r\n                    }\r\n                </Grid>\r\n                <Grid item>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell\r\n                            onClick={() => this.selectAll()}\r\n                            style={{cursor: 'pointer'}}\r\n                        >{sensors && sensors.length > 1 && \r\n                            <Checkbox \r\n                                checked={this.state.selectedSensors.length === this.props.sensors.length}\r\n                                color='primary'\r\n                            />}\r\n                                </TableCell>\r\n                        <TableCell >Port #</TableCell>\r\n                        <TableCell >Sensor Type</TableCell>\r\n                        <TableCell >Model #</TableCell>\r\n                        <TableCell >Sampling Period</TableCell>\r\n                        <TableCell >Enabled</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {sensors && sensors.map(row => (\r\n                        <TableRow key={row.port+row.type+row.model}\r\n                            style={{cursor: 'pointer'}}\r\n                        >\r\n                            <TableCell>\r\n                                <Checkbox \r\n                                    onClick={() => this.selectSensor(row)}\r\n                                    checked={this.state.selectedSensors.filter(t => t.model === row.model && t.type === row.type).length !== 0}\r\n                                    color='primary'\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell >{row.port}</TableCell>\r\n                            <TableCell >{row.type}</TableCell>\r\n                            <TableCell >{row.model}</TableCell>\r\n                            <TableCell >{row.samplingPeriod}</TableCell>\r\n                            <TableCell>\r\n                                {/* <Checkbox \r\n                                    checked={this.state.enabled.filter(t => t.model === row.model && t.type === row.type).length !== 0}\r\n                                    onClick={() => this.enable(row)}\r\n                                    color='primary'\r\n                                /> */}\r\n                                <Switch color='primary' checked={this.state.enabled.filter(t => t.model === row.model && t.type === row.type).length !== 0} onClick={() => this.enable(row)} />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>{this.props.sensors.length > 0 &&\r\n                <Grid item style={{textAlign: 'end'}}>\r\n                    <Button color='primary' variant='contained' disabled={this.state.selectedSensors.length === 0} className={classes.buttons} onClick={() => this.removeSensor()}>Remove</Button>\r\n                </Grid>}\r\n                </Grid>\r\n                <Dialog\r\n                    open={this.state.dialog}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">{this.state.which === 'add' ? 'Add Sensor' : 'Edit Sensor'}</DialogTitle>\r\n                    <DialogContent>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl} fullWidth margin='dense'>\r\n                            <InputLabel htmlFor=\"port\">\r\n                                Port #\r\n                            </InputLabel>\r\n                            <Select\r\n                                value={this.state.port}\r\n                                onChange={this.handleChange}\r\n                                autoWidth\r\n                                input={<OutlinedInput labelWidth={50} name=\"port\" id=\"port\" />}\r\n                            >\r\n                                <MenuItem value={'ADC48CH0'}>ADC48CH0 (Address: 0x48; Channel: 0)</MenuItem>\r\n                                <MenuItem value={'ADC48CH1'}>ADC48CH1 (Address: 0x48; Channel: 1)</MenuItem>\r\n                                <MenuItem value={'ADC48CH2'}>ADC48CH2 (Address: 0x48; Channel: 2)</MenuItem>\r\n                                <MenuItem value={'ADC48CH3'}>ADC48CH3 (Address: 0x48; Channel: 3)</MenuItem>\r\n                                <MenuItem value={'ADC49CH0'}>ADC49CH0 (Address: 0x49; Channel: 0)</MenuItem>\r\n                                <MenuItem value={'ADC49CH1'}>ADC49CH1 (Address: 0x49; Channel: 1)</MenuItem>\r\n                                <MenuItem value={'ADC49CH2'}>ADC49CH2 (Address: 0x49; Channel: 2)</MenuItem>\r\n                                <MenuItem value={'ADC49CH3'}>ADC49CH3 (Address: 0x49; Channel: 3)</MenuItem>\r\n                                <MenuItem value={'Modbus RTU'}>Modbus RTU</MenuItem>\r\n                                <MenuItem value={'GPIO11'}>GPIO11 (Pin 11)</MenuItem>\r\n                                <MenuItem value={'GPIO13'}>GPIO13 (Pin 13)</MenuItem>\r\n                                <MenuItem value={'GPIO15'}>GPIO15 (Pin 15)</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl} fullWidth margin='dense'>\r\n                            <InputLabel htmlFor=\"type\">\r\n                                Sensor Type\r\n                            </InputLabel>\r\n                            <Select\r\n                                value={this.state.type}\r\n                                onChange={this.handleChange}\r\n                                autoWidth\r\n                                input={<OutlinedInput labelWidth={100} name=\"type\" id=\"type\" />}\r\n                            >\r\n                                <MenuItem value={'wind'}>Wind Sensor</MenuItem>\r\n                                <MenuItem value={'snow'}>Snow Sensor</MenuItem>\r\n                                <MenuItem value={'flood'}>Flood Sensor</MenuItem>\r\n                                <MenuItem value={'rain'}>Rain Sensor</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField\r\n                            fullWidth\r\n                            id='model'\r\n                            name='model'\r\n                            label='Model #'\r\n                            value={this.state.model}\r\n                            onChange={this.handleChange}\r\n                            margin=\"dense\"\r\n                            variant='outlined'\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id='samplingPeriod'\r\n                            name='samplingPeriod'\r\n                            label='samplingPeriod'\r\n                            value={this.state.samplingPeriod}\r\n                            onChange={this.handleChange}\r\n                            margin=\"dense\"\r\n                            variant='outlined'\r\n                        />\r\n                        <div style={{display: 'flex', alignItems: 'baseline'}}>\r\n                        <TextField\r\n                            id=\"driverFile\"\r\n                            label=\"Driver File\"\r\n                            helperText=\"Upload Sensor Driver File\"\r\n                            name='driverFile'\r\n                            value={this.state.driverFileName}\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        />\r\n                        <input\r\n                            accept=\"*\"\r\n                            style={{ display: 'none'}}\r\n                            id=\"contained-button-file\"\r\n                            type=\"file\"\r\n                            onChange={this.handleSelectedFile}\r\n                        />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\" style={{margin: 5}}>\r\n                                Browse\r\n                            </Button>\r\n                        </label>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant='contained' onClick={this.handleClose} color=\"primary\">\r\n                            {this.state.which === 'add' ? 'Add Sensor' : 'Save'}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Grid>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { sensors } = state.app\r\n\r\n    return {\r\n        sensors,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getSensors: () => {\r\n        dispatch({type: 'GET_SENSORS_REQUEST'})\r\n        appService.getSensors()\r\n            .then(json => {\r\n                dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_SENSORS_FAILURE'})\r\n            })        \r\n    },\r\n    addSensor: (port, type, model, samplingPeriod) => {\r\n        dispatch({type: 'ADD_SENSOR_REQUEST'})\r\n        appService.addSensor(port, type, model, samplingPeriod)\r\n            .then(json => {\r\n                dispatch({type: 'ADD_SENSORS_SUCCESS'})\r\n                dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                appService.getSensors()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                    }) \r\n            }, error => {\r\n                dispatch({type: 'ADD_SENSORS_FAILURE'})\r\n            })\r\n    },\r\n    removeSensor: (selectedSensors) => {\r\n        selectedSensors.map(s => {\r\n            dispatch({type: 'REMOVE_SENSOR_REQUEST'})\r\n            appService.removeSensor(s.model, s.type)\r\n                .then(json => {\r\n                    dispatch({type: 'REMOVE_SENSOR_SUCCESS'})\r\n                    dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                    appService.getSensors()\r\n                        .then(json => {\r\n                            dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                        }, error => {\r\n                            dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                        })\r\n                }, error => {\r\n                    dispatch({type: 'REMOVE_SENSOR_FAILURE'})\r\n                })\r\n        })\r\n        \r\n    },\r\n    softRemoveSensor: (selectedSensors) => {\r\n        selectedSensors.map(s => {\r\n            dispatch({type: 'REMOVE_SENSOR_REQUEST'})\r\n            appService.removeSensor(s.model, s.type)\r\n                .then(json => {\r\n                    dispatch({type: 'REMOVE_SENSOR_SUCCESS'})\r\n                }, error => {\r\n                    dispatch({type: 'REMOVE_SENSOR_FAILURE'})\r\n                })\r\n        })\r\n    },\r\n    enableSensor: (type, model) => {\r\n        dispatch({type: 'ENABLE_SENSOR_REQUEST'})\r\n        appService.enableSensor(type, model)\r\n            .then(json => {\r\n                dispatch({type: 'ENABLE_SENSOR_SUCCESS'})\r\n                dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                appService.getSensors()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                    }) \r\n            }, error => {\r\n                dispatch({type: 'ENABLE_SENSOR_FAILURE'})\r\n            })\r\n    },\r\n    disableSensor: (type, model) => {\r\n        dispatch({type: 'DISABLE_SENSOR_REQUEST'})\r\n        appService.disableSensor(type, model)\r\n            .then(json => {\r\n                dispatch({type: 'DISABLE_SENSOR_SUCCESS'})\r\n                dispatch({type: 'GET_SENSORS_REQUEST'})\r\n                appService.getSensors()\r\n                    .then(json => {\r\n                        dispatch({type: 'GET_SENSORS_SUCCESS', json})\r\n                    }, error => {\r\n                        dispatch({type: 'GET_SENSORS_FAILURE'})\r\n                    }) \r\n            }, error => {\r\n                dispatch({type: 'DISABLE_SENSOR_FAILURE'})\r\n            })\r\n    },\r\n    uploadDriver: (file, type, model) => {\r\n        dispatch({type: 'UPLOAD_DRIVER_FILE_REQUEST'})\r\n        appService.uploadDriver(file, type, model)\r\n            .then(json => {\r\n                dispatch({type: 'UPLOAD_DRIVER_FILE_SUCCESS'})\r\n            }, error => {\r\n                dispatch({type: 'UPLOAD_DRIVER_FILE_FAILURE'})\r\n            })\r\n    }\r\n})\r\n\r\n\r\nconst connectedSensors = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Sensors))\r\nexport {connectedSensors as Sensors}","import React from 'react';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst styles1 = theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n  const { classes, className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={[classes[variant], className]}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={[classes.icon, classes.iconVariant]} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          className={classes.close}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nexport const SnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);","import React from 'react';\r\nimport { NavBar } from '../NavBar/NavBar'\r\nimport {Dashboard} from '../Dashboard/Dashboard'\r\nimport { RowController }  from '../RowController/RowController'\r\nimport { ZoneController } from '../ZoneController/ZoneController'\r\nimport { Sensors } from '../Sensors/Sensors'\r\nimport { About } from '../About/About'\r\nimport { connect } from 'react-redux'\r\nimport { appService } from './app.services';\r\nimport { Snackbar, DialogActions, DialogTitle, Dialog, DialogContent, Button, DialogContentText, Slide } from '@material-ui/core';\r\nimport { SnackbarContentWrapper } from '../util/SnackbarContentWrapper';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { store } from '../util/store'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '100%'\r\n    },\r\n    topCenter: {\r\n        top: 75\r\n    }\r\n})\r\n\r\nconst Initializing = () => <div style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#54aab3', color: 'white'}}>INITIALIZING...</div>\r\n\r\nclass App extends React.Component {\r\n    queue = [];\r\n    timer = null\r\n\r\n    state = {\r\n        open: false,\r\n        alert: null,\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.props.init()\r\n        const io = socketIOClient(`http://${window.location.hostname}:8080`);\r\n        io.on('connect', () => {\r\n            console.log('connected')\r\n        })\r\n        io.on('ui/rover/scan', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/scan', json)\r\n        })\r\n        io.on('ui/rover/spa', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/spa', json)\r\n        })\r\n        io.on('ui/rover/stowangles', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/stowangles', json)\r\n        })\r\n        io.on('ui/rover/response', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('ui/rover/response', json)\r\n        })\r\n        io.on('time', data => {\r\n            const json = JSON.parse(data)\r\n            this.props.received('time', json)\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.alert !== null && (nextProps.alert !== this.props.alert)) {\r\n            this.queue.push(nextProps.alert);\r\n        \r\n            if (this.state.open) {\r\n                this.setState({ open: false });\r\n            } else {\r\n                this.processQueue();\r\n            }    \r\n        }\r\n    }\r\n\r\n    processQueue = () => {\r\n        if (this.queue.length > 0) {\r\n            this.setState({\r\n                alert: this.queue.shift(),\r\n                open: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n        return;\r\n        }\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleExited = () => {\r\n        this.processQueue();\r\n    };\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return ( \r\n                <div className={classes.root}>\r\n                    <NavBar>\r\n                    {\r\n                        this.props.currentPage === 'Dashboard' ? <Dashboard /> :\r\n                        this.props.currentPage === 'Row Controller' ? <RowController /> :\r\n                        this.props.currentPage === 'Zone Controller' ? <ZoneController /> :\r\n                        this.props.currentPage === 'Sensors' ? <Sensors /> : \r\n                        this.props.currentPage === 'About' ? <About /> : <Initializing />\r\n                    }\r\n                    </NavBar>\r\n                    <Snackbar\r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'center',\r\n                        }}\r\n                        open={this.state.open}\r\n                        //autoHideDuration={3000}\r\n                        onClose={this.handleClose}\r\n                        onExited={this.handleExited}\r\n                        classes={{anchorOriginTopCenter: classes.topCenter}}\r\n                    >\r\n                        <SnackbarContentWrapper\r\n                            onClose={this.handleClose}\r\n                            variant={this.state.alert === null ? 'info' : this.state.alert.type}\r\n                            message={this.state.alert === null ? '' : this.state.alert.message}\r\n                        />\r\n                    </Snackbar>\r\n                    {/* <Dialog\r\n                        open={this.state.open}\r\n                        onClose={this.handleClose}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                        style={{ minWidth: 300 }}\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\" style={{color:'white', background: this.state.alert !== null ? this.state.alert.type==='success' ? 'green' : this.state.alert.type === 'warning' ? 'orange' : 'red' : 'blue'}}>{this.state.alert === null ? 'info' : this.state.alert.type}</DialogTitle>\r\n                        <DialogContent style={{color:'white', background: this.state.alert !== null ? this.state.alert.type==='success' ? 'green' : this.state.alert.type === 'warning' ? 'orange' : 'red' : 'blue'}}>\r\n                        <DialogContentText id=\"alert-dialog-description\" style={{color:'white'}}>\r\n                            {this.state.alert === null ? '' : this.state.alert.message}\r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions style={{color:'white', background: this.state.alert !== null ? this.state.alert.type==='success' ? 'green' : this.state.alert.type === 'warning' ? 'orange' : 'red' : 'blue'}}>\r\n                        <Button onClick={this.handleClose} color=\"primary\" variant='contained'>\r\n                            Close\r\n                        </Button>\r\n                        </DialogActions>\r\n                    </Dialog> */}\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentPage, alert, timeZone } = state.app\r\n\r\n    return {\r\n        currentPage,\r\n        alert,\r\n        timeZone\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    init: () => {\r\n        dispatch({type: 'GET_COMMISSIONING_DATA_REQUEST'})\r\n        appService.getCommissioningData()\r\n            .then(json => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_COMMISSIONING_DATA_FAILURE', error})\r\n            })\r\n        \r\n        dispatch({type: 'GET_TIMEZONE_REQUEST'})\r\n        appService.getTimeZone()\r\n            .then(json => {\r\n                if(json.timeZone === null) {\r\n                    dispatch({type: 'SET_TIMEZONE_REQUEST'})\r\n                    appService.setTimeZone(store.getState().app.timeZone)\r\n                        .then(json => {\r\n                            dispatch({type: 'SET_TIMEZONE_SUCCESS'})\r\n                        }, error => {\r\n                            dispatch({type: 'SET_TIMEZONE_FAILURE'})\r\n                        })\r\n                }\r\n                dispatch({type: 'GET_TIMEZONE_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_TIMEZONE_FAILURE', error})\r\n            })\r\n    },\r\n    getTime: () => {\r\n        dispatch({type: 'GET_TIME_REQUEST'})\r\n        appService.getTime()\r\n            .then(json => {\r\n                dispatch({type: 'GET_TIME_SUCCESS', json})\r\n            }, error => {\r\n                dispatch({type: 'GET_TIME_FAILURE', error})\r\n            })\r\n    },\r\n    clearAlert : () => {\r\n        dispatch({type: 'CLEAR_ALERT'})\r\n    },\r\n    received: (topic, json) => {\r\n        dispatch({type: topic, json})\r\n    }\r\n})\r\n\r\n\r\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(App))\r\nexport {connectedApp as App}","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { store } from './util/store';\r\nimport { App } from './App';\r\nimport './index.css'\r\n\r\n/* const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#54AAB3\",\r\n        contrastText: '#fff'\r\n      }\r\n    },\r\n    overrides: {\r\n      MuiIconButton: {\r\n          root: {\r\n            color: 'white'\r\n          },\r\n      }\r\n    } \r\n  }); */\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#54AAB3',\r\n        dark: '#3c8f98',\r\n        contrastText: '#ffffff'\r\n      },\r\n      secondary: {\r\n        main: '#ffffff',\r\n        contrastText: '#000000'\r\n      }\r\n    }/* ,\r\n    overrides: {\r\n      MuiListItem: {\r\n        root: {\r\n          backgroundColor: '#ffffff',\r\n          '&$selected': {\r\n            backgroundColor: '#54AAB3',\r\n            color: '#ffffff'\r\n          },\r\n          '&$selected:hover': {\r\n            backgroundColor: '#3c8f98',\r\n            color: '#ffffff'\r\n          }\r\n        },\r\n      },\r\n    } */\r\n  });\r\n\r\nrender(\r\n    <MuiThemeProvider theme={theme}>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </MuiThemeProvider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}